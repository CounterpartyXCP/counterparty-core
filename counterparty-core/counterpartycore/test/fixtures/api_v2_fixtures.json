{
    "http://localhost:10009/v2/blocks?verbose=true": {
        "result": [
            {
                "block_index": 310703,
                "block_hash": "b8b21ab596ed7ad84e449d098c04d86cbb6623c5e88af7772166882efbd91218",
                "block_time": 310703000,
                "previous_block_hash": null,
                "difficulty": null,
                "ledger_hash": "cbc22749655ce8e7fb2eeb4d1737a04dec7bc096ce84b00bf83ca4c7040f448a",
                "txlist_hash": "b5cae1a9f44982ed3dd38f90d95cba93efbe9fd1e55b0f367e45336f3e68f786",
                "messages_hash": "82e79417c7ec1856ced190d3fe19150f1510992e5abfd326b92edd143260259d",
                "transaction_count": 0,
                "confirmed": true
            },
            {
                "block_index": 310702,
                "block_hash": "69cb443673c221a8e157d61707d52cf980c87faf5c3b31a5850ff43be70883c8",
                "block_time": 310702000,
                "previous_block_hash": null,
                "difficulty": null,
                "ledger_hash": "7cb406b1ee19e1ecfc41009f312d918ac0574b92809d99dbfd99bac88992a4fe",
                "txlist_hash": "0b912b59131e6aef7fb3313ef75bc138dc1f612d76e77cf583074564ddb6d35c",
                "messages_hash": "9e09c7b47df3a09f541b40931ccce3b512ca113a6d4dd5e6d3505e29bfea8e31",
                "transaction_count": 0,
                "confirmed": true
            },
            {
                "block_index": 310701,
                "block_hash": "9e2377aa8ebc26294dce0ed34dc1a071c67505a0cea36e0bec20d9ab0997f6e1",
                "block_time": 310701000,
                "previous_block_hash": null,
                "difficulty": null,
                "ledger_hash": "562a0f298a796b936c21bf552e6945ed2263b62d4022f7a072dc6a4790173e8d",
                "txlist_hash": "6b6c62d0facf03efea19bf2e8fa69ecd3c433d45a0ca6b3ed57ed0e5d69b1e2f",
                "messages_hash": "a12df3e7bce37d8f4a9c4c0a2a3f367fb071142acff947cecc23173b4925fb53",
                "transaction_count": 0,
                "confirmed": true
            },
            {
                "block_index": 310700,
                "block_hash": "4f928d25664bb6ac693dd70e408dedc257abcd4cfb1f7ab6fabd8970cb663fa5",
                "block_time": 310700000,
                "previous_block_hash": null,
                "difficulty": null,
                "ledger_hash": "9cac238e8006f150dbd1f09f1743cb50e1870775d67a256ae5c06e0b72fd0b6e",
                "txlist_hash": "1977d48057c66abe87f0bdffbcf4d501bd4b9fe138c0bc381409bc44bd503084",
                "messages_hash": "8a30a60098f9f82a118549ec730568a44d5fa6eb3335a20aec2b44599039342d",
                "transaction_count": 0,
                "confirmed": true
            },
            {
                "block_index": 310699,
                "block_hash": "3f34102183af409ce39d0ebd3be002cc38e973a0b3492fc9c1e0dd5813941d1d",
                "block_time": 310699000,
                "previous_block_hash": null,
                "difficulty": null,
                "ledger_hash": "d3ea9e3e4912d71dde006b1f1b2d412d213bee18c8c7606982a08f405c932a12",
                "txlist_hash": "d91fc03fd15e2ca4fc59b7be29586b0c8f2942abca45ccb49f2fc84e3eff8f94",
                "messages_hash": "3a2b15d7772dd7a9d22d7bfcc558ec8da5713b427e25289eb809b4edeb673e2e",
                "transaction_count": 0,
                "confirmed": true
            },
            {
                "block_index": 310698,
                "block_hash": "ab4521982489ec4c2011e8f374ab83f249eeee42f51009b1b5647b998d854c53",
                "block_time": 310698000,
                "previous_block_hash": null,
                "difficulty": null,
                "ledger_hash": "7a3e7800ae592d461c8d4a90597d65257e14082534f0052e862ea6665151fa65",
                "txlist_hash": "9b6c282c7fb96cbca27fe6b73253cfc31b93ff71dc0d116ebd0d661c33adde58",
                "messages_hash": "2d3ce8e66aa0fa6491fa43efa2de7264011d91dc04b6a7aa37d7974876c3c22a",
                "transaction_count": 0,
                "confirmed": true
            },
            {
                "block_index": 310697,
                "block_hash": "4fcf90ea3f5b4f6c003475c22f583053b5f7b6e0ffe12341b0993ede4fa8f304",
                "block_time": 310697000,
                "previous_block_hash": null,
                "difficulty": null,
                "ledger_hash": "ef8ebcfad12ea2bdff5760d7a28fd6e0c9ff1f80c5db666df99daf73bb758584",
                "txlist_hash": "663e67da5996a4c9877a6c6cb61730798695aee9d89674823917dee2d1ab9708",
                "messages_hash": "ef1273df0c8d6bbe9078468440fe92eec3515e5985064775d453615448d836cd",
                "transaction_count": 0,
                "confirmed": true
            },
            {
                "block_index": 310696,
                "block_hash": "7ac8080d89c8a8245703603c294c5df90a342bb4a325462e65827fd709ab0fa7",
                "block_time": 310696000,
                "previous_block_hash": null,
                "difficulty": null,
                "ledger_hash": "122e4a4d499019a24ee9fcb024541d3ad30e06cda616f82b21a5e18bcaf58728",
                "txlist_hash": "deb12f7c45ab5944a6e08fb2933d3a435860f9e1d8a758486b5e5995258ca973",
                "messages_hash": "1b9aef26cd6d6e43ebc95c01db0ce8ccb05b8400955737643bef4458471f7c29",
                "transaction_count": 0,
                "confirmed": true
            },
            {
                "block_index": 310695,
                "block_hash": "a1803237d72105847b97a31294e91e7374ff47bdbc4e374744a8754a41423538",
                "block_time": 310695000,
                "previous_block_hash": null,
                "difficulty": null,
                "ledger_hash": "e6a29a3329dac5849c6019688653cb9179792254ea263d908ee1840812eae1e1",
                "txlist_hash": "9b08253a46b87ab3df60af60b519dd0c689c0acaca38bcc33f01000bf6b871d3",
                "messages_hash": "7112da51430ab9dfb8dba1fe06f52fcffdac61e146a50c73e95e1ecffa62b6fd",
                "transaction_count": 0,
                "confirmed": true
            },
            {
                "block_index": 310694,
                "block_hash": "586e9f2ece2b1d03767d82fe988632d69a7827333860c58460abc7a5b9b396a0",
                "block_time": 310694000,
                "previous_block_hash": null,
                "difficulty": null,
                "ledger_hash": "2571bbddd1991d25250bcd1789cd861bda55aeff5e70c90fd854bf7850b478e8",
                "txlist_hash": "52939845593123714b4bd665600642d14b61a384befa3498c7582806448150a1",
                "messages_hash": "193fa09a1d321e9e1eb9fadf56dbf46128a0e0f23276afb0af169be0a2714a51",
                "transaction_count": 0,
                "confirmed": true
            }
        ],
        "next_cursor": 310693,
        "result_count": 705
    },
    "http://localhost:10009/v2/blocks/last?verbose=true": {
        "result": {
            "block_index": 310703,
            "block_hash": "b8b21ab596ed7ad84e449d098c04d86cbb6623c5e88af7772166882efbd91218",
            "block_time": 310703000,
            "previous_block_hash": null,
            "difficulty": null,
            "ledger_hash": "cbc22749655ce8e7fb2eeb4d1737a04dec7bc096ce84b00bf83ca4c7040f448a",
            "txlist_hash": "b5cae1a9f44982ed3dd38f90d95cba93efbe9fd1e55b0f367e45336f3e68f786",
            "messages_hash": "82e79417c7ec1856ced190d3fe19150f1510992e5abfd326b92edd143260259d",
            "transaction_count": 0,
            "confirmed": true
        }
    },
    "http://localhost:10009/v2/blocks/310491?verbose=true": {
        "result": {
            "block_index": 310491,
            "block_hash": "811abd7cf2b768cfdaa84ab44c63f4463c96a368ead52125bf149cf0c7447b16",
            "block_time": 310491000,
            "previous_block_hash": null,
            "difficulty": null,
            "ledger_hash": "3114d8091cfcaa9944c6fab49d51950535c4ef269877d58c372ed80b2b472ec6",
            "txlist_hash": "f065728a3544adc085fae976759c0d040a34ca0a8ddd39260b55f0262cd5baa8",
            "messages_hash": "9e9c8f8f8d7dfb437d16e3fb14b93104a64d31577e5771fd91ad73d816d0feae",
            "transaction_count": 1,
            "confirmed": true
        }
    },
    "http://localhost:10009/v2/blocks/54aeaf47d5387964e2d51617bf3af50520a0449410e0d096cf8c2aa9dad5550b?verbose=true": {
        "result": {
            "block_index": 310500,
            "block_hash": "54aeaf47d5387964e2d51617bf3af50520a0449410e0d096cf8c2aa9dad5550b",
            "block_time": 310500000,
            "previous_block_hash": null,
            "difficulty": null,
            "ledger_hash": "6c240f1f3a985ff91e6a280c4448b8d739a06caa6fa383c4b9a7b90d27bdb17b",
            "txlist_hash": "d21ed1a33a3ff157708a8e8c5a11062e0b33a7682896f695cd174ee93dce7767",
            "messages_hash": "7e9485dcce4f7f6aa33c498249ecf99ffb3cd102cc30888c70b93c73d43d591d",
            "transaction_count": 1,
            "confirmed": true
        }
    },
    "http://localhost:10009/v2/blocks/310491/transactions?verbose=true": {
        "result": [
            {
                "tx_index": 492,
                "tx_hash": "74db175c4669a3d3a59e3fcddce9e97fcd7d12c35b58ef31845a1b20a1739498",
                "block_index": 310491,
                "block_hash": "811abd7cf2b768cfdaa84ab44c63f4463c96a368ead52125bf149cf0c7447b16",
                "block_time": 310491000,
                "source": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "destination": null,
                "btc_amount": 0,
                "fee": 6800,
                "data": "0000000a00000000000000010000000005f5e100000000000000000000000000000c350007d000000000000dbba0",
                "supported": true,
                "utxos_info": "34ddf77d56739516eec4be2cef26c823380845834393dcedc8c06c184b55463b:0",
                "confirmed": true,
                "unpacked_data": {
                    "message_type": "order",
                    "message_type_id": 10,
                    "message_data": {
                        "give_asset": "XCP",
                        "give_quantity": 100000000,
                        "get_asset": "BTC",
                        "get_quantity": 800000,
                        "expiration": 2000,
                        "fee_required": 900000,
                        "status": "open",
                        "give_asset_info": {
                            "divisible": true,
                            "asset_longname": null,
                            "description": "The Counterparty protocol native currency",
                            "locked": true,
                            "issuer": null
                        },
                        "get_asset_info": {
                            "divisible": true,
                            "asset_longname": null,
                            "description": "The Bitcoin cryptocurrency",
                            "locked": false,
                            "issuer": null
                        },
                        "give_quantity_normalized": "1.00000000",
                        "get_quantity_normalized": "0.00800000",
                        "fee_required_normalized": "0.00900000"
                    }
                },
                "btc_amount_normalized": "0.00000000"
            }
        ],
        "next_cursor": null,
        "result_count": 1
    },
    "http://localhost:10009/v2/blocks/310491/events?verbose=true": {
        "result": [
            {
                "event_index": 1184,
                "event": "BLOCK_PARSED",
                "params": {
                    "block_index": 310491,
                    "ledger_hash": "3114d8091cfcaa9944c6fab49d51950535c4ef269877d58c372ed80b2b472ec6",
                    "messages_hash": "9e9c8f8f8d7dfb437d16e3fb14b93104a64d31577e5771fd91ad73d816d0feae",
                    "transaction_count": 1,
                    "txlist_hash": "f065728a3544adc085fae976759c0d040a34ca0a8ddd39260b55f0262cd5baa8",
                    "block_time": 310491000
                },
                "tx_hash": null
            },
            {
                "event_index": 1183,
                "event": "TRANSACTION_PARSED",
                "params": {
                    "supported": true,
                    "tx_hash": "74db175c4669a3d3a59e3fcddce9e97fcd7d12c35b58ef31845a1b20a1739498",
                    "tx_index": 492
                },
                "tx_hash": "74db175c4669a3d3a59e3fcddce9e97fcd7d12c35b58ef31845a1b20a1739498"
            },
            {
                "event_index": 1182,
                "event": "OPEN_ORDER",
                "params": {
                    "block_index": 310491,
                    "expiration": 2000,
                    "expire_index": 312491,
                    "fee_provided": 6800,
                    "fee_provided_remaining": 6800,
                    "fee_required": 900000,
                    "fee_required_remaining": 900000,
                    "get_asset": "BTC",
                    "get_quantity": 800000,
                    "get_remaining": 800000,
                    "give_asset": "XCP",
                    "give_quantity": 100000000,
                    "give_remaining": 100000000,
                    "source": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                    "status": "open",
                    "tx_hash": "74db175c4669a3d3a59e3fcddce9e97fcd7d12c35b58ef31845a1b20a1739498",
                    "tx_index": 492,
                    "block_time": 310491000,
                    "give_asset_info": {
                        "divisible": true,
                        "asset_longname": null,
                        "description": "The Counterparty protocol native currency",
                        "locked": true,
                        "issuer": null
                    },
                    "get_asset_info": {
                        "divisible": true,
                        "asset_longname": null,
                        "description": "The Bitcoin cryptocurrency",
                        "locked": false,
                        "issuer": null
                    },
                    "give_quantity_normalized": "1.00000000",
                    "get_quantity_normalized": "0.00800000",
                    "get_remaining_normalized": "0.00800000",
                    "give_remaining_normalized": "1.00000000",
                    "fee_provided_normalized": "0.00006800",
                    "fee_required_normalized": "0.00900000",
                    "fee_required_remaining_normalized": "0.00900000",
                    "fee_provided_remaining_normalized": "0.00006800"
                },
                "tx_hash": "74db175c4669a3d3a59e3fcddce9e97fcd7d12c35b58ef31845a1b20a1739498"
            },
            {
                "event_index": 1181,
                "event": "DEBIT",
                "params": {
                    "action": "open order",
                    "address": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                    "asset": "XCP",
                    "block_index": 310491,
                    "event": "74db175c4669a3d3a59e3fcddce9e97fcd7d12c35b58ef31845a1b20a1739498",
                    "quantity": 100000000,
                    "tx_index": 492,
                    "utxo": null,
                    "utxo_address": null,
                    "block_time": 310491000,
                    "asset_info": {
                        "divisible": true,
                        "asset_longname": null,
                        "description": "The Counterparty protocol native currency",
                        "locked": true,
                        "issuer": null
                    },
                    "quantity_normalized": "1.00000000"
                },
                "tx_hash": "74db175c4669a3d3a59e3fcddce9e97fcd7d12c35b58ef31845a1b20a1739498"
            },
            {
                "event_index": 1180,
                "event": "NEW_TRANSACTION",
                "params": {
                    "block_hash": "811abd7cf2b768cfdaa84ab44c63f4463c96a368ead52125bf149cf0c7447b16",
                    "block_index": 310491,
                    "block_time": 310491000,
                    "btc_amount": 0,
                    "data": "0000000a00000000000000010000000005f5e100000000000000000000000000000c350007d000000000000dbba0",
                    "destination": "",
                    "fee": 6800,
                    "source": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                    "supported": true,
                    "tx_hash": "74db175c4669a3d3a59e3fcddce9e97fcd7d12c35b58ef31845a1b20a1739498",
                    "tx_index": 492,
                    "utxos_info": "34ddf77d56739516eec4be2cef26c823380845834393dcedc8c06c184b55463b:0",
                    "unpacked_data": {
                        "message_type": "order",
                        "message_type_id": 10,
                        "message_data": {
                            "give_asset": "XCP",
                            "give_quantity": 100000000,
                            "get_asset": "BTC",
                            "get_quantity": 800000,
                            "expiration": 2000,
                            "fee_required": 900000,
                            "status": "open",
                            "give_asset_info": {
                                "divisible": true,
                                "asset_longname": null,
                                "description": "The Counterparty protocol native currency",
                                "locked": true,
                                "issuer": null
                            },
                            "get_asset_info": {
                                "divisible": true,
                                "asset_longname": null,
                                "description": "The Bitcoin cryptocurrency",
                                "locked": false,
                                "issuer": null
                            },
                            "give_quantity_normalized": "1.00000000",
                            "get_quantity_normalized": "0.00800000"
                        }
                    },
                    "btc_amount_normalized": "0.00000000"
                },
                "tx_hash": null
            },
            {
                "event_index": 1179,
                "event": "NEW_BLOCK",
                "params": {
                    "block_hash": "811abd7cf2b768cfdaa84ab44c63f4463c96a368ead52125bf149cf0c7447b16",
                    "block_index": 310491,
                    "block_time": 310491000,
                    "difficulty": null,
                    "ledger_hash": null,
                    "previous_block_hash": null,
                    "txlist_hash": null
                },
                "tx_hash": null
            }
        ],
        "next_cursor": null,
        "result_count": 6
    },
    "http://localhost:10009/v2/blocks/310491/events/counts?verbose=true": {
        "result": [
            {
                "event": "TRANSACTION_PARSED",
                "event_count": 1
            },
            {
                "event": "OPEN_ORDER",
                "event_count": 1
            },
            {
                "event": "NEW_TRANSACTION",
                "event_count": 1
            },
            {
                "event": "NEW_BLOCK",
                "event_count": 1
            },
            {
                "event": "DEBIT",
                "event_count": 1
            },
            {
                "event": "BLOCK_PARSED",
                "event_count": 1
            }
        ],
        "next_cursor": null,
        "result_count": 6
    },
    "http://localhost:10009/v2/blocks/310491/events/CREDIT?verbose=true": {
        "result": [],
        "next_cursor": null,
        "result_count": 0
    },
    "http://localhost:10009/v2/blocks/310491/credits?verbose=true": {
        "result": [],
        "next_cursor": null,
        "result_count": 0
    },
    "http://localhost:10009/v2/blocks/310491/debits?verbose=true": {
        "result": [
            {
                "block_index": 310491,
                "address": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "asset": "XCP",
                "quantity": 100000000,
                "action": "open order",
                "event": "74db175c4669a3d3a59e3fcddce9e97fcd7d12c35b58ef31845a1b20a1739498",
                "tx_index": 492,
                "utxo": null,
                "utxo_address": null,
                "confirmed": true,
                "block_time": 310491000,
                "asset_info": {
                    "divisible": true,
                    "asset_longname": null,
                    "description": "The Counterparty protocol native currency",
                    "locked": true,
                    "issuer": null
                },
                "quantity_normalized": "1.00000000"
            }
        ],
        "next_cursor": null,
        "result_count": 1
    },
    "http://localhost:10009/v2/blocks/310491/expirations?verbose=true": {
        "result": [],
        "next_cursor": null,
        "result_count": 0
    },
    "http://localhost:10009/v2/blocks/310491/cancels?verbose=true": {
        "result": [],
        "next_cursor": null,
        "result_count": 0
    },
    "http://localhost:10009/v2/blocks/310491/destructions?verbose=true": {
        "result": [],
        "next_cursor": null,
        "result_count": 0
    },
    "http://localhost:10009/v2/blocks/310491/issuances?verbose=true": {
        "result": [],
        "next_cursor": null,
        "result_count": 0
    },
    "http://localhost:10009/v2/blocks/310491/sends?verbose=true": {
        "result": [],
        "next_cursor": null,
        "result_count": 0
    },
    "http://localhost:10009/v2/blocks/310491/dispenses?verbose=true": {
        "result": [],
        "next_cursor": null,
        "result_count": 0
    },
    "http://localhost:10009/v2/blocks/310491/sweeps?verbose=true": {
        "result": [],
        "next_cursor": null,
        "result_count": 0
    },
    "http://localhost:10009/v2/transactions?verbose=true": {
        "result": [
            {
                "tx_index": 511,
                "tx_hash": "af67f6762d4b00b4bf5fb93a9d556e007a147aa80fbf6a84410df05a0182da9e",
                "block_index": 310510,
                "block_hash": "b2d5e400178d7b2ea52884e3a090fe11874c83d63c342218161a6e666f084fb2",
                "block_time": 310510000,
                "source": "munimLLHjPhGeSU5rYB2HN79LJa8bRZr5b",
                "destination": null,
                "btc_amount": 0,
                "fee": 6150,
                "data": "0000000c00000023ded9aaeb00000000000000640000000000000064000000000000006400",
                "supported": true,
                "utxos_info": "b44885994dea259ac03a7c7b46076e05cd217a9f465d8f7c7be9cc831ba47291:1",
                "confirmed": true,
                "unpacked_data": {
                    "message_type": "dispenser",
                    "message_type_id": 12,
                    "message_data": {
                        "asset": "TESTDISP",
                        "give_quantity": 100,
                        "escrow_quantity": 100,
                        "mainchainrate": 100,
                        "dispenser_status": 0,
                        "action_address": null,
                        "oracle_address": null,
                        "status": "valid",
                        "asset_info": {
                            "asset_longname": null,
                            "description": "Test dispensers asset",
                            "issuer": "munimLLHjPhGeSU5rYB2HN79LJa8bRZr5b",
                            "divisible": false,
                            "locked": false
                        },
                        "give_quantity_normalized": "100",
                        "escrow_quantity_normalized": "100"
                    }
                },
                "btc_amount_normalized": "0.00000000"
            },
            {
                "tx_index": 510,
                "tx_hash": "01e52e3770a932827a4b4e5db193eef916fcf69bda1a7944298210a74f1633a1",
                "block_index": 310509,
                "block_hash": "4f1c6484120b93634712add03ac12eda4d241ec5132c3108c49c92fb46e8faee",
                "block_time": 310509000,
                "source": "munimLLHjPhGeSU5rYB2HN79LJa8bRZr5b",
                "destination": null,
                "btc_amount": 0,
                "fee": 6800,
                "data": "0000001400000023ded9aaeb00000000000003e80000000000000000000015546573742064697370656e73657273206173736574",
                "supported": true,
                "utxos_info": "5b13a8589b5a02abddc9156a2efc53713161a23bc1d149f909dcc079ea9c3af5:0",
                "confirmed": true,
                "unpacked_data": {
                    "message_type": "issuance",
                    "message_type_id": 20,
                    "message_data": {
                        "asset_id": 154062662379,
                        "asset": "TESTDISP",
                        "subasset_longname": null,
                        "quantity": 1000,
                        "divisible": false,
                        "lock": null,
                        "reset": null,
                        "callable": false,
                        "call_date": 0,
                        "call_price": 0.0,
                        "description": "Test dispensers asset",
                        "status": "valid",
                        "quantity_normalized": "1000"
                    }
                },
                "btc_amount_normalized": "0.00000000"
            },
            {
                "tx_index": 509,
                "tx_hash": "ff23dc6911d401e9868b8ac747d31febc2078f004eff7b56a8895c107ed8a73e",
                "block_index": 310508,
                "block_hash": "40cfaee344032c167d7317bb94d2e514f8dca023302303a908dd994e15d902cf",
                "block_time": 310508000,
                "source": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "destination": null,
                "btc_amount": 0,
                "fee": 10850,
                "data": "646d6e367133645332456e44557833626d795763364434737a4a4e5647746152377a637c346630343333626138343130333865326531363332383434353933306464376263613335333039623134623064613434353163386639346336333133363862383a317c444956495349424c457c31",
                "supported": true,
                "utxos_info": "1c6f52a3ca4d5f1698d2db3f107da787153bf686fc049f2792074916249fc27d:0",
                "confirmed": true,
                "unpacked_data": {
                    "message_type": "unknown",
                    "message_type_id": 1684893238,
                    "message_data": {
                        "error": "Unknown message type"
                    }
                },
                "btc_amount_normalized": "0.00000000"
            },
            {
                "tx_index": 508,
                "tx_hash": "9d2243c84df0132061884dfce73f3b7c5262a1cde0d029de472a079f3a1c4883",
                "block_index": 310507,
                "block_hash": "015b45f96ad6b4bfc950934e9c9d8c29a499b837ea7c4c722ff482d8d9896a93",
                "block_time": 310507000,
                "source": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "destination": null,
                "btc_amount": 0,
                "fee": 10850,
                "data": "646d6e367133645332456e44557833626d795763364434737a4a4e5647746152377a637c346630343333626138343130333865326531363332383434353933306464376263613335333039623134623064613434353163386639346336333133363862383a317c5843507c313030",
                "supported": true,
                "utxos_info": "c7f048b97f07912138691b7d133baafe98a6a10ffb089e0b773f06ef945d5c36:0",
                "confirmed": true,
                "unpacked_data": {
                    "message_type": "unknown",
                    "message_type_id": 1684893238,
                    "message_data": {
                        "error": "Unknown message type"
                    }
                },
                "btc_amount_normalized": "0.00000000"
            },
            {
                "tx_index": 507,
                "tx_hash": "ba6c7582f5c1e39bed32074c16f54ab338c79d0eefd3c8a7ba1f949e2febcd18",
                "block_index": 310506,
                "block_hash": "9a7512bd957b110f23c37a6673cd0fd7342f0cf96b44f990e66ac7d5cbb8448c",
                "block_time": 310506000,
                "source": "mtQheFaSfWELRB2MyMBaiWjdDm6ux9Ezns",
                "destination": null,
                "btc_amount": 0,
                "fee": 5800,
                "data": "5b413136303336313238353739323733333732397c3230",
                "supported": true,
                "utxos_info": "33b22f767d86a1375935576b0b0b76fee0c080ab5dd4e8d9aa27537df84abef2:1",
                "confirmed": true,
                "unpacked_data": {
                    "message_type": "unknown",
                    "message_type_id": 1530999094,
                    "message_data": {
                        "error": "Unknown message type"
                    }
                },
                "btc_amount_normalized": "0.00000000"
            },
            {
                "tx_index": 506,
                "tx_hash": "6f4c3965a1cc2891e7dcdb4a3c12b73e6cf2e56e750dabcdf87c82443f08e1d8",
                "block_index": 310505,
                "block_hash": "dabd8046821297bd7071117defef365b4384c3ad338a8fa206bae85593958a6a",
                "block_time": 310505000,
                "source": "mtQheFaSfWELRB2MyMBaiWjdDm6ux9Ezns",
                "destination": null,
                "btc_amount": 0,
                "fee": 5800,
                "data": "5b413136303336313238353739323733333732397c3130",
                "supported": true,
                "utxos_info": "f1a22cd5df828fe94c328ca0c39fd1120b98dcc333b2d1ac95465b4bc2a2ace1:1",
                "confirmed": true,
                "unpacked_data": {
                    "message_type": "unknown",
                    "message_type_id": 1530999094,
                    "message_data": {
                        "error": "Unknown message type"
                    }
                },
                "btc_amount_normalized": "0.00000000"
            },
            {
                "tx_index": 505,
                "tx_hash": "0d56c40c31829bbd06cdc039eda95c844c98208ec981ef419093c386eab2d0e9",
                "block_index": 310504,
                "block_hash": "0b123f4e535bb92fed07632e107813b9a399cb6f6d9ef629d303e9df3d71ad25",
                "block_time": 310504000,
                "source": "mtQheFaSfWELRB2MyMBaiWjdDm6ux9Ezns",
                "destination": null,
                "btc_amount": 0,
                "fee": 8825,
                "data": "5a413136303336313238353739323733333732397c7c31307c317c307c35307c32307c307c307c32307c3331303532307c33303030303030307c307c317c317c317c736f6674636170206465736372697074696f6e",
                "supported": true,
                "utxos_info": "a827b0538f335c6416477786ef827c5bf52bb1bfa20053209d5b788d18b8e16c:0",
                "confirmed": true,
                "unpacked_data": {
                    "message_type": "unknown",
                    "message_type_id": 1514221878,
                    "message_data": {
                        "error": "Unknown message type"
                    }
                },
                "btc_amount_normalized": "0.00000000"
            },
            {
                "tx_index": 504,
                "tx_hash": "c3d10301a50c49b3c9515f88847b92ce969729c194c064f411d610bc3b3704e7",
                "block_index": 310503,
                "block_hash": "219e9a113a7c66443183171e389bfd5eaf957f5b8ab825358d72fa8e0cc8c16c",
                "block_time": 310503000,
                "source": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "destination": null,
                "btc_amount": 0,
                "fee": 6675,
                "data": "5a51414944464149524d494e7c7c31307c317c307c35307c32307c307c307c32307c3430303030307c35303030303030307c307c307c307c317c",
                "supported": true,
                "utxos_info": "3e7d029e0751dbdd5853f91b6e28f8df6b1b940ace7b8723d459905df4e0ef9c:1",
                "confirmed": true,
                "unpacked_data": {
                    "message_type": "unknown",
                    "message_type_id": 1515274569,
                    "message_data": {
                        "error": "Unknown message type"
                    }
                },
                "btc_amount_normalized": "0.00000000"
            },
            {
                "tx_index": 503,
                "tx_hash": "9830e28496bb94f7e9f829abd26fd2cdce24ccb637e55488537a7080979ad9c1",
                "block_index": 310502,
                "block_hash": "b5a4cd1270bc437e909d9569079ad17437a65822ee9e4c378670732a1430ed67",
                "block_time": 310502000,
                "source": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "destination": null,
                "btc_amount": 0,
                "fee": 6375,
                "data": "5a52414944464149524d494e7c7c31307c317c31307c33307c32307c307c307c307c307c307c307c307c307c317c",
                "supported": true,
                "utxos_info": "c5ae7746f5282db0e11d580db3006fc6ff2e1b895e1513dbb4586343e08df687:1",
                "confirmed": true,
                "unpacked_data": {
                    "message_type": "unknown",
                    "message_type_id": 1515340105,
                    "message_data": {
                        "error": "Unknown message type"
                    }
                },
                "btc_amount_normalized": "0.00000000"
            },
            {
                "tx_index": 502,
                "tx_hash": "d42849c71a32e388606982d3384ec8ae12e5c0ba2f742cb4ddf0649fb66e1f67",
                "block_index": 310501,
                "block_hash": "9d9019d15a1d878f2c39c7e3de4340a043a4a31aebb298acdf8e913284ae26ba",
                "block_time": 310501000,
                "source": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "destination": null,
                "btc_amount": 0,
                "fee": 5575,
                "data": "5b46524545464149524d494e7c30",
                "supported": true,
                "utxos_info": "fe9a0647adff98bcc8289f2d6178db687d99be439cb64a1c8ae89d325552fd38:1",
                "confirmed": true,
                "unpacked_data": {
                    "message_type": "unknown",
                    "message_type_id": 1531335237,
                    "message_data": {
                        "error": "Unknown message type"
                    }
                },
                "btc_amount_normalized": "0.00000000"
            }
        ],
        "next_cursor": 501,
        "result_count": 64
    },
    "http://localhost:10009/v2/transactions/2?verbose=true": {
        "result": {
            "tx_index": 2,
            "tx_hash": "1fc2e5a57f584b2f2edd05676e75c33d03eed1d3098cc0550ea33474e3ec9db1",
            "block_index": 310001,
            "block_hash": "3c9f6a9c6cac46a9273bd3db39ad775acd5bc546378ec2fb0587e06e112cc78e",
            "block_time": 310001000,
            "source": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
            "destination": null,
            "btc_amount": 0,
            "fee": 6800,
            "data": "00000014000000a25be34b66000000174876e800010000000000000000000f446976697369626c65206173736574",
            "supported": true,
            "utxos_info": "ae7a3edc95c2e5ecf013374d39915de4bbf5d98934bc7e53b00016267f8ffba0:0",
            "confirmed": true,
            "unpacked_data": {
                "message_type": "issuance",
                "message_type_id": 20,
                "message_data": {
                    "asset_id": 697326324582,
                    "asset": "DIVISIBLE",
                    "subasset_longname": null,
                    "quantity": 100000000000,
                    "divisible": true,
                    "lock": null,
                    "reset": null,
                    "callable": false,
                    "call_date": 0,
                    "call_price": 0.0,
                    "description": "Divisible asset",
                    "status": "valid",
                    "quantity_normalized": "1000.00000000"
                }
            },
            "btc_amount_normalized": "0.00000000"
        }
    },
    "http://localhost:10009/v2/transactions/74db175c4669a3d3a59e3fcddce9e97fcd7d12c35b58ef31845a1b20a1739498?verbose=true": {
        "result": {
            "tx_index": 492,
            "tx_hash": "74db175c4669a3d3a59e3fcddce9e97fcd7d12c35b58ef31845a1b20a1739498",
            "block_index": 310491,
            "block_hash": "811abd7cf2b768cfdaa84ab44c63f4463c96a368ead52125bf149cf0c7447b16",
            "block_time": 310491000,
            "source": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
            "destination": null,
            "btc_amount": 0,
            "fee": 6800,
            "data": "0000000a00000000000000010000000005f5e100000000000000000000000000000c350007d000000000000dbba0",
            "supported": true,
            "utxos_info": "34ddf77d56739516eec4be2cef26c823380845834393dcedc8c06c184b55463b:0",
            "confirmed": true,
            "unpacked_data": {
                "message_type": "order",
                "message_type_id": 10,
                "message_data": {
                    "give_asset": "XCP",
                    "give_quantity": 100000000,
                    "get_asset": "BTC",
                    "get_quantity": 800000,
                    "expiration": 2000,
                    "fee_required": 900000,
                    "status": "open",
                    "give_asset_info": {
                        "divisible": true,
                        "asset_longname": null,
                        "description": "The Counterparty protocol native currency",
                        "locked": true,
                        "issuer": null
                    },
                    "get_asset_info": {
                        "divisible": true,
                        "asset_longname": null,
                        "description": "The Bitcoin cryptocurrency",
                        "locked": false,
                        "issuer": null
                    },
                    "give_quantity_normalized": "1.00000000",
                    "get_quantity_normalized": "0.00800000",
                    "fee_required_normalized": "0.00900000"
                }
            },
            "btc_amount_normalized": "0.00000000"
        }
    },
    "http://localhost:10009/v2/transactions/2/events?verbose=true": {
        "result": [
            {
                "event_index": 13,
                "event": "TRANSACTION_PARSED",
                "params": {
                    "supported": true,
                    "tx_hash": "1fc2e5a57f584b2f2edd05676e75c33d03eed1d3098cc0550ea33474e3ec9db1",
                    "tx_index": 2
                },
                "tx_hash": "1fc2e5a57f584b2f2edd05676e75c33d03eed1d3098cc0550ea33474e3ec9db1",
                "block_index": 310001,
                "block_time": 310001000
            },
            {
                "event_index": 12,
                "event": "CREDIT",
                "params": {
                    "address": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                    "asset": "DIVISIBLE",
                    "block_index": 310001,
                    "calling_function": "issuance",
                    "event": "1fc2e5a57f584b2f2edd05676e75c33d03eed1d3098cc0550ea33474e3ec9db1",
                    "quantity": 100000000000,
                    "tx_index": 2,
                    "utxo": null,
                    "utxo_address": null,
                    "block_time": 310001000,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "Divisible asset",
                        "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                        "divisible": true,
                        "locked": false
                    },
                    "quantity_normalized": "1000.00000000"
                },
                "tx_hash": "1fc2e5a57f584b2f2edd05676e75c33d03eed1d3098cc0550ea33474e3ec9db1",
                "block_index": 310001,
                "block_time": 310001000
            },
            {
                "event_index": 11,
                "event": "ASSET_ISSUANCE",
                "params": {
                    "asset": "DIVISIBLE",
                    "asset_events": "creation",
                    "asset_longname": null,
                    "block_index": 310001,
                    "call_date": 0,
                    "call_price": 0.0,
                    "callable": false,
                    "description": "Divisible asset",
                    "description_locked": false,
                    "divisible": true,
                    "fee_paid": 50000000,
                    "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                    "locked": false,
                    "quantity": 100000000000,
                    "reset": false,
                    "source": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                    "status": "valid",
                    "transfer": false,
                    "tx_hash": "1fc2e5a57f584b2f2edd05676e75c33d03eed1d3098cc0550ea33474e3ec9db1",
                    "tx_index": 2,
                    "block_time": 310001000,
                    "quantity_normalized": "1000.00000000",
                    "fee_paid_normalized": "0.50000000"
                },
                "tx_hash": "1fc2e5a57f584b2f2edd05676e75c33d03eed1d3098cc0550ea33474e3ec9db1",
                "block_index": 310001,
                "block_time": 310001000
            },
            {
                "event_index": 10,
                "event": "ASSET_CREATION",
                "params": {
                    "asset_id": "697326324582",
                    "asset_longname": null,
                    "asset_name": "DIVISIBLE",
                    "block_index": 310001,
                    "block_time": 310001000
                },
                "tx_hash": "1fc2e5a57f584b2f2edd05676e75c33d03eed1d3098cc0550ea33474e3ec9db1",
                "block_index": 310001,
                "block_time": 310001000
            },
            {
                "event_index": 9,
                "event": "DEBIT",
                "params": {
                    "action": "issuance fee",
                    "address": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                    "asset": "XCP",
                    "block_index": 310001,
                    "event": "1fc2e5a57f584b2f2edd05676e75c33d03eed1d3098cc0550ea33474e3ec9db1",
                    "quantity": 50000000,
                    "tx_index": 2,
                    "utxo": null,
                    "utxo_address": null,
                    "block_time": 310001000,
                    "asset_info": {
                        "divisible": true,
                        "asset_longname": null,
                        "description": "The Counterparty protocol native currency",
                        "locked": true,
                        "issuer": null
                    },
                    "quantity_normalized": "0.50000000"
                },
                "tx_hash": "1fc2e5a57f584b2f2edd05676e75c33d03eed1d3098cc0550ea33474e3ec9db1",
                "block_index": 310001,
                "block_time": 310001000
            }
        ],
        "next_cursor": null,
        "result_count": 5
    },
    "http://localhost:10009/v2/transactions/74db175c4669a3d3a59e3fcddce9e97fcd7d12c35b58ef31845a1b20a1739498/events?verbose=true": {
        "result": [
            {
                "event_index": 1183,
                "event": "TRANSACTION_PARSED",
                "params": {
                    "supported": true,
                    "tx_hash": "74db175c4669a3d3a59e3fcddce9e97fcd7d12c35b58ef31845a1b20a1739498",
                    "tx_index": 492
                },
                "tx_hash": "74db175c4669a3d3a59e3fcddce9e97fcd7d12c35b58ef31845a1b20a1739498",
                "block_index": 310491,
                "block_time": 310491000
            },
            {
                "event_index": 1182,
                "event": "OPEN_ORDER",
                "params": {
                    "block_index": 310491,
                    "expiration": 2000,
                    "expire_index": 312491,
                    "fee_provided": 6800,
                    "fee_provided_remaining": 6800,
                    "fee_required": 900000,
                    "fee_required_remaining": 900000,
                    "get_asset": "BTC",
                    "get_quantity": 800000,
                    "get_remaining": 800000,
                    "give_asset": "XCP",
                    "give_quantity": 100000000,
                    "give_remaining": 100000000,
                    "source": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                    "status": "open",
                    "tx_hash": "74db175c4669a3d3a59e3fcddce9e97fcd7d12c35b58ef31845a1b20a1739498",
                    "tx_index": 492,
                    "block_time": 310491000,
                    "give_asset_info": {
                        "divisible": true,
                        "asset_longname": null,
                        "description": "The Counterparty protocol native currency",
                        "locked": true,
                        "issuer": null
                    },
                    "get_asset_info": {
                        "divisible": true,
                        "asset_longname": null,
                        "description": "The Bitcoin cryptocurrency",
                        "locked": false,
                        "issuer": null
                    },
                    "give_quantity_normalized": "1.00000000",
                    "get_quantity_normalized": "0.00800000",
                    "get_remaining_normalized": "0.00800000",
                    "give_remaining_normalized": "1.00000000",
                    "fee_provided_normalized": "0.00006800",
                    "fee_required_normalized": "0.00900000",
                    "fee_required_remaining_normalized": "0.00900000",
                    "fee_provided_remaining_normalized": "0.00006800"
                },
                "tx_hash": "74db175c4669a3d3a59e3fcddce9e97fcd7d12c35b58ef31845a1b20a1739498",
                "block_index": 310491,
                "block_time": 310491000
            },
            {
                "event_index": 1181,
                "event": "DEBIT",
                "params": {
                    "action": "open order",
                    "address": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                    "asset": "XCP",
                    "block_index": 310491,
                    "event": "74db175c4669a3d3a59e3fcddce9e97fcd7d12c35b58ef31845a1b20a1739498",
                    "quantity": 100000000,
                    "tx_index": 492,
                    "utxo": null,
                    "utxo_address": null,
                    "block_time": 310491000,
                    "asset_info": {
                        "divisible": true,
                        "asset_longname": null,
                        "description": "The Counterparty protocol native currency",
                        "locked": true,
                        "issuer": null
                    },
                    "quantity_normalized": "1.00000000"
                },
                "tx_hash": "74db175c4669a3d3a59e3fcddce9e97fcd7d12c35b58ef31845a1b20a1739498",
                "block_index": 310491,
                "block_time": 310491000
            }
        ],
        "next_cursor": null,
        "result_count": 3
    },
    "http://localhost:10009/v2/transactions/74db175c4669a3d3a59e3fcddce9e97fcd7d12c35b58ef31845a1b20a1739498/sends?verbose=true": {
        "result": [],
        "next_cursor": null,
        "result_count": 0
    },
    "http://localhost:10009/v2/transactions/74db175c4669a3d3a59e3fcddce9e97fcd7d12c35b58ef31845a1b20a1739498/dispenses?verbose=true": {
        "result": [],
        "next_cursor": null,
        "result_count": 0
    },
    "http://localhost:10009/v2/transactions/2/events/CREDIT?verbose=true": {
        "result": [
            {
                "event_index": 12,
                "event": "CREDIT",
                "params": {
                    "address": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                    "asset": "DIVISIBLE",
                    "block_index": 310001,
                    "calling_function": "issuance",
                    "event": "1fc2e5a57f584b2f2edd05676e75c33d03eed1d3098cc0550ea33474e3ec9db1",
                    "quantity": 100000000000,
                    "tx_index": 2,
                    "utxo": null,
                    "utxo_address": null,
                    "block_time": 310001000,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "Divisible asset",
                        "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                        "divisible": true,
                        "locked": false
                    },
                    "quantity_normalized": "1000.00000000"
                },
                "tx_hash": "1fc2e5a57f584b2f2edd05676e75c33d03eed1d3098cc0550ea33474e3ec9db1",
                "block_index": 310001,
                "block_time": 310001000
            }
        ],
        "next_cursor": null,
        "result_count": 1
    },
    "http://localhost:10009/v2/transactions/74db175c4669a3d3a59e3fcddce9e97fcd7d12c35b58ef31845a1b20a1739498/events/CREDIT?verbose=true": {
        "result": [],
        "next_cursor": null,
        "result_count": 0
    },
    "http://localhost:10009/v2/addresses/balances?verbose=true&limit=6&addresses=mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc,mtQheFaSfWELRB2MyMBaiWjdDm6ux9Ezns": {
        "result": [
            {
                "asset": "A160361285792733729",
                "total": 50,
                "addresses": [
                    {
                        "address": "mtQheFaSfWELRB2MyMBaiWjdDm6ux9Ezns",
                        "utxo": null,
                        "utxo_address": null,
                        "quantity": 50,
                        "quantity_normalized": "0.00000050"
                    }
                ],
                "asset_info": {
                    "asset_longname": "",
                    "description": "softcap description",
                    "issuer": "mtQheFaSfWELRB2MyMBaiWjdDm6ux9Ezns",
                    "divisible": true,
                    "locked": true
                },
                "total_normalized": "0.00000050"
            },
            {
                "asset": "A95428956661682277",
                "total": 100000000,
                "addresses": [
                    {
                        "address": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                        "utxo": null,
                        "utxo_address": null,
                        "quantity": 100000000,
                        "quantity_normalized": "1.00000000"
                    }
                ],
                "asset_info": {
                    "asset_longname": "PARENT.already.issued",
                    "description": "Child of parent",
                    "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                    "divisible": true,
                    "locked": false
                },
                "total_normalized": "1.00000000"
            },
            {
                "asset": "CALLABLE",
                "total": 1000,
                "addresses": [
                    {
                        "address": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                        "utxo": null,
                        "utxo_address": null,
                        "quantity": 1000,
                        "quantity_normalized": "0.00001000"
                    }
                ],
                "asset_info": {
                    "asset_longname": null,
                    "description": "Callable asset",
                    "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                    "divisible": true,
                    "locked": false
                },
                "total_normalized": "0.00001000"
            },
            {
                "asset": "DIVISIBLE",
                "total": 98900000000,
                "addresses": [
                    {
                        "address": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                        "utxo": null,
                        "utxo_address": null,
                        "quantity": 98799999999,
                        "quantity_normalized": "988.00000000"
                    },
                    {
                        "address": "mtQheFaSfWELRB2MyMBaiWjdDm6ux9Ezns",
                        "utxo": null,
                        "utxo_address": null,
                        "quantity": 100000000,
                        "quantity_normalized": "1.00000000"
                    },
                    {
                        "address": null,
                        "utxo": "4f0433ba841038e2e16328445930dd7bca35309b14b0da4451c8f94c631368b8:1",
                        "utxo_address": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                        "quantity": 1,
                        "quantity_normalized": "0.00000001"
                    }
                ],
                "asset_info": {
                    "asset_longname": null,
                    "description": "Divisible asset",
                    "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                    "divisible": true,
                    "locked": false
                },
                "total_normalized": "989.00000000"
            },
            {
                "asset": "FREEFAIRMIN",
                "total": 10,
                "addresses": [
                    {
                        "address": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                        "utxo": null,
                        "utxo_address": null,
                        "quantity": 10,
                        "quantity_normalized": "0.00000010"
                    }
                ],
                "asset_info": {
                    "asset_longname": "",
                    "description": "",
                    "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                    "divisible": true,
                    "locked": false
                },
                "total_normalized": "0.00000010"
            },
            {
                "asset": "LOCKED",
                "total": 1000,
                "addresses": [
                    {
                        "address": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                        "utxo": null,
                        "utxo_address": null,
                        "quantity": 1000,
                        "quantity_normalized": "0.00001000"
                    }
                ],
                "asset_info": {
                    "asset_longname": null,
                    "description": "Locked asset",
                    "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                    "divisible": true,
                    "locked": true
                },
                "total_normalized": "0.00001000"
            }
        ],
        "next_cursor": "MAXI",
        "result_count": 11
    },
    "http://localhost:10009/v2/addresses/transactions?verbose=true&limit=6&addresses=mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc,mtQheFaSfWELRB2MyMBaiWjdDm6ux9Ezns": {
        "result": [
            {
                "tx_index": 509,
                "tx_hash": "ff23dc6911d401e9868b8ac747d31febc2078f004eff7b56a8895c107ed8a73e",
                "block_index": 310508,
                "block_hash": "40cfaee344032c167d7317bb94d2e514f8dca023302303a908dd994e15d902cf",
                "block_time": 310508000,
                "source": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "destination": null,
                "btc_amount": 0,
                "fee": 10850,
                "data": "646d6e367133645332456e44557833626d795763364434737a4a4e5647746152377a637c346630343333626138343130333865326531363332383434353933306464376263613335333039623134623064613434353163386639346336333133363862383a317c444956495349424c457c31",
                "supported": true,
                "utxos_info": "1c6f52a3ca4d5f1698d2db3f107da787153bf686fc049f2792074916249fc27d:0",
                "confirmed": true,
                "unpacked_data": {
                    "message_type": "unknown",
                    "message_type_id": 1684893238,
                    "message_data": {
                        "error": "Unknown message type"
                    }
                },
                "btc_amount_normalized": "0.00000000"
            },
            {
                "tx_index": 508,
                "tx_hash": "9d2243c84df0132061884dfce73f3b7c5262a1cde0d029de472a079f3a1c4883",
                "block_index": 310507,
                "block_hash": "015b45f96ad6b4bfc950934e9c9d8c29a499b837ea7c4c722ff482d8d9896a93",
                "block_time": 310507000,
                "source": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "destination": null,
                "btc_amount": 0,
                "fee": 10850,
                "data": "646d6e367133645332456e44557833626d795763364434737a4a4e5647746152377a637c346630343333626138343130333865326531363332383434353933306464376263613335333039623134623064613434353163386639346336333133363862383a317c5843507c313030",
                "supported": true,
                "utxos_info": "c7f048b97f07912138691b7d133baafe98a6a10ffb089e0b773f06ef945d5c36:0",
                "confirmed": true,
                "unpacked_data": {
                    "message_type": "unknown",
                    "message_type_id": 1684893238,
                    "message_data": {
                        "error": "Unknown message type"
                    }
                },
                "btc_amount_normalized": "0.00000000"
            },
            {
                "tx_index": 507,
                "tx_hash": "ba6c7582f5c1e39bed32074c16f54ab338c79d0eefd3c8a7ba1f949e2febcd18",
                "block_index": 310506,
                "block_hash": "9a7512bd957b110f23c37a6673cd0fd7342f0cf96b44f990e66ac7d5cbb8448c",
                "block_time": 310506000,
                "source": "mtQheFaSfWELRB2MyMBaiWjdDm6ux9Ezns",
                "destination": null,
                "btc_amount": 0,
                "fee": 5800,
                "data": "5b413136303336313238353739323733333732397c3230",
                "supported": true,
                "utxos_info": "33b22f767d86a1375935576b0b0b76fee0c080ab5dd4e8d9aa27537df84abef2:1",
                "confirmed": true,
                "unpacked_data": {
                    "message_type": "unknown",
                    "message_type_id": 1530999094,
                    "message_data": {
                        "error": "Unknown message type"
                    }
                },
                "btc_amount_normalized": "0.00000000"
            },
            {
                "tx_index": 506,
                "tx_hash": "6f4c3965a1cc2891e7dcdb4a3c12b73e6cf2e56e750dabcdf87c82443f08e1d8",
                "block_index": 310505,
                "block_hash": "dabd8046821297bd7071117defef365b4384c3ad338a8fa206bae85593958a6a",
                "block_time": 310505000,
                "source": "mtQheFaSfWELRB2MyMBaiWjdDm6ux9Ezns",
                "destination": null,
                "btc_amount": 0,
                "fee": 5800,
                "data": "5b413136303336313238353739323733333732397c3130",
                "supported": true,
                "utxos_info": "f1a22cd5df828fe94c328ca0c39fd1120b98dcc333b2d1ac95465b4bc2a2ace1:1",
                "confirmed": true,
                "unpacked_data": {
                    "message_type": "unknown",
                    "message_type_id": 1530999094,
                    "message_data": {
                        "error": "Unknown message type"
                    }
                },
                "btc_amount_normalized": "0.00000000"
            },
            {
                "tx_index": 505,
                "tx_hash": "0d56c40c31829bbd06cdc039eda95c844c98208ec981ef419093c386eab2d0e9",
                "block_index": 310504,
                "block_hash": "0b123f4e535bb92fed07632e107813b9a399cb6f6d9ef629d303e9df3d71ad25",
                "block_time": 310504000,
                "source": "mtQheFaSfWELRB2MyMBaiWjdDm6ux9Ezns",
                "destination": null,
                "btc_amount": 0,
                "fee": 8825,
                "data": "5a413136303336313238353739323733333732397c7c31307c317c307c35307c32307c307c307c32307c3331303532307c33303030303030307c307c317c317c317c736f6674636170206465736372697074696f6e",
                "supported": true,
                "utxos_info": "a827b0538f335c6416477786ef827c5bf52bb1bfa20053209d5b788d18b8e16c:0",
                "confirmed": true,
                "unpacked_data": {
                    "message_type": "unknown",
                    "message_type_id": 1514221878,
                    "message_data": {
                        "error": "Unknown message type"
                    }
                },
                "btc_amount_normalized": "0.00000000"
            },
            {
                "tx_index": 504,
                "tx_hash": "c3d10301a50c49b3c9515f88847b92ce969729c194c064f411d610bc3b3704e7",
                "block_index": 310503,
                "block_hash": "219e9a113a7c66443183171e389bfd5eaf957f5b8ab825358d72fa8e0cc8c16c",
                "block_time": 310503000,
                "source": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "destination": null,
                "btc_amount": 0,
                "fee": 6675,
                "data": "5a51414944464149524d494e7c7c31307c317c307c35307c32307c307c307c32307c3430303030307c35303030303030307c307c307c307c317c",
                "supported": true,
                "utxos_info": "3e7d029e0751dbdd5853f91b6e28f8df6b1b940ace7b8723d459905df4e0ef9c:1",
                "confirmed": true,
                "unpacked_data": {
                    "message_type": "unknown",
                    "message_type_id": 1515274569,
                    "message_data": {
                        "error": "Unknown message type"
                    }
                },
                "btc_amount_normalized": "0.00000000"
            }
        ],
        "next_cursor": 503,
        "result_count": 39
    },
    "http://localhost:10009/v2/addresses/events?verbose=true&limit=6&addresses=mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc,mtQheFaSfWELRB2MyMBaiWjdDm6ux9Ezns": {
        "result": [
            {
                "event_index": 1355,
                "event": "ORDER_MATCH_EXPIRATION",
                "params": {
                    "block_index": 310513,
                    "order_match_id": "74db175c4669a3d3a59e3fcddce9e97fcd7d12c35b58ef31845a1b20a1739498_1b294dd8592e76899b1c106782e4c96e63114abd8e3fa09ab6d2d52496b5bf81",
                    "tx0_address": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                    "tx1_address": "mtQheFaSfWELRB2MyMBaiWjdDm6ux9Ezns",
                    "block_time": 310513000
                },
                "tx_hash": null,
                "block_index": 310513,
                "block_time": 310513000
            },
            {
                "event_index": 1327,
                "event": "DEBIT",
                "params": {
                    "action": "attach to utxo",
                    "address": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                    "asset": "DIVISIBLE",
                    "block_index": 310508,
                    "event": "ff23dc6911d401e9868b8ac747d31febc2078f004eff7b56a8895c107ed8a73e",
                    "quantity": 1,
                    "tx_index": 509,
                    "utxo": null,
                    "utxo_address": null,
                    "block_time": 310508000,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "Divisible asset",
                        "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                        "divisible": true,
                        "locked": false
                    },
                    "quantity_normalized": "0.00000001"
                },
                "tx_hash": "ff23dc6911d401e9868b8ac747d31febc2078f004eff7b56a8895c107ed8a73e",
                "block_index": 310508,
                "block_time": 310508000
            },
            {
                "event_index": 1326,
                "event": "ASSET_DESTRUCTION",
                "params": {
                    "asset": "XCP",
                    "block_index": 310508,
                    "quantity": 10,
                    "source": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                    "status": "valid",
                    "tag": "attach to utxo fee",
                    "tx_hash": "ff23dc6911d401e9868b8ac747d31febc2078f004eff7b56a8895c107ed8a73e",
                    "tx_index": 509,
                    "block_time": 310508000,
                    "asset_info": {
                        "divisible": true,
                        "asset_longname": null,
                        "description": "The Counterparty protocol native currency",
                        "locked": true,
                        "issuer": null
                    },
                    "quantity_normalized": "0.00000010"
                },
                "tx_hash": "ff23dc6911d401e9868b8ac747d31febc2078f004eff7b56a8895c107ed8a73e",
                "block_index": 310508,
                "block_time": 310508000
            },
            {
                "event_index": 1325,
                "event": "DEBIT",
                "params": {
                    "action": "attach to utxo fee",
                    "address": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                    "asset": "XCP",
                    "block_index": 310508,
                    "event": "ff23dc6911d401e9868b8ac747d31febc2078f004eff7b56a8895c107ed8a73e",
                    "quantity": 10,
                    "tx_index": 509,
                    "utxo": null,
                    "utxo_address": null,
                    "block_time": 310508000,
                    "asset_info": {
                        "divisible": true,
                        "asset_longname": null,
                        "description": "The Counterparty protocol native currency",
                        "locked": true,
                        "issuer": null
                    },
                    "quantity_normalized": "0.00000010"
                },
                "tx_hash": "ff23dc6911d401e9868b8ac747d31febc2078f004eff7b56a8895c107ed8a73e",
                "block_index": 310508,
                "block_time": 310508000
            },
            {
                "event_index": 1324,
                "event": "NEW_TRANSACTION",
                "params": {
                    "block_hash": "40cfaee344032c167d7317bb94d2e514f8dca023302303a908dd994e15d902cf",
                    "block_index": 310508,
                    "block_time": 310508000,
                    "btc_amount": 0,
                    "data": "646d6e367133645332456e44557833626d795763364434737a4a4e5647746152377a637c346630343333626138343130333865326531363332383434353933306464376263613335333039623134623064613434353163386639346336333133363862383a317c444956495349424c457c31",
                    "destination": "",
                    "fee": 10850,
                    "source": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                    "supported": true,
                    "tx_hash": "ff23dc6911d401e9868b8ac747d31febc2078f004eff7b56a8895c107ed8a73e",
                    "tx_index": 509,
                    "utxos_info": "1c6f52a3ca4d5f1698d2db3f107da787153bf686fc049f2792074916249fc27d:0",
                    "unpacked_data": {
                        "message_type": "unknown",
                        "message_type_id": 1684893238,
                        "message_data": {
                            "error": "Unknown message type"
                        }
                    },
                    "btc_amount_normalized": "0.00000000"
                },
                "tx_hash": null,
                "block_index": 310508,
                "block_time": 310508000
            }
        ],
        "next_cursor": 1317,
        "result_count": 167
    },
    "http://localhost:10009/v2/addresses/mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc/balances?verbose=true": {
        "result": [
            {
                "address": null,
                "asset": "DIVISIBLE",
                "quantity": 1,
                "utxo": "4f0433ba841038e2e16328445930dd7bca35309b14b0da4451c8f94c631368b8:1",
                "utxo_address": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "asset_info": {
                    "asset_longname": null,
                    "description": "Divisible asset",
                    "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                    "divisible": true,
                    "locked": false
                },
                "quantity_normalized": "0.00000001"
            },
            {
                "address": null,
                "asset": "XCP",
                "quantity": 100,
                "utxo": "4f0433ba841038e2e16328445930dd7bca35309b14b0da4451c8f94c631368b8:1",
                "utxo_address": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "asset_info": {
                    "divisible": true,
                    "asset_longname": null,
                    "description": "The Counterparty protocol native currency",
                    "locked": true,
                    "issuer": null
                },
                "quantity_normalized": "0.00000100"
            },
            {
                "address": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "asset": "RAIDFAIRMIN",
                "quantity": 20,
                "utxo": null,
                "utxo_address": null,
                "asset_info": {
                    "asset_longname": "",
                    "description": "",
                    "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                    "divisible": true,
                    "locked": false
                },
                "quantity_normalized": "0.00000020"
            },
            {
                "address": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "asset": "FREEFAIRMIN",
                "quantity": 10,
                "utxo": null,
                "utxo_address": null,
                "asset_info": {
                    "asset_longname": "",
                    "description": "",
                    "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                    "divisible": true,
                    "locked": false
                },
                "quantity_normalized": "0.00000010"
            },
            {
                "address": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "asset": "A95428956661682277",
                "quantity": 100000000,
                "utxo": null,
                "utxo_address": null,
                "asset_info": {
                    "asset_longname": "PARENT.already.issued",
                    "description": "Child of parent",
                    "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                    "divisible": true,
                    "locked": false
                },
                "quantity_normalized": "1.00000000"
            },
            {
                "address": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "asset": "PARENT",
                "quantity": 100000000,
                "utxo": null,
                "utxo_address": null,
                "asset_info": {
                    "asset_longname": null,
                    "description": "Parent asset",
                    "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                    "divisible": true,
                    "locked": false
                },
                "quantity_normalized": "1.00000000"
            },
            {
                "address": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "asset": "MAXI",
                "quantity": 9223372036854775807,
                "utxo": null,
                "utxo_address": null,
                "asset_info": {
                    "asset_longname": null,
                    "description": "Maximum quantity",
                    "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                    "divisible": true,
                    "locked": false
                },
                "quantity_normalized": "92233720000.00000000"
            },
            {
                "address": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "asset": "LOCKED",
                "quantity": 1000,
                "utxo": null,
                "utxo_address": null,
                "asset_info": {
                    "asset_longname": null,
                    "description": "Locked asset",
                    "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                    "divisible": true,
                    "locked": true
                },
                "quantity_normalized": "0.00001000"
            },
            {
                "address": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "asset": "CALLABLE",
                "quantity": 1000,
                "utxo": null,
                "utxo_address": null,
                "asset_info": {
                    "asset_longname": null,
                    "description": "Callable asset",
                    "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                    "divisible": true,
                    "locked": false
                },
                "quantity_normalized": "0.00001000"
            },
            {
                "address": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "asset": "NODIVISIBLE",
                "quantity": 985,
                "utxo": null,
                "utxo_address": null,
                "asset_info": {
                    "asset_longname": null,
                    "description": "No divisible asset",
                    "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                    "divisible": false,
                    "locked": false
                },
                "quantity_normalized": "985"
            },
            {
                "address": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "asset": "DIVISIBLE",
                "quantity": 98799999999,
                "utxo": null,
                "utxo_address": null,
                "asset_info": {
                    "asset_longname": null,
                    "description": "Divisible asset",
                    "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                    "divisible": true,
                    "locked": false
                },
                "quantity_normalized": "988.00000000"
            },
            {
                "address": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "asset": "XCP",
                "quantity": 91674999880,
                "utxo": null,
                "utxo_address": null,
                "asset_info": {
                    "divisible": true,
                    "asset_longname": null,
                    "description": "The Counterparty protocol native currency",
                    "locked": true,
                    "issuer": null
                },
                "quantity_normalized": "916.75000000"
            }
        ],
        "next_cursor": null,
        "result_count": 12
    },
    "http://localhost:10009/v2/addresses/mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc/balances/NODIVISIBLE?verbose=true": {
        "result": {
            "address": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
            "asset": "NODIVISIBLE",
            "quantity": 985,
            "utxo": null,
            "utxo_address": null,
            "asset_info": {
                "asset_longname": null,
                "description": "No divisible asset",
                "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "divisible": false,
                "locked": false
            },
            "quantity_normalized": "985"
        }
    },
    "http://localhost:10009/v2/addresses/mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc/credits?verbose=true": {
        "result": [
            {
                "block_index": 310508,
                "address": null,
                "asset": "DIVISIBLE",
                "quantity": 1,
                "calling_function": "attach to utxo",
                "event": "ff23dc6911d401e9868b8ac747d31febc2078f004eff7b56a8895c107ed8a73e",
                "tx_index": 509,
                "utxo": "4f0433ba841038e2e16328445930dd7bca35309b14b0da4451c8f94c631368b8:1",
                "utxo_address": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "confirmed": true,
                "block_time": 310508000,
                "asset_info": {
                    "asset_longname": null,
                    "description": "Divisible asset",
                    "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                    "divisible": true,
                    "locked": false
                },
                "quantity_normalized": "0.00000001"
            },
            {
                "block_index": 310507,
                "address": null,
                "asset": "XCP",
                "quantity": 100,
                "calling_function": "attach to utxo",
                "event": "9d2243c84df0132061884dfce73f3b7c5262a1cde0d029de472a079f3a1c4883",
                "tx_index": 508,
                "utxo": "4f0433ba841038e2e16328445930dd7bca35309b14b0da4451c8f94c631368b8:1",
                "utxo_address": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "confirmed": true,
                "block_time": 310507000,
                "asset_info": {
                    "divisible": true,
                    "asset_longname": null,
                    "description": "The Counterparty protocol native currency",
                    "locked": true,
                    "issuer": null
                },
                "quantity_normalized": "0.00000100"
            },
            {
                "block_index": 310502,
                "address": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "asset": "RAIDFAIRMIN",
                "quantity": 20,
                "calling_function": "premint",
                "event": "9830e28496bb94f7e9f829abd26fd2cdce24ccb637e55488537a7080979ad9c1",
                "tx_index": 503,
                "utxo": null,
                "utxo_address": null,
                "confirmed": true,
                "block_time": 310502000,
                "asset_info": {
                    "asset_longname": "",
                    "description": "",
                    "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                    "divisible": true,
                    "locked": false
                },
                "quantity_normalized": "0.00000020"
            },
            {
                "block_index": 310501,
                "address": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "asset": "FREEFAIRMIN",
                "quantity": 10,
                "calling_function": "fairmint",
                "event": "d42849c71a32e388606982d3384ec8ae12e5c0ba2f742cb4ddf0649fb66e1f67",
                "tx_index": 502,
                "utxo": null,
                "utxo_address": null,
                "confirmed": true,
                "block_time": 310501000,
                "asset_info": {
                    "asset_longname": "",
                    "description": "",
                    "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                    "divisible": true,
                    "locked": false
                },
                "quantity_normalized": "0.00000010"
            },
            {
                "block_index": 310498,
                "address": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "asset": "A95428956661682277",
                "quantity": 100000000,
                "calling_function": "issuance",
                "event": "0abfce2662c05852fd8b181a60900678643cedad47b23a853b8c4eda82cb2cbf",
                "tx_index": 499,
                "utxo": null,
                "utxo_address": null,
                "confirmed": true,
                "block_time": 310498000,
                "asset_info": {
                    "asset_longname": "PARENT.already.issued",
                    "description": "Child of parent",
                    "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                    "divisible": true,
                    "locked": false
                },
                "quantity_normalized": "1.00000000"
            },
            {
                "block_index": 310497,
                "address": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "asset": "PARENT",
                "quantity": 100000000,
                "calling_function": "issuance",
                "event": "076ae3d8eeb7fb40d2ae27692340157c746d9832806766b0dac5adb1526dc78f",
                "tx_index": 498,
                "utxo": null,
                "utxo_address": null,
                "confirmed": true,
                "block_time": 310497000,
                "asset_info": {
                    "asset_longname": null,
                    "description": "Parent asset",
                    "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                    "divisible": true,
                    "locked": false
                },
                "quantity_normalized": "1.00000000"
            },
            {
                "block_index": 310482,
                "address": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "asset": "XCP",
                "quantity": 100000000,
                "calling_function": "send",
                "event": "c8716524f33646b9af94d6f5e52494ff3b34466497094b1db2ab920e4f79bc34",
                "tx_index": 483,
                "utxo": null,
                "utxo_address": null,
                "confirmed": true,
                "block_time": 310482000,
                "asset_info": {
                    "divisible": true,
                    "asset_longname": null,
                    "description": "The Counterparty protocol native currency",
                    "locked": true,
                    "issuer": null
                },
                "quantity_normalized": "1.00000000"
            },
            {
                "block_index": 310102,
                "address": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "asset": "XCP",
                "quantity": 9,
                "calling_function": "bet settled",
                "event": "16462eac6c795cea6e5985ee063867d8c61ae24373df02048186d28118d25bae",
                "tx_index": 103,
                "utxo": null,
                "utxo_address": null,
                "confirmed": true,
                "block_time": 310102000,
                "asset_info": {
                    "divisible": true,
                    "asset_longname": null,
                    "description": "The Counterparty protocol native currency",
                    "locked": true,
                    "issuer": null
                },
                "quantity_normalized": "0.00000009"
            },
            {
                "block_index": 310016,
                "address": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "asset": "MAXI",
                "quantity": 9223372036854775807,
                "calling_function": "issuance",
                "event": "bd4e9cbbe69c2db893cd32182a2d315c89c45ba4e31aa5775d1fe42d841cea39",
                "tx_index": 17,
                "utxo": null,
                "utxo_address": null,
                "confirmed": true,
                "block_time": 310016000,
                "asset_info": {
                    "asset_longname": null,
                    "description": "Maximum quantity",
                    "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                    "divisible": true,
                    "locked": false
                },
                "quantity_normalized": "92233720000.00000000"
            },
            {
                "block_index": 310004,
                "address": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "asset": "LOCKED",
                "quantity": 1000,
                "calling_function": "issuance",
                "event": "90b5734be98b0f2a0bd4b6a269c8db3368e2e387bb890ade239951d05423b4da",
                "tx_index": 5,
                "utxo": null,
                "utxo_address": null,
                "confirmed": true,
                "block_time": 310004000,
                "asset_info": {
                    "asset_longname": null,
                    "description": "Locked asset",
                    "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                    "divisible": true,
                    "locked": true
                },
                "quantity_normalized": "0.00001000"
            },
            {
                "block_index": 310003,
                "address": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "asset": "CALLABLE",
                "quantity": 1000,
                "calling_function": "issuance",
                "event": "c26f3a0c4e57e41919ff27aae95a9a9d4d65d34c6da6f1893884a17c8d407140",
                "tx_index": 4,
                "utxo": null,
                "utxo_address": null,
                "confirmed": true,
                "block_time": 310003000,
                "asset_info": {
                    "asset_longname": null,
                    "description": "Callable asset",
                    "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                    "divisible": true,
                    "locked": false
                },
                "quantity_normalized": "0.00001000"
            },
            {
                "block_index": 310002,
                "address": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "asset": "NODIVISIBLE",
                "quantity": 1000,
                "calling_function": "issuance",
                "event": "7b1bf5144346279271b1ff78664f118224fe27fd8679d6c1519345f9c6c54584",
                "tx_index": 3,
                "utxo": null,
                "utxo_address": null,
                "confirmed": true,
                "block_time": 310002000,
                "asset_info": {
                    "asset_longname": null,
                    "description": "No divisible asset",
                    "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                    "divisible": false,
                    "locked": false
                },
                "quantity_normalized": "1000"
            },
            {
                "block_index": 310001,
                "address": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "asset": "DIVISIBLE",
                "quantity": 100000000000,
                "calling_function": "issuance",
                "event": "1fc2e5a57f584b2f2edd05676e75c33d03eed1d3098cc0550ea33474e3ec9db1",
                "tx_index": 2,
                "utxo": null,
                "utxo_address": null,
                "confirmed": true,
                "block_time": 310001000,
                "asset_info": {
                    "asset_longname": null,
                    "description": "Divisible asset",
                    "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                    "divisible": true,
                    "locked": false
                },
                "quantity_normalized": "1000.00000000"
            },
            {
                "block_index": 310000,
                "address": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "asset": "XCP",
                "quantity": 93000000000,
                "calling_function": "burn",
                "event": "6dc5b0a33d4d4297e0f5cc2d23ae307951d32aab2d86b7fa147b385219f3a597",
                "tx_index": 1,
                "utxo": null,
                "utxo_address": null,
                "confirmed": true,
                "block_time": 310000000,
                "asset_info": {
                    "divisible": true,
                    "asset_longname": null,
                    "description": "The Counterparty protocol native currency",
                    "locked": true,
                    "issuer": null
                },
                "quantity_normalized": "930.00000000"
            }
        ],
        "next_cursor": null,
        "result_count": 14
    },
    "http://localhost:10009/v2/addresses/mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc/debits?verbose=true": {
        "result": [
            {
                "block_index": 310508,
                "address": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "asset": "DIVISIBLE",
                "quantity": 1,
                "action": "attach to utxo",
                "event": "ff23dc6911d401e9868b8ac747d31febc2078f004eff7b56a8895c107ed8a73e",
                "tx_index": 509,
                "utxo": null,
                "utxo_address": null,
                "confirmed": true,
                "block_time": 310508000,
                "asset_info": {
                    "asset_longname": null,
                    "description": "Divisible asset",
                    "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                    "divisible": true,
                    "locked": false
                },
                "quantity_normalized": "0.00000001"
            },
            {
                "block_index": 310508,
                "address": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "asset": "XCP",
                "quantity": 10,
                "action": "attach to utxo fee",
                "event": "ff23dc6911d401e9868b8ac747d31febc2078f004eff7b56a8895c107ed8a73e",
                "tx_index": 509,
                "utxo": null,
                "utxo_address": null,
                "confirmed": true,
                "block_time": 310508000,
                "asset_info": {
                    "divisible": true,
                    "asset_longname": null,
                    "description": "The Counterparty protocol native currency",
                    "locked": true,
                    "issuer": null
                },
                "quantity_normalized": "0.00000010"
            },
            {
                "block_index": 310507,
                "address": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "asset": "XCP",
                "quantity": 100,
                "action": "attach to utxo",
                "event": "9d2243c84df0132061884dfce73f3b7c5262a1cde0d029de472a079f3a1c4883",
                "tx_index": 508,
                "utxo": null,
                "utxo_address": null,
                "confirmed": true,
                "block_time": 310507000,
                "asset_info": {
                    "divisible": true,
                    "asset_longname": null,
                    "description": "The Counterparty protocol native currency",
                    "locked": true,
                    "issuer": null
                },
                "quantity_normalized": "0.00000100"
            },
            {
                "block_index": 310507,
                "address": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "asset": "XCP",
                "quantity": 10,
                "action": "attach to utxo fee",
                "event": "9d2243c84df0132061884dfce73f3b7c5262a1cde0d029de472a079f3a1c4883",
                "tx_index": 508,
                "utxo": null,
                "utxo_address": null,
                "confirmed": true,
                "block_time": 310507000,
                "asset_info": {
                    "divisible": true,
                    "asset_longname": null,
                    "description": "The Counterparty protocol native currency",
                    "locked": true,
                    "issuer": null
                },
                "quantity_normalized": "0.00000010"
            },
            {
                "block_index": 310503,
                "address": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "asset": "XCP",
                "quantity": 50000000,
                "action": "fairminter fee",
                "event": "c3d10301a50c49b3c9515f88847b92ce969729c194c064f411d610bc3b3704e7",
                "tx_index": 504,
                "utxo": null,
                "utxo_address": null,
                "confirmed": true,
                "block_time": 310503000,
                "asset_info": {
                    "divisible": true,
                    "asset_longname": null,
                    "description": "The Counterparty protocol native currency",
                    "locked": true,
                    "issuer": null
                },
                "quantity_normalized": "0.50000000"
            },
            {
                "block_index": 310502,
                "address": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "asset": "XCP",
                "quantity": 50000000,
                "action": "fairminter fee",
                "event": "9830e28496bb94f7e9f829abd26fd2cdce24ccb637e55488537a7080979ad9c1",
                "tx_index": 503,
                "utxo": null,
                "utxo_address": null,
                "confirmed": true,
                "block_time": 310502000,
                "asset_info": {
                    "divisible": true,
                    "asset_longname": null,
                    "description": "The Counterparty protocol native currency",
                    "locked": true,
                    "issuer": null
                },
                "quantity_normalized": "0.50000000"
            },
            {
                "block_index": 310500,
                "address": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "asset": "XCP",
                "quantity": 50000000,
                "action": "fairminter fee",
                "event": "13e642d78db80af715cdce12a9fca81965752bbfb59549341fa4760da3d32afe",
                "tx_index": 501,
                "utxo": null,
                "utxo_address": null,
                "confirmed": true,
                "block_time": 310500000,
                "asset_info": {
                    "divisible": true,
                    "asset_longname": null,
                    "description": "The Counterparty protocol native currency",
                    "locked": true,
                    "issuer": null
                },
                "quantity_normalized": "0.50000000"
            },
            {
                "block_index": 310499,
                "address": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "asset": "XCP",
                "quantity": 50000000,
                "action": "fairminter fee",
                "event": "a34d2b430b05ce71e9b09125d92be01fe666327252cbe54916e3a07db67b93ce",
                "tx_index": 500,
                "utxo": null,
                "utxo_address": null,
                "confirmed": true,
                "block_time": 310499000,
                "asset_info": {
                    "divisible": true,
                    "asset_longname": null,
                    "description": "The Counterparty protocol native currency",
                    "locked": true,
                    "issuer": null
                },
                "quantity_normalized": "0.50000000"
            },
            {
                "block_index": 310498,
                "address": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "asset": "XCP",
                "quantity": 25000000,
                "action": "issuance fee",
                "event": "0abfce2662c05852fd8b181a60900678643cedad47b23a853b8c4eda82cb2cbf",
                "tx_index": 499,
                "utxo": null,
                "utxo_address": null,
                "confirmed": true,
                "block_time": 310498000,
                "asset_info": {
                    "divisible": true,
                    "asset_longname": null,
                    "description": "The Counterparty protocol native currency",
                    "locked": true,
                    "issuer": null
                },
                "quantity_normalized": "0.25000000"
            },
            {
                "block_index": 310497,
                "address": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "asset": "XCP",
                "quantity": 50000000,
                "action": "issuance fee",
                "event": "076ae3d8eeb7fb40d2ae27692340157c746d9832806766b0dac5adb1526dc78f",
                "tx_index": 498,
                "utxo": null,
                "utxo_address": null,
                "confirmed": true,
                "block_time": 310497000,
                "asset_info": {
                    "divisible": true,
                    "asset_longname": null,
                    "description": "The Counterparty protocol native currency",
                    "locked": true,
                    "issuer": null
                },
                "quantity_normalized": "0.50000000"
            },
            {
                "block_index": 310491,
                "address": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "asset": "XCP",
                "quantity": 100000000,
                "action": "open order",
                "event": "74db175c4669a3d3a59e3fcddce9e97fcd7d12c35b58ef31845a1b20a1739498",
                "tx_index": 492,
                "utxo": null,
                "utxo_address": null,
                "confirmed": true,
                "block_time": 310491000,
                "asset_info": {
                    "divisible": true,
                    "asset_longname": null,
                    "description": "The Counterparty protocol native currency",
                    "locked": true,
                    "issuer": null
                },
                "quantity_normalized": "1.00000000"
            },
            {
                "block_index": 310481,
                "address": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "asset": "XCP",
                "quantity": 100000000,
                "action": "send",
                "event": "b00bdf03402d81a2cbdbeac4b0df90cff5ab6bf9688f653383d49fe42b8422a5",
                "tx_index": 482,
                "utxo": null,
                "utxo_address": null,
                "confirmed": true,
                "block_time": 310481000,
                "asset_info": {
                    "divisible": true,
                    "asset_longname": null,
                    "description": "The Counterparty protocol native currency",
                    "locked": true,
                    "issuer": null
                },
                "quantity_normalized": "1.00000000"
            },
            {
                "block_index": 310110,
                "address": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "asset": "DIVISIBLE",
                "quantity": 100000000,
                "action": "send",
                "event": "f6a0f819e899b407cbfa07b4eff3d58902af3899abfbaa47d5f31d5b398e76e7",
                "tx_index": 111,
                "utxo": null,
                "utxo_address": null,
                "confirmed": true,
                "block_time": 310110000,
                "asset_info": {
                    "asset_longname": null,
                    "description": "Divisible asset",
                    "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                    "divisible": true,
                    "locked": false
                },
                "quantity_normalized": "1.00000000"
            },
            {
                "block_index": 310019,
                "address": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "asset": "XCP",
                "quantity": 9,
                "action": "bet",
                "event": "2a2169991597036b6dad687ea1feffd55465a204466f40c35cbba811cb3109b1",
                "tx_index": 20,
                "utxo": null,
                "utxo_address": null,
                "confirmed": true,
                "block_time": 310019000,
                "asset_info": {
                    "divisible": true,
                    "asset_longname": null,
                    "description": "The Counterparty protocol native currency",
                    "locked": true,
                    "issuer": null
                },
                "quantity_normalized": "0.00000009"
            },
            {
                "block_index": 310016,
                "address": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "asset": "XCP",
                "quantity": 50000000,
                "action": "issuance fee",
                "event": "bd4e9cbbe69c2db893cd32182a2d315c89c45ba4e31aa5775d1fe42d841cea39",
                "tx_index": 17,
                "utxo": null,
                "utxo_address": null,
                "confirmed": true,
                "block_time": 310016000,
                "asset_info": {
                    "divisible": true,
                    "asset_longname": null,
                    "description": "The Counterparty protocol native currency",
                    "locked": true,
                    "issuer": null
                },
                "quantity_normalized": "0.50000000"
            },
            {
                "block_index": 310015,
                "address": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "asset": "NODIVISIBLE",
                "quantity": 10,
                "action": "send",
                "event": "e3b6667b7baa515048a7fcf2be7818e3e7622371236b78e19b4b08e2d7e7818c",
                "tx_index": 16,
                "utxo": null,
                "utxo_address": null,
                "confirmed": true,
                "block_time": 310015000,
                "asset_info": {
                    "asset_longname": null,
                    "description": "No divisible asset",
                    "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                    "divisible": false,
                    "locked": false
                },
                "quantity_normalized": "10"
            },
            {
                "block_index": 310014,
                "address": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "asset": "NODIVISIBLE",
                "quantity": 5,
                "action": "send",
                "event": "1facb0072f16f6bdca64ea859c82b850f58f0ec7ff410d901679772a4727515a",
                "tx_index": 15,
                "utxo": null,
                "utxo_address": null,
                "confirmed": true,
                "block_time": 310014000,
                "asset_info": {
                    "asset_longname": null,
                    "description": "No divisible asset",
                    "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                    "divisible": false,
                    "locked": false
                },
                "quantity_normalized": "5"
            },
            {
                "block_index": 310013,
                "address": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "asset": "DIVISIBLE",
                "quantity": 1000000000,
                "action": "send",
                "event": "0cfeeb559ed794d067557df0376a6c213b48b174b80cdb2c3c6d365cf538e132",
                "tx_index": 14,
                "utxo": null,
                "utxo_address": null,
                "confirmed": true,
                "block_time": 310013000,
                "asset_info": {
                    "asset_longname": null,
                    "description": "Divisible asset",
                    "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                    "divisible": true,
                    "locked": false
                },
                "quantity_normalized": "10.00000000"
            },
            {
                "block_index": 310012,
                "address": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "asset": "XCP",
                "quantity": 300000000,
                "action": "send",
                "event": "698e97e507da8623cf38ab42701853443c8f7fe0d93b4674aabb42f9800ee9d6",
                "tx_index": 13,
                "utxo": null,
                "utxo_address": null,
                "confirmed": true,
                "block_time": 310012000,
                "asset_info": {
                    "divisible": true,
                    "asset_longname": null,
                    "description": "The Counterparty protocol native currency",
                    "locked": true,
                    "issuer": null
                },
                "quantity_normalized": "3.00000000"
            },
            {
                "block_index": 310010,
                "address": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "asset": "XCP",
                "quantity": 100000000,
                "action": "open order",
                "event": "1899b2e6ec36ba4bc9d035e6640b0a62b08c3a147c77c89183a77d9ed9081b3a",
                "tx_index": 11,
                "utxo": null,
                "utxo_address": null,
                "confirmed": true,
                "block_time": 310010000,
                "asset_info": {
                    "divisible": true,
                    "asset_longname": null,
                    "description": "The Counterparty protocol native currency",
                    "locked": true,
                    "issuer": null
                },
                "quantity_normalized": "1.00000000"
            },
            {
                "block_index": 310009,
                "address": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "asset": "XCP",
                "quantity": 100000000,
                "action": "open order",
                "event": "21460d5c07284f9be9baf824927d0d4e4eb790e297f3162305841607b672349b",
                "tx_index": 10,
                "utxo": null,
                "utxo_address": null,
                "confirmed": true,
                "block_time": 310009000,
                "asset_info": {
                    "divisible": true,
                    "asset_longname": null,
                    "description": "The Counterparty protocol native currency",
                    "locked": true,
                    "issuer": null
                },
                "quantity_normalized": "1.00000000"
            },
            {
                "block_index": 310008,
                "address": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "asset": "XCP",
                "quantity": 100000000,
                "action": "send",
                "event": "4fd55abadfdbe77c3bda2431749cca934a29994a179620a62c1b57f28bd62a43",
                "tx_index": 9,
                "utxo": null,
                "utxo_address": null,
                "confirmed": true,
                "block_time": 310008000,
                "asset_info": {
                    "divisible": true,
                    "asset_longname": null,
                    "description": "The Counterparty protocol native currency",
                    "locked": true,
                    "issuer": null
                },
                "quantity_normalized": "1.00000000"
            },
            {
                "block_index": 310007,
                "address": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "asset": "DIVISIBLE",
                "quantity": 100000000,
                "action": "send",
                "event": "6e91ae23de2035e3e28c3322712212333592a1f666bcff9dd91aec45d5ea2753",
                "tx_index": 8,
                "utxo": null,
                "utxo_address": null,
                "confirmed": true,
                "block_time": 310007000,
                "asset_info": {
                    "asset_longname": null,
                    "description": "Divisible asset",
                    "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                    "divisible": true,
                    "locked": false
                },
                "quantity_normalized": "1.00000000"
            },
            {
                "block_index": 310006,
                "address": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "asset": "XCP",
                "quantity": 100000000,
                "action": "open order",
                "event": "4f0433ba841038e2e16328445930dd7bca35309b14b0da4451c8f94c631368b8",
                "tx_index": 7,
                "utxo": null,
                "utxo_address": null,
                "confirmed": true,
                "block_time": 310006000,
                "asset_info": {
                    "divisible": true,
                    "asset_longname": null,
                    "description": "The Counterparty protocol native currency",
                    "locked": true,
                    "issuer": null
                },
                "quantity_normalized": "1.00000000"
            },
            {
                "block_index": 310004,
                "address": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "asset": "XCP",
                "quantity": 50000000,
                "action": "issuance fee",
                "event": "90b5734be98b0f2a0bd4b6a269c8db3368e2e387bb890ade239951d05423b4da",
                "tx_index": 5,
                "utxo": null,
                "utxo_address": null,
                "confirmed": true,
                "block_time": 310004000,
                "asset_info": {
                    "divisible": true,
                    "asset_longname": null,
                    "description": "The Counterparty protocol native currency",
                    "locked": true,
                    "issuer": null
                },
                "quantity_normalized": "0.50000000"
            },
            {
                "block_index": 310003,
                "address": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "asset": "XCP",
                "quantity": 50000000,
                "action": "issuance fee",
                "event": "c26f3a0c4e57e41919ff27aae95a9a9d4d65d34c6da6f1893884a17c8d407140",
                "tx_index": 4,
                "utxo": null,
                "utxo_address": null,
                "confirmed": true,
                "block_time": 310003000,
                "asset_info": {
                    "divisible": true,
                    "asset_longname": null,
                    "description": "The Counterparty protocol native currency",
                    "locked": true,
                    "issuer": null
                },
                "quantity_normalized": "0.50000000"
            },
            {
                "block_index": 310002,
                "address": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "asset": "XCP",
                "quantity": 50000000,
                "action": "issuance fee",
                "event": "7b1bf5144346279271b1ff78664f118224fe27fd8679d6c1519345f9c6c54584",
                "tx_index": 3,
                "utxo": null,
                "utxo_address": null,
                "confirmed": true,
                "block_time": 310002000,
                "asset_info": {
                    "divisible": true,
                    "asset_longname": null,
                    "description": "The Counterparty protocol native currency",
                    "locked": true,
                    "issuer": null
                },
                "quantity_normalized": "0.50000000"
            },
            {
                "block_index": 310001,
                "address": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "asset": "XCP",
                "quantity": 50000000,
                "action": "issuance fee",
                "event": "1fc2e5a57f584b2f2edd05676e75c33d03eed1d3098cc0550ea33474e3ec9db1",
                "tx_index": 2,
                "utxo": null,
                "utxo_address": null,
                "confirmed": true,
                "block_time": 310001000,
                "asset_info": {
                    "divisible": true,
                    "asset_longname": null,
                    "description": "The Counterparty protocol native currency",
                    "locked": true,
                    "issuer": null
                },
                "quantity_normalized": "0.50000000"
            }
        ],
        "next_cursor": null,
        "result_count": 28
    },
    "http://localhost:10009/v2/addresses/mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc/bets?verbose=true": {
        "result": [
            {
                "tx_index": 102,
                "tx_hash": "db4ea092bea6036e3d1e5f6ec863db9b900252b4f4d6d9faa6165323f433c51e",
                "block_index": 310101,
                "source": "mtQheFaSfWELRB2MyMBaiWjdDm6ux9Ezns",
                "feed_address": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "bet_type": 3,
                "deadline": 1388000200,
                "wager_quantity": 10,
                "wager_remaining": 10,
                "counterwager_quantity": 10,
                "counterwager_remaining": 10,
                "target_value": 0.0,
                "leverage": 5040,
                "expiration": 1000,
                "expire_index": 311101,
                "fee_fraction_int": 5000000,
                "status": "open",
                "confirmed": true,
                "block_time": 310101000,
                "fee_fraction_int_normalized": "0.05000000"
            }
        ],
        "next_cursor": null,
        "result_count": 1
    },
    "http://localhost:10009/v2/addresses/mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc/broadcasts?verbose=true": {
        "result": [
            {
                "tx_index": 103,
                "tx_hash": "16462eac6c795cea6e5985ee063867d8c61ae24373df02048186d28118d25bae",
                "block_index": 310102,
                "source": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "timestamp": 1388000002,
                "value": 1.0,
                "fee_fraction_int": 5000000,
                "text": "Unit Test",
                "locked": false,
                "status": "valid",
                "confirmed": true,
                "block_time": 310102000,
                "fee_fraction_int_normalized": "0.05000000"
            },
            {
                "tx_index": 18,
                "tx_hash": "d14388b74b63d93e4477b1fe8426028bb8ab20656703e3ce8deeb23c2fe0b8af",
                "block_index": 310017,
                "source": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "timestamp": 1388000000,
                "value": 1.0,
                "fee_fraction_int": 5000000,
                "text": "Unit Test",
                "locked": false,
                "status": "valid",
                "confirmed": true,
                "block_time": 310017000,
                "fee_fraction_int_normalized": "0.05000000"
            }
        ],
        "next_cursor": null,
        "result_count": 2
    },
    "http://localhost:10009/v2/addresses/mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc/burns?verbose=true": {
        "result": [
            {
                "tx_index": 1,
                "tx_hash": "6dc5b0a33d4d4297e0f5cc2d23ae307951d32aab2d86b7fa147b385219f3a597",
                "block_index": 310000,
                "source": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "burned": 62000000,
                "earned": 93000000000,
                "status": "valid",
                "confirmed": true,
                "block_time": 310000000,
                "burned_normalized": "0.62000000",
                "earned_normalized": "930.00000000"
            }
        ],
        "next_cursor": null,
        "result_count": 1
    },
    "http://localhost:10009/v2/addresses/mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc/sends?verbose=true": {
        "result": [
            {
                "tx_index": 509,
                "tx_hash": "ff23dc6911d401e9868b8ac747d31febc2078f004eff7b56a8895c107ed8a73e",
                "block_index": 310508,
                "source": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "destination": "4f0433ba841038e2e16328445930dd7bca35309b14b0da4451c8f94c631368b8:1",
                "asset": "DIVISIBLE",
                "quantity": 1,
                "status": "valid",
                "msg_index": 0,
                "memo": null,
                "fee_paid": 10,
                "confirmed": true,
                "block_time": 310508000,
                "asset_info": {
                    "asset_longname": null,
                    "description": "Divisible asset",
                    "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                    "divisible": true,
                    "locked": false
                },
                "quantity_normalized": "0.00000001",
                "fee_paid_normalized": "0.00000010"
            },
            {
                "tx_index": 508,
                "tx_hash": "9d2243c84df0132061884dfce73f3b7c5262a1cde0d029de472a079f3a1c4883",
                "block_index": 310507,
                "source": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "destination": "4f0433ba841038e2e16328445930dd7bca35309b14b0da4451c8f94c631368b8:1",
                "asset": "XCP",
                "quantity": 100,
                "status": "valid",
                "msg_index": 0,
                "memo": null,
                "fee_paid": 10,
                "confirmed": true,
                "block_time": 310507000,
                "asset_info": {
                    "divisible": true,
                    "asset_longname": null,
                    "description": "The Counterparty protocol native currency",
                    "locked": true,
                    "issuer": null
                },
                "quantity_normalized": "0.00000100",
                "fee_paid_normalized": "0.00000010"
            },
            {
                "tx_index": 482,
                "tx_hash": "b00bdf03402d81a2cbdbeac4b0df90cff5ab6bf9688f653383d49fe42b8422a5",
                "block_index": 310481,
                "source": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "destination": "mtQheFaSfWELRB2MyMBaiWjdDm6ux9Ezns",
                "asset": "XCP",
                "quantity": 100000000,
                "status": "valid",
                "msg_index": 0,
                "memo": "68656c6c6f",
                "fee_paid": 0,
                "confirmed": true,
                "block_time": 310481000,
                "asset_info": {
                    "divisible": true,
                    "asset_longname": null,
                    "description": "The Counterparty protocol native currency",
                    "locked": true,
                    "issuer": null
                },
                "quantity_normalized": "1.00000000",
                "fee_paid_normalized": "0.00000000"
            },
            {
                "tx_index": 111,
                "tx_hash": "f6a0f819e899b407cbfa07b4eff3d58902af3899abfbaa47d5f31d5b398e76e7",
                "block_index": 310110,
                "source": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "destination": "2MyJHMUenMWonC35Yi6PHC7i2tkS7PuomCy",
                "asset": "DIVISIBLE",
                "quantity": 100000000,
                "status": "valid",
                "msg_index": 0,
                "memo": null,
                "fee_paid": 0,
                "confirmed": true,
                "block_time": 310110000,
                "asset_info": {
                    "asset_longname": null,
                    "description": "Divisible asset",
                    "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                    "divisible": true,
                    "locked": false
                },
                "quantity_normalized": "1.00000000",
                "fee_paid_normalized": "0.00000000"
            },
            {
                "tx_index": 16,
                "tx_hash": "e3b6667b7baa515048a7fcf2be7818e3e7622371236b78e19b4b08e2d7e7818c",
                "block_index": 310015,
                "source": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "destination": "1_mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc_mtQheFaSfWELRB2MyMBaiWjdDm6ux9Ezns_2",
                "asset": "NODIVISIBLE",
                "quantity": 10,
                "status": "valid",
                "msg_index": 0,
                "memo": null,
                "fee_paid": 0,
                "confirmed": true,
                "block_time": 310015000,
                "asset_info": {
                    "asset_longname": null,
                    "description": "No divisible asset",
                    "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                    "divisible": false,
                    "locked": false
                },
                "quantity_normalized": "10",
                "fee_paid_normalized": "0.00000000"
            },
            {
                "tx_index": 15,
                "tx_hash": "1facb0072f16f6bdca64ea859c82b850f58f0ec7ff410d901679772a4727515a",
                "block_index": 310014,
                "source": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "destination": "mtQheFaSfWELRB2MyMBaiWjdDm6ux9Ezns",
                "asset": "NODIVISIBLE",
                "quantity": 5,
                "status": "valid",
                "msg_index": 0,
                "memo": null,
                "fee_paid": 0,
                "confirmed": true,
                "block_time": 310014000,
                "asset_info": {
                    "asset_longname": null,
                    "description": "No divisible asset",
                    "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                    "divisible": false,
                    "locked": false
                },
                "quantity_normalized": "5",
                "fee_paid_normalized": "0.00000000"
            },
            {
                "tx_index": 14,
                "tx_hash": "0cfeeb559ed794d067557df0376a6c213b48b174b80cdb2c3c6d365cf538e132",
                "block_index": 310013,
                "source": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "destination": "1_mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc_mtQheFaSfWELRB2MyMBaiWjdDm6ux9Ezns_2",
                "asset": "DIVISIBLE",
                "quantity": 1000000000,
                "status": "valid",
                "msg_index": 0,
                "memo": null,
                "fee_paid": 0,
                "confirmed": true,
                "block_time": 310013000,
                "asset_info": {
                    "asset_longname": null,
                    "description": "Divisible asset",
                    "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                    "divisible": true,
                    "locked": false
                },
                "quantity_normalized": "10.00000000",
                "fee_paid_normalized": "0.00000000"
            },
            {
                "tx_index": 13,
                "tx_hash": "698e97e507da8623cf38ab42701853443c8f7fe0d93b4674aabb42f9800ee9d6",
                "block_index": 310012,
                "source": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "destination": "1_mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc_mtQheFaSfWELRB2MyMBaiWjdDm6ux9Ezns_2",
                "asset": "XCP",
                "quantity": 300000000,
                "status": "valid",
                "msg_index": 0,
                "memo": null,
                "fee_paid": 0,
                "confirmed": true,
                "block_time": 310012000,
                "asset_info": {
                    "divisible": true,
                    "asset_longname": null,
                    "description": "The Counterparty protocol native currency",
                    "locked": true,
                    "issuer": null
                },
                "quantity_normalized": "3.00000000",
                "fee_paid_normalized": "0.00000000"
            },
            {
                "tx_index": 9,
                "tx_hash": "4fd55abadfdbe77c3bda2431749cca934a29994a179620a62c1b57f28bd62a43",
                "block_index": 310008,
                "source": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "destination": "mtQheFaSfWELRB2MyMBaiWjdDm6ux9Ezns",
                "asset": "XCP",
                "quantity": 100000000,
                "status": "valid",
                "msg_index": 0,
                "memo": null,
                "fee_paid": 0,
                "confirmed": true,
                "block_time": 310008000,
                "asset_info": {
                    "divisible": true,
                    "asset_longname": null,
                    "description": "The Counterparty protocol native currency",
                    "locked": true,
                    "issuer": null
                },
                "quantity_normalized": "1.00000000",
                "fee_paid_normalized": "0.00000000"
            },
            {
                "tx_index": 8,
                "tx_hash": "6e91ae23de2035e3e28c3322712212333592a1f666bcff9dd91aec45d5ea2753",
                "block_index": 310007,
                "source": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "destination": "mtQheFaSfWELRB2MyMBaiWjdDm6ux9Ezns",
                "asset": "DIVISIBLE",
                "quantity": 100000000,
                "status": "valid",
                "msg_index": 0,
                "memo": null,
                "fee_paid": 0,
                "confirmed": true,
                "block_time": 310007000,
                "asset_info": {
                    "asset_longname": null,
                    "description": "Divisible asset",
                    "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                    "divisible": true,
                    "locked": false
                },
                "quantity_normalized": "1.00000000",
                "fee_paid_normalized": "0.00000000"
            }
        ],
        "next_cursor": null,
        "result_count": 10
    },
    "http://localhost:10009/v2/addresses/mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc/receives?verbose=true": {
        "result": [
            {
                "tx_index": 483,
                "tx_hash": "c8716524f33646b9af94d6f5e52494ff3b34466497094b1db2ab920e4f79bc34",
                "block_index": 310482,
                "source": "mtQheFaSfWELRB2MyMBaiWjdDm6ux9Ezns",
                "destination": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "asset": "XCP",
                "quantity": 100000000,
                "status": "valid",
                "msg_index": 0,
                "memo": "fade0001",
                "fee_paid": 0,
                "confirmed": true,
                "block_time": 310482000,
                "asset_info": {
                    "divisible": true,
                    "asset_longname": null,
                    "description": "The Counterparty protocol native currency",
                    "locked": true,
                    "issuer": null
                },
                "quantity_normalized": "1.00000000",
                "fee_paid_normalized": "0.00000000"
            }
        ],
        "next_cursor": null,
        "result_count": 1
    },
    "http://localhost:10009/v2/addresses/mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc/sends/NODIVISIBLE?verbose=true": {
        "result": [
            {
                "tx_index": 16,
                "tx_hash": "e3b6667b7baa515048a7fcf2be7818e3e7622371236b78e19b4b08e2d7e7818c",
                "block_index": 310015,
                "source": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "destination": "1_mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc_mtQheFaSfWELRB2MyMBaiWjdDm6ux9Ezns_2",
                "asset": "NODIVISIBLE",
                "quantity": 10,
                "status": "valid",
                "msg_index": 0,
                "memo": null,
                "fee_paid": 0,
                "confirmed": true,
                "block_time": 310015000,
                "asset_info": {
                    "asset_longname": null,
                    "description": "No divisible asset",
                    "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                    "divisible": false,
                    "locked": false
                },
                "quantity_normalized": "10",
                "fee_paid_normalized": "0.00000000"
            },
            {
                "tx_index": 15,
                "tx_hash": "1facb0072f16f6bdca64ea859c82b850f58f0ec7ff410d901679772a4727515a",
                "block_index": 310014,
                "source": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "destination": "mtQheFaSfWELRB2MyMBaiWjdDm6ux9Ezns",
                "asset": "NODIVISIBLE",
                "quantity": 5,
                "status": "valid",
                "msg_index": 0,
                "memo": null,
                "fee_paid": 0,
                "confirmed": true,
                "block_time": 310014000,
                "asset_info": {
                    "asset_longname": null,
                    "description": "No divisible asset",
                    "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                    "divisible": false,
                    "locked": false
                },
                "quantity_normalized": "5",
                "fee_paid_normalized": "0.00000000"
            }
        ],
        "next_cursor": null,
        "result_count": 2
    },
    "http://localhost:10009/v2/addresses/mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc/receives/NODIVISIBLE?verbose=true": {
        "result": [],
        "next_cursor": null,
        "result_count": 0
    },
    "http://localhost:10009/v2/addresses/mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc/dispensers?verbose=true": {
        "result": [],
        "next_cursor": null,
        "result_count": 0
    },
    "http://localhost:10009/v2/addresses/munimLLHjPhGeSU5rYB2HN79LJa8bRZr5b/dispensers/XCP?verbose=true": {
        "result": {
            "tx_index": 108,
            "tx_hash": "9834219d2825b4d85ca7ee0d75a5372d9d42ce75eb9144951fca1af5a25915ec",
            "block_index": 310107,
            "source": "munimLLHjPhGeSU5rYB2HN79LJa8bRZr5b",
            "asset": "XCP",
            "give_quantity": 100,
            "escrow_quantity": 100,
            "satoshirate": 100,
            "status": 0,
            "give_remaining": 100,
            "oracle_address": null,
            "last_status_tx_hash": null,
            "origin": "munimLLHjPhGeSU5rYB2HN79LJa8bRZr5b",
            "dispense_count": 0,
            "last_status_tx_source": null,
            "close_block_index": null,
            "confirmed": true,
            "fiat_price": null,
            "oracle_price": null,
            "fiat_unit": null,
            "oracle_price_last_updated": null,
            "satoshi_price": 100,
            "block_time": 310107000,
            "asset_info": {
                "divisible": true,
                "asset_longname": null,
                "description": "The Counterparty protocol native currency",
                "locked": true,
                "issuer": null
            },
            "give_quantity_normalized": "0.00000100",
            "give_remaining_normalized": "0.00000100",
            "escrow_quantity_normalized": "0.00000100",
            "satoshirate_normalized": "0.00000100",
            "satoshi_price_normalized": "0.00000100"
        }
    },
    "http://localhost:10009/v2/addresses/mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc/dispenses/sends?verbose=true": {
        "result": [],
        "next_cursor": null,
        "result_count": 0
    },
    "http://localhost:10009/v2/addresses/mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc/dispenses/receives?verbose=true": {
        "result": [],
        "next_cursor": null,
        "result_count": 0
    },
    "http://localhost:10009/v2/addresses/mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc/dispenses/sends/NODIVISIBLE?verbose=true": {
        "result": [],
        "next_cursor": null,
        "result_count": 0
    },
    "http://localhost:10009/v2/addresses/mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc/dispenses/receives/NODIVISIBLE?verbose=true": {
        "result": [],
        "next_cursor": null,
        "result_count": 0
    },
    "http://localhost:10009/v2/addresses/mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc/sweeps?verbose=true": {
        "result": [],
        "next_cursor": null,
        "result_count": 0
    },
    "http://localhost:10009/v2/addresses/mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc/issuances?verbose=true": {
        "result": [
            {
                "tx_index": 504,
                "tx_hash": "c3d10301a50c49b3c9515f88847b92ce969729c194c064f411d610bc3b3704e7",
                "msg_index": 0,
                "block_index": 310503,
                "asset": "QAIDFAIRMIN",
                "quantity": 20,
                "divisible": true,
                "source": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "transfer": false,
                "callable": false,
                "call_date": 0,
                "call_price": 0.0,
                "description": "",
                "fee_paid": 50000000,
                "status": "valid",
                "asset_longname": "",
                "locked": false,
                "reset": false,
                "description_locked": false,
                "fair_minting": true,
                "asset_events": "open_fairminter",
                "confirmed": true,
                "block_time": 310503000,
                "quantity_normalized": "0.00000020",
                "fee_paid_normalized": "0.50000000"
            },
            {
                "tx_index": 503,
                "tx_hash": "9830e28496bb94f7e9f829abd26fd2cdce24ccb637e55488537a7080979ad9c1",
                "msg_index": 0,
                "block_index": 310502,
                "asset": "RAIDFAIRMIN",
                "quantity": 20,
                "divisible": true,
                "source": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "transfer": false,
                "callable": false,
                "call_date": 0,
                "call_price": 0.0,
                "description": "",
                "fee_paid": 50000000,
                "status": "valid",
                "asset_longname": "",
                "locked": false,
                "reset": false,
                "description_locked": false,
                "fair_minting": true,
                "asset_events": "open_fairminter",
                "confirmed": true,
                "block_time": 310502000,
                "quantity_normalized": "0.00000020",
                "fee_paid_normalized": "0.50000000"
            },
            {
                "tx_index": 502,
                "tx_hash": "d42849c71a32e388606982d3384ec8ae12e5c0ba2f742cb4ddf0649fb66e1f67",
                "msg_index": 0,
                "block_index": 310501,
                "asset": "FREEFAIRMIN",
                "quantity": 10,
                "divisible": true,
                "source": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "transfer": false,
                "callable": false,
                "call_date": 0,
                "call_price": 0.0,
                "description": "",
                "fee_paid": 0,
                "status": "valid",
                "asset_longname": "",
                "locked": false,
                "reset": false,
                "description_locked": false,
                "fair_minting": true,
                "asset_events": "fairmint",
                "confirmed": true,
                "block_time": 310501000,
                "quantity_normalized": "0.00000010",
                "fee_paid_normalized": "0.00000000"
            },
            {
                "tx_index": 501,
                "tx_hash": "13e642d78db80af715cdce12a9fca81965752bbfb59549341fa4760da3d32afe",
                "msg_index": 0,
                "block_index": 310500,
                "asset": "PAIDFAIRMIN",
                "quantity": 0,
                "divisible": true,
                "source": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "transfer": false,
                "callable": false,
                "call_date": 0,
                "call_price": 0.0,
                "description": "",
                "fee_paid": 50000000,
                "status": "valid",
                "asset_longname": "",
                "locked": false,
                "reset": false,
                "description_locked": false,
                "fair_minting": true,
                "asset_events": "open_fairminter",
                "confirmed": true,
                "block_time": 310500000,
                "quantity_normalized": "0.00000000",
                "fee_paid_normalized": "0.50000000"
            },
            {
                "tx_index": 500,
                "tx_hash": "a34d2b430b05ce71e9b09125d92be01fe666327252cbe54916e3a07db67b93ce",
                "msg_index": 0,
                "block_index": 310499,
                "asset": "FREEFAIRMIN",
                "quantity": 0,
                "divisible": true,
                "source": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "transfer": false,
                "callable": false,
                "call_date": 0,
                "call_price": 0.0,
                "description": "",
                "fee_paid": 50000000,
                "status": "valid",
                "asset_longname": "",
                "locked": false,
                "reset": false,
                "description_locked": false,
                "fair_minting": true,
                "asset_events": "open_fairminter",
                "confirmed": true,
                "block_time": 310499000,
                "quantity_normalized": "0.00000000",
                "fee_paid_normalized": "0.50000000"
            },
            {
                "tx_index": 499,
                "tx_hash": "0abfce2662c05852fd8b181a60900678643cedad47b23a853b8c4eda82cb2cbf",
                "msg_index": 0,
                "block_index": 310498,
                "asset": "A95428956661682277",
                "quantity": 100000000,
                "divisible": true,
                "source": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "transfer": false,
                "callable": false,
                "call_date": 0,
                "call_price": 0.0,
                "description": "Child of parent",
                "fee_paid": 25000000,
                "status": "valid",
                "asset_longname": "PARENT.already.issued",
                "locked": false,
                "reset": false,
                "description_locked": false,
                "fair_minting": false,
                "asset_events": "creation",
                "confirmed": true,
                "block_time": 310498000,
                "quantity_normalized": "1.00000000",
                "fee_paid_normalized": "0.25000000"
            },
            {
                "tx_index": 498,
                "tx_hash": "076ae3d8eeb7fb40d2ae27692340157c746d9832806766b0dac5adb1526dc78f",
                "msg_index": 0,
                "block_index": 310497,
                "asset": "PARENT",
                "quantity": 100000000,
                "divisible": true,
                "source": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "transfer": false,
                "callable": false,
                "call_date": 0,
                "call_price": 0.0,
                "description": "Parent asset",
                "fee_paid": 50000000,
                "status": "valid",
                "asset_longname": null,
                "locked": false,
                "reset": false,
                "description_locked": false,
                "fair_minting": false,
                "asset_events": "creation",
                "confirmed": true,
                "block_time": 310497000,
                "quantity_normalized": "1.00000000",
                "fee_paid_normalized": "0.50000000"
            },
            {
                "tx_index": 17,
                "tx_hash": "bd4e9cbbe69c2db893cd32182a2d315c89c45ba4e31aa5775d1fe42d841cea39",
                "msg_index": 0,
                "block_index": 310016,
                "asset": "MAXI",
                "quantity": 9223372036854775807,
                "divisible": true,
                "source": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "transfer": false,
                "callable": false,
                "call_date": 0,
                "call_price": 0.0,
                "description": "Maximum quantity",
                "fee_paid": 50000000,
                "status": "valid",
                "asset_longname": null,
                "locked": false,
                "reset": false,
                "description_locked": false,
                "fair_minting": false,
                "asset_events": "creation",
                "confirmed": true,
                "block_time": 310016000,
                "quantity_normalized": "92233720000.00000000",
                "fee_paid_normalized": "0.50000000"
            },
            {
                "tx_index": 6,
                "tx_hash": "344dcc8909ca3a137630726d0071dfd2df4f7c855bac150c7d3a8367835c90bc",
                "msg_index": 0,
                "block_index": 310005,
                "asset": "LOCKED",
                "quantity": 0,
                "divisible": true,
                "source": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "transfer": false,
                "callable": false,
                "call_date": 0,
                "call_price": 0.0,
                "description": "Locked asset",
                "fee_paid": 0,
                "status": "valid",
                "asset_longname": null,
                "locked": true,
                "reset": false,
                "description_locked": false,
                "fair_minting": false,
                "asset_events": "lock_quantity reissuance",
                "confirmed": true,
                "block_time": 310005000,
                "quantity_normalized": "0.00000000",
                "fee_paid_normalized": "0.00000000"
            },
            {
                "tx_index": 5,
                "tx_hash": "90b5734be98b0f2a0bd4b6a269c8db3368e2e387bb890ade239951d05423b4da",
                "msg_index": 0,
                "block_index": 310004,
                "asset": "LOCKED",
                "quantity": 1000,
                "divisible": true,
                "source": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "transfer": false,
                "callable": false,
                "call_date": 0,
                "call_price": 0.0,
                "description": "Locked asset",
                "fee_paid": 50000000,
                "status": "valid",
                "asset_longname": null,
                "locked": false,
                "reset": false,
                "description_locked": false,
                "fair_minting": false,
                "asset_events": "creation",
                "confirmed": true,
                "block_time": 310004000,
                "quantity_normalized": "0.00001000",
                "fee_paid_normalized": "0.50000000"
            },
            {
                "tx_index": 4,
                "tx_hash": "c26f3a0c4e57e41919ff27aae95a9a9d4d65d34c6da6f1893884a17c8d407140",
                "msg_index": 0,
                "block_index": 310003,
                "asset": "CALLABLE",
                "quantity": 1000,
                "divisible": true,
                "source": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "transfer": false,
                "callable": false,
                "call_date": 0,
                "call_price": 0.0,
                "description": "Callable asset",
                "fee_paid": 50000000,
                "status": "valid",
                "asset_longname": null,
                "locked": false,
                "reset": false,
                "description_locked": false,
                "fair_minting": false,
                "asset_events": "creation",
                "confirmed": true,
                "block_time": 310003000,
                "quantity_normalized": "0.00001000",
                "fee_paid_normalized": "0.50000000"
            },
            {
                "tx_index": 3,
                "tx_hash": "7b1bf5144346279271b1ff78664f118224fe27fd8679d6c1519345f9c6c54584",
                "msg_index": 0,
                "block_index": 310002,
                "asset": "NODIVISIBLE",
                "quantity": 1000,
                "divisible": false,
                "source": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "transfer": false,
                "callable": false,
                "call_date": 0,
                "call_price": 0.0,
                "description": "No divisible asset",
                "fee_paid": 50000000,
                "status": "valid",
                "asset_longname": null,
                "locked": false,
                "reset": false,
                "description_locked": false,
                "fair_minting": false,
                "asset_events": "creation",
                "confirmed": true,
                "block_time": 310002000,
                "quantity_normalized": "1000",
                "fee_paid_normalized": "0.50000000"
            },
            {
                "tx_index": 2,
                "tx_hash": "1fc2e5a57f584b2f2edd05676e75c33d03eed1d3098cc0550ea33474e3ec9db1",
                "msg_index": 0,
                "block_index": 310001,
                "asset": "DIVISIBLE",
                "quantity": 100000000000,
                "divisible": true,
                "source": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "transfer": false,
                "callable": false,
                "call_date": 0,
                "call_price": 0.0,
                "description": "Divisible asset",
                "fee_paid": 50000000,
                "status": "valid",
                "asset_longname": null,
                "locked": false,
                "reset": false,
                "description_locked": false,
                "fair_minting": false,
                "asset_events": "creation",
                "confirmed": true,
                "block_time": 310001000,
                "quantity_normalized": "1000.00000000",
                "fee_paid_normalized": "0.50000000"
            }
        ],
        "next_cursor": null,
        "result_count": 13
    },
    "http://localhost:10009/v2/addresses/mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc/assets?verbose=true": {
        "result": [
            {
                "asset": "QAIDFAIRMIN",
                "asset_id": "2260369790942965",
                "asset_longname": "",
                "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "owner": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "divisible": true,
                "locked": false,
                "supply": 20,
                "description": "",
                "first_issuance_block_index": 310503,
                "last_issuance_block_index": 310503,
                "confirmed": true,
                "first_issuance_block_time": 310503000,
                "last_issuance_block_time": 310503000,
                "supply_normalized": "0.00000020"
            },
            {
                "asset": "RAIDFAIRMIN",
                "asset_id": "2401536886596341",
                "asset_longname": "",
                "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "owner": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "divisible": true,
                "locked": false,
                "supply": 20,
                "description": "",
                "first_issuance_block_index": 310502,
                "last_issuance_block_index": 310502,
                "confirmed": true,
                "first_issuance_block_time": 310502000,
                "last_issuance_block_time": 310502000,
                "supply_normalized": "0.00000020"
            },
            {
                "asset": "PAIDFAIRMIN",
                "asset_id": "2119202695289589",
                "asset_longname": "",
                "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "owner": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "divisible": true,
                "locked": false,
                "supply": 0,
                "description": "",
                "first_issuance_block_index": 310500,
                "last_issuance_block_index": 310500,
                "confirmed": true,
                "first_issuance_block_time": 310500000,
                "last_issuance_block_time": 310500000,
                "supply_normalized": "0.00000000"
            },
            {
                "asset": "FREEFAIRMIN",
                "asset_id": "799006024850293",
                "asset_longname": "",
                "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "owner": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "divisible": true,
                "locked": false,
                "supply": 10,
                "description": "",
                "first_issuance_block_index": 310499,
                "last_issuance_block_index": 310501,
                "confirmed": true,
                "first_issuance_block_time": 310499000,
                "last_issuance_block_time": 310501000,
                "supply_normalized": "0.00000010"
            },
            {
                "asset": "A95428956661682277",
                "asset_id": "95428956661682277",
                "asset_longname": "PARENT.already.issued",
                "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "owner": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "divisible": true,
                "locked": false,
                "supply": 100000000,
                "description": "Child of parent",
                "first_issuance_block_index": 310498,
                "last_issuance_block_index": 310498,
                "confirmed": true,
                "first_issuance_block_time": 310498000,
                "last_issuance_block_time": 310498000,
                "supply_normalized": "1.00000000"
            },
            {
                "asset": "PARENT",
                "asset_id": "178522493",
                "asset_longname": null,
                "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "owner": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "divisible": true,
                "locked": false,
                "supply": 100000000,
                "description": "Parent asset",
                "first_issuance_block_index": 310497,
                "last_issuance_block_index": 310497,
                "confirmed": true,
                "first_issuance_block_time": 310497000,
                "last_issuance_block_time": 310497000,
                "supply_normalized": "1.00000000"
            },
            {
                "asset": "MAXI",
                "asset_id": "211518",
                "asset_longname": null,
                "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "owner": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "divisible": true,
                "locked": false,
                "supply": 9223372036854775807,
                "description": "Maximum quantity",
                "first_issuance_block_index": 310016,
                "last_issuance_block_index": 310016,
                "confirmed": true,
                "first_issuance_block_time": 310016000,
                "last_issuance_block_time": 310016000,
                "supply_normalized": "92233720000.00000000"
            },
            {
                "asset": "LOCKED",
                "asset_id": "137134819",
                "asset_longname": null,
                "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "owner": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "divisible": true,
                "locked": true,
                "supply": 1000,
                "description": "Locked asset",
                "first_issuance_block_index": 310004,
                "last_issuance_block_index": 310005,
                "confirmed": true,
                "first_issuance_block_time": 310004000,
                "last_issuance_block_time": 310005000,
                "supply_normalized": "0.00001000"
            },
            {
                "asset": "CALLABLE",
                "asset_id": "16199343190",
                "asset_longname": null,
                "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "owner": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "divisible": true,
                "locked": false,
                "supply": 1000,
                "description": "Callable asset",
                "first_issuance_block_index": 310003,
                "last_issuance_block_index": 310003,
                "confirmed": true,
                "first_issuance_block_time": 310003000,
                "last_issuance_block_time": 310003000,
                "supply_normalized": "0.00001000"
            },
            {
                "asset": "NODIVISIBLE",
                "asset_id": "1911882621324134",
                "asset_longname": null,
                "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "owner": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "divisible": false,
                "locked": false,
                "supply": 1000,
                "description": "No divisible asset",
                "first_issuance_block_index": 310002,
                "last_issuance_block_index": 310002,
                "confirmed": true,
                "first_issuance_block_time": 310002000,
                "last_issuance_block_time": 310002000,
                "supply_normalized": "1000"
            },
            {
                "asset": "DIVISIBLE",
                "asset_id": "697326324582",
                "asset_longname": null,
                "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "owner": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "divisible": true,
                "locked": false,
                "supply": 100000000000,
                "description": "Divisible asset",
                "first_issuance_block_index": 310001,
                "last_issuance_block_index": 310001,
                "confirmed": true,
                "first_issuance_block_time": 310001000,
                "last_issuance_block_time": 310001000,
                "supply_normalized": "1000.00000000"
            }
        ],
        "next_cursor": null,
        "result_count": 11
    },
    "http://localhost:10009/v2/addresses/mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc/transactions?verbose=true": {
        "result": [
            {
                "tx_index": 509,
                "tx_hash": "ff23dc6911d401e9868b8ac747d31febc2078f004eff7b56a8895c107ed8a73e",
                "block_index": 310508,
                "block_hash": "40cfaee344032c167d7317bb94d2e514f8dca023302303a908dd994e15d902cf",
                "block_time": 310508000,
                "source": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "destination": null,
                "btc_amount": 0,
                "fee": 10850,
                "data": "646d6e367133645332456e44557833626d795763364434737a4a4e5647746152377a637c346630343333626138343130333865326531363332383434353933306464376263613335333039623134623064613434353163386639346336333133363862383a317c444956495349424c457c31",
                "supported": true,
                "utxos_info": "1c6f52a3ca4d5f1698d2db3f107da787153bf686fc049f2792074916249fc27d:0",
                "confirmed": true,
                "unpacked_data": {
                    "message_type": "unknown",
                    "message_type_id": 1684893238,
                    "message_data": {
                        "error": "Unknown message type"
                    }
                },
                "btc_amount_normalized": "0.00000000"
            },
            {
                "tx_index": 508,
                "tx_hash": "9d2243c84df0132061884dfce73f3b7c5262a1cde0d029de472a079f3a1c4883",
                "block_index": 310507,
                "block_hash": "015b45f96ad6b4bfc950934e9c9d8c29a499b837ea7c4c722ff482d8d9896a93",
                "block_time": 310507000,
                "source": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "destination": null,
                "btc_amount": 0,
                "fee": 10850,
                "data": "646d6e367133645332456e44557833626d795763364434737a4a4e5647746152377a637c346630343333626138343130333865326531363332383434353933306464376263613335333039623134623064613434353163386639346336333133363862383a317c5843507c313030",
                "supported": true,
                "utxos_info": "c7f048b97f07912138691b7d133baafe98a6a10ffb089e0b773f06ef945d5c36:0",
                "confirmed": true,
                "unpacked_data": {
                    "message_type": "unknown",
                    "message_type_id": 1684893238,
                    "message_data": {
                        "error": "Unknown message type"
                    }
                },
                "btc_amount_normalized": "0.00000000"
            },
            {
                "tx_index": 504,
                "tx_hash": "c3d10301a50c49b3c9515f88847b92ce969729c194c064f411d610bc3b3704e7",
                "block_index": 310503,
                "block_hash": "219e9a113a7c66443183171e389bfd5eaf957f5b8ab825358d72fa8e0cc8c16c",
                "block_time": 310503000,
                "source": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "destination": null,
                "btc_amount": 0,
                "fee": 6675,
                "data": "5a51414944464149524d494e7c7c31307c317c307c35307c32307c307c307c32307c3430303030307c35303030303030307c307c307c307c317c",
                "supported": true,
                "utxos_info": "3e7d029e0751dbdd5853f91b6e28f8df6b1b940ace7b8723d459905df4e0ef9c:1",
                "confirmed": true,
                "unpacked_data": {
                    "message_type": "unknown",
                    "message_type_id": 1515274569,
                    "message_data": {
                        "error": "Unknown message type"
                    }
                },
                "btc_amount_normalized": "0.00000000"
            },
            {
                "tx_index": 503,
                "tx_hash": "9830e28496bb94f7e9f829abd26fd2cdce24ccb637e55488537a7080979ad9c1",
                "block_index": 310502,
                "block_hash": "b5a4cd1270bc437e909d9569079ad17437a65822ee9e4c378670732a1430ed67",
                "block_time": 310502000,
                "source": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "destination": null,
                "btc_amount": 0,
                "fee": 6375,
                "data": "5a52414944464149524d494e7c7c31307c317c31307c33307c32307c307c307c307c307c307c307c307c307c317c",
                "supported": true,
                "utxos_info": "c5ae7746f5282db0e11d580db3006fc6ff2e1b895e1513dbb4586343e08df687:1",
                "confirmed": true,
                "unpacked_data": {
                    "message_type": "unknown",
                    "message_type_id": 1515340105,
                    "message_data": {
                        "error": "Unknown message type"
                    }
                },
                "btc_amount_normalized": "0.00000000"
            },
            {
                "tx_index": 502,
                "tx_hash": "d42849c71a32e388606982d3384ec8ae12e5c0ba2f742cb4ddf0649fb66e1f67",
                "block_index": 310501,
                "block_hash": "9d9019d15a1d878f2c39c7e3de4340a043a4a31aebb298acdf8e913284ae26ba",
                "block_time": 310501000,
                "source": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "destination": null,
                "btc_amount": 0,
                "fee": 5575,
                "data": "5b46524545464149524d494e7c30",
                "supported": true,
                "utxos_info": "fe9a0647adff98bcc8289f2d6178db687d99be439cb64a1c8ae89d325552fd38:1",
                "confirmed": true,
                "unpacked_data": {
                    "message_type": "unknown",
                    "message_type_id": 1531335237,
                    "message_data": {
                        "error": "Unknown message type"
                    }
                },
                "btc_amount_normalized": "0.00000000"
            },
            {
                "tx_index": 501,
                "tx_hash": "13e642d78db80af715cdce12a9fca81965752bbfb59549341fa4760da3d32afe",
                "block_index": 310500,
                "block_hash": "54aeaf47d5387964e2d51617bf3af50520a0449410e0d096cf8c2aa9dad5550b",
                "block_time": 310500000,
                "source": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "destination": null,
                "btc_amount": 0,
                "fee": 6300,
                "data": "5a50414944464149524d494e7c7c31307c317c307c307c307c307c307c307c307c307c307c307c307c317c",
                "supported": true,
                "utxos_info": "63d204e6d293e32c74a4cab23f13a26ea8de60e9a5ff37959c992f1661848043:1",
                "confirmed": true,
                "unpacked_data": {
                    "message_type": "unknown",
                    "message_type_id": 1515209033,
                    "message_data": {
                        "error": "Unknown message type"
                    }
                },
                "btc_amount_normalized": "0.00000000"
            },
            {
                "tx_index": 500,
                "tx_hash": "a34d2b430b05ce71e9b09125d92be01fe666327252cbe54916e3a07db67b93ce",
                "block_index": 310499,
                "block_hash": "1950e1a4d7fc820ed9603f6df6819c3c953c277c726340dec2a4253e261a1764",
                "block_time": 310499000,
                "source": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "destination": null,
                "btc_amount": 0,
                "fee": 6300,
                "data": "5a46524545464149524d494e7c7c307c317c31307c307c307c307c307c307c307c307c307c307c307c317c",
                "supported": true,
                "utxos_info": "3c3cf4ecfbafac833fe6d141c3dd3a3a1f544da16513e14f2f3c344f443ae035:1",
                "confirmed": true,
                "unpacked_data": {
                    "message_type": "unknown",
                    "message_type_id": 1514558021,
                    "message_data": {
                        "error": "Unknown message type"
                    }
                },
                "btc_amount_normalized": "0.00000000"
            },
            {
                "tx_index": 499,
                "tx_hash": "0abfce2662c05852fd8b181a60900678643cedad47b23a853b8c4eda82cb2cbf",
                "block_index": 310498,
                "block_hash": "b7058b6d1ddc325a10bf33144937e06ce6025215b416518ae120da9440ae279e",
                "block_time": 310498000,
                "source": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "destination": null,
                "btc_amount": 0,
                "fee": 6550,
                "data": "0000001501530821671b10650000000005f5e10001108e90a57dba9967c422e83080f22f0c684368696c64206f6620706172656e74",
                "supported": true,
                "utxos_info": "0c2cc9e9cdd3a29c7a2fcd38a68d409c4c03ff78456fde49595d8fdfd6110b67:1",
                "confirmed": true,
                "unpacked_data": {
                    "message_type": "issuance",
                    "message_type_id": 21,
                    "message_data": {
                        "asset_id": null,
                        "asset": null,
                        "subasset_longname": null,
                        "quantity": null,
                        "divisible": null,
                        "lock": null,
                        "reset": null,
                        "callable": null,
                        "call_date": null,
                        "call_price": null,
                        "description": null,
                        "status": "invalid: could not unpack"
                    }
                },
                "btc_amount_normalized": "0.00000000"
            },
            {
                "tx_index": 498,
                "tx_hash": "076ae3d8eeb7fb40d2ae27692340157c746d9832806766b0dac5adb1526dc78f",
                "block_index": 310497,
                "block_hash": "f1118591fe79b8bf52ccf0c5de9826bfd266b1fdc24b44676cf22bbcc76d464e",
                "block_time": 310497000,
                "source": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "destination": null,
                "btc_amount": 0,
                "fee": 6300,
                "data": "00000014000000000aa4097d0000000005f5e100010000000000000000000c506172656e74206173736574",
                "supported": true,
                "utxos_info": "fccea6e9a0ad88c0b3a93594e176a9226095acdad38b63daabbdfe96737b8bf7:1",
                "confirmed": true,
                "unpacked_data": {
                    "message_type": "issuance",
                    "message_type_id": 20,
                    "message_data": {
                        "asset_id": 178522493,
                        "asset": "PARENT",
                        "subasset_longname": null,
                        "quantity": 100000000,
                        "divisible": true,
                        "lock": null,
                        "reset": null,
                        "callable": false,
                        "call_date": 0,
                        "call_price": 0.0,
                        "description": "Parent asset",
                        "status": "valid",
                        "quantity_normalized": "1.00000000"
                    }
                },
                "btc_amount_normalized": "0.00000000"
            },
            {
                "tx_index": 492,
                "tx_hash": "74db175c4669a3d3a59e3fcddce9e97fcd7d12c35b58ef31845a1b20a1739498",
                "block_index": 310491,
                "block_hash": "811abd7cf2b768cfdaa84ab44c63f4463c96a368ead52125bf149cf0c7447b16",
                "block_time": 310491000,
                "source": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "destination": null,
                "btc_amount": 0,
                "fee": 6800,
                "data": "0000000a00000000000000010000000005f5e100000000000000000000000000000c350007d000000000000dbba0",
                "supported": true,
                "utxos_info": "34ddf77d56739516eec4be2cef26c823380845834393dcedc8c06c184b55463b:0",
                "confirmed": true,
                "unpacked_data": {
                    "message_type": "order",
                    "message_type_id": 10,
                    "message_data": {
                        "give_asset": "XCP",
                        "give_quantity": 100000000,
                        "get_asset": "BTC",
                        "get_quantity": 800000,
                        "expiration": 2000,
                        "fee_required": 900000,
                        "status": "open",
                        "give_asset_info": {
                            "divisible": true,
                            "asset_longname": null,
                            "description": "The Counterparty protocol native currency",
                            "locked": true,
                            "issuer": null
                        },
                        "get_asset_info": {
                            "divisible": true,
                            "asset_longname": null,
                            "description": "The Bitcoin cryptocurrency",
                            "locked": false,
                            "issuer": null
                        },
                        "give_quantity_normalized": "1.00000000",
                        "get_quantity_normalized": "0.00800000",
                        "fee_required_normalized": "0.00900000"
                    }
                },
                "btc_amount_normalized": "0.00000000"
            }
        ],
        "next_cursor": 482,
        "result_count": 32
    },
    "http://localhost:10009/v2/addresses/mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc/dividends?verbose=true": {
        "result": [],
        "next_cursor": null,
        "result_count": 0
    },
    "http://localhost:10009/v2/addresses/mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc/orders?verbose=true": {
        "result": [
            {
                "tx_index": 492,
                "tx_hash": "74db175c4669a3d3a59e3fcddce9e97fcd7d12c35b58ef31845a1b20a1739498",
                "block_index": 310513,
                "source": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "give_asset": "XCP",
                "give_quantity": 100000000,
                "give_remaining": 100000000,
                "get_asset": "BTC",
                "get_quantity": 800000,
                "get_remaining": 800000,
                "expiration": 2000,
                "expire_index": 312491,
                "fee_required": 900000,
                "fee_required_remaining": 900000,
                "fee_provided": 6800,
                "fee_provided_remaining": 6800,
                "status": "open",
                "confirmed": true,
                "block_time": 310513000,
                "give_asset_info": {
                    "divisible": true,
                    "asset_longname": null,
                    "description": "The Counterparty protocol native currency",
                    "locked": true,
                    "issuer": null
                },
                "get_asset_info": {
                    "divisible": true,
                    "asset_longname": null,
                    "description": "The Bitcoin cryptocurrency",
                    "locked": false,
                    "issuer": null
                },
                "give_quantity_normalized": "1.00000000",
                "get_quantity_normalized": "0.00800000",
                "get_remaining_normalized": "0.00800000",
                "give_remaining_normalized": "1.00000000",
                "fee_provided_normalized": "0.00006800",
                "fee_required_normalized": "0.00900000",
                "fee_required_remaining_normalized": "0.00900000",
                "fee_provided_remaining_normalized": "0.00006800"
            },
            {
                "tx_index": 12,
                "tx_hash": "a1768d7db2db3b9732b26df8c04db4b9a8535a1e5cf684a680e81e7c06f394b6",
                "block_index": 310011,
                "source": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "give_asset": "BTC",
                "give_quantity": 666667,
                "give_remaining": 666667,
                "get_asset": "XCP",
                "get_quantity": 100000000,
                "get_remaining": 100000000,
                "expiration": 2000,
                "expire_index": 312011,
                "fee_required": 0,
                "fee_required_remaining": 0,
                "fee_provided": 1000000,
                "fee_provided_remaining": 1000000,
                "status": "open",
                "confirmed": true,
                "block_time": 310011000,
                "give_asset_info": {
                    "divisible": true,
                    "asset_longname": null,
                    "description": "The Bitcoin cryptocurrency",
                    "locked": false,
                    "issuer": null
                },
                "get_asset_info": {
                    "divisible": true,
                    "asset_longname": null,
                    "description": "The Counterparty protocol native currency",
                    "locked": true,
                    "issuer": null
                },
                "give_quantity_normalized": "0.00666667",
                "get_quantity_normalized": "1.00000000",
                "get_remaining_normalized": "1.00000000",
                "give_remaining_normalized": "0.00666667",
                "fee_provided_normalized": "0.01000000",
                "fee_required_normalized": "0.00000000",
                "fee_required_remaining_normalized": "0.00000000",
                "fee_provided_remaining_normalized": "0.01000000"
            },
            {
                "tx_index": 11,
                "tx_hash": "1899b2e6ec36ba4bc9d035e6640b0a62b08c3a147c77c89183a77d9ed9081b3a",
                "block_index": 310010,
                "source": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "give_asset": "XCP",
                "give_quantity": 100000000,
                "give_remaining": 100000000,
                "get_asset": "BTC",
                "get_quantity": 1000000,
                "get_remaining": 1000000,
                "expiration": 2000,
                "expire_index": 312010,
                "fee_required": 900000,
                "fee_required_remaining": 900000,
                "fee_provided": 6800,
                "fee_provided_remaining": 6800,
                "status": "open",
                "confirmed": true,
                "block_time": 310010000,
                "give_asset_info": {
                    "divisible": true,
                    "asset_longname": null,
                    "description": "The Counterparty protocol native currency",
                    "locked": true,
                    "issuer": null
                },
                "get_asset_info": {
                    "divisible": true,
                    "asset_longname": null,
                    "description": "The Bitcoin cryptocurrency",
                    "locked": false,
                    "issuer": null
                },
                "give_quantity_normalized": "1.00000000",
                "get_quantity_normalized": "0.01000000",
                "get_remaining_normalized": "0.01000000",
                "give_remaining_normalized": "1.00000000",
                "fee_provided_normalized": "0.00006800",
                "fee_required_normalized": "0.00900000",
                "fee_required_remaining_normalized": "0.00900000",
                "fee_provided_remaining_normalized": "0.00006800"
            },
            {
                "tx_index": 10,
                "tx_hash": "21460d5c07284f9be9baf824927d0d4e4eb790e297f3162305841607b672349b",
                "block_index": 310009,
                "source": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "give_asset": "XCP",
                "give_quantity": 100000000,
                "give_remaining": 100000000,
                "get_asset": "DIVISIBLE",
                "get_quantity": 100000000,
                "get_remaining": 100000000,
                "expiration": 2000,
                "expire_index": 312009,
                "fee_required": 0,
                "fee_required_remaining": 0,
                "fee_provided": 6800,
                "fee_provided_remaining": 6800,
                "status": "open",
                "confirmed": true,
                "block_time": 310009000,
                "give_asset_info": {
                    "divisible": true,
                    "asset_longname": null,
                    "description": "The Counterparty protocol native currency",
                    "locked": true,
                    "issuer": null
                },
                "get_asset_info": {
                    "asset_longname": null,
                    "description": "Divisible asset",
                    "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                    "divisible": true,
                    "locked": false
                },
                "give_quantity_normalized": "1.00000000",
                "get_quantity_normalized": "1.00000000",
                "get_remaining_normalized": "1.00000000",
                "give_remaining_normalized": "1.00000000",
                "fee_provided_normalized": "0.00006800",
                "fee_required_normalized": "0.00000000",
                "fee_required_remaining_normalized": "0.00000000",
                "fee_provided_remaining_normalized": "0.00006800"
            },
            {
                "tx_index": 7,
                "tx_hash": "4f0433ba841038e2e16328445930dd7bca35309b14b0da4451c8f94c631368b8",
                "block_index": 310006,
                "source": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "give_asset": "XCP",
                "give_quantity": 100000000,
                "give_remaining": 100000000,
                "get_asset": "DIVISIBLE",
                "get_quantity": 100000000,
                "get_remaining": 100000000,
                "expiration": 2000,
                "expire_index": 312006,
                "fee_required": 0,
                "fee_required_remaining": 0,
                "fee_provided": 6800,
                "fee_provided_remaining": 6800,
                "status": "open",
                "confirmed": true,
                "block_time": 310006000,
                "give_asset_info": {
                    "divisible": true,
                    "asset_longname": null,
                    "description": "The Counterparty protocol native currency",
                    "locked": true,
                    "issuer": null
                },
                "get_asset_info": {
                    "asset_longname": null,
                    "description": "Divisible asset",
                    "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                    "divisible": true,
                    "locked": false
                },
                "give_quantity_normalized": "1.00000000",
                "get_quantity_normalized": "1.00000000",
                "get_remaining_normalized": "1.00000000",
                "give_remaining_normalized": "1.00000000",
                "fee_provided_normalized": "0.00006800",
                "fee_required_normalized": "0.00000000",
                "fee_required_remaining_normalized": "0.00000000",
                "fee_provided_remaining_normalized": "0.00006800"
            }
        ],
        "next_cursor": null,
        "result_count": 5
    },
    "http://localhost:10009/v2/addresses/mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc/fairmints?verbose=true": {
        "result": [
            {
                "tx_hash": "d42849c71a32e388606982d3384ec8ae12e5c0ba2f742cb4ddf0649fb66e1f67",
                "tx_index": 502,
                "block_index": 310501,
                "source": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "fairminter_tx_hash": "a34d2b430b05ce71e9b09125d92be01fe666327252cbe54916e3a07db67b93ce",
                "asset": "FREEFAIRMIN",
                "earn_quantity": 10,
                "paid_quantity": 0,
                "commission": 0,
                "status": "valid",
                "confirmed": true,
                "block_time": 310501000,
                "asset_info": {
                    "asset_longname": "",
                    "description": "",
                    "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                    "divisible": true,
                    "locked": false
                }
            }
        ],
        "next_cursor": null,
        "result_count": 1
    },
    "http://localhost:10009/v2/addresses/mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc/fairmints/NODIVISIBLE?verbose=true": {
        "result": [],
        "next_cursor": null,
        "result_count": 0
    },
    "http://localhost:10009/v2/assets?verbose=true": {
        "result": [
            {
                "asset": "TESTDISP",
                "asset_id": "154062662379",
                "asset_longname": null,
                "issuer": "munimLLHjPhGeSU5rYB2HN79LJa8bRZr5b",
                "owner": "munimLLHjPhGeSU5rYB2HN79LJa8bRZr5b",
                "divisible": false,
                "locked": false,
                "supply": 1000,
                "description": "Test dispensers asset",
                "first_issuance_block_index": 310509,
                "last_issuance_block_index": 310509,
                "confirmed": true,
                "first_issuance_block_time": 310509000,
                "last_issuance_block_time": 310509000,
                "supply_normalized": "1000"
            },
            {
                "asset": "A160361285792733729",
                "asset_id": "160361285792733729",
                "asset_longname": "",
                "issuer": "mtQheFaSfWELRB2MyMBaiWjdDm6ux9Ezns",
                "owner": "mtQheFaSfWELRB2MyMBaiWjdDm6ux9Ezns",
                "divisible": true,
                "locked": true,
                "supply": 50,
                "description": "softcap description",
                "first_issuance_block_index": 310504,
                "last_issuance_block_index": 310506,
                "confirmed": true,
                "first_issuance_block_time": 310504000,
                "last_issuance_block_time": 310506000,
                "supply_normalized": "0.00000050"
            },
            {
                "asset": "QAIDFAIRMIN",
                "asset_id": "2260369790942965",
                "asset_longname": "",
                "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "owner": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "divisible": true,
                "locked": false,
                "supply": 20,
                "description": "",
                "first_issuance_block_index": 310503,
                "last_issuance_block_index": 310503,
                "confirmed": true,
                "first_issuance_block_time": 310503000,
                "last_issuance_block_time": 310503000,
                "supply_normalized": "0.00000020"
            },
            {
                "asset": "RAIDFAIRMIN",
                "asset_id": "2401536886596341",
                "asset_longname": "",
                "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "owner": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "divisible": true,
                "locked": false,
                "supply": 20,
                "description": "",
                "first_issuance_block_index": 310502,
                "last_issuance_block_index": 310502,
                "confirmed": true,
                "first_issuance_block_time": 310502000,
                "last_issuance_block_time": 310502000,
                "supply_normalized": "0.00000020"
            },
            {
                "asset": "PAIDFAIRMIN",
                "asset_id": "2119202695289589",
                "asset_longname": "",
                "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "owner": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "divisible": true,
                "locked": false,
                "supply": 0,
                "description": "",
                "first_issuance_block_index": 310500,
                "last_issuance_block_index": 310500,
                "confirmed": true,
                "first_issuance_block_time": 310500000,
                "last_issuance_block_time": 310500000,
                "supply_normalized": "0.00000000"
            },
            {
                "asset": "FREEFAIRMIN",
                "asset_id": "799006024850293",
                "asset_longname": "",
                "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "owner": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "divisible": true,
                "locked": false,
                "supply": 10,
                "description": "",
                "first_issuance_block_index": 310499,
                "last_issuance_block_index": 310501,
                "confirmed": true,
                "first_issuance_block_time": 310499000,
                "last_issuance_block_time": 310501000,
                "supply_normalized": "0.00000010"
            },
            {
                "asset": "A95428956661682277",
                "asset_id": "95428956661682277",
                "asset_longname": "PARENT.already.issued",
                "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "owner": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "divisible": true,
                "locked": false,
                "supply": 100000000,
                "description": "Child of parent",
                "first_issuance_block_index": 310498,
                "last_issuance_block_index": 310498,
                "confirmed": true,
                "first_issuance_block_time": 310498000,
                "last_issuance_block_time": 310498000,
                "supply_normalized": "1.00000000"
            },
            {
                "asset": "PARENT",
                "asset_id": "178522493",
                "asset_longname": null,
                "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "owner": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "divisible": true,
                "locked": false,
                "supply": 100000000,
                "description": "Parent asset",
                "first_issuance_block_index": 310497,
                "last_issuance_block_index": 310497,
                "confirmed": true,
                "first_issuance_block_time": 310497000,
                "last_issuance_block_time": 310497000,
                "supply_normalized": "1.00000000"
            },
            {
                "asset": "DIVIDEND",
                "asset_id": "26819977213",
                "asset_longname": null,
                "issuer": "mnfAHmddVibnZNSkh8DvKaQoiEfNsxjXzH",
                "owner": "mnfAHmddVibnZNSkh8DvKaQoiEfNsxjXzH",
                "divisible": true,
                "locked": false,
                "supply": 100,
                "description": "",
                "first_issuance_block_index": 310494,
                "last_issuance_block_index": 310494,
                "confirmed": true,
                "first_issuance_block_time": 310494000,
                "last_issuance_block_time": 310494000,
                "supply_normalized": "0.00000100"
            },
            {
                "asset": "LOCKEDPREV",
                "asset_id": "62667321322601",
                "asset_longname": null,
                "issuer": "mwtPsLQxW9xpm7gdLmwWvJK5ABdPUVJm42",
                "owner": "mwtPsLQxW9xpm7gdLmwWvJK5ABdPUVJm42",
                "divisible": true,
                "locked": true,
                "supply": 1000,
                "description": "changed",
                "first_issuance_block_index": 310113,
                "last_issuance_block_index": 310115,
                "confirmed": true,
                "first_issuance_block_time": 310113000,
                "last_issuance_block_time": 310115000,
                "supply_normalized": "0.00001000"
            },
            {
                "asset": "PAYTOSCRIPT",
                "asset_id": "2122675428648001",
                "asset_longname": null,
                "issuer": "2MyJHMUenMWonC35Yi6PHC7i2tkS7PuomCy",
                "owner": "2MyJHMUenMWonC35Yi6PHC7i2tkS7PuomCy",
                "divisible": false,
                "locked": false,
                "supply": 1000,
                "description": "PSH issued asset",
                "first_issuance_block_index": 310109,
                "last_issuance_block_index": 310109,
                "confirmed": true,
                "first_issuance_block_time": 310109000,
                "last_issuance_block_time": 310109000,
                "supply_normalized": "1000"
            },
            {
                "asset": "MAXI",
                "asset_id": "211518",
                "asset_longname": null,
                "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "owner": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "divisible": true,
                "locked": false,
                "supply": 9223372036854775807,
                "description": "Maximum quantity",
                "first_issuance_block_index": 310016,
                "last_issuance_block_index": 310016,
                "confirmed": true,
                "first_issuance_block_time": 310016000,
                "last_issuance_block_time": 310016000,
                "supply_normalized": "92233720000.00000000"
            },
            {
                "asset": "LOCKED",
                "asset_id": "137134819",
                "asset_longname": null,
                "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "owner": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "divisible": true,
                "locked": true,
                "supply": 1000,
                "description": "Locked asset",
                "first_issuance_block_index": 310004,
                "last_issuance_block_index": 310005,
                "confirmed": true,
                "first_issuance_block_time": 310004000,
                "last_issuance_block_time": 310005000,
                "supply_normalized": "0.00001000"
            },
            {
                "asset": "CALLABLE",
                "asset_id": "16199343190",
                "asset_longname": null,
                "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "owner": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "divisible": true,
                "locked": false,
                "supply": 1000,
                "description": "Callable asset",
                "first_issuance_block_index": 310003,
                "last_issuance_block_index": 310003,
                "confirmed": true,
                "first_issuance_block_time": 310003000,
                "last_issuance_block_time": 310003000,
                "supply_normalized": "0.00001000"
            },
            {
                "asset": "NODIVISIBLE",
                "asset_id": "1911882621324134",
                "asset_longname": null,
                "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "owner": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "divisible": false,
                "locked": false,
                "supply": 1000,
                "description": "No divisible asset",
                "first_issuance_block_index": 310002,
                "last_issuance_block_index": 310002,
                "confirmed": true,
                "first_issuance_block_time": 310002000,
                "last_issuance_block_time": 310002000,
                "supply_normalized": "1000"
            },
            {
                "asset": "DIVISIBLE",
                "asset_id": "697326324582",
                "asset_longname": null,
                "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "owner": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "divisible": true,
                "locked": false,
                "supply": 100000000000,
                "description": "Divisible asset",
                "first_issuance_block_index": 310001,
                "last_issuance_block_index": 310001,
                "confirmed": true,
                "first_issuance_block_time": 310001000,
                "last_issuance_block_time": 310001000,
                "supply_normalized": "1000.00000000"
            },
            {
                "asset": "XCP",
                "asset_id": null,
                "asset_longname": null,
                "issuer": null,
                "owner": null,
                "divisible": true,
                "locked": true,
                "supply": 1207563695800,
                "description": "The Counterparty protocol native currency",
                "first_issuance_block_index": 278319,
                "last_issuance_block_index": 283810,
                "confirmed": true,
                "supply_normalized": "12075.63700000"
            }
        ],
        "next_cursor": null,
        "result_count": 17
    },
    "http://localhost:10009/v2/assets/NODIVISIBLE?verbose=true": {
        "result": {
            "asset": "NODIVISIBLE",
            "asset_id": "1911882621324134",
            "asset_longname": null,
            "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
            "owner": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
            "divisible": false,
            "locked": false,
            "supply": 1000,
            "description": "No divisible asset",
            "first_issuance_block_index": 310002,
            "last_issuance_block_index": 310002,
            "confirmed": true,
            "first_issuance_block_time": 310002000,
            "last_issuance_block_time": 310002000,
            "supply_normalized": "1000"
        }
    },
    "http://localhost:10009/v2/assets/NODIVISIBLE/balances?verbose=true": {
        "result": [
            {
                "address": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "utxo": null,
                "utxo_address": null,
                "asset": "NODIVISIBLE",
                "quantity": 985,
                "asset_info": {
                    "asset_longname": null,
                    "description": "No divisible asset",
                    "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                    "divisible": false,
                    "locked": false
                },
                "quantity_normalized": "985"
            },
            {
                "address": "mtQheFaSfWELRB2MyMBaiWjdDm6ux9Ezns",
                "utxo": null,
                "utxo_address": null,
                "asset": "NODIVISIBLE",
                "quantity": 5,
                "asset_info": {
                    "asset_longname": null,
                    "description": "No divisible asset",
                    "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                    "divisible": false,
                    "locked": false
                },
                "quantity_normalized": "5"
            },
            {
                "address": "1_mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc_mtQheFaSfWELRB2MyMBaiWjdDm6ux9Ezns_2",
                "utxo": null,
                "utxo_address": null,
                "asset": "NODIVISIBLE",
                "quantity": 10,
                "asset_info": {
                    "asset_longname": null,
                    "description": "No divisible asset",
                    "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                    "divisible": false,
                    "locked": false
                },
                "quantity_normalized": "10"
            }
        ],
        "next_cursor": null,
        "result_count": 3
    },
    "http://localhost:10009/v2/assets/NODIVISIBLE/balances/mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc?verbose=true": {
        "result": {
            "address": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
            "asset": "NODIVISIBLE",
            "quantity": 985,
            "utxo": null,
            "utxo_address": null,
            "asset_info": {
                "asset_longname": null,
                "description": "No divisible asset",
                "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "divisible": false,
                "locked": false
            },
            "quantity_normalized": "985"
        }
    },
    "http://localhost:10009/v2/assets/NODIVISIBLE/orders?verbose=true": {
        "result": [],
        "next_cursor": null,
        "result_count": 0
    },
    "http://localhost:10009/v2/assets/NODIVISIBLE/matches?verbose=true": {
        "result": [],
        "next_cursor": null,
        "result_count": 0
    },
    "http://localhost:10009/v2/assets/NODIVISIBLE/credits?verbose=true": {
        "result": [
            {
                "block_index": 310015,
                "address": "1_mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc_mtQheFaSfWELRB2MyMBaiWjdDm6ux9Ezns_2",
                "asset": "NODIVISIBLE",
                "quantity": 10,
                "calling_function": "send",
                "event": "e3b6667b7baa515048a7fcf2be7818e3e7622371236b78e19b4b08e2d7e7818c",
                "tx_index": 16,
                "utxo": null,
                "utxo_address": null,
                "confirmed": true,
                "block_time": 310015000,
                "asset_info": {
                    "asset_longname": null,
                    "description": "No divisible asset",
                    "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                    "divisible": false,
                    "locked": false
                },
                "quantity_normalized": "10"
            },
            {
                "block_index": 310014,
                "address": "mtQheFaSfWELRB2MyMBaiWjdDm6ux9Ezns",
                "asset": "NODIVISIBLE",
                "quantity": 5,
                "calling_function": "send",
                "event": "1facb0072f16f6bdca64ea859c82b850f58f0ec7ff410d901679772a4727515a",
                "tx_index": 15,
                "utxo": null,
                "utxo_address": null,
                "confirmed": true,
                "block_time": 310014000,
                "asset_info": {
                    "asset_longname": null,
                    "description": "No divisible asset",
                    "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                    "divisible": false,
                    "locked": false
                },
                "quantity_normalized": "5"
            },
            {
                "block_index": 310002,
                "address": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "asset": "NODIVISIBLE",
                "quantity": 1000,
                "calling_function": "issuance",
                "event": "7b1bf5144346279271b1ff78664f118224fe27fd8679d6c1519345f9c6c54584",
                "tx_index": 3,
                "utxo": null,
                "utxo_address": null,
                "confirmed": true,
                "block_time": 310002000,
                "asset_info": {
                    "asset_longname": null,
                    "description": "No divisible asset",
                    "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                    "divisible": false,
                    "locked": false
                },
                "quantity_normalized": "1000"
            }
        ],
        "next_cursor": null,
        "result_count": 3
    },
    "http://localhost:10009/v2/assets/NODIVISIBLE/debits?verbose=true": {
        "result": [
            {
                "block_index": 310015,
                "address": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "asset": "NODIVISIBLE",
                "quantity": 10,
                "action": "send",
                "event": "e3b6667b7baa515048a7fcf2be7818e3e7622371236b78e19b4b08e2d7e7818c",
                "tx_index": 16,
                "utxo": null,
                "utxo_address": null,
                "confirmed": true,
                "block_time": 310015000,
                "asset_info": {
                    "asset_longname": null,
                    "description": "No divisible asset",
                    "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                    "divisible": false,
                    "locked": false
                },
                "quantity_normalized": "10"
            },
            {
                "block_index": 310014,
                "address": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "asset": "NODIVISIBLE",
                "quantity": 5,
                "action": "send",
                "event": "1facb0072f16f6bdca64ea859c82b850f58f0ec7ff410d901679772a4727515a",
                "tx_index": 15,
                "utxo": null,
                "utxo_address": null,
                "confirmed": true,
                "block_time": 310014000,
                "asset_info": {
                    "asset_longname": null,
                    "description": "No divisible asset",
                    "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                    "divisible": false,
                    "locked": false
                },
                "quantity_normalized": "5"
            }
        ],
        "next_cursor": null,
        "result_count": 2
    },
    "http://localhost:10009/v2/assets/NODIVISIBLE/dividends?verbose=true": {
        "result": [],
        "next_cursor": null,
        "result_count": 0
    },
    "http://localhost:10009/v2/assets/NODIVISIBLE/issuances?verbose=true": {
        "result": [
            {
                "tx_index": 3,
                "tx_hash": "7b1bf5144346279271b1ff78664f118224fe27fd8679d6c1519345f9c6c54584",
                "msg_index": 0,
                "block_index": 310002,
                "asset": "NODIVISIBLE",
                "quantity": 1000,
                "divisible": false,
                "source": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "transfer": false,
                "callable": false,
                "call_date": 0,
                "call_price": 0.0,
                "description": "No divisible asset",
                "fee_paid": 50000000,
                "status": "valid",
                "asset_longname": null,
                "locked": false,
                "reset": false,
                "description_locked": false,
                "fair_minting": false,
                "asset_events": "creation",
                "confirmed": true,
                "block_time": 310002000,
                "quantity_normalized": "1000",
                "fee_paid_normalized": "0.50000000"
            }
        ],
        "next_cursor": null,
        "result_count": 1
    },
    "http://localhost:10009/v2/assets/NODIVISIBLE/sends?verbose=true": {
        "result": [
            {
                "tx_index": 16,
                "tx_hash": "e3b6667b7baa515048a7fcf2be7818e3e7622371236b78e19b4b08e2d7e7818c",
                "block_index": 310015,
                "source": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "destination": "1_mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc_mtQheFaSfWELRB2MyMBaiWjdDm6ux9Ezns_2",
                "asset": "NODIVISIBLE",
                "quantity": 10,
                "status": "valid",
                "msg_index": 0,
                "memo": null,
                "fee_paid": 0,
                "confirmed": true,
                "block_time": 310015000,
                "asset_info": {
                    "asset_longname": null,
                    "description": "No divisible asset",
                    "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                    "divisible": false,
                    "locked": false
                },
                "quantity_normalized": "10",
                "fee_paid_normalized": "0.00000000"
            },
            {
                "tx_index": 15,
                "tx_hash": "1facb0072f16f6bdca64ea859c82b850f58f0ec7ff410d901679772a4727515a",
                "block_index": 310014,
                "source": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "destination": "mtQheFaSfWELRB2MyMBaiWjdDm6ux9Ezns",
                "asset": "NODIVISIBLE",
                "quantity": 5,
                "status": "valid",
                "msg_index": 0,
                "memo": null,
                "fee_paid": 0,
                "confirmed": true,
                "block_time": 310014000,
                "asset_info": {
                    "asset_longname": null,
                    "description": "No divisible asset",
                    "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                    "divisible": false,
                    "locked": false
                },
                "quantity_normalized": "5",
                "fee_paid_normalized": "0.00000000"
            }
        ],
        "next_cursor": null,
        "result_count": 2
    },
    "http://localhost:10009/v2/assets/NODIVISIBLE/dispensers?verbose=true": {
        "result": [],
        "next_cursor": null,
        "result_count": 0
    },
    "http://localhost:10009/v2/assets/XCP/dispensers/munimLLHjPhGeSU5rYB2HN79LJa8bRZr5b?verbose=true": {
        "result": {
            "tx_index": 108,
            "tx_hash": "9834219d2825b4d85ca7ee0d75a5372d9d42ce75eb9144951fca1af5a25915ec",
            "block_index": 310107,
            "source": "munimLLHjPhGeSU5rYB2HN79LJa8bRZr5b",
            "asset": "XCP",
            "give_quantity": 100,
            "escrow_quantity": 100,
            "satoshirate": 100,
            "status": 0,
            "give_remaining": 100,
            "oracle_address": null,
            "last_status_tx_hash": null,
            "origin": "munimLLHjPhGeSU5rYB2HN79LJa8bRZr5b",
            "dispense_count": 0,
            "last_status_tx_source": null,
            "close_block_index": null,
            "confirmed": true,
            "fiat_price": null,
            "oracle_price": null,
            "fiat_unit": null,
            "oracle_price_last_updated": null,
            "satoshi_price": 100,
            "block_time": 310107000,
            "asset_info": {
                "divisible": true,
                "asset_longname": null,
                "description": "The Counterparty protocol native currency",
                "locked": true,
                "issuer": null
            },
            "give_quantity_normalized": "0.00000100",
            "give_remaining_normalized": "0.00000100",
            "escrow_quantity_normalized": "0.00000100",
            "satoshirate_normalized": "0.00000100",
            "satoshi_price_normalized": "0.00000100"
        }
    },
    "http://localhost:10009/v2/assets/NODIVISIBLE/holders?verbose=true": {
        "result": [
            {
                "asset": "NODIVISIBLE",
                "address": "mtQheFaSfWELRB2MyMBaiWjdDm6ux9Ezns",
                "quantity": 5,
                "escrow": null,
                "cursor_id": "balances_10",
                "holding_type": "balances",
                "status": null,
                "asset_info": {
                    "asset_longname": null,
                    "description": "No divisible asset",
                    "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                    "divisible": false,
                    "locked": false
                },
                "quantity_normalized": "5"
            },
            {
                "asset": "NODIVISIBLE",
                "address": "1_mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc_mtQheFaSfWELRB2MyMBaiWjdDm6ux9Ezns_2",
                "quantity": 10,
                "escrow": null,
                "cursor_id": "balances_11",
                "holding_type": "balances",
                "status": null,
                "asset_info": {
                    "asset_longname": null,
                    "description": "No divisible asset",
                    "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                    "divisible": false,
                    "locked": false
                },
                "quantity_normalized": "10"
            },
            {
                "asset": "NODIVISIBLE",
                "address": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "quantity": 985,
                "escrow": null,
                "cursor_id": "balances_3",
                "holding_type": "balances",
                "status": null,
                "asset_info": {
                    "asset_longname": null,
                    "description": "No divisible asset",
                    "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                    "divisible": false,
                    "locked": false
                },
                "quantity_normalized": "985"
            }
        ],
        "next_cursor": null,
        "result_count": 3
    },
    "http://localhost:10009/v2/assets/NODIVISIBLE/dispenses?verbose=true": {
        "result": [],
        "next_cursor": null,
        "result_count": 0
    },
    "http://localhost:10009/v2/assets/NODIVISIBLE/subassets?verbose=true": {
        "result": [],
        "next_cursor": null,
        "result_count": 0
    },
    "http://localhost:10009/v2/assets/NODIVISIBLE/fairmints?verbose=true": {
        "result": [],
        "next_cursor": null,
        "result_count": 0
    },
    "http://localhost:10009/v2/assets/NODIVISIBLE/fairmints/mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc?verbose=true": {
        "result": [],
        "next_cursor": null,
        "result_count": 0
    },
    "http://localhost:10009/v2/orders?verbose=true": {
        "result": [
            {
                "tx_index": 493,
                "tx_hash": "1b294dd8592e76899b1c106782e4c96e63114abd8e3fa09ab6d2d52496b5bf81",
                "block_index": 310513,
                "source": "mtQheFaSfWELRB2MyMBaiWjdDm6ux9Ezns",
                "give_asset": "BTC",
                "give_quantity": 800000,
                "give_remaining": 800000,
                "get_asset": "XCP",
                "get_quantity": 100000000,
                "get_remaining": 100000000,
                "expiration": 2000,
                "expire_index": 312492,
                "fee_required": 0,
                "fee_required_remaining": 0,
                "fee_provided": 1000000,
                "fee_provided_remaining": 992800,
                "status": "open",
                "confirmed": true,
                "block_time": 310513000,
                "give_asset_info": {
                    "divisible": true,
                    "asset_longname": null,
                    "description": "The Bitcoin cryptocurrency",
                    "locked": false,
                    "issuer": null
                },
                "get_asset_info": {
                    "divisible": true,
                    "asset_longname": null,
                    "description": "The Counterparty protocol native currency",
                    "locked": true,
                    "issuer": null
                },
                "give_quantity_normalized": "0.00800000",
                "get_quantity_normalized": "1.00000000",
                "get_remaining_normalized": "1.00000000",
                "give_remaining_normalized": "0.00800000",
                "fee_provided_normalized": "0.01000000",
                "fee_required_normalized": "0.00000000",
                "fee_required_remaining_normalized": "0.00000000",
                "fee_provided_remaining_normalized": "0.00992800"
            },
            {
                "tx_index": 492,
                "tx_hash": "74db175c4669a3d3a59e3fcddce9e97fcd7d12c35b58ef31845a1b20a1739498",
                "block_index": 310513,
                "source": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "give_asset": "XCP",
                "give_quantity": 100000000,
                "give_remaining": 100000000,
                "get_asset": "BTC",
                "get_quantity": 800000,
                "get_remaining": 800000,
                "expiration": 2000,
                "expire_index": 312491,
                "fee_required": 900000,
                "fee_required_remaining": 900000,
                "fee_provided": 6800,
                "fee_provided_remaining": 6800,
                "status": "open",
                "confirmed": true,
                "block_time": 310513000,
                "give_asset_info": {
                    "divisible": true,
                    "asset_longname": null,
                    "description": "The Counterparty protocol native currency",
                    "locked": true,
                    "issuer": null
                },
                "get_asset_info": {
                    "divisible": true,
                    "asset_longname": null,
                    "description": "The Bitcoin cryptocurrency",
                    "locked": false,
                    "issuer": null
                },
                "give_quantity_normalized": "1.00000000",
                "get_quantity_normalized": "0.00800000",
                "get_remaining_normalized": "0.00800000",
                "give_remaining_normalized": "1.00000000",
                "fee_provided_normalized": "0.00006800",
                "fee_required_normalized": "0.00900000",
                "fee_required_remaining_normalized": "0.00900000",
                "fee_provided_remaining_normalized": "0.00006800"
            },
            {
                "tx_index": 12,
                "tx_hash": "a1768d7db2db3b9732b26df8c04db4b9a8535a1e5cf684a680e81e7c06f394b6",
                "block_index": 310011,
                "source": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "give_asset": "BTC",
                "give_quantity": 666667,
                "give_remaining": 666667,
                "get_asset": "XCP",
                "get_quantity": 100000000,
                "get_remaining": 100000000,
                "expiration": 2000,
                "expire_index": 312011,
                "fee_required": 0,
                "fee_required_remaining": 0,
                "fee_provided": 1000000,
                "fee_provided_remaining": 1000000,
                "status": "open",
                "confirmed": true,
                "block_time": 310011000,
                "give_asset_info": {
                    "divisible": true,
                    "asset_longname": null,
                    "description": "The Bitcoin cryptocurrency",
                    "locked": false,
                    "issuer": null
                },
                "get_asset_info": {
                    "divisible": true,
                    "asset_longname": null,
                    "description": "The Counterparty protocol native currency",
                    "locked": true,
                    "issuer": null
                },
                "give_quantity_normalized": "0.00666667",
                "get_quantity_normalized": "1.00000000",
                "get_remaining_normalized": "1.00000000",
                "give_remaining_normalized": "0.00666667",
                "fee_provided_normalized": "0.01000000",
                "fee_required_normalized": "0.00000000",
                "fee_required_remaining_normalized": "0.00000000",
                "fee_provided_remaining_normalized": "0.01000000"
            },
            {
                "tx_index": 11,
                "tx_hash": "1899b2e6ec36ba4bc9d035e6640b0a62b08c3a147c77c89183a77d9ed9081b3a",
                "block_index": 310010,
                "source": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "give_asset": "XCP",
                "give_quantity": 100000000,
                "give_remaining": 100000000,
                "get_asset": "BTC",
                "get_quantity": 1000000,
                "get_remaining": 1000000,
                "expiration": 2000,
                "expire_index": 312010,
                "fee_required": 900000,
                "fee_required_remaining": 900000,
                "fee_provided": 6800,
                "fee_provided_remaining": 6800,
                "status": "open",
                "confirmed": true,
                "block_time": 310010000,
                "give_asset_info": {
                    "divisible": true,
                    "asset_longname": null,
                    "description": "The Counterparty protocol native currency",
                    "locked": true,
                    "issuer": null
                },
                "get_asset_info": {
                    "divisible": true,
                    "asset_longname": null,
                    "description": "The Bitcoin cryptocurrency",
                    "locked": false,
                    "issuer": null
                },
                "give_quantity_normalized": "1.00000000",
                "get_quantity_normalized": "0.01000000",
                "get_remaining_normalized": "0.01000000",
                "give_remaining_normalized": "1.00000000",
                "fee_provided_normalized": "0.00006800",
                "fee_required_normalized": "0.00900000",
                "fee_required_remaining_normalized": "0.00900000",
                "fee_provided_remaining_normalized": "0.00006800"
            },
            {
                "tx_index": 10,
                "tx_hash": "21460d5c07284f9be9baf824927d0d4e4eb790e297f3162305841607b672349b",
                "block_index": 310009,
                "source": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "give_asset": "XCP",
                "give_quantity": 100000000,
                "give_remaining": 100000000,
                "get_asset": "DIVISIBLE",
                "get_quantity": 100000000,
                "get_remaining": 100000000,
                "expiration": 2000,
                "expire_index": 312009,
                "fee_required": 0,
                "fee_required_remaining": 0,
                "fee_provided": 6800,
                "fee_provided_remaining": 6800,
                "status": "open",
                "confirmed": true,
                "block_time": 310009000,
                "give_asset_info": {
                    "divisible": true,
                    "asset_longname": null,
                    "description": "The Counterparty protocol native currency",
                    "locked": true,
                    "issuer": null
                },
                "get_asset_info": {
                    "asset_longname": null,
                    "description": "Divisible asset",
                    "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                    "divisible": true,
                    "locked": false
                },
                "give_quantity_normalized": "1.00000000",
                "get_quantity_normalized": "1.00000000",
                "get_remaining_normalized": "1.00000000",
                "give_remaining_normalized": "1.00000000",
                "fee_provided_normalized": "0.00006800",
                "fee_required_normalized": "0.00000000",
                "fee_required_remaining_normalized": "0.00000000",
                "fee_provided_remaining_normalized": "0.00006800"
            },
            {
                "tx_index": 7,
                "tx_hash": "4f0433ba841038e2e16328445930dd7bca35309b14b0da4451c8f94c631368b8",
                "block_index": 310006,
                "source": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "give_asset": "XCP",
                "give_quantity": 100000000,
                "give_remaining": 100000000,
                "get_asset": "DIVISIBLE",
                "get_quantity": 100000000,
                "get_remaining": 100000000,
                "expiration": 2000,
                "expire_index": 312006,
                "fee_required": 0,
                "fee_required_remaining": 0,
                "fee_provided": 6800,
                "fee_provided_remaining": 6800,
                "status": "open",
                "confirmed": true,
                "block_time": 310006000,
                "give_asset_info": {
                    "divisible": true,
                    "asset_longname": null,
                    "description": "The Counterparty protocol native currency",
                    "locked": true,
                    "issuer": null
                },
                "get_asset_info": {
                    "asset_longname": null,
                    "description": "Divisible asset",
                    "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                    "divisible": true,
                    "locked": false
                },
                "give_quantity_normalized": "1.00000000",
                "get_quantity_normalized": "1.00000000",
                "get_remaining_normalized": "1.00000000",
                "give_remaining_normalized": "1.00000000",
                "fee_provided_normalized": "0.00006800",
                "fee_required_normalized": "0.00000000",
                "fee_required_remaining_normalized": "0.00000000",
                "fee_provided_remaining_normalized": "0.00006800"
            }
        ],
        "next_cursor": null,
        "result_count": 6
    },
    "http://localhost:10009/v2/orders/74db175c4669a3d3a59e3fcddce9e97fcd7d12c35b58ef31845a1b20a1739498?verbose=true": {
        "result": {
            "tx_index": 492,
            "tx_hash": "74db175c4669a3d3a59e3fcddce9e97fcd7d12c35b58ef31845a1b20a1739498",
            "block_index": 310513,
            "source": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
            "give_asset": "XCP",
            "give_quantity": 100000000,
            "give_remaining": 100000000,
            "get_asset": "BTC",
            "get_quantity": 800000,
            "get_remaining": 800000,
            "expiration": 2000,
            "expire_index": 312491,
            "fee_required": 900000,
            "fee_required_remaining": 900000,
            "fee_provided": 6800,
            "fee_provided_remaining": 6800,
            "status": "open",
            "confirmed": true,
            "block_time": 310513000,
            "give_asset_info": {
                "divisible": true,
                "asset_longname": null,
                "description": "The Counterparty protocol native currency",
                "locked": true,
                "issuer": null
            },
            "get_asset_info": {
                "divisible": true,
                "asset_longname": null,
                "description": "The Bitcoin cryptocurrency",
                "locked": false,
                "issuer": null
            },
            "give_quantity_normalized": "1.00000000",
            "get_quantity_normalized": "0.00800000",
            "get_remaining_normalized": "0.00800000",
            "give_remaining_normalized": "1.00000000",
            "fee_provided_normalized": "0.00006800",
            "fee_required_normalized": "0.00900000",
            "fee_required_remaining_normalized": "0.00900000",
            "fee_provided_remaining_normalized": "0.00006800"
        }
    },
    "http://localhost:10009/v2/orders/74db175c4669a3d3a59e3fcddce9e97fcd7d12c35b58ef31845a1b20a1739498/matches?verbose=true": {
        "result": [
            {
                "id": "74db175c4669a3d3a59e3fcddce9e97fcd7d12c35b58ef31845a1b20a1739498_1b294dd8592e76899b1c106782e4c96e63114abd8e3fa09ab6d2d52496b5bf81",
                "tx0_index": 492,
                "tx0_hash": "74db175c4669a3d3a59e3fcddce9e97fcd7d12c35b58ef31845a1b20a1739498",
                "tx0_address": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "tx1_index": 493,
                "tx1_hash": "1b294dd8592e76899b1c106782e4c96e63114abd8e3fa09ab6d2d52496b5bf81",
                "tx1_address": "mtQheFaSfWELRB2MyMBaiWjdDm6ux9Ezns",
                "forward_asset": "XCP",
                "forward_quantity": 100000000,
                "backward_asset": "BTC",
                "backward_quantity": 800000,
                "tx0_block_index": 310491,
                "tx1_block_index": 310492,
                "block_index": 310513,
                "tx0_expiration": 2000,
                "tx1_expiration": 2000,
                "match_expire_index": 310512,
                "fee_paid": 7200,
                "status": "expired",
                "confirmed": true,
                "block_time": 310513000,
                "forward_asset_info": {
                    "divisible": true,
                    "asset_longname": null,
                    "description": "The Counterparty protocol native currency",
                    "locked": true,
                    "issuer": null
                },
                "backward_asset_info": {
                    "divisible": true,
                    "asset_longname": null,
                    "description": "The Bitcoin cryptocurrency",
                    "locked": false,
                    "issuer": null
                },
                "forward_quantity_normalized": "1.00000000",
                "backward_quantity_normalized": "0.00800000",
                "fee_paid_normalized": "0.00007200"
            }
        ],
        "next_cursor": null,
        "result_count": 1
    },
    "http://localhost:10009/v2/orders/74db175c4669a3d3a59e3fcddce9e97fcd7d12c35b58ef31845a1b20a1739498/btcpays?verbose=true": {
        "result": [],
        "next_cursor": null,
        "result_count": 0
    },
    "http://localhost:10009/v2/orders/NODIVISIBLE/XCP?verbose=true": {
        "result": [],
        "next_cursor": null,
        "result_count": 0
    },
    "http://localhost:10009/v2/orders/NODIVISIBLE/XCP/matches?verbose=true": {
        "result": [],
        "next_cursor": null,
        "result_count": 0
    },
    "http://localhost:10009/v2/order_matches?verbose=true": {
        "result": [
            {
                "id": "74db175c4669a3d3a59e3fcddce9e97fcd7d12c35b58ef31845a1b20a1739498_1b294dd8592e76899b1c106782e4c96e63114abd8e3fa09ab6d2d52496b5bf81",
                "tx0_index": 492,
                "tx0_hash": "74db175c4669a3d3a59e3fcddce9e97fcd7d12c35b58ef31845a1b20a1739498",
                "tx0_address": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "tx1_index": 493,
                "tx1_hash": "1b294dd8592e76899b1c106782e4c96e63114abd8e3fa09ab6d2d52496b5bf81",
                "tx1_address": "mtQheFaSfWELRB2MyMBaiWjdDm6ux9Ezns",
                "forward_asset": "XCP",
                "forward_quantity": 100000000,
                "backward_asset": "BTC",
                "backward_quantity": 800000,
                "tx0_block_index": 310491,
                "tx1_block_index": 310492,
                "block_index": 310513,
                "tx0_expiration": 2000,
                "tx1_expiration": 2000,
                "match_expire_index": 310512,
                "fee_paid": 7200,
                "status": "expired",
                "confirmed": true,
                "block_time": 310513000,
                "forward_asset_info": {
                    "divisible": true,
                    "asset_longname": null,
                    "description": "The Counterparty protocol native currency",
                    "locked": true,
                    "issuer": null
                },
                "backward_asset_info": {
                    "divisible": true,
                    "asset_longname": null,
                    "description": "The Bitcoin cryptocurrency",
                    "locked": false,
                    "issuer": null
                },
                "forward_quantity_normalized": "1.00000000",
                "backward_quantity_normalized": "0.00800000",
                "fee_paid_normalized": "0.00007200"
            }
        ],
        "next_cursor": null,
        "result_count": 1
    },
    "http://localhost:10009/v2/bets?verbose=true": {
        "result": [
            {
                "tx_index": 113,
                "tx_hash": "d79b590e4ec3e74cbc3eb4d0f956ce7abb0e3af2ccac85ff90ed8acf13f2e048",
                "block_index": 310112,
                "source": "2MyJHMUenMWonC35Yi6PHC7i2tkS7PuomCy",
                "feed_address": "2MyJHMUenMWonC35Yi6PHC7i2tkS7PuomCy",
                "bet_type": 3,
                "deadline": 1388000200,
                "wager_quantity": 10,
                "wager_remaining": 10,
                "counterwager_quantity": 10,
                "counterwager_remaining": 10,
                "target_value": 0.0,
                "leverage": 5040,
                "expiration": 1000,
                "expire_index": 311112,
                "fee_fraction_int": 5000000,
                "status": "open",
                "confirmed": true,
                "block_time": 310112000,
                "fee_fraction_int_normalized": "0.05000000"
            },
            {
                "tx_index": 102,
                "tx_hash": "db4ea092bea6036e3d1e5f6ec863db9b900252b4f4d6d9faa6165323f433c51e",
                "block_index": 310101,
                "source": "mtQheFaSfWELRB2MyMBaiWjdDm6ux9Ezns",
                "feed_address": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "bet_type": 3,
                "deadline": 1388000200,
                "wager_quantity": 10,
                "wager_remaining": 10,
                "counterwager_quantity": 10,
                "counterwager_remaining": 10,
                "target_value": 0.0,
                "leverage": 5040,
                "expiration": 1000,
                "expire_index": 311101,
                "fee_fraction_int": 5000000,
                "status": "open",
                "confirmed": true,
                "block_time": 310101000,
                "fee_fraction_int_normalized": "0.05000000"
            }
        ],
        "next_cursor": null,
        "result_count": 2
    },
    "http://localhost:10009/v2/bets/2a2169991597036b6dad687ea1feffd55465a204466f40c35cbba811cb3109b1?verbose=true": {
        "result": {
            "tx_index": 20,
            "tx_hash": "2a2169991597036b6dad687ea1feffd55465a204466f40c35cbba811cb3109b1",
            "block_index": 310020,
            "source": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
            "feed_address": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
            "bet_type": 1,
            "deadline": 1388000001,
            "wager_quantity": 9,
            "wager_remaining": 0,
            "counterwager_quantity": 9,
            "counterwager_remaining": 0,
            "target_value": 0.0,
            "leverage": 5040,
            "expiration": 100,
            "expire_index": 310119,
            "fee_fraction_int": 5000000,
            "status": "filled",
            "confirmed": true,
            "block_time": 310020000,
            "fee_fraction_int_normalized": "0.05000000"
        }
    },
    "http://localhost:10009/v2/bets/2a2169991597036b6dad687ea1feffd55465a204466f40c35cbba811cb3109b1/matches?verbose=true": {
        "result": [],
        "next_cursor": null,
        "result_count": 0
    },
    "http://localhost:10009/v2/bets/2a2169991597036b6dad687ea1feffd55465a204466f40c35cbba811cb3109b1/resolutions?verbose=true": {
        "result": [
            {
                "bet_match_id": "2a2169991597036b6dad687ea1feffd55465a204466f40c35cbba811cb3109b1_5c6562ddad0bc8a1faaded18813a65522cd273709acd190cf9d3271817eefc93",
                "bet_match_type_id": 1,
                "block_index": 310102,
                "winner": null,
                "settled": true,
                "bull_credit": 9,
                "bear_credit": 9,
                "escrow_less_fee": null,
                "fee": 0,
                "confirmed": true,
                "block_time": 310102000
            }
        ],
        "next_cursor": null,
        "result_count": 1
    },
    "http://localhost:10009/v2/burns?verbose=true": {
        "result": [
            {
                "tx_index": 494,
                "tx_hash": "c0733e1287afb1bb3d2fdacd1db7c74ea84f14362f3a8d1c038e662e1d0b1b1a",
                "block_index": 310493,
                "source": "mnfAHmddVibnZNSkh8DvKaQoiEfNsxjXzH",
                "burned": 62000000,
                "earned": 92995878046,
                "status": "valid",
                "confirmed": true,
                "block_time": 310493000,
                "burned_normalized": "0.62000000",
                "earned_normalized": "929.95878000"
            },
            {
                "tx_index": 117,
                "tx_hash": "27929c4fcad307a76ea7da34dd2691084f678a22ee43ce7f3842b78730ee08f9",
                "block_index": 310116,
                "source": "tb1qw508d6qejxtdg4y5r3zarvary0c5xw7kxpjzsx",
                "burned": 62000000,
                "earned": 92999030129,
                "status": "valid",
                "confirmed": true,
                "block_time": 310116000,
                "burned_normalized": "0.62000000",
                "earned_normalized": "929.99030000"
            },
            {
                "tx_index": 109,
                "tx_hash": "93c6d2499a0536c31c77a3db3fc9fc8456fbd0726c45b8f716af16f938727a73",
                "block_index": 310108,
                "source": "2MyJHMUenMWonC35Yi6PHC7i2tkS7PuomCy",
                "burned": 31000000,
                "earned": 46499548508,
                "status": "valid",
                "confirmed": true,
                "block_time": 310108000,
                "burned_normalized": "0.31000000",
                "earned_normalized": "464.99549000"
            },
            {
                "tx_index": 107,
                "tx_hash": "bbf0b9f6992755a3e371fb0c0b72f6828831e81c6f7ada6f95ba1104fb901ac3",
                "block_index": 310106,
                "source": "mrPk7hTeZWjjSCrMTC2ET4SAUThQt7C4uK",
                "burned": 10000,
                "earned": 14999857,
                "status": "valid",
                "confirmed": true,
                "block_time": 310106000,
                "burned_normalized": "0.00010000",
                "earned_normalized": "0.14999857"
            },
            {
                "tx_index": 106,
                "tx_hash": "e062d1ebf4cb71bd22d80c949b956f5286080838a7607ccf87945b2b3abfcafa",
                "block_index": 310105,
                "source": "mwtPsLQxW9xpm7gdLmwWvJK5ABdPUVJm42",
                "burned": 62000000,
                "earned": 92999122099,
                "status": "valid",
                "confirmed": true,
                "block_time": 310105000,
                "burned_normalized": "0.62000000",
                "earned_normalized": "929.99122000"
            },
            {
                "tx_index": 105,
                "tx_hash": "95332a7e3e2b04f2c10e3027327bfc31b686947fb05381e28903e3ff569bd4ff",
                "block_index": 310104,
                "source": "munimLLHjPhGeSU5rYB2HN79LJa8bRZr5b",
                "burned": 62000000,
                "earned": 92999130460,
                "status": "valid",
                "confirmed": true,
                "block_time": 310104000,
                "burned_normalized": "0.62000000",
                "earned_normalized": "929.99130000"
            },
            {
                "tx_index": 104,
                "tx_hash": "65d4048700fb8ae03f321be93c6669b8497f506a1f43920f96d994f43358c35b",
                "block_index": 310103,
                "source": "myAtcJEHAsDLbTkai6ipWDZeeL7VkxXsiM",
                "burned": 62000000,
                "earned": 92999138821,
                "status": "valid",
                "confirmed": true,
                "block_time": 310103000,
                "burned_normalized": "0.62000000",
                "earned_normalized": "929.99139000"
            },
            {
                "tx_index": 1,
                "tx_hash": "6dc5b0a33d4d4297e0f5cc2d23ae307951d32aab2d86b7fa147b385219f3a597",
                "block_index": 310000,
                "source": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "burned": 62000000,
                "earned": 93000000000,
                "status": "valid",
                "confirmed": true,
                "block_time": 310000000,
                "burned_normalized": "0.62000000",
                "earned_normalized": "930.00000000"
            }
        ],
        "next_cursor": null,
        "result_count": 8
    },
    "http://localhost:10009/v2/dispensers?verbose=true": {
        "result": [
            {
                "tx_index": 511,
                "tx_hash": "af67f6762d4b00b4bf5fb93a9d556e007a147aa80fbf6a84410df05a0182da9e",
                "block_index": 310510,
                "source": "munimLLHjPhGeSU5rYB2HN79LJa8bRZr5b",
                "asset": "TESTDISP",
                "give_quantity": 100,
                "escrow_quantity": 100,
                "satoshirate": 100,
                "status": 0,
                "give_remaining": 100,
                "oracle_address": null,
                "last_status_tx_hash": null,
                "origin": "munimLLHjPhGeSU5rYB2HN79LJa8bRZr5b",
                "dispense_count": 0,
                "last_status_tx_source": null,
                "close_block_index": null,
                "confirmed": true,
                "fiat_price": null,
                "oracle_price": null,
                "fiat_unit": null,
                "oracle_price_last_updated": null,
                "satoshi_price": 100,
                "block_time": 310510000,
                "asset_info": {
                    "asset_longname": null,
                    "description": "Test dispensers asset",
                    "issuer": "munimLLHjPhGeSU5rYB2HN79LJa8bRZr5b",
                    "divisible": false,
                    "locked": false
                },
                "give_quantity_normalized": "100",
                "give_remaining_normalized": "100",
                "escrow_quantity_normalized": "100",
                "satoshirate_normalized": "0.00000100",
                "satoshi_price_normalized": "0.00000100"
            },
            {
                "tx_index": 108,
                "tx_hash": "9834219d2825b4d85ca7ee0d75a5372d9d42ce75eb9144951fca1af5a25915ec",
                "block_index": 310107,
                "source": "munimLLHjPhGeSU5rYB2HN79LJa8bRZr5b",
                "asset": "XCP",
                "give_quantity": 100,
                "escrow_quantity": 100,
                "satoshirate": 100,
                "status": 0,
                "give_remaining": 100,
                "oracle_address": null,
                "last_status_tx_hash": null,
                "origin": "munimLLHjPhGeSU5rYB2HN79LJa8bRZr5b",
                "dispense_count": 0,
                "last_status_tx_source": null,
                "close_block_index": null,
                "confirmed": true,
                "fiat_price": null,
                "oracle_price": null,
                "fiat_unit": null,
                "oracle_price_last_updated": null,
                "satoshi_price": 100,
                "block_time": 310107000,
                "asset_info": {
                    "divisible": true,
                    "asset_longname": null,
                    "description": "The Counterparty protocol native currency",
                    "locked": true,
                    "issuer": null
                },
                "give_quantity_normalized": "0.00000100",
                "give_remaining_normalized": "0.00000100",
                "escrow_quantity_normalized": "0.00000100",
                "satoshirate_normalized": "0.00000100",
                "satoshi_price_normalized": "0.00000100"
            }
        ],
        "next_cursor": null,
        "result_count": 2
    },
    "http://localhost:10009/v2/dispensers/9834219d2825b4d85ca7ee0d75a5372d9d42ce75eb9144951fca1af5a25915ec?verbose=true": {
        "result": {
            "tx_index": 108,
            "tx_hash": "9834219d2825b4d85ca7ee0d75a5372d9d42ce75eb9144951fca1af5a25915ec",
            "block_index": 310107,
            "source": "munimLLHjPhGeSU5rYB2HN79LJa8bRZr5b",
            "asset": "XCP",
            "give_quantity": 100,
            "escrow_quantity": 100,
            "satoshirate": 100,
            "status": 0,
            "give_remaining": 100,
            "oracle_address": null,
            "last_status_tx_hash": null,
            "origin": "munimLLHjPhGeSU5rYB2HN79LJa8bRZr5b",
            "dispense_count": 0,
            "last_status_tx_source": null,
            "close_block_index": null,
            "confirmed": true,
            "fiat_price": null,
            "oracle_price": null,
            "fiat_unit": null,
            "oracle_price_last_updated": null,
            "satoshi_price": 100,
            "block_time": 310107000,
            "asset_info": {
                "divisible": true,
                "asset_longname": null,
                "description": "The Counterparty protocol native currency",
                "locked": true,
                "issuer": null
            },
            "give_quantity_normalized": "0.00000100",
            "give_remaining_normalized": "0.00000100",
            "escrow_quantity_normalized": "0.00000100",
            "satoshirate_normalized": "0.00000100",
            "satoshi_price_normalized": "0.00000100"
        }
    },
    "http://localhost:10009/v2/dispensers/9834219d2825b4d85ca7ee0d75a5372d9d42ce75eb9144951fca1af5a25915ec/dispenses?verbose=true": {
        "result": [],
        "next_cursor": null,
        "result_count": 0
    },
    "http://localhost:10009/v2/dividends?verbose=true": {
        "result": [],
        "next_cursor": null,
        "result_count": 0
    },
    "http://localhost:10009/v2/events?limit=5&verbose=true": {
        "result": [
            {
                "event_index": 1739,
                "event": "BLOCK_PARSED",
                "params": {
                    "block_index": 310703,
                    "ledger_hash": "cbc22749655ce8e7fb2eeb4d1737a04dec7bc096ce84b00bf83ca4c7040f448a",
                    "messages_hash": "82e79417c7ec1856ced190d3fe19150f1510992e5abfd326b92edd143260259d",
                    "transaction_count": 0,
                    "txlist_hash": "b5cae1a9f44982ed3dd38f90d95cba93efbe9fd1e55b0f367e45336f3e68f786",
                    "block_time": 310703000
                },
                "tx_hash": null,
                "block_index": 310703,
                "block_time": 310703000
            },
            {
                "event_index": 1738,
                "event": "NEW_BLOCK",
                "params": {
                    "block_hash": "b8b21ab596ed7ad84e449d098c04d86cbb6623c5e88af7772166882efbd91218",
                    "block_index": 310703,
                    "block_time": 310703000,
                    "difficulty": null,
                    "ledger_hash": null,
                    "previous_block_hash": null,
                    "txlist_hash": null
                },
                "tx_hash": null,
                "block_index": 310703,
                "block_time": 310703000
            },
            {
                "event_index": 1737,
                "event": "BLOCK_PARSED",
                "params": {
                    "block_index": 310702,
                    "ledger_hash": "7cb406b1ee19e1ecfc41009f312d918ac0574b92809d99dbfd99bac88992a4fe",
                    "messages_hash": "9e09c7b47df3a09f541b40931ccce3b512ca113a6d4dd5e6d3505e29bfea8e31",
                    "transaction_count": 0,
                    "txlist_hash": "0b912b59131e6aef7fb3313ef75bc138dc1f612d76e77cf583074564ddb6d35c",
                    "block_time": 310702000
                },
                "tx_hash": null,
                "block_index": 310702,
                "block_time": 310702000
            },
            {
                "event_index": 1736,
                "event": "NEW_BLOCK",
                "params": {
                    "block_hash": "69cb443673c221a8e157d61707d52cf980c87faf5c3b31a5850ff43be70883c8",
                    "block_index": 310702,
                    "block_time": 310702000,
                    "difficulty": null,
                    "ledger_hash": null,
                    "previous_block_hash": null,
                    "txlist_hash": null
                },
                "tx_hash": null,
                "block_index": 310702,
                "block_time": 310702000
            },
            {
                "event_index": 1735,
                "event": "BLOCK_PARSED",
                "params": {
                    "block_index": 310701,
                    "ledger_hash": "562a0f298a796b936c21bf552e6945ed2263b62d4022f7a072dc6a4790173e8d",
                    "messages_hash": "a12df3e7bce37d8f4a9c4c0a2a3f367fb071142acff947cecc23173b4925fb53",
                    "transaction_count": 0,
                    "txlist_hash": "6b6c62d0facf03efea19bf2e8fa69ecd3c433d45a0ca6b3ed57ed0e5d69b1e2f",
                    "block_time": 310701000
                },
                "tx_hash": null,
                "block_index": 310701,
                "block_time": 310701000
            }
        ],
        "next_cursor": 1734,
        "result_count": 1740
    },
    "http://localhost:10009/v2/events/10?limit=5&verbose=true": {
        "result": {
            "event_index": 10,
            "event": "ASSET_CREATION",
            "params": {
                "asset_id": "697326324582",
                "asset_longname": null,
                "asset_name": "DIVISIBLE",
                "block_index": 310001,
                "block_time": 310001000
            },
            "tx_hash": "1fc2e5a57f584b2f2edd05676e75c33d03eed1d3098cc0550ea33474e3ec9db1",
            "block_index": 310001,
            "block_time": 310001000
        }
    },
    "http://localhost:10009/v2/events/counts?limit=5&verbose=true": {
        "result": [
            {
                "event": "TRANSACTION_PARSED",
                "event_count": 56
            },
            {
                "event": "SEND",
                "event_count": 9
            },
            {
                "event": "ORDER_UPDATE",
                "event_count": 4
            },
            {
                "event": "ORDER_MATCH_UPDATE",
                "event_count": 1
            },
            {
                "event": "ORDER_MATCH_EXPIRATION",
                "event_count": 1
            }
        ],
        "next_cursor": "ORDER_MATCH",
        "result_count": 31
    },
    "http://localhost:10009/v2/events/CREDIT?limit=5&verbose=true": {
        "result": [
            {
                "event_index": 1507,
                "event": "CREDIT",
                "params": {
                    "address": "myAtcJEHAsDLbTkai6ipWDZeeL7VkxXsiM",
                    "asset": "XCP",
                    "block_index": 310588,
                    "calling_function": "recredit wager remaining",
                    "event": "41e821ae1c6b553d0fa5d5a807b2e7e9ffaec5d62706d9d2a59c6e65a3ed9cef",
                    "quantity": 9,
                    "tx_index": 0,
                    "utxo": null,
                    "utxo_address": null,
                    "block_time": 310588000,
                    "asset_info": {
                        "divisible": true,
                        "asset_longname": null,
                        "description": "The Counterparty protocol native currency",
                        "locked": true,
                        "issuer": null
                    },
                    "quantity_normalized": "0.00000009"
                },
                "tx_hash": null,
                "block_index": 310588,
                "block_time": 310588000
            },
            {
                "event_index": 1338,
                "event": "CREDIT",
                "params": {
                    "address": "munimLLHjPhGeSU5rYB2HN79LJa8bRZr5b",
                    "asset": "TESTDISP",
                    "block_index": 310509,
                    "calling_function": "issuance",
                    "event": "01e52e3770a932827a4b4e5db193eef916fcf69bda1a7944298210a74f1633a1",
                    "quantity": 1000,
                    "tx_index": 510,
                    "utxo": null,
                    "utxo_address": null,
                    "block_time": 310509000,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "Test dispensers asset",
                        "issuer": "munimLLHjPhGeSU5rYB2HN79LJa8bRZr5b",
                        "divisible": false,
                        "locked": false
                    },
                    "quantity_normalized": "1000"
                },
                "tx_hash": "01e52e3770a932827a4b4e5db193eef916fcf69bda1a7944298210a74f1633a1",
                "block_index": 310509,
                "block_time": 310509000
            },
            {
                "event_index": 1328,
                "event": "CREDIT",
                "params": {
                    "address": null,
                    "asset": "DIVISIBLE",
                    "block_index": 310508,
                    "calling_function": "attach to utxo",
                    "event": "ff23dc6911d401e9868b8ac747d31febc2078f004eff7b56a8895c107ed8a73e",
                    "quantity": 1,
                    "tx_index": 509,
                    "utxo": "4f0433ba841038e2e16328445930dd7bca35309b14b0da4451c8f94c631368b8:1",
                    "utxo_address": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                    "block_time": 310508000,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "Divisible asset",
                        "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                        "divisible": true,
                        "locked": false
                    },
                    "quantity_normalized": "0.00000001"
                },
                "tx_hash": "ff23dc6911d401e9868b8ac747d31febc2078f004eff7b56a8895c107ed8a73e",
                "block_index": 310508,
                "block_time": 310508000
            },
            {
                "event_index": 1318,
                "event": "CREDIT",
                "params": {
                    "address": null,
                    "asset": "XCP",
                    "block_index": 310507,
                    "calling_function": "attach to utxo",
                    "event": "9d2243c84df0132061884dfce73f3b7c5262a1cde0d029de472a079f3a1c4883",
                    "quantity": 100,
                    "tx_index": 508,
                    "utxo": "4f0433ba841038e2e16328445930dd7bca35309b14b0da4451c8f94c631368b8:1",
                    "utxo_address": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                    "block_time": 310507000,
                    "asset_info": {
                        "divisible": true,
                        "asset_longname": null,
                        "description": "The Counterparty protocol native currency",
                        "locked": true,
                        "issuer": null
                    },
                    "quantity_normalized": "0.00000100"
                },
                "tx_hash": "9d2243c84df0132061884dfce73f3b7c5262a1cde0d029de472a079f3a1c4883",
                "block_index": 310507,
                "block_time": 310507000
            },
            {
                "event_index": 1308,
                "event": "CREDIT",
                "params": {
                    "address": "mtQheFaSfWELRB2MyMBaiWjdDm6ux9Ezns",
                    "asset": "A160361285792733729",
                    "block_index": 310506,
                    "calling_function": "premint",
                    "event": "0d56c40c31829bbd06cdc039eda95c844c98208ec981ef419093c386eab2d0e9",
                    "quantity": 20,
                    "tx_index": 0,
                    "utxo": null,
                    "utxo_address": null,
                    "block_time": 310506000,
                    "asset_info": {
                        "asset_longname": "",
                        "description": "softcap description",
                        "issuer": "mtQheFaSfWELRB2MyMBaiWjdDm6ux9Ezns",
                        "divisible": true,
                        "locked": true
                    },
                    "quantity_normalized": "0.00000020"
                },
                "tx_hash": "ba6c7582f5c1e39bed32074c16f54ab338c79d0eefd3c8a7ba1f949e2febcd18",
                "block_index": 310506,
                "block_time": 310506000
            }
        ],
        "next_cursor": 1307,
        "result_count": 53
    },
    "http://localhost:10009/v2/events/CREDIT/count?limit=5&verbose=true": {
        "result": {
            "event": "CREDIT",
            "event_count": 53
        }
    },
    "http://localhost:10009/v2/dispenses?verbose=true": {
        "result": [],
        "next_cursor": null,
        "result_count": 0
    },
    "http://localhost:10009/v2/sends?verbose=true": {
        "result": [
            {
                "tx_index": 509,
                "tx_hash": "ff23dc6911d401e9868b8ac747d31febc2078f004eff7b56a8895c107ed8a73e",
                "block_index": 310508,
                "source": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "destination": "4f0433ba841038e2e16328445930dd7bca35309b14b0da4451c8f94c631368b8:1",
                "asset": "DIVISIBLE",
                "quantity": 1,
                "status": "valid",
                "msg_index": 0,
                "memo": null,
                "fee_paid": 10,
                "confirmed": true,
                "block_time": 310508000,
                "asset_info": {
                    "asset_longname": null,
                    "description": "Divisible asset",
                    "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                    "divisible": true,
                    "locked": false
                },
                "quantity_normalized": "0.00000001",
                "fee_paid_normalized": "0.00000010"
            },
            {
                "tx_index": 508,
                "tx_hash": "9d2243c84df0132061884dfce73f3b7c5262a1cde0d029de472a079f3a1c4883",
                "block_index": 310507,
                "source": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "destination": "4f0433ba841038e2e16328445930dd7bca35309b14b0da4451c8f94c631368b8:1",
                "asset": "XCP",
                "quantity": 100,
                "status": "valid",
                "msg_index": 0,
                "memo": null,
                "fee_paid": 10,
                "confirmed": true,
                "block_time": 310507000,
                "asset_info": {
                    "divisible": true,
                    "asset_longname": null,
                    "description": "The Counterparty protocol native currency",
                    "locked": true,
                    "issuer": null
                },
                "quantity_normalized": "0.00000100",
                "fee_paid_normalized": "0.00000010"
            },
            {
                "tx_index": 497,
                "tx_hash": "a35ab1736565aceddbd1d71f92fc7f39d1361006aa9099f731e54e762964d5ba",
                "block_index": 310496,
                "source": "mnfAHmddVibnZNSkh8DvKaQoiEfNsxjXzH",
                "destination": "mqPCfvqTfYctXMUfmniXeG2nyaN8w6tPmj",
                "asset": "XCP",
                "quantity": 92945878046,
                "status": "valid",
                "msg_index": 0,
                "memo": null,
                "fee_paid": 0,
                "confirmed": true,
                "block_time": 310496000,
                "asset_info": {
                    "divisible": true,
                    "asset_longname": null,
                    "description": "The Counterparty protocol native currency",
                    "locked": true,
                    "issuer": null
                },
                "quantity_normalized": "929.45878000",
                "fee_paid_normalized": "0.00000000"
            },
            {
                "tx_index": 496,
                "tx_hash": "02156b9a1f643fb48330396274a37620c8abbbe5eddb2f8b53dadd135f5d2e2e",
                "block_index": 310495,
                "source": "mnfAHmddVibnZNSkh8DvKaQoiEfNsxjXzH",
                "destination": "mqPCfvqTfYctXMUfmniXeG2nyaN8w6tPmj",
                "asset": "DIVIDEND",
                "quantity": 10,
                "status": "valid",
                "msg_index": 0,
                "memo": null,
                "fee_paid": 0,
                "confirmed": true,
                "block_time": 310495000,
                "asset_info": {
                    "asset_longname": null,
                    "description": "",
                    "issuer": "mnfAHmddVibnZNSkh8DvKaQoiEfNsxjXzH",
                    "divisible": true,
                    "locked": false
                },
                "quantity_normalized": "0.00000010",
                "fee_paid_normalized": "0.00000000"
            },
            {
                "tx_index": 483,
                "tx_hash": "c8716524f33646b9af94d6f5e52494ff3b34466497094b1db2ab920e4f79bc34",
                "block_index": 310482,
                "source": "mtQheFaSfWELRB2MyMBaiWjdDm6ux9Ezns",
                "destination": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "asset": "XCP",
                "quantity": 100000000,
                "status": "valid",
                "msg_index": 0,
                "memo": "fade0001",
                "fee_paid": 0,
                "confirmed": true,
                "block_time": 310482000,
                "asset_info": {
                    "divisible": true,
                    "asset_longname": null,
                    "description": "The Counterparty protocol native currency",
                    "locked": true,
                    "issuer": null
                },
                "quantity_normalized": "1.00000000",
                "fee_paid_normalized": "0.00000000"
            },
            {
                "tx_index": 482,
                "tx_hash": "b00bdf03402d81a2cbdbeac4b0df90cff5ab6bf9688f653383d49fe42b8422a5",
                "block_index": 310481,
                "source": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "destination": "mtQheFaSfWELRB2MyMBaiWjdDm6ux9Ezns",
                "asset": "XCP",
                "quantity": 100000000,
                "status": "valid",
                "msg_index": 0,
                "memo": "68656c6c6f",
                "fee_paid": 0,
                "confirmed": true,
                "block_time": 310481000,
                "asset_info": {
                    "divisible": true,
                    "asset_longname": null,
                    "description": "The Counterparty protocol native currency",
                    "locked": true,
                    "issuer": null
                },
                "quantity_normalized": "1.00000000",
                "fee_paid_normalized": "0.00000000"
            },
            {
                "tx_index": 111,
                "tx_hash": "f6a0f819e899b407cbfa07b4eff3d58902af3899abfbaa47d5f31d5b398e76e7",
                "block_index": 310110,
                "source": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "destination": "2MyJHMUenMWonC35Yi6PHC7i2tkS7PuomCy",
                "asset": "DIVISIBLE",
                "quantity": 100000000,
                "status": "valid",
                "msg_index": 0,
                "memo": null,
                "fee_paid": 0,
                "confirmed": true,
                "block_time": 310110000,
                "asset_info": {
                    "asset_longname": null,
                    "description": "Divisible asset",
                    "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                    "divisible": true,
                    "locked": false
                },
                "quantity_normalized": "1.00000000",
                "fee_paid_normalized": "0.00000000"
            },
            {
                "tx_index": 16,
                "tx_hash": "e3b6667b7baa515048a7fcf2be7818e3e7622371236b78e19b4b08e2d7e7818c",
                "block_index": 310015,
                "source": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "destination": "1_mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc_mtQheFaSfWELRB2MyMBaiWjdDm6ux9Ezns_2",
                "asset": "NODIVISIBLE",
                "quantity": 10,
                "status": "valid",
                "msg_index": 0,
                "memo": null,
                "fee_paid": 0,
                "confirmed": true,
                "block_time": 310015000,
                "asset_info": {
                    "asset_longname": null,
                    "description": "No divisible asset",
                    "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                    "divisible": false,
                    "locked": false
                },
                "quantity_normalized": "10",
                "fee_paid_normalized": "0.00000000"
            },
            {
                "tx_index": 15,
                "tx_hash": "1facb0072f16f6bdca64ea859c82b850f58f0ec7ff410d901679772a4727515a",
                "block_index": 310014,
                "source": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "destination": "mtQheFaSfWELRB2MyMBaiWjdDm6ux9Ezns",
                "asset": "NODIVISIBLE",
                "quantity": 5,
                "status": "valid",
                "msg_index": 0,
                "memo": null,
                "fee_paid": 0,
                "confirmed": true,
                "block_time": 310014000,
                "asset_info": {
                    "asset_longname": null,
                    "description": "No divisible asset",
                    "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                    "divisible": false,
                    "locked": false
                },
                "quantity_normalized": "5",
                "fee_paid_normalized": "0.00000000"
            },
            {
                "tx_index": 14,
                "tx_hash": "0cfeeb559ed794d067557df0376a6c213b48b174b80cdb2c3c6d365cf538e132",
                "block_index": 310013,
                "source": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "destination": "1_mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc_mtQheFaSfWELRB2MyMBaiWjdDm6ux9Ezns_2",
                "asset": "DIVISIBLE",
                "quantity": 1000000000,
                "status": "valid",
                "msg_index": 0,
                "memo": null,
                "fee_paid": 0,
                "confirmed": true,
                "block_time": 310013000,
                "asset_info": {
                    "asset_longname": null,
                    "description": "Divisible asset",
                    "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                    "divisible": true,
                    "locked": false
                },
                "quantity_normalized": "10.00000000",
                "fee_paid_normalized": "0.00000000"
            },
            {
                "tx_index": 13,
                "tx_hash": "698e97e507da8623cf38ab42701853443c8f7fe0d93b4674aabb42f9800ee9d6",
                "block_index": 310012,
                "source": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "destination": "1_mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc_mtQheFaSfWELRB2MyMBaiWjdDm6ux9Ezns_2",
                "asset": "XCP",
                "quantity": 300000000,
                "status": "valid",
                "msg_index": 0,
                "memo": null,
                "fee_paid": 0,
                "confirmed": true,
                "block_time": 310012000,
                "asset_info": {
                    "divisible": true,
                    "asset_longname": null,
                    "description": "The Counterparty protocol native currency",
                    "locked": true,
                    "issuer": null
                },
                "quantity_normalized": "3.00000000",
                "fee_paid_normalized": "0.00000000"
            },
            {
                "tx_index": 9,
                "tx_hash": "4fd55abadfdbe77c3bda2431749cca934a29994a179620a62c1b57f28bd62a43",
                "block_index": 310008,
                "source": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "destination": "mtQheFaSfWELRB2MyMBaiWjdDm6ux9Ezns",
                "asset": "XCP",
                "quantity": 100000000,
                "status": "valid",
                "msg_index": 0,
                "memo": null,
                "fee_paid": 0,
                "confirmed": true,
                "block_time": 310008000,
                "asset_info": {
                    "divisible": true,
                    "asset_longname": null,
                    "description": "The Counterparty protocol native currency",
                    "locked": true,
                    "issuer": null
                },
                "quantity_normalized": "1.00000000",
                "fee_paid_normalized": "0.00000000"
            },
            {
                "tx_index": 8,
                "tx_hash": "6e91ae23de2035e3e28c3322712212333592a1f666bcff9dd91aec45d5ea2753",
                "block_index": 310007,
                "source": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "destination": "mtQheFaSfWELRB2MyMBaiWjdDm6ux9Ezns",
                "asset": "DIVISIBLE",
                "quantity": 100000000,
                "status": "valid",
                "msg_index": 0,
                "memo": null,
                "fee_paid": 0,
                "confirmed": true,
                "block_time": 310007000,
                "asset_info": {
                    "asset_longname": null,
                    "description": "Divisible asset",
                    "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                    "divisible": true,
                    "locked": false
                },
                "quantity_normalized": "1.00000000",
                "fee_paid_normalized": "0.00000000"
            }
        ],
        "next_cursor": null,
        "result_count": 13
    },
    "http://localhost:10009/v2/issuances?verbose=true": {
        "result": [
            {
                "tx_index": 510,
                "tx_hash": "01e52e3770a932827a4b4e5db193eef916fcf69bda1a7944298210a74f1633a1",
                "msg_index": 0,
                "block_index": 310509,
                "asset": "TESTDISP",
                "quantity": 1000,
                "divisible": false,
                "source": "munimLLHjPhGeSU5rYB2HN79LJa8bRZr5b",
                "issuer": "munimLLHjPhGeSU5rYB2HN79LJa8bRZr5b",
                "transfer": false,
                "callable": false,
                "call_date": 0,
                "call_price": 0.0,
                "description": "Test dispensers asset",
                "fee_paid": 50000000,
                "status": "valid",
                "asset_longname": null,
                "locked": false,
                "reset": false,
                "description_locked": false,
                "fair_minting": false,
                "asset_events": "creation",
                "confirmed": true,
                "block_time": 310509000,
                "quantity_normalized": "1000",
                "fee_paid_normalized": "0.50000000"
            },
            {
                "tx_index": 507,
                "tx_hash": "ba6c7582f5c1e39bed32074c16f54ab338c79d0eefd3c8a7ba1f949e2febcd18",
                "msg_index": 0,
                "block_index": 310506,
                "asset": "A160361285792733729",
                "quantity": 20,
                "divisible": true,
                "source": "mtQheFaSfWELRB2MyMBaiWjdDm6ux9Ezns",
                "issuer": "mtQheFaSfWELRB2MyMBaiWjdDm6ux9Ezns",
                "transfer": false,
                "callable": false,
                "call_date": 0,
                "call_price": 0.0,
                "description": "softcap description",
                "fee_paid": 0,
                "status": "valid",
                "asset_longname": "",
                "locked": true,
                "reset": false,
                "description_locked": true,
                "fair_minting": false,
                "asset_events": "fairmint",
                "confirmed": true,
                "block_time": 310506000,
                "quantity_normalized": "0.00000020",
                "fee_paid_normalized": "0.00000000"
            },
            {
                "tx_index": 506,
                "tx_hash": "6f4c3965a1cc2891e7dcdb4a3c12b73e6cf2e56e750dabcdf87c82443f08e1d8",
                "msg_index": 0,
                "block_index": 310505,
                "asset": "A160361285792733729",
                "quantity": 10,
                "divisible": true,
                "source": "mtQheFaSfWELRB2MyMBaiWjdDm6ux9Ezns",
                "issuer": "mtQheFaSfWELRB2MyMBaiWjdDm6ux9Ezns",
                "transfer": false,
                "callable": false,
                "call_date": 0,
                "call_price": 0.0,
                "description": "softcap description",
                "fee_paid": 0,
                "status": "valid",
                "asset_longname": "",
                "locked": false,
                "reset": false,
                "description_locked": false,
                "fair_minting": true,
                "asset_events": "fairmint",
                "confirmed": true,
                "block_time": 310505000,
                "quantity_normalized": "0.00000010",
                "fee_paid_normalized": "0.00000000"
            },
            {
                "tx_index": 505,
                "tx_hash": "0d56c40c31829bbd06cdc039eda95c844c98208ec981ef419093c386eab2d0e9",
                "msg_index": 0,
                "block_index": 310504,
                "asset": "A160361285792733729",
                "quantity": 20,
                "divisible": true,
                "source": "mtQheFaSfWELRB2MyMBaiWjdDm6ux9Ezns",
                "issuer": "mtQheFaSfWELRB2MyMBaiWjdDm6ux9Ezns",
                "transfer": false,
                "callable": false,
                "call_date": 0,
                "call_price": 0.0,
                "description": "softcap description",
                "fee_paid": 0,
                "status": "valid",
                "asset_longname": "",
                "locked": false,
                "reset": false,
                "description_locked": false,
                "fair_minting": true,
                "asset_events": "open_fairminter",
                "confirmed": true,
                "block_time": 310504000,
                "quantity_normalized": "0.00000020",
                "fee_paid_normalized": "0.00000000"
            },
            {
                "tx_index": 504,
                "tx_hash": "c3d10301a50c49b3c9515f88847b92ce969729c194c064f411d610bc3b3704e7",
                "msg_index": 0,
                "block_index": 310503,
                "asset": "QAIDFAIRMIN",
                "quantity": 20,
                "divisible": true,
                "source": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "transfer": false,
                "callable": false,
                "call_date": 0,
                "call_price": 0.0,
                "description": "",
                "fee_paid": 50000000,
                "status": "valid",
                "asset_longname": "",
                "locked": false,
                "reset": false,
                "description_locked": false,
                "fair_minting": true,
                "asset_events": "open_fairminter",
                "confirmed": true,
                "block_time": 310503000,
                "quantity_normalized": "0.00000020",
                "fee_paid_normalized": "0.50000000"
            },
            {
                "tx_index": 503,
                "tx_hash": "9830e28496bb94f7e9f829abd26fd2cdce24ccb637e55488537a7080979ad9c1",
                "msg_index": 0,
                "block_index": 310502,
                "asset": "RAIDFAIRMIN",
                "quantity": 20,
                "divisible": true,
                "source": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "transfer": false,
                "callable": false,
                "call_date": 0,
                "call_price": 0.0,
                "description": "",
                "fee_paid": 50000000,
                "status": "valid",
                "asset_longname": "",
                "locked": false,
                "reset": false,
                "description_locked": false,
                "fair_minting": true,
                "asset_events": "open_fairminter",
                "confirmed": true,
                "block_time": 310502000,
                "quantity_normalized": "0.00000020",
                "fee_paid_normalized": "0.50000000"
            },
            {
                "tx_index": 502,
                "tx_hash": "d42849c71a32e388606982d3384ec8ae12e5c0ba2f742cb4ddf0649fb66e1f67",
                "msg_index": 0,
                "block_index": 310501,
                "asset": "FREEFAIRMIN",
                "quantity": 10,
                "divisible": true,
                "source": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "transfer": false,
                "callable": false,
                "call_date": 0,
                "call_price": 0.0,
                "description": "",
                "fee_paid": 0,
                "status": "valid",
                "asset_longname": "",
                "locked": false,
                "reset": false,
                "description_locked": false,
                "fair_minting": true,
                "asset_events": "fairmint",
                "confirmed": true,
                "block_time": 310501000,
                "quantity_normalized": "0.00000010",
                "fee_paid_normalized": "0.00000000"
            },
            {
                "tx_index": 501,
                "tx_hash": "13e642d78db80af715cdce12a9fca81965752bbfb59549341fa4760da3d32afe",
                "msg_index": 0,
                "block_index": 310500,
                "asset": "PAIDFAIRMIN",
                "quantity": 0,
                "divisible": true,
                "source": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "transfer": false,
                "callable": false,
                "call_date": 0,
                "call_price": 0.0,
                "description": "",
                "fee_paid": 50000000,
                "status": "valid",
                "asset_longname": "",
                "locked": false,
                "reset": false,
                "description_locked": false,
                "fair_minting": true,
                "asset_events": "open_fairminter",
                "confirmed": true,
                "block_time": 310500000,
                "quantity_normalized": "0.00000000",
                "fee_paid_normalized": "0.50000000"
            },
            {
                "tx_index": 500,
                "tx_hash": "a34d2b430b05ce71e9b09125d92be01fe666327252cbe54916e3a07db67b93ce",
                "msg_index": 0,
                "block_index": 310499,
                "asset": "FREEFAIRMIN",
                "quantity": 0,
                "divisible": true,
                "source": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "transfer": false,
                "callable": false,
                "call_date": 0,
                "call_price": 0.0,
                "description": "",
                "fee_paid": 50000000,
                "status": "valid",
                "asset_longname": "",
                "locked": false,
                "reset": false,
                "description_locked": false,
                "fair_minting": true,
                "asset_events": "open_fairminter",
                "confirmed": true,
                "block_time": 310499000,
                "quantity_normalized": "0.00000000",
                "fee_paid_normalized": "0.50000000"
            },
            {
                "tx_index": 499,
                "tx_hash": "0abfce2662c05852fd8b181a60900678643cedad47b23a853b8c4eda82cb2cbf",
                "msg_index": 0,
                "block_index": 310498,
                "asset": "A95428956661682277",
                "quantity": 100000000,
                "divisible": true,
                "source": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "transfer": false,
                "callable": false,
                "call_date": 0,
                "call_price": 0.0,
                "description": "Child of parent",
                "fee_paid": 25000000,
                "status": "valid",
                "asset_longname": "PARENT.already.issued",
                "locked": false,
                "reset": false,
                "description_locked": false,
                "fair_minting": false,
                "asset_events": "creation",
                "confirmed": true,
                "block_time": 310498000,
                "quantity_normalized": "1.00000000",
                "fee_paid_normalized": "0.25000000"
            },
            {
                "tx_index": 498,
                "tx_hash": "076ae3d8eeb7fb40d2ae27692340157c746d9832806766b0dac5adb1526dc78f",
                "msg_index": 0,
                "block_index": 310497,
                "asset": "PARENT",
                "quantity": 100000000,
                "divisible": true,
                "source": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "transfer": false,
                "callable": false,
                "call_date": 0,
                "call_price": 0.0,
                "description": "Parent asset",
                "fee_paid": 50000000,
                "status": "valid",
                "asset_longname": null,
                "locked": false,
                "reset": false,
                "description_locked": false,
                "fair_minting": false,
                "asset_events": "creation",
                "confirmed": true,
                "block_time": 310497000,
                "quantity_normalized": "1.00000000",
                "fee_paid_normalized": "0.50000000"
            },
            {
                "tx_index": 495,
                "tx_hash": "321bed395482e034f2ce0a4dbf28d1f800592a658e26ea91ae9c5b0928204503",
                "msg_index": 0,
                "block_index": 310494,
                "asset": "DIVIDEND",
                "quantity": 100,
                "divisible": true,
                "source": "mnfAHmddVibnZNSkh8DvKaQoiEfNsxjXzH",
                "issuer": "mnfAHmddVibnZNSkh8DvKaQoiEfNsxjXzH",
                "transfer": false,
                "callable": false,
                "call_date": 0,
                "call_price": 0.0,
                "description": "",
                "fee_paid": 50000000,
                "status": "valid",
                "asset_longname": null,
                "locked": false,
                "reset": false,
                "description_locked": false,
                "fair_minting": false,
                "asset_events": "creation",
                "confirmed": true,
                "block_time": 310494000,
                "quantity_normalized": "0.00000100",
                "fee_paid_normalized": "0.50000000"
            },
            {
                "tx_index": 116,
                "tx_hash": "4ab1a24283c1dbfc710be7b215d64e8a4510ee97af019e210049c25773b50beb",
                "msg_index": 0,
                "block_index": 310115,
                "asset": "LOCKEDPREV",
                "quantity": 0,
                "divisible": true,
                "source": "mwtPsLQxW9xpm7gdLmwWvJK5ABdPUVJm42",
                "issuer": "mwtPsLQxW9xpm7gdLmwWvJK5ABdPUVJm42",
                "transfer": false,
                "callable": false,
                "call_date": 0,
                "call_price": 0.0,
                "description": "changed",
                "fee_paid": 0,
                "status": "valid",
                "asset_longname": null,
                "locked": false,
                "reset": false,
                "description_locked": false,
                "fair_minting": false,
                "asset_events": "reissuance",
                "confirmed": true,
                "block_time": 310115000,
                "quantity_normalized": "0.00000000",
                "fee_paid_normalized": "0.00000000"
            },
            {
                "tx_index": 115,
                "tx_hash": "025b810fce7735c5869b90846007e5f604f60c1beda4c1695f1c7fbec3d44bc2",
                "msg_index": 0,
                "block_index": 310114,
                "asset": "LOCKEDPREV",
                "quantity": 0,
                "divisible": true,
                "source": "mwtPsLQxW9xpm7gdLmwWvJK5ABdPUVJm42",
                "issuer": "mwtPsLQxW9xpm7gdLmwWvJK5ABdPUVJm42",
                "transfer": false,
                "callable": false,
                "call_date": 0,
                "call_price": 0.0,
                "description": "Locked asset",
                "fee_paid": 0,
                "status": "valid",
                "asset_longname": null,
                "locked": true,
                "reset": false,
                "description_locked": false,
                "fair_minting": false,
                "asset_events": "lock_quantity reissuance",
                "confirmed": true,
                "block_time": 310114000,
                "quantity_normalized": "0.00000000",
                "fee_paid_normalized": "0.00000000"
            },
            {
                "tx_index": 114,
                "tx_hash": "34bce6f409758b3d6fd13282a99b277ef1fdf44a1025d2901075cac0249dbc63",
                "msg_index": 0,
                "block_index": 310113,
                "asset": "LOCKEDPREV",
                "quantity": 1000,
                "divisible": true,
                "source": "mwtPsLQxW9xpm7gdLmwWvJK5ABdPUVJm42",
                "issuer": "mwtPsLQxW9xpm7gdLmwWvJK5ABdPUVJm42",
                "transfer": false,
                "callable": false,
                "call_date": 0,
                "call_price": 0.0,
                "description": "Locked asset",
                "fee_paid": 50000000,
                "status": "valid",
                "asset_longname": null,
                "locked": false,
                "reset": false,
                "description_locked": false,
                "fair_minting": false,
                "asset_events": "creation",
                "confirmed": true,
                "block_time": 310113000,
                "quantity_normalized": "0.00001000",
                "fee_paid_normalized": "0.50000000"
            },
            {
                "tx_index": 110,
                "tx_hash": "e8baf787b9e4636a3cad0ffeb62992ad7abb160dc6506af0546f566dc178de7e",
                "msg_index": 0,
                "block_index": 310109,
                "asset": "PAYTOSCRIPT",
                "quantity": 1000,
                "divisible": false,
                "source": "2MyJHMUenMWonC35Yi6PHC7i2tkS7PuomCy",
                "issuer": "2MyJHMUenMWonC35Yi6PHC7i2tkS7PuomCy",
                "transfer": false,
                "callable": false,
                "call_date": 0,
                "call_price": 0.0,
                "description": "PSH issued asset",
                "fee_paid": 50000000,
                "status": "valid",
                "asset_longname": null,
                "locked": false,
                "reset": false,
                "description_locked": false,
                "fair_minting": false,
                "asset_events": "creation",
                "confirmed": true,
                "block_time": 310109000,
                "quantity_normalized": "1000",
                "fee_paid_normalized": "0.50000000"
            },
            {
                "tx_index": 17,
                "tx_hash": "bd4e9cbbe69c2db893cd32182a2d315c89c45ba4e31aa5775d1fe42d841cea39",
                "msg_index": 0,
                "block_index": 310016,
                "asset": "MAXI",
                "quantity": 9223372036854775807,
                "divisible": true,
                "source": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "transfer": false,
                "callable": false,
                "call_date": 0,
                "call_price": 0.0,
                "description": "Maximum quantity",
                "fee_paid": 50000000,
                "status": "valid",
                "asset_longname": null,
                "locked": false,
                "reset": false,
                "description_locked": false,
                "fair_minting": false,
                "asset_events": "creation",
                "confirmed": true,
                "block_time": 310016000,
                "quantity_normalized": "92233720000.00000000",
                "fee_paid_normalized": "0.50000000"
            },
            {
                "tx_index": 6,
                "tx_hash": "344dcc8909ca3a137630726d0071dfd2df4f7c855bac150c7d3a8367835c90bc",
                "msg_index": 0,
                "block_index": 310005,
                "asset": "LOCKED",
                "quantity": 0,
                "divisible": true,
                "source": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "transfer": false,
                "callable": false,
                "call_date": 0,
                "call_price": 0.0,
                "description": "Locked asset",
                "fee_paid": 0,
                "status": "valid",
                "asset_longname": null,
                "locked": true,
                "reset": false,
                "description_locked": false,
                "fair_minting": false,
                "asset_events": "lock_quantity reissuance",
                "confirmed": true,
                "block_time": 310005000,
                "quantity_normalized": "0.00000000",
                "fee_paid_normalized": "0.00000000"
            },
            {
                "tx_index": 5,
                "tx_hash": "90b5734be98b0f2a0bd4b6a269c8db3368e2e387bb890ade239951d05423b4da",
                "msg_index": 0,
                "block_index": 310004,
                "asset": "LOCKED",
                "quantity": 1000,
                "divisible": true,
                "source": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "transfer": false,
                "callable": false,
                "call_date": 0,
                "call_price": 0.0,
                "description": "Locked asset",
                "fee_paid": 50000000,
                "status": "valid",
                "asset_longname": null,
                "locked": false,
                "reset": false,
                "description_locked": false,
                "fair_minting": false,
                "asset_events": "creation",
                "confirmed": true,
                "block_time": 310004000,
                "quantity_normalized": "0.00001000",
                "fee_paid_normalized": "0.50000000"
            },
            {
                "tx_index": 4,
                "tx_hash": "c26f3a0c4e57e41919ff27aae95a9a9d4d65d34c6da6f1893884a17c8d407140",
                "msg_index": 0,
                "block_index": 310003,
                "asset": "CALLABLE",
                "quantity": 1000,
                "divisible": true,
                "source": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "transfer": false,
                "callable": false,
                "call_date": 0,
                "call_price": 0.0,
                "description": "Callable asset",
                "fee_paid": 50000000,
                "status": "valid",
                "asset_longname": null,
                "locked": false,
                "reset": false,
                "description_locked": false,
                "fair_minting": false,
                "asset_events": "creation",
                "confirmed": true,
                "block_time": 310003000,
                "quantity_normalized": "0.00001000",
                "fee_paid_normalized": "0.50000000"
            },
            {
                "tx_index": 3,
                "tx_hash": "7b1bf5144346279271b1ff78664f118224fe27fd8679d6c1519345f9c6c54584",
                "msg_index": 0,
                "block_index": 310002,
                "asset": "NODIVISIBLE",
                "quantity": 1000,
                "divisible": false,
                "source": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "transfer": false,
                "callable": false,
                "call_date": 0,
                "call_price": 0.0,
                "description": "No divisible asset",
                "fee_paid": 50000000,
                "status": "valid",
                "asset_longname": null,
                "locked": false,
                "reset": false,
                "description_locked": false,
                "fair_minting": false,
                "asset_events": "creation",
                "confirmed": true,
                "block_time": 310002000,
                "quantity_normalized": "1000",
                "fee_paid_normalized": "0.50000000"
            },
            {
                "tx_index": 2,
                "tx_hash": "1fc2e5a57f584b2f2edd05676e75c33d03eed1d3098cc0550ea33474e3ec9db1",
                "msg_index": 0,
                "block_index": 310001,
                "asset": "DIVISIBLE",
                "quantity": 100000000000,
                "divisible": true,
                "source": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "transfer": false,
                "callable": false,
                "call_date": 0,
                "call_price": 0.0,
                "description": "Divisible asset",
                "fee_paid": 50000000,
                "status": "valid",
                "asset_longname": null,
                "locked": false,
                "reset": false,
                "description_locked": false,
                "fair_minting": false,
                "asset_events": "creation",
                "confirmed": true,
                "block_time": 310001000,
                "quantity_normalized": "1000.00000000",
                "fee_paid_normalized": "0.50000000"
            }
        ],
        "next_cursor": null,
        "result_count": 22
    },
    "http://localhost:10009/v2/issuances/0abfce2662c05852fd8b181a60900678643cedad47b23a853b8c4eda82cb2cbf?verbose=true": {
        "result": {
            "tx_index": 499,
            "tx_hash": "0abfce2662c05852fd8b181a60900678643cedad47b23a853b8c4eda82cb2cbf",
            "msg_index": 0,
            "block_index": 310498,
            "asset": "A95428956661682277",
            "quantity": 100000000,
            "divisible": true,
            "source": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
            "issuer": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
            "transfer": false,
            "callable": false,
            "call_date": 0,
            "call_price": 0.0,
            "description": "Child of parent",
            "fee_paid": 25000000,
            "status": "valid",
            "asset_longname": "PARENT.already.issued",
            "locked": false,
            "reset": false,
            "description_locked": false,
            "fair_minting": false,
            "asset_events": "creation",
            "confirmed": true,
            "block_time": 310498000,
            "quantity_normalized": "1.00000000",
            "fee_paid_normalized": "0.25000000"
        }
    },
    "http://localhost:10009/v2/sweeps?verbose=true": {
        "result": [],
        "next_cursor": null,
        "result_count": 0
    },
    "http://localhost:10009/v2/sweeps/74db175c4669a3d3a59e3fcddce9e97fcd7d12c35b58ef31845a1b20a1739498?verbose=true": {
        "result": [],
        "next_cursor": null,
        "result_count": 0
    },
    "http://localhost:10009/v2/broadcasts?verbose=true": {
        "result": [
            {
                "tx_index": 491,
                "tx_hash": "7c437705c315212315c85c0b8ba09d358679c91be20b54f30929c5a6052426af",
                "block_index": 310490,
                "source": "mwtPsLQxW9xpm7gdLmwWvJK5ABdPUVJm42",
                "timestamp": 1388000004,
                "value": 1.0,
                "fee_fraction_int": 0,
                "text": "options 1",
                "locked": false,
                "status": "valid",
                "confirmed": true,
                "block_time": 310490000,
                "fee_fraction_int_normalized": "0.00000000"
            },
            {
                "tx_index": 490,
                "tx_hash": "685d7f99fa76a05201c3239a4e0d9060ea53307b171f6ad7d482a26c73e9c0d1",
                "block_index": 310489,
                "source": "myAtcJEHAsDLbTkai6ipWDZeeL7VkxXsiM",
                "timestamp": 0,
                "value": null,
                "fee_fraction_int": null,
                "text": null,
                "locked": true,
                "status": "valid",
                "confirmed": true,
                "block_time": 310489000
            },
            {
                "tx_index": 489,
                "tx_hash": "870fb08b373705423f31ccd91fdbcabe135ad92d74e709a959dfa2e12f9a6638",
                "block_index": 310488,
                "source": "myAtcJEHAsDLbTkai6ipWDZeeL7VkxXsiM",
                "timestamp": 1388000002,
                "value": 1.0,
                "fee_fraction_int": 0,
                "text": "options 0",
                "locked": false,
                "status": "valid",
                "confirmed": true,
                "block_time": 310488000,
                "fee_fraction_int_normalized": "0.00000000"
            },
            {
                "tx_index": 487,
                "tx_hash": "3b95e07a2194174ac020de27e8b2b6ee24d5fc120f118df516ba28495657cf14",
                "block_index": 310486,
                "source": "myAtcJEHAsDLbTkai6ipWDZeeL7VkxXsiM",
                "timestamp": 1388000000,
                "value": 1.0,
                "fee_fraction_int": 5000000,
                "text": "Unit Test",
                "locked": false,
                "status": "valid",
                "confirmed": true,
                "block_time": 310486000,
                "fee_fraction_int_normalized": "0.05000000"
            },
            {
                "tx_index": 112,
                "tx_hash": "510f6feb902159622d83f64eae590a4fec88989869a20caf5804c313aa5e0186",
                "block_index": 310111,
                "source": "2MyJHMUenMWonC35Yi6PHC7i2tkS7PuomCy",
                "timestamp": 1388000002,
                "value": 1.0,
                "fee_fraction_int": 5000000,
                "text": "Unit Test",
                "locked": false,
                "status": "valid",
                "confirmed": true,
                "block_time": 310111000,
                "fee_fraction_int_normalized": "0.05000000"
            },
            {
                "tx_index": 103,
                "tx_hash": "16462eac6c795cea6e5985ee063867d8c61ae24373df02048186d28118d25bae",
                "block_index": 310102,
                "source": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "timestamp": 1388000002,
                "value": 1.0,
                "fee_fraction_int": 5000000,
                "text": "Unit Test",
                "locked": false,
                "status": "valid",
                "confirmed": true,
                "block_time": 310102000,
                "fee_fraction_int_normalized": "0.05000000"
            },
            {
                "tx_index": 19,
                "tx_hash": "f9e0527c85a9084d7eda91fc30a49993370d029efea031a8ccccdf846146a660",
                "block_index": 310018,
                "source": "mnfAHmddVibnZNSkh8DvKaQoiEfNsxjXzH",
                "timestamp": 0,
                "value": null,
                "fee_fraction_int": null,
                "text": null,
                "locked": true,
                "status": "valid",
                "confirmed": true,
                "block_time": 310018000
            },
            {
                "tx_index": 18,
                "tx_hash": "d14388b74b63d93e4477b1fe8426028bb8ab20656703e3ce8deeb23c2fe0b8af",
                "block_index": 310017,
                "source": "mn6q3dS2EnDUx3bmyWc6D4szJNVGtaR7zc",
                "timestamp": 1388000000,
                "value": 1.0,
                "fee_fraction_int": 5000000,
                "text": "Unit Test",
                "locked": false,
                "status": "valid",
                "confirmed": true,
                "block_time": 310017000,
                "fee_fraction_int_normalized": "0.05000000"
            }
        ],
        "next_cursor": null,
        "result_count": 8
    },
    "http://localhost:10009/v2/broadcasts/7c437705c315212315c85c0b8ba09d358679c91be20b54f30929c5a6052426af?verbose=true": {
        "result": {
            "tx_index": 491,
            "tx_hash": "7c437705c315212315c85c0b8ba09d358679c91be20b54f30929c5a6052426af",
            "block_index": 310490,
            "source": "mwtPsLQxW9xpm7gdLmwWvJK5ABdPUVJm42",
            "timestamp": 1388000004,
            "value": 1.0,
            "fee_fraction_int": 0,
            "text": "options 1",
            "locked": false,
            "status": "valid",
            "confirmed": true,
            "block_time": 310490000,
            "fee_fraction_int_normalized": "0.00000000"
        }
    },
    "http://localhost:10009/v2/routes?verbose=true": {
        "result": {
            "/v2/blocks": {
                "function": "get_blocks",
                "description": "Returns the list of the last ten blocks",
                "args": [
                    {
                        "name": "cursor",
                        "default": null,
                        "required": false,
                        "type": "str",
                        "description": "The index of the most recent block to return (e.g. $LAST_BLOCK_INDEX)"
                    },
                    {
                        "name": "limit",
                        "default": 10,
                        "required": false,
                        "type": "int",
                        "description": "The number of blocks to return (e.g. 5)"
                    },
                    {
                        "name": "offset",
                        "default": null,
                        "required": false,
                        "type": "int",
                        "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/blocks/last": {
                "function": "get_last_block",
                "description": "Return the information of the last block",
                "args": [
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/blocks/<int:block_index>": {
                "function": "get_block_by_height",
                "description": "Return the information of a block",
                "args": [
                    {
                        "name": "block_index",
                        "required": true,
                        "type": "int",
                        "description": "The index of the block to return (e.g. $LAST_BLOCK_INDEX)"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/blocks/<block_hash>": {
                "function": "get_block_by_hash",
                "description": "Return the information of a block",
                "args": [
                    {
                        "name": "block_hash",
                        "required": true,
                        "type": "str",
                        "description": "The index of the block to return (e.g. $LAST_BLOCK_HASH)"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/blocks/<int:block_index>/transactions": {
                "function": "get_transactions_by_block",
                "description": "Returns the transactions of a block",
                "args": [
                    {
                        "name": "block_index",
                        "required": true,
                        "type": "int",
                        "description": "The index of the block to return (e.g. $LAST_BLOCK_INDEX)"
                    },
                    {
                        "name": "cursor",
                        "default": null,
                        "required": false,
                        "type": "str",
                        "description": "The last transaction index to return (e.g. $LAST_TX_INDEX)"
                    },
                    {
                        "name": "limit",
                        "default": 10,
                        "required": false,
                        "type": "int",
                        "description": "The maximum number of transactions to return (e.g. 5)"
                    },
                    {
                        "name": "offset",
                        "default": null,
                        "required": false,
                        "type": "int",
                        "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/blocks/<int:block_index>/events": {
                "function": "get_events_by_block",
                "description": "Returns the events of a block",
                "args": [
                    {
                        "name": "block_index",
                        "required": true,
                        "type": "int",
                        "description": "The index of the block to return (e.g. $LAST_EVENT_BLOCK)"
                    },
                    {
                        "name": "event_name",
                        "default": null,
                        "required": false,
                        "type": "str",
                        "description": "Comma separated list of events to return"
                    },
                    {
                        "name": "cursor",
                        "default": null,
                        "required": false,
                        "type": "str",
                        "description": "The last event index to return (e.g. $LAST_EVENT_INDEX)"
                    },
                    {
                        "name": "limit",
                        "default": 100,
                        "required": false,
                        "type": "int",
                        "description": "The maximum number of events to return (e.g. 5)"
                    },
                    {
                        "name": "offset",
                        "default": null,
                        "required": false,
                        "type": "int",
                        "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/blocks/<int:block_index>/events/counts": {
                "function": "get_event_counts_by_block",
                "description": "Returns the event counts of a block",
                "args": [
                    {
                        "name": "block_index",
                        "required": true,
                        "type": "int",
                        "description": "The index of the block to return (e.g. $LAST_BLOCK_INDEX)"
                    },
                    {
                        "name": "cursor",
                        "default": null,
                        "required": false,
                        "type": "str",
                        "description": "The last event index to return"
                    },
                    {
                        "name": "limit",
                        "default": 100,
                        "required": false,
                        "type": "int",
                        "description": "The maximum number of events to return (e.g. 5)"
                    },
                    {
                        "name": "offset",
                        "default": null,
                        "required": false,
                        "type": "int",
                        "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/blocks/<int:block_index>/events/<event>": {
                "function": "get_events_by_block_and_event",
                "description": "Returns the events of a block filtered by event",
                "args": [
                    {
                        "name": "block_index",
                        "required": true,
                        "type": "int",
                        "description": "The index of the block to return (e.g. $LAST_EVENT_BLOCK)"
                    },
                    {
                        "name": "event",
                        "required": true,
                        "type": "str",
                        "description": "The event to filter by (e.g. CREDIT)"
                    },
                    {
                        "name": "cursor",
                        "default": null,
                        "required": false,
                        "type": "str",
                        "description": "The last event index to return"
                    },
                    {
                        "name": "limit",
                        "default": 100,
                        "required": false,
                        "type": "int",
                        "description": "The maximum number of events to return (e.g. 5)"
                    },
                    {
                        "name": "offset",
                        "default": null,
                        "required": false,
                        "type": "int",
                        "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/blocks/<int:block_index>/credits": {
                "function": "get_credits_by_block",
                "description": "Returns the credits of a block",
                "args": [
                    {
                        "name": "block_index",
                        "required": true,
                        "type": "int",
                        "description": "The index of the block to return (e.g. $LAST_CREDIT_BLOCK)"
                    },
                    {
                        "name": "action",
                        "default": null,
                        "required": false,
                        "type": "enum[str]",
                        "members": [
                            null,
                            "Closed: Max dispenses reached",
                            "bet settled: for equal",
                            "bet settled: for notequal",
                            "bet settled: liquidated for bear",
                            "btcpay",
                            "burn",
                            "cancel order",
                            "close dispenser",
                            "dispense",
                            "dispenser close",
                            "dividend",
                            "feed fee",
                            "filled",
                            "issuance",
                            "mpma send",
                            "open dispenser empty addr",
                            "order cancelled",
                            "order expired",
                            "order match",
                            "recredit backward quantity",
                            "recredit forward quantity",
                            "recredit wager",
                            "recredit wager remaining",
                            "reset issuance",
                            "send",
                            "sweep",
                            "wins"
                        ],
                        "description": "The action to filter by"
                    },
                    {
                        "name": "cursor",
                        "default": null,
                        "required": false,
                        "type": "str",
                        "description": "The last credit index to return"
                    },
                    {
                        "name": "limit",
                        "default": 100,
                        "required": false,
                        "type": "int",
                        "description": "The maximum number of credits to return (e.g. 5)"
                    },
                    {
                        "name": "offset",
                        "default": null,
                        "required": false,
                        "type": "int",
                        "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/blocks/<int:block_index>/debits": {
                "function": "get_debits_by_block",
                "description": "Returns the debits of a block",
                "args": [
                    {
                        "name": "block_index",
                        "required": true,
                        "type": "int",
                        "description": "The index of the block to return (e.g. $LAST_DEBIT_BLOCK)"
                    },
                    {
                        "name": "action",
                        "default": null,
                        "required": false,
                        "type": "enum[str]",
                        "members": [
                            null,
                            "bet",
                            "destroy",
                            "dividend",
                            "dividend fee",
                            "issuance fee",
                            "mpma send",
                            "open RPS",
                            "open dispenser",
                            "open dispenser empty addr",
                            "open order",
                            "refill dispenser",
                            "reopen RPS after matching expiration",
                            "reset destroy",
                            "send",
                            "sweep",
                            "sweep fee"
                        ],
                        "description": "The action to filter by"
                    },
                    {
                        "name": "cursor",
                        "default": null,
                        "required": false,
                        "type": "str",
                        "description": "The last index of the debits to return"
                    },
                    {
                        "name": "limit",
                        "default": 100,
                        "required": false,
                        "type": "int",
                        "description": "The maximum number of debits to return (e.g. 5)"
                    },
                    {
                        "name": "offset",
                        "default": null,
                        "required": false,
                        "type": "int",
                        "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/blocks/<int:block_index>/expirations": {
                "function": "get_expirations",
                "description": "Returns the expirations of a block",
                "args": [
                    {
                        "name": "block_index",
                        "required": true,
                        "type": "int",
                        "description": "The index of the block to return (e.g. $LAST_ORDER_EXPIRATION_BLOCK)"
                    },
                    {
                        "name": "cursor",
                        "default": null,
                        "required": false,
                        "type": "str",
                        "description": "The last index of the expirations to return"
                    },
                    {
                        "name": "limit",
                        "default": 100,
                        "required": false,
                        "type": "int",
                        "description": "The maximum number of expirations to return (e.g. 5)"
                    },
                    {
                        "name": "offset",
                        "default": null,
                        "required": false,
                        "type": "int",
                        "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/blocks/<int:block_index>/cancels": {
                "function": "get_cancels",
                "description": "Returns the cancels of a block",
                "args": [
                    {
                        "name": "block_index",
                        "required": true,
                        "type": "int",
                        "description": "The index of the block to return (e.g. $LAST_CANCEL_BLOCK)"
                    },
                    {
                        "name": "cursor",
                        "default": null,
                        "required": false,
                        "type": "str",
                        "description": "The last index of the cancels to return"
                    },
                    {
                        "name": "limit",
                        "default": 100,
                        "required": false,
                        "type": "int",
                        "description": "The maximum number of cancels to return (e.g. 5)"
                    },
                    {
                        "name": "offset",
                        "default": null,
                        "required": false,
                        "type": "int",
                        "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/blocks/<int:block_index>/destructions": {
                "function": "get_destructions",
                "description": "Returns the destructions of a block",
                "args": [
                    {
                        "name": "block_index",
                        "required": true,
                        "type": "int",
                        "description": "The index of the block to return (e.g. $LAST_DESTRUCTION_BLOCK)"
                    },
                    {
                        "name": "cursor",
                        "default": null,
                        "required": false,
                        "type": "str",
                        "description": "The last index of the destructions to return"
                    },
                    {
                        "name": "limit",
                        "default": 100,
                        "required": false,
                        "type": "int",
                        "description": "The maximum number of destructions to return (e.g. 5)"
                    },
                    {
                        "name": "offset",
                        "default": null,
                        "required": false,
                        "type": "int",
                        "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/blocks/<int:block_index>/issuances": {
                "function": "get_issuances_by_block",
                "description": "Returns the issuances of a block",
                "args": [
                    {
                        "name": "block_index",
                        "required": true,
                        "type": "int",
                        "description": "The index of the block to return (e.g. $LAST_ISSUANCE_BLOCK)"
                    },
                    {
                        "name": "cursor",
                        "default": null,
                        "required": false,
                        "type": "str",
                        "description": "The last index of the issuances to return"
                    },
                    {
                        "name": "limit",
                        "default": 100,
                        "required": false,
                        "type": "int",
                        "description": "The maximum number of issuances to return (e.g. 5)"
                    },
                    {
                        "name": "offset",
                        "default": null,
                        "required": false,
                        "type": "int",
                        "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/blocks/<int:block_index>/sends": {
                "function": "get_sends_by_block",
                "description": "Returns the sends, include Enhanced and MPMA sends, of a block",
                "args": [
                    {
                        "name": "block_index",
                        "required": true,
                        "type": "int",
                        "description": "The index of the block to return (e.g. $LAST_SEND_BLOCK)"
                    },
                    {
                        "name": "cursor",
                        "default": null,
                        "required": false,
                        "type": "str",
                        "description": "The last index of the debits to return"
                    },
                    {
                        "name": "limit",
                        "default": 100,
                        "required": false,
                        "type": "int",
                        "description": "The maximum number of debits to return (e.g. 5)"
                    },
                    {
                        "name": "offset",
                        "default": null,
                        "required": false,
                        "type": "int",
                        "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/blocks/<int:block_index>/dispenses": {
                "function": "get_dispenses_by_block",
                "description": "Returns the dispenses of a block",
                "args": [
                    {
                        "name": "block_index",
                        "required": true,
                        "type": "int",
                        "description": "The index of the block to return (e.g. $LAST_DISPENSE_BLOCK)"
                    },
                    {
                        "name": "cursor",
                        "default": null,
                        "required": false,
                        "type": "str",
                        "description": "The last index of the dispenses to return"
                    },
                    {
                        "name": "limit",
                        "default": 100,
                        "required": false,
                        "type": "int",
                        "description": "The maximum number of dispenses to return (e.g. 5)"
                    },
                    {
                        "name": "offset",
                        "default": null,
                        "required": false,
                        "type": "int",
                        "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/blocks/<int:block_index>/sweeps": {
                "function": "get_sweeps_by_block",
                "description": "Returns the sweeps of a block",
                "args": [
                    {
                        "name": "block_index",
                        "required": true,
                        "type": "int",
                        "description": "The index of the block to return (e.g. $LAST_SWEEP_BLOCK)"
                    },
                    {
                        "name": "cursor",
                        "default": null,
                        "required": false,
                        "type": "str",
                        "description": "The last index of the sweeps to return"
                    },
                    {
                        "name": "limit",
                        "default": 100,
                        "required": false,
                        "type": "int",
                        "description": "The maximum number of sweeps to return (e.g. 5)"
                    },
                    {
                        "name": "offset",
                        "default": null,
                        "required": false,
                        "type": "int",
                        "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/transactions": {
                "function": "get_transactions",
                "description": "Returns the list of the last ten transactions",
                "args": [
                    {
                        "name": "cursor",
                        "default": null,
                        "required": false,
                        "type": "str",
                        "description": "The index of the most recent transactions to return (e.g. $LAST_TX_INDEX)"
                    },
                    {
                        "name": "limit",
                        "default": 10,
                        "required": false,
                        "type": "int",
                        "description": "The number of transactions to return (e.g. 2)"
                    },
                    {
                        "name": "offset",
                        "default": null,
                        "required": false,
                        "type": "int",
                        "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/transactions/info": {
                "function": "info",
                "description": "Returns Counterparty information from a raw transaction in hex format.",
                "args": [
                    {
                        "name": "rawtransaction",
                        "required": true,
                        "type": "str",
                        "description": "Raw transaction in hex format (e.g. $RAW_TRANSACTION_1)"
                    },
                    {
                        "name": "block_index",
                        "default": null,
                        "required": false,
                        "type": "int",
                        "description": "Block index mandatory for transactions before block 335000"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/transactions/<tx_hash>/info": {
                "function": "info_by_tx_hash",
                "description": "Returns Counterparty information from a transaction hash.",
                "args": [
                    {
                        "name": "tx_hash",
                        "required": true,
                        "type": "str",
                        "description": "Transaction hash (e.g. $LAST_MEMPOOL_TX_HASH)"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/transactions/unpack": {
                "function": "unpack",
                "description": "Unpacks Counterparty data in hex format and returns the message type and data.",
                "args": [
                    {
                        "name": "datahex",
                        "required": true,
                        "type": "str",
                        "description": "Data in hex format (e.g. 020000000001016a65c1624e53f4d33ce02e726a6606faed60cc014d5b1a578ba3e09b4b3f8f890100000000ffffffff020000000000000000176a150d55e8b6118808b7b663b365473f142274028b8af60245092701000000160014a3df8a5a83d4e2827b59b43f5ce6ce5d2e52093f0247304402204b7a2859cbce34e725a1132fec2dd4b075503dadff0a0c407ae7c22a7712fe4d0220563ceb2ceebdf649343bb24819fc808639cce7781305b4588ffbe4a20390d2780121020ace9adf60fe4ec05dab922ccdc5727cbf664cafc7cdb845de534855266314c800000000)"
                    },
                    {
                        "name": "block_index",
                        "default": null,
                        "required": false,
                        "type": "int",
                        "description": "Block index of the transaction containing this data"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/transactions/<int:tx_index>": {
                "function": "get_transaction_by_tx_index",
                "description": "Returns a transaction by its index.",
                "args": [
                    {
                        "name": "tx_index",
                        "required": true,
                        "type": "int",
                        "description": "The index of the transaction (e.g. $LAST_TX_INDEX)"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/transactions/<tx_hash>": {
                "function": "get_transaction_by_hash",
                "description": "Returns a transaction by its hash.",
                "args": [
                    {
                        "name": "tx_hash",
                        "required": true,
                        "type": "str",
                        "description": "The hash of the transaction (e.g. $LAST_TX_HASH)"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/transactions/<int:tx_index>/events": {
                "function": "get_events_by_transaction_index",
                "description": "Returns the events of a transaction",
                "args": [
                    {
                        "name": "tx_index",
                        "required": true,
                        "type": "int",
                        "description": "The index of the transaction to return (e.g. $LAST_EVENT_TX_INDEX)"
                    },
                    {
                        "name": "event_name",
                        "default": null,
                        "required": false,
                        "type": "str",
                        "description": "Comma separated list of events to return"
                    },
                    {
                        "name": "cursor",
                        "default": null,
                        "required": false,
                        "type": "str",
                        "description": "The last event index to return"
                    },
                    {
                        "name": "limit",
                        "default": 100,
                        "required": false,
                        "type": "int",
                        "description": "The maximum number of events to return (e.g. 5)"
                    },
                    {
                        "name": "offset",
                        "default": null,
                        "required": false,
                        "type": "int",
                        "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/transactions/<tx_hash>/events": {
                "function": "get_events_by_transaction_hash",
                "description": "Returns the events of a transaction",
                "args": [
                    {
                        "name": "tx_hash",
                        "required": true,
                        "type": "str",
                        "description": "The hash of the transaction to return (e.g. $LAST_EVENT_TX_HASH)"
                    },
                    {
                        "name": "event_name",
                        "default": null,
                        "required": false,
                        "type": "str",
                        "description": "Comma separated list of events to return"
                    },
                    {
                        "name": "cursor",
                        "default": null,
                        "required": false,
                        "type": "str",
                        "description": "The last event index to return (e.g. $LAST_EVENT_INDEX)"
                    },
                    {
                        "name": "limit",
                        "default": 100,
                        "required": false,
                        "type": "int",
                        "description": "The maximum number of events to return (e.g. 5)"
                    },
                    {
                        "name": "offset",
                        "default": null,
                        "required": false,
                        "type": "int",
                        "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/transactions/<tx_hash>/sends": {
                "function": "get_sends_by_transaction_hash",
                "description": "Returns the sends, include Enhanced and MPMA sends, of a block",
                "args": [
                    {
                        "name": "tx_hash",
                        "required": true,
                        "type": "str",
                        "description": "The hash of the transaction to return (e.g. $LAST_SEND_TX_HASH)"
                    },
                    {
                        "name": "cursor",
                        "default": null,
                        "required": false,
                        "type": "str",
                        "description": "The last index of the debits to return"
                    },
                    {
                        "name": "limit",
                        "default": 100,
                        "required": false,
                        "type": "int",
                        "description": "The maximum number of debits to return (e.g. 5)"
                    },
                    {
                        "name": "offset",
                        "default": null,
                        "required": false,
                        "type": "int",
                        "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/transactions/<tx_hash>/dispenses": {
                "function": "get_dispenses_by_transaction_hash",
                "description": "Returns the dispenses of a block",
                "args": [
                    {
                        "name": "tx_hash",
                        "required": true,
                        "type": "str",
                        "description": "The hash of the transaction to return (e.g. $LAST_DISPENSE_TX_HASH)"
                    },
                    {
                        "name": "cursor",
                        "default": null,
                        "required": false,
                        "type": "str",
                        "description": "The last index of the dispenses to return"
                    },
                    {
                        "name": "limit",
                        "default": 100,
                        "required": false,
                        "type": "int",
                        "description": "The maximum number of dispenses to return (e.g. 5)"
                    },
                    {
                        "name": "offset",
                        "default": null,
                        "required": false,
                        "type": "int",
                        "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/transactions/<int:tx_index>/events/<event>": {
                "function": "get_events_by_transaction_index_and_event",
                "description": "Returns the events of a transaction",
                "args": [
                    {
                        "name": "tx_index",
                        "required": true,
                        "type": "int",
                        "description": "The index of the transaction to return (e.g. $LAST_EVENT_TX_INDEX)"
                    },
                    {
                        "name": "event",
                        "required": true,
                        "type": "str",
                        "description": "The event to filter by (e.g. CREDIT)"
                    },
                    {
                        "name": "cursor",
                        "default": null,
                        "required": false,
                        "type": "str",
                        "description": "The last event index to return (e.g. $LAST_EVENT_INDEX)"
                    },
                    {
                        "name": "limit",
                        "default": 100,
                        "required": false,
                        "type": "int",
                        "description": "The maximum number of events to return (e.g. 5)"
                    },
                    {
                        "name": "offset",
                        "default": null,
                        "required": false,
                        "type": "int",
                        "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/transactions/<tx_hash>/events/<event>": {
                "function": "get_events_by_transaction_hash_and_event",
                "description": "Returns the events of a transaction",
                "args": [
                    {
                        "name": "tx_hash",
                        "required": true,
                        "type": "str",
                        "description": "The hash of the transaction to return (e.g. $LAST_EVENT_TX_HASH)"
                    },
                    {
                        "name": "event",
                        "required": true,
                        "type": "str",
                        "description": "The event to filter by (e.g. CREDIT)"
                    },
                    {
                        "name": "cursor",
                        "default": null,
                        "required": false,
                        "type": "str",
                        "description": "The last event index to return (e.g. $LAST_EVENT_INDEX)"
                    },
                    {
                        "name": "limit",
                        "default": 100,
                        "required": false,
                        "type": "int",
                        "description": "The maximum number of events to return (e.g. 5)"
                    },
                    {
                        "name": "offset",
                        "default": null,
                        "required": false,
                        "type": "int",
                        "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/addresses/balances": {
                "function": "get_balances_by_addresses",
                "description": "Returns the balances of several addresses",
                "args": [
                    {
                        "name": "addresses",
                        "required": true,
                        "type": "str",
                        "description": "Comma separated list of addresses (e.g. $ADDRESS_1,$ADDRESS_2)"
                    },
                    {
                        "name": "cursor",
                        "default": null,
                        "required": false,
                        "type": "str",
                        "description": "The last index of the balances to return"
                    },
                    {
                        "name": "limit",
                        "default": 100,
                        "required": false,
                        "type": "int",
                        "description": "The maximum number of balances to return (e.g. 5)"
                    },
                    {
                        "name": "offset",
                        "default": null,
                        "required": false,
                        "type": "int",
                        "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                    },
                    {
                        "name": "sort",
                        "default": null,
                        "required": false,
                        "type": "str",
                        "description": "The sort order of the balances to return (overrides the `cursor` parameter) (e.g. quantity:desc)"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/addresses/transactions": {
                "function": "get_transactions_by_addresses",
                "description": "Returns the transactions of a list of addresses",
                "args": [
                    {
                        "name": "addresses",
                        "required": true,
                        "type": "str",
                        "description": "Comma separated list of addresses to return (e.g. $ADDRESS_1,$ADDRESS_2)"
                    },
                    {
                        "name": "cursor",
                        "default": null,
                        "required": false,
                        "type": "str",
                        "description": "The last transaction index to return (e.g. $LAST_TX_INDEX)"
                    },
                    {
                        "name": "limit",
                        "default": 100,
                        "required": false,
                        "type": "int",
                        "description": "The maximum number of transactions to return (e.g. 5)"
                    },
                    {
                        "name": "offset",
                        "default": null,
                        "required": false,
                        "type": "int",
                        "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/addresses/events": {
                "function": "get_events_by_addresses",
                "description": "Returns the events of a list of addresses",
                "args": [
                    {
                        "name": "addresses",
                        "required": true,
                        "type": "str",
                        "description": "Comma separated list of addresses to return (e.g. $ADDRESS_1,$ADDRESS_2)"
                    },
                    {
                        "name": "event_name",
                        "default": null,
                        "required": false,
                        "type": "str",
                        "description": "Comma separated list of events to return"
                    },
                    {
                        "name": "cursor",
                        "default": null,
                        "required": false,
                        "type": "str",
                        "description": "The last event index to return (e.g. $LAST_EVENT_INDEX)"
                    },
                    {
                        "name": "limit",
                        "default": 100,
                        "required": false,
                        "type": "int",
                        "description": "The maximum number of events to return (e.g. 5)"
                    },
                    {
                        "name": "offset",
                        "default": null,
                        "required": false,
                        "type": "int",
                        "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/addresses/mempool": {
                "function": "get_mempool_events_by_addresses",
                "description": "Returns the mempool events of a list of addresses",
                "args": [
                    {
                        "name": "addresses",
                        "required": true,
                        "type": "str",
                        "description": "Comma separated list of addresses to return (e.g. $ADDRESS_3,$ADDRESS_4)"
                    },
                    {
                        "name": "cursor",
                        "default": null,
                        "required": false,
                        "type": "str",
                        "description": "The last event index to return"
                    },
                    {
                        "name": "limit",
                        "default": 100,
                        "required": false,
                        "type": "int",
                        "description": "The maximum number of events to return (e.g. 5)"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/addresses/<address>/balances": {
                "function": "get_address_balances",
                "description": "Returns the balances of an address",
                "args": [
                    {
                        "name": "address",
                        "required": true,
                        "type": "str",
                        "description": "The address to return (e.g. $ADDRESS_1)"
                    },
                    {
                        "name": "cursor",
                        "default": null,
                        "required": false,
                        "type": "str",
                        "description": "The last index of the balances to return"
                    },
                    {
                        "name": "limit",
                        "default": 100,
                        "required": false,
                        "type": "int",
                        "description": "The maximum number of balances to return (e.g. 5)"
                    },
                    {
                        "name": "offset",
                        "default": null,
                        "required": false,
                        "type": "int",
                        "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                    },
                    {
                        "name": "sort",
                        "default": null,
                        "required": false,
                        "type": "str",
                        "description": "The sort order of the balances to return (overrides the `cursor` parameter) (e.g. quantity:desc)"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/addresses/<address>/balances/<asset>": {
                "function": "get_balance_by_address_and_asset",
                "description": "Returns the balance of an address and asset",
                "args": [
                    {
                        "name": "address",
                        "required": true,
                        "type": "str",
                        "description": "The address to return (e.g. $ADDRESS_1)"
                    },
                    {
                        "name": "asset",
                        "required": true,
                        "type": "str",
                        "description": "The asset to return (e.g. XCP)"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/addresses/<address>/credits": {
                "function": "get_credits_by_address",
                "description": "Returns the credits of an address",
                "args": [
                    {
                        "name": "address",
                        "required": true,
                        "type": "str",
                        "description": "The address to return (e.g. $ADDRESS_1)"
                    },
                    {
                        "name": "action",
                        "default": null,
                        "required": false,
                        "type": "enum[str]",
                        "members": [
                            null,
                            "Closed: Max dispenses reached",
                            "bet settled: for equal",
                            "bet settled: for notequal",
                            "bet settled: liquidated for bear",
                            "btcpay",
                            "burn",
                            "cancel order",
                            "close dispenser",
                            "dispense",
                            "dispenser close",
                            "dividend",
                            "feed fee",
                            "filled",
                            "issuance",
                            "mpma send",
                            "open dispenser empty addr",
                            "order cancelled",
                            "order expired",
                            "order match",
                            "recredit backward quantity",
                            "recredit forward quantity",
                            "recredit wager",
                            "recredit wager remaining",
                            "reset issuance",
                            "send",
                            "sweep",
                            "wins"
                        ],
                        "description": "The action to filter by"
                    },
                    {
                        "name": "cursor",
                        "default": null,
                        "required": false,
                        "type": "str",
                        "description": "The last index of the credits to return"
                    },
                    {
                        "name": "limit",
                        "default": 100,
                        "required": false,
                        "type": "int",
                        "description": "The maximum number of credits to return (e.g. 5)"
                    },
                    {
                        "name": "offset",
                        "default": null,
                        "required": false,
                        "type": "int",
                        "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/addresses/<address>/debits": {
                "function": "get_debits_by_address",
                "description": "Returns the debits of an address",
                "args": [
                    {
                        "name": "address",
                        "required": true,
                        "type": "str",
                        "description": "The address to return (e.g. $ADDRESS_1)"
                    },
                    {
                        "name": "action",
                        "default": null,
                        "required": false,
                        "type": "enum[str]",
                        "members": [
                            null,
                            "bet",
                            "destroy",
                            "dividend",
                            "dividend fee",
                            "issuance fee",
                            "mpma send",
                            "open RPS",
                            "open dispenser",
                            "open dispenser empty addr",
                            "open order",
                            "refill dispenser",
                            "reopen RPS after matching expiration",
                            "reset destroy",
                            "send",
                            "sweep",
                            "sweep fee"
                        ],
                        "description": "The action to filter by"
                    },
                    {
                        "name": "cursor",
                        "default": null,
                        "required": false,
                        "type": "str",
                        "description": "The last index of the debits to return"
                    },
                    {
                        "name": "limit",
                        "default": 100,
                        "required": false,
                        "type": "int",
                        "description": "The maximum number of debits to return (e.g. 5)"
                    },
                    {
                        "name": "offset",
                        "default": null,
                        "required": false,
                        "type": "int",
                        "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/addresses/<address>/bets": {
                "function": "get_bet_by_feed",
                "description": "Returns the bets of a feed",
                "args": [
                    {
                        "name": "address",
                        "required": true,
                        "type": "str",
                        "description": "The address of the feed (e.g. $ADDRESS_1)"
                    },
                    {
                        "name": "status",
                        "default": "open",
                        "required": false,
                        "type": "enum[str]",
                        "members": [
                            "cancelled",
                            "dropped",
                            "expired",
                            "filled",
                            "open"
                        ],
                        "description": "The status of the bet (e.g. filled)"
                    },
                    {
                        "name": "cursor",
                        "default": null,
                        "required": false,
                        "type": "str",
                        "description": "The last index of the bets to return"
                    },
                    {
                        "name": "limit",
                        "default": 100,
                        "required": false,
                        "type": "int",
                        "description": "The maximum number of bets to return (e.g. 5)"
                    },
                    {
                        "name": "offset",
                        "default": null,
                        "required": false,
                        "type": "int",
                        "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/addresses/<address>/broadcasts": {
                "function": "get_broadcasts_by_source",
                "description": "Returns the broadcasts of a source",
                "args": [
                    {
                        "name": "address",
                        "required": true,
                        "type": "str",
                        "description": "The address to return (e.g. $ADDRESS_1)"
                    },
                    {
                        "name": "cursor",
                        "default": null,
                        "required": false,
                        "type": "str",
                        "description": "The last index of the broadcasts to return"
                    },
                    {
                        "name": "limit",
                        "default": 100,
                        "required": false,
                        "type": "int",
                        "description": "The maximum number of broadcasts to return (e.g. 5)"
                    },
                    {
                        "name": "offset",
                        "default": null,
                        "required": false,
                        "type": "int",
                        "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/addresses/<address>/burns": {
                "function": "get_burns_by_address",
                "description": "Returns the burns of an address",
                "args": [
                    {
                        "name": "address",
                        "required": true,
                        "type": "str",
                        "description": "The address to return (e.g. $ADDRESS_1)"
                    },
                    {
                        "name": "cursor",
                        "default": null,
                        "required": false,
                        "type": "str",
                        "description": "The last index of the burns to return"
                    },
                    {
                        "name": "limit",
                        "default": 100,
                        "required": false,
                        "type": "int",
                        "description": "The maximum number of burns to return (e.g. 5)"
                    },
                    {
                        "name": "offset",
                        "default": null,
                        "required": false,
                        "type": "int",
                        "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/addresses/<address>/sends": {
                "function": "get_sends_by_address",
                "description": "Returns the sends, include Enhanced and MPMA sends, of an address",
                "args": [
                    {
                        "name": "address",
                        "required": true,
                        "type": "str",
                        "description": "The address to return (e.g. $ADDRESS_1)"
                    },
                    {
                        "name": "cursor",
                        "default": null,
                        "required": false,
                        "type": "str",
                        "description": "The last index of the sends to return"
                    },
                    {
                        "name": "limit",
                        "default": 100,
                        "required": false,
                        "type": "int",
                        "description": "The maximum number of sends to return (e.g. 5)"
                    },
                    {
                        "name": "offset",
                        "default": null,
                        "required": false,
                        "type": "int",
                        "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/addresses/<address>/receives": {
                "function": "get_receive_by_address",
                "description": "Returns the receives of an address",
                "args": [
                    {
                        "name": "address",
                        "required": true,
                        "type": "str",
                        "description": "The address to return (e.g. $ADDRESS_5)"
                    },
                    {
                        "name": "cursor",
                        "default": null,
                        "required": false,
                        "type": "str",
                        "description": "The last index of the sends to return"
                    },
                    {
                        "name": "limit",
                        "default": 100,
                        "required": false,
                        "type": "int",
                        "description": "The maximum number of sends to return (e.g. 5)"
                    },
                    {
                        "name": "offset",
                        "default": null,
                        "required": false,
                        "type": "int",
                        "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/addresses/<address>/sends/<asset>": {
                "function": "get_sends_by_address_and_asset",
                "description": "Returns the sends, include Enhanced and MPMA sends, of an address and asset",
                "args": [
                    {
                        "name": "address",
                        "required": true,
                        "type": "str",
                        "description": "The address to return (e.g. $ADDRESS_1)"
                    },
                    {
                        "name": "asset",
                        "required": true,
                        "type": "str",
                        "description": "The asset to return (e.g. $ASSET_5)"
                    },
                    {
                        "name": "cursor",
                        "default": null,
                        "required": false,
                        "type": "str",
                        "description": "The last index of the sends to return"
                    },
                    {
                        "name": "limit",
                        "default": 100,
                        "required": false,
                        "type": "int",
                        "description": "The maximum number of sends to return (e.g. 5)"
                    },
                    {
                        "name": "offset",
                        "default": null,
                        "required": false,
                        "type": "int",
                        "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/addresses/<address>/receives/<asset>": {
                "function": "get_receive_by_address_and_asset",
                "description": "Returns the receives of an address and asset",
                "args": [
                    {
                        "name": "address",
                        "required": true,
                        "type": "str",
                        "description": "The address to return (e.g. $ADDRESS_5)"
                    },
                    {
                        "name": "asset",
                        "required": true,
                        "type": "str",
                        "description": "The asset to return (e.g. $ASSET_5)"
                    },
                    {
                        "name": "cursor",
                        "default": null,
                        "required": false,
                        "type": "str",
                        "description": "The last index of the sends to return"
                    },
                    {
                        "name": "limit",
                        "default": 100,
                        "required": false,
                        "type": "int",
                        "description": "The maximum number of sends to return (e.g. 5)"
                    },
                    {
                        "name": "offset",
                        "default": null,
                        "required": false,
                        "type": "int",
                        "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/addresses/<address>/dispensers": {
                "function": "get_dispensers_by_address",
                "description": "Returns the dispensers of an address",
                "args": [
                    {
                        "name": "address",
                        "required": true,
                        "type": "str",
                        "description": "The address to return (e.g. $ADDRESS_1)"
                    },
                    {
                        "name": "status",
                        "default": "all",
                        "required": false,
                        "type": "enum[str]",
                        "members": [
                            "all",
                            "open",
                            "closed",
                            "closing",
                            "open_empty_address"
                        ],
                        "description": "The status of the dispensers to return"
                    },
                    {
                        "name": "cursor",
                        "default": null,
                        "required": false,
                        "type": "str",
                        "description": "The last index of the dispensers to return"
                    },
                    {
                        "name": "limit",
                        "default": 100,
                        "required": false,
                        "type": "int",
                        "description": "The maximum number of dispensers to return (e.g. 5)"
                    },
                    {
                        "name": "offset",
                        "default": null,
                        "required": false,
                        "type": "int",
                        "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/addresses/<address>/dispensers/<asset>": {
                "function": "get_dispenser_by_address_and_asset",
                "description": "Returns the dispenser of an address and an asset",
                "args": [
                    {
                        "name": "address",
                        "required": true,
                        "type": "str",
                        "description": "The address to return (e.g. $ADDRESS_1)"
                    },
                    {
                        "name": "asset",
                        "required": true,
                        "type": "str",
                        "description": "The asset to return (e.g. XCP)"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/addresses/<address>/dispenses/sends": {
                "function": "get_dispenses_by_source",
                "description": "Returns the dispenses of a source",
                "args": [
                    {
                        "name": "address",
                        "required": true,
                        "type": "str",
                        "description": "The address to return (e.g. $ADDRESS_1)"
                    },
                    {
                        "name": "cursor",
                        "default": null,
                        "required": false,
                        "type": "str",
                        "description": "The last index of the dispenses to return"
                    },
                    {
                        "name": "limit",
                        "default": 100,
                        "required": false,
                        "type": "int",
                        "description": "The maximum number of dispenses to return (e.g. 5)"
                    },
                    {
                        "name": "offset",
                        "default": null,
                        "required": false,
                        "type": "int",
                        "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/addresses/<address>/dispenses/receives": {
                "function": "get_dispenses_by_destination",
                "description": "Returns the dispenses of a destination",
                "args": [
                    {
                        "name": "address",
                        "required": true,
                        "type": "str",
                        "description": "The address to return (e.g. $ADDRESS_2)"
                    },
                    {
                        "name": "cursor",
                        "default": null,
                        "required": false,
                        "type": "str",
                        "description": "The last index of the dispenses to return"
                    },
                    {
                        "name": "limit",
                        "default": 100,
                        "required": false,
                        "type": "int",
                        "description": "The maximum number of dispenses to return (e.g. 5)"
                    },
                    {
                        "name": "offset",
                        "default": null,
                        "required": false,
                        "type": "int",
                        "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/addresses/<address>/dispenses/sends/<asset>": {
                "function": "get_dispenses_by_source_and_asset",
                "description": "Returns the dispenses of an address and an asset",
                "args": [
                    {
                        "name": "address",
                        "required": true,
                        "type": "str",
                        "description": "The address to return (e.g. $ADDRESS_1)"
                    },
                    {
                        "name": "asset",
                        "required": true,
                        "type": "str",
                        "description": "The asset to return (e.g. XCP)"
                    },
                    {
                        "name": "cursor",
                        "default": null,
                        "required": false,
                        "type": "str",
                        "description": "The last index of the dispenses to return"
                    },
                    {
                        "name": "limit",
                        "default": 100,
                        "required": false,
                        "type": "int",
                        "description": "The maximum number of dispenses to return (e.g. 5)"
                    },
                    {
                        "name": "offset",
                        "default": null,
                        "required": false,
                        "type": "int",
                        "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/addresses/<address>/dispenses/receives/<asset>": {
                "function": "get_dispenses_by_destination_and_asset",
                "description": "Returns the dispenses of an address and an asset",
                "args": [
                    {
                        "name": "address",
                        "required": true,
                        "type": "str",
                        "description": "The address to return (e.g. $ADDRESS_2)"
                    },
                    {
                        "name": "asset",
                        "required": true,
                        "type": "str",
                        "description": "The asset to return (e.g. XCP)"
                    },
                    {
                        "name": "cursor",
                        "default": null,
                        "required": false,
                        "type": "str",
                        "description": "The last index of the dispenses to return"
                    },
                    {
                        "name": "limit",
                        "default": 100,
                        "required": false,
                        "type": "int",
                        "description": "The maximum number of dispenses to return (e.g. 5)"
                    },
                    {
                        "name": "offset",
                        "default": null,
                        "required": false,
                        "type": "int",
                        "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/addresses/<address>/sweeps": {
                "function": "get_sweeps_by_address",
                "description": "Returns the sweeps of an address",
                "args": [
                    {
                        "name": "address",
                        "required": true,
                        "type": "str",
                        "description": "The address to return (e.g. $ADDRESS_3)"
                    },
                    {
                        "name": "cursor",
                        "default": null,
                        "required": false,
                        "type": "str",
                        "description": "The last index of the sweeps to return"
                    },
                    {
                        "name": "limit",
                        "default": 100,
                        "required": false,
                        "type": "int",
                        "description": "The maximum number of sweeps to return (e.g. 5)"
                    },
                    {
                        "name": "offset",
                        "default": null,
                        "required": false,
                        "type": "int",
                        "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/addresses/<address>/issuances": {
                "function": "get_issuances_by_address",
                "description": "Returns the issuances of an address",
                "args": [
                    {
                        "name": "address",
                        "required": true,
                        "type": "str",
                        "description": "The address to return (e.g. $ADDRESS_1)"
                    },
                    {
                        "name": "cursor",
                        "default": null,
                        "required": false,
                        "type": "str",
                        "description": "The last index of the issuances to return"
                    },
                    {
                        "name": "limit",
                        "default": 100,
                        "required": false,
                        "type": "int",
                        "description": "The maximum number of issuances to return (e.g. 5)"
                    },
                    {
                        "name": "offset",
                        "default": null,
                        "required": false,
                        "type": "int",
                        "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/addresses/<address>/assets": {
                "function": "get_valid_assets_by_issuer",
                "description": "Returns the valid assets of an issuer",
                "args": [
                    {
                        "name": "address",
                        "required": true,
                        "type": "str",
                        "description": "The issuer to return (e.g. $ADDRESS_1)"
                    },
                    {
                        "name": "named",
                        "default": null,
                        "required": false,
                        "type": "bool",
                        "description": "Whether to return only named assets (e.g. true)"
                    },
                    {
                        "name": "cursor",
                        "default": null,
                        "required": false,
                        "type": "str",
                        "description": "The last index of the assets to return"
                    },
                    {
                        "name": "limit",
                        "default": 100,
                        "required": false,
                        "type": "int",
                        "description": "The maximum number of assets to return (e.g. 5)"
                    },
                    {
                        "name": "offset",
                        "default": null,
                        "required": false,
                        "type": "int",
                        "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/addresses/<address>/transactions": {
                "function": "get_transactions_by_address",
                "description": "Returns the transactions of an address",
                "args": [
                    {
                        "name": "address",
                        "required": true,
                        "type": "str",
                        "description": "The address to return (e.g. $ADDRESS_1)"
                    },
                    {
                        "name": "cursor",
                        "default": null,
                        "required": false,
                        "type": "str",
                        "description": "The last transaction index to return (e.g. $LAST_TX_INDEX)"
                    },
                    {
                        "name": "limit",
                        "default": 10,
                        "required": false,
                        "type": "int",
                        "description": "The maximum number of transactions to return (e.g. 5)"
                    },
                    {
                        "name": "offset",
                        "default": null,
                        "required": false,
                        "type": "int",
                        "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/addresses/<address>/dividends": {
                "function": "get_dividends_distributed_by_address",
                "description": "Returns the dividends distributed by an address",
                "args": [
                    {
                        "name": "address",
                        "required": true,
                        "type": "str",
                        "description": "The address to return (e.g. $ADDRESS_1)"
                    },
                    {
                        "name": "cursor",
                        "default": null,
                        "required": false,
                        "type": "str",
                        "description": "The last index of the assets to return"
                    },
                    {
                        "name": "limit",
                        "default": 100,
                        "required": false,
                        "type": "int",
                        "description": "The maximum number of assets to return (e.g. 5)"
                    },
                    {
                        "name": "offset",
                        "default": null,
                        "required": false,
                        "type": "int",
                        "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/addresses/<address>/orders": {
                "function": "get_orders_by_address",
                "description": "Returns the orders of an address",
                "args": [
                    {
                        "name": "address",
                        "required": true,
                        "type": "str",
                        "description": "The address to return (e.g. $ADDRESS_1)"
                    },
                    {
                        "name": "status",
                        "default": "all",
                        "required": false,
                        "type": "enum[str]",
                        "members": [
                            "all",
                            "open",
                            "expired",
                            "filled",
                            "cancelled"
                        ],
                        "description": "The status of the orders to return"
                    },
                    {
                        "name": "cursor",
                        "default": null,
                        "required": false,
                        "type": "str",
                        "description": "The last index of the orders to return"
                    },
                    {
                        "name": "limit",
                        "default": 100,
                        "required": false,
                        "type": "int",
                        "description": "The maximum number of orders to return (e.g. 5)"
                    },
                    {
                        "name": "offset",
                        "default": null,
                        "required": false,
                        "type": "int",
                        "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/addresses/<address>/fairminters": {
                "function": "get_fairminters_by_address",
                "description": "Returns the fairminter by its source",
                "args": [
                    {
                        "name": "address",
                        "required": true,
                        "type": "str",
                        "description": "The source of the fairminter to return (e.g. $ADDRESS_1)"
                    },
                    {
                        "name": "cursor",
                        "default": null,
                        "required": false,
                        "type": "str"
                    },
                    {
                        "name": "limit",
                        "default": 100,
                        "required": false,
                        "type": "int"
                    },
                    {
                        "name": "offset",
                        "default": null,
                        "required": false,
                        "type": "int"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/addresses/<address>/fairmints": {
                "function": "get_fairmints_by_address",
                "description": "Returns the mints by address",
                "args": [
                    {
                        "name": "address",
                        "required": true,
                        "type": "str",
                        "description": "The address of the mints to return (e.g. $ADDRESS_2)"
                    },
                    {
                        "name": "cursor",
                        "default": null,
                        "required": false,
                        "type": "str"
                    },
                    {
                        "name": "limit",
                        "default": 100,
                        "required": false,
                        "type": "int"
                    },
                    {
                        "name": "offset",
                        "default": null,
                        "required": false,
                        "type": "int"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/addresses/<address>/fairmints/<asset>": {
                "function": "get_fairmints_by_address_and_asset",
                "description": "Returns the mints by address and asset",
                "args": [
                    {
                        "name": "address",
                        "required": true,
                        "type": "str",
                        "description": "The address of the mints to return (e.g. $ADDRESS_2)"
                    },
                    {
                        "name": "asset",
                        "required": true,
                        "type": "str",
                        "description": "The asset of the mints to return (e.g. $ASSET_1)"
                    },
                    {
                        "name": "cursor",
                        "default": null,
                        "required": false,
                        "type": "str"
                    },
                    {
                        "name": "limit",
                        "default": 100,
                        "required": false,
                        "type": "int"
                    },
                    {
                        "name": "offset",
                        "default": null,
                        "required": false,
                        "type": "int"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/addresses/<address>/compose/bet": {
                "function": "compose_bet",
                "description": "Composes a transaction to issue a bet against a feed.",
                "args": [
                    {
                        "name": "address",
                        "required": true,
                        "type": "str",
                        "description": "The address that will make the bet (e.g. $ADDRESS_1)"
                    },
                    {
                        "name": "feed_address",
                        "required": true,
                        "type": "str",
                        "description": "The address that hosts the feed to be bet on (e.g. $ADDRESS_2)"
                    },
                    {
                        "name": "bet_type",
                        "required": true,
                        "type": "int",
                        "description": "Bet 0 for Bullish CFD (deprecated), 1 for Bearish CFD (deprecated), 2 for Equal, 3 for NotEqual (e.g. 2)"
                    },
                    {
                        "name": "deadline",
                        "required": true,
                        "type": "int",
                        "description": "The time at which the bet should be decided/settled, in Unix time (seconds since epoch) (e.g. 3000000000)"
                    },
                    {
                        "name": "wager_quantity",
                        "required": true,
                        "type": "int",
                        "description": "The quantities of XCP to wager (in satoshis, hence integer) (e.g. 1000)"
                    },
                    {
                        "name": "counterwager_quantity",
                        "required": true,
                        "type": "int",
                        "description": "The minimum quantities of XCP to be wagered against, for the bets to match (in satoshis, hence integer) (e.g. 1000)"
                    },
                    {
                        "name": "expiration",
                        "required": true,
                        "type": "int",
                        "description": "The number of blocks after which the bet expires if it remains unmatched (e.g. 100)"
                    },
                    {
                        "name": "leverage",
                        "default": 5040,
                        "required": false,
                        "type": "int",
                        "description": "Leverage, as a fraction of 5040"
                    },
                    {
                        "name": "target_value",
                        "default": null,
                        "required": false,
                        "type": "int",
                        "description": "Target value for Equal/NotEqual bet (e.g. 1000)"
                    },
                    {
                        "name": "encoding",
                        "type": "str",
                        "default": "auto",
                        "description": "The encoding method to use",
                        "required": false
                    },
                    {
                        "name": "fee_per_kb",
                        "type": "int",
                        "default": null,
                        "description": "The fee per kilobyte of transaction data constant that the server uses when deciding on the dynamic fee to use (in satoshis)",
                        "required": false
                    },
                    {
                        "name": "regular_dust_size",
                        "type": "int",
                        "default": 546,
                        "description": "Specify (in satoshis) to override the (dust) amount of BTC used for each non-(bare) multisig output.",
                        "required": false
                    },
                    {
                        "name": "multisig_dust_size",
                        "type": "int",
                        "default": 1000,
                        "description": "Specify (in satoshis) to override the (dust) amount of BTC used for each (bare) multisig output",
                        "required": false
                    },
                    {
                        "name": "pubkey",
                        "type": "str",
                        "default": null,
                        "description": "The hexadecimal public key of the source address (or a list of the keys, if multi-sig). Required when using encoding parameter values of multisig or pubkeyhash.",
                        "required": false
                    },
                    {
                        "name": "allow_unconfirmed_inputs",
                        "type": "bool",
                        "default": false,
                        "description": "Set to true to allow this transaction to utilize unconfirmed UTXOs as inputs",
                        "required": false
                    },
                    {
                        "name": "fee",
                        "type": "int",
                        "default": null,
                        "description": "If you'd like to specify a custom miners' fee, specify it here (in satoshis). Leave as default for the server to automatically choose",
                        "required": false
                    },
                    {
                        "name": "fee_provided",
                        "type": "int",
                        "default": 0,
                        "description": "If you would like to specify a maximum fee (up to and including which may be used as the transaction fee), specify it here (in satoshis). This differs from fee in that this is an upper bound value, which fee is an exact value",
                        "required": false
                    },
                    {
                        "name": "unspent_tx_hash",
                        "type": "str",
                        "default": null,
                        "description": "When compiling the UTXOs to use as inputs for the transaction being created, only consider unspent outputs from this specific transaction hash. Defaults to null to consider all UTXOs for the address. Do not use this parameter if you are specifying inputs_set",
                        "required": false
                    },
                    {
                        "name": "dust_return_pubkey",
                        "type": "str",
                        "default": null,
                        "description": "The dust return pubkey is used in multi-sig data outputs (as the only real pubkey) to make those the outputs spendable. By default, this pubkey is taken from the pubkey used in the first transaction input. However, it can be overridden here (and is required to be specified if a P2SH input is used and multisig is used as the data output encoding.) If specified, specify the public key (in hex format) where dust will be returned to so that it can be reclaimed. Only valid/useful when used with transactions that utilize multisig data encoding. Note that if this value is set to false, this instructs counterparty-server to use the default dust return pubkey configured at the node level. If this default is not set at the node level, the call will generate an exception",
                        "required": false
                    },
                    {
                        "name": "disable_utxo_locks",
                        "type": "bool",
                        "default": false,
                        "description": "By default, UTXOs utilized when creating a transaction are 'locked' for a few seconds, to prevent a case where rapidly generating create_ calls reuse UTXOs due to their spent status not being updated in bitcoind yet. Specify true for this parameter to disable this behavior, and not temporarily lock UTXOs",
                        "required": false
                    },
                    {
                        "name": "p2sh_pretx_txid",
                        "type": "str",
                        "default": null,
                        "description": "The previous transaction txid for a two part P2SH message. This txid must be taken from the signed transaction",
                        "required": false
                    },
                    {
                        "name": "segwit",
                        "type": "bool",
                        "default": false,
                        "description": "Use segwit",
                        "required": false
                    },
                    {
                        "name": "confirmation_target",
                        "type": "int",
                        "default": 3,
                        "description": "The number of blocks to target for confirmation",
                        "required": false
                    },
                    {
                        "name": "exclude_utxos",
                        "type": "str",
                        "default": null,
                        "description": "A comma-separated list of UTXO txids to exclude when selecting UTXOs to use as inputs for the transaction being created",
                        "required": false
                    },
                    {
                        "name": "inputs_set",
                        "type": "str",
                        "default": null,
                        "description": "A comma-separated list of UTXOs (`<txid>:<vout>`) to use as inputs for the transaction being created",
                        "required": false
                    },
                    {
                        "name": "accept_missing_params",
                        "type": "bool",
                        "default": false,
                        "description": "Accept missing parameters with no default value (True by default for API v1)",
                        "required": false
                    },
                    {
                        "name": "return_psbt",
                        "type": "bool",
                        "default": false,
                        "description": "(API v2 only) Construct a PSBT instead of a raw transaction hex",
                        "required": false
                    },
                    {
                        "name": "return_only_data",
                        "type": "bool",
                        "default": false,
                        "description": "(API v2 only) Return only the data part of the transaction",
                        "required": false
                    },
                    {
                        "name": "extended_tx_info",
                        "type": "bool",
                        "default": false,
                        "description": "(API v1 only) When this is not specified or false, the create_ calls return only a hex-encoded string. If this is true, the create_ calls return a data object with the following keys: tx_hex, btc_in, btc_out, btc_change, and btc_fee",
                        "required": false
                    },
                    {
                        "name": "old_style_api",
                        "type": "bool",
                        "default": false,
                        "description": "(API v1 only) Returns a single hex-encoded string instead of an array",
                        "required": false
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/addresses/<address>/compose/broadcast": {
                "function": "compose_broadcast",
                "description": "Composes a transaction to broadcast textual and numerical information to the network.",
                "args": [
                    {
                        "name": "address",
                        "required": true,
                        "type": "str",
                        "description": "The address that will be sending (must have the necessary quantity of the specified asset) (e.g. $ADDRESS_1)"
                    },
                    {
                        "name": "timestamp",
                        "required": true,
                        "type": "int",
                        "description": "The timestamp of the broadcast, in Unix time (e.g. 4003903985)"
                    },
                    {
                        "name": "value",
                        "required": true,
                        "type": "float",
                        "description": "Numerical value of the broadcast (e.g. 100)"
                    },
                    {
                        "name": "fee_fraction",
                        "required": true,
                        "type": "float",
                        "description": "How much of every bet on this feed should go to its operator; a fraction of 1, (i.e. 0.05 is five percent) (e.g. 0.05)"
                    },
                    {
                        "name": "text",
                        "required": true,
                        "type": "str",
                        "description": "The textual part of the broadcast (e.g. \"Hello, world!\")"
                    },
                    {
                        "name": "encoding",
                        "type": "str",
                        "default": "auto",
                        "description": "The encoding method to use",
                        "required": false
                    },
                    {
                        "name": "fee_per_kb",
                        "type": "int",
                        "default": null,
                        "description": "The fee per kilobyte of transaction data constant that the server uses when deciding on the dynamic fee to use (in satoshis)",
                        "required": false
                    },
                    {
                        "name": "regular_dust_size",
                        "type": "int",
                        "default": 546,
                        "description": "Specify (in satoshis) to override the (dust) amount of BTC used for each non-(bare) multisig output.",
                        "required": false
                    },
                    {
                        "name": "multisig_dust_size",
                        "type": "int",
                        "default": 1000,
                        "description": "Specify (in satoshis) to override the (dust) amount of BTC used for each (bare) multisig output",
                        "required": false
                    },
                    {
                        "name": "pubkey",
                        "type": "str",
                        "default": null,
                        "description": "The hexadecimal public key of the source address (or a list of the keys, if multi-sig). Required when using encoding parameter values of multisig or pubkeyhash.",
                        "required": false
                    },
                    {
                        "name": "allow_unconfirmed_inputs",
                        "type": "bool",
                        "default": false,
                        "description": "Set to true to allow this transaction to utilize unconfirmed UTXOs as inputs",
                        "required": false
                    },
                    {
                        "name": "fee",
                        "type": "int",
                        "default": null,
                        "description": "If you'd like to specify a custom miners' fee, specify it here (in satoshis). Leave as default for the server to automatically choose",
                        "required": false
                    },
                    {
                        "name": "fee_provided",
                        "type": "int",
                        "default": 0,
                        "description": "If you would like to specify a maximum fee (up to and including which may be used as the transaction fee), specify it here (in satoshis). This differs from fee in that this is an upper bound value, which fee is an exact value",
                        "required": false
                    },
                    {
                        "name": "unspent_tx_hash",
                        "type": "str",
                        "default": null,
                        "description": "When compiling the UTXOs to use as inputs for the transaction being created, only consider unspent outputs from this specific transaction hash. Defaults to null to consider all UTXOs for the address. Do not use this parameter if you are specifying inputs_set",
                        "required": false
                    },
                    {
                        "name": "dust_return_pubkey",
                        "type": "str",
                        "default": null,
                        "description": "The dust return pubkey is used in multi-sig data outputs (as the only real pubkey) to make those the outputs spendable. By default, this pubkey is taken from the pubkey used in the first transaction input. However, it can be overridden here (and is required to be specified if a P2SH input is used and multisig is used as the data output encoding.) If specified, specify the public key (in hex format) where dust will be returned to so that it can be reclaimed. Only valid/useful when used with transactions that utilize multisig data encoding. Note that if this value is set to false, this instructs counterparty-server to use the default dust return pubkey configured at the node level. If this default is not set at the node level, the call will generate an exception",
                        "required": false
                    },
                    {
                        "name": "disable_utxo_locks",
                        "type": "bool",
                        "default": false,
                        "description": "By default, UTXOs utilized when creating a transaction are 'locked' for a few seconds, to prevent a case where rapidly generating create_ calls reuse UTXOs due to their spent status not being updated in bitcoind yet. Specify true for this parameter to disable this behavior, and not temporarily lock UTXOs",
                        "required": false
                    },
                    {
                        "name": "p2sh_pretx_txid",
                        "type": "str",
                        "default": null,
                        "description": "The previous transaction txid for a two part P2SH message. This txid must be taken from the signed transaction",
                        "required": false
                    },
                    {
                        "name": "segwit",
                        "type": "bool",
                        "default": false,
                        "description": "Use segwit",
                        "required": false
                    },
                    {
                        "name": "confirmation_target",
                        "type": "int",
                        "default": 3,
                        "description": "The number of blocks to target for confirmation",
                        "required": false
                    },
                    {
                        "name": "exclude_utxos",
                        "type": "str",
                        "default": null,
                        "description": "A comma-separated list of UTXO txids to exclude when selecting UTXOs to use as inputs for the transaction being created",
                        "required": false
                    },
                    {
                        "name": "inputs_set",
                        "type": "str",
                        "default": null,
                        "description": "A comma-separated list of UTXOs (`<txid>:<vout>`) to use as inputs for the transaction being created",
                        "required": false
                    },
                    {
                        "name": "accept_missing_params",
                        "type": "bool",
                        "default": false,
                        "description": "Accept missing parameters with no default value (True by default for API v1)",
                        "required": false
                    },
                    {
                        "name": "return_psbt",
                        "type": "bool",
                        "default": false,
                        "description": "(API v2 only) Construct a PSBT instead of a raw transaction hex",
                        "required": false
                    },
                    {
                        "name": "return_only_data",
                        "type": "bool",
                        "default": false,
                        "description": "(API v2 only) Return only the data part of the transaction",
                        "required": false
                    },
                    {
                        "name": "extended_tx_info",
                        "type": "bool",
                        "default": false,
                        "description": "(API v1 only) When this is not specified or false, the create_ calls return only a hex-encoded string. If this is true, the create_ calls return a data object with the following keys: tx_hex, btc_in, btc_out, btc_change, and btc_fee",
                        "required": false
                    },
                    {
                        "name": "old_style_api",
                        "type": "bool",
                        "default": false,
                        "description": "(API v1 only) Returns a single hex-encoded string instead of an array",
                        "required": false
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/addresses/<address>/compose/btcpay": {
                "function": "compose_btcpay",
                "description": "Composes a transaction to pay for a BTC order match.",
                "args": [
                    {
                        "name": "address",
                        "required": true,
                        "type": "str",
                        "description": "The address that will be sending the payment (e.g. $ADDRESS_1)"
                    },
                    {
                        "name": "order_match_id",
                        "required": true,
                        "type": "str",
                        "description": "The ID of the order match to pay for (e.g. $LAST_ORDER_MATCH_ID)"
                    },
                    {
                        "name": "encoding",
                        "type": "str",
                        "default": "auto",
                        "description": "The encoding method to use",
                        "required": false
                    },
                    {
                        "name": "fee_per_kb",
                        "type": "int",
                        "default": null,
                        "description": "The fee per kilobyte of transaction data constant that the server uses when deciding on the dynamic fee to use (in satoshis)",
                        "required": false
                    },
                    {
                        "name": "regular_dust_size",
                        "type": "int",
                        "default": 546,
                        "description": "Specify (in satoshis) to override the (dust) amount of BTC used for each non-(bare) multisig output.",
                        "required": false
                    },
                    {
                        "name": "multisig_dust_size",
                        "type": "int",
                        "default": 1000,
                        "description": "Specify (in satoshis) to override the (dust) amount of BTC used for each (bare) multisig output",
                        "required": false
                    },
                    {
                        "name": "pubkey",
                        "type": "str",
                        "default": null,
                        "description": "The hexadecimal public key of the source address (or a list of the keys, if multi-sig). Required when using encoding parameter values of multisig or pubkeyhash.",
                        "required": false
                    },
                    {
                        "name": "allow_unconfirmed_inputs",
                        "type": "bool",
                        "default": false,
                        "description": "Set to true to allow this transaction to utilize unconfirmed UTXOs as inputs",
                        "required": false
                    },
                    {
                        "name": "fee",
                        "type": "int",
                        "default": null,
                        "description": "If you'd like to specify a custom miners' fee, specify it here (in satoshis). Leave as default for the server to automatically choose",
                        "required": false
                    },
                    {
                        "name": "fee_provided",
                        "type": "int",
                        "default": 0,
                        "description": "If you would like to specify a maximum fee (up to and including which may be used as the transaction fee), specify it here (in satoshis). This differs from fee in that this is an upper bound value, which fee is an exact value",
                        "required": false
                    },
                    {
                        "name": "unspent_tx_hash",
                        "type": "str",
                        "default": null,
                        "description": "When compiling the UTXOs to use as inputs for the transaction being created, only consider unspent outputs from this specific transaction hash. Defaults to null to consider all UTXOs for the address. Do not use this parameter if you are specifying inputs_set",
                        "required": false
                    },
                    {
                        "name": "dust_return_pubkey",
                        "type": "str",
                        "default": null,
                        "description": "The dust return pubkey is used in multi-sig data outputs (as the only real pubkey) to make those the outputs spendable. By default, this pubkey is taken from the pubkey used in the first transaction input. However, it can be overridden here (and is required to be specified if a P2SH input is used and multisig is used as the data output encoding.) If specified, specify the public key (in hex format) where dust will be returned to so that it can be reclaimed. Only valid/useful when used with transactions that utilize multisig data encoding. Note that if this value is set to false, this instructs counterparty-server to use the default dust return pubkey configured at the node level. If this default is not set at the node level, the call will generate an exception",
                        "required": false
                    },
                    {
                        "name": "disable_utxo_locks",
                        "type": "bool",
                        "default": false,
                        "description": "By default, UTXOs utilized when creating a transaction are 'locked' for a few seconds, to prevent a case where rapidly generating create_ calls reuse UTXOs due to their spent status not being updated in bitcoind yet. Specify true for this parameter to disable this behavior, and not temporarily lock UTXOs",
                        "required": false
                    },
                    {
                        "name": "p2sh_pretx_txid",
                        "type": "str",
                        "default": null,
                        "description": "The previous transaction txid for a two part P2SH message. This txid must be taken from the signed transaction",
                        "required": false
                    },
                    {
                        "name": "segwit",
                        "type": "bool",
                        "default": false,
                        "description": "Use segwit",
                        "required": false
                    },
                    {
                        "name": "confirmation_target",
                        "type": "int",
                        "default": 3,
                        "description": "The number of blocks to target for confirmation",
                        "required": false
                    },
                    {
                        "name": "exclude_utxos",
                        "type": "str",
                        "default": null,
                        "description": "A comma-separated list of UTXO txids to exclude when selecting UTXOs to use as inputs for the transaction being created",
                        "required": false
                    },
                    {
                        "name": "inputs_set",
                        "type": "str",
                        "default": null,
                        "description": "A comma-separated list of UTXOs (`<txid>:<vout>`) to use as inputs for the transaction being created",
                        "required": false
                    },
                    {
                        "name": "accept_missing_params",
                        "type": "bool",
                        "default": false,
                        "description": "Accept missing parameters with no default value (True by default for API v1)",
                        "required": false
                    },
                    {
                        "name": "return_psbt",
                        "type": "bool",
                        "default": false,
                        "description": "(API v2 only) Construct a PSBT instead of a raw transaction hex",
                        "required": false
                    },
                    {
                        "name": "return_only_data",
                        "type": "bool",
                        "default": false,
                        "description": "(API v2 only) Return only the data part of the transaction",
                        "required": false
                    },
                    {
                        "name": "extended_tx_info",
                        "type": "bool",
                        "default": false,
                        "description": "(API v1 only) When this is not specified or false, the create_ calls return only a hex-encoded string. If this is true, the create_ calls return a data object with the following keys: tx_hex, btc_in, btc_out, btc_change, and btc_fee",
                        "required": false
                    },
                    {
                        "name": "old_style_api",
                        "type": "bool",
                        "default": false,
                        "description": "(API v1 only) Returns a single hex-encoded string instead of an array",
                        "required": false
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/addresses/<address>/compose/burn": {
                "function": "compose_burn",
                "description": "Composes a transaction to burn a given quantity of BTC for XCP (on mainnet, possible between blocks 278310 and 283810; on testnet it is still available).",
                "args": [
                    {
                        "name": "address",
                        "required": true,
                        "type": "str",
                        "description": "The address with the BTC to burn (e.g. $ADDRESS_1)"
                    },
                    {
                        "name": "quantity",
                        "required": true,
                        "type": "int",
                        "description": "The quantities of BTC to burn (in satoshis, hence integer) (1 BTC maximum burn per address) (e.g. 1000)"
                    },
                    {
                        "name": "overburn",
                        "default": false,
                        "required": false,
                        "type": "bool",
                        "description": "Whether to allow the burn to exceed 1 BTC for the address"
                    },
                    {
                        "name": "encoding",
                        "type": "str",
                        "default": "auto",
                        "description": "The encoding method to use",
                        "required": false
                    },
                    {
                        "name": "fee_per_kb",
                        "type": "int",
                        "default": null,
                        "description": "The fee per kilobyte of transaction data constant that the server uses when deciding on the dynamic fee to use (in satoshis)",
                        "required": false
                    },
                    {
                        "name": "regular_dust_size",
                        "type": "int",
                        "default": 546,
                        "description": "Specify (in satoshis) to override the (dust) amount of BTC used for each non-(bare) multisig output.",
                        "required": false
                    },
                    {
                        "name": "multisig_dust_size",
                        "type": "int",
                        "default": 1000,
                        "description": "Specify (in satoshis) to override the (dust) amount of BTC used for each (bare) multisig output",
                        "required": false
                    },
                    {
                        "name": "pubkey",
                        "type": "str",
                        "default": null,
                        "description": "The hexadecimal public key of the source address (or a list of the keys, if multi-sig). Required when using encoding parameter values of multisig or pubkeyhash.",
                        "required": false
                    },
                    {
                        "name": "allow_unconfirmed_inputs",
                        "type": "bool",
                        "default": false,
                        "description": "Set to true to allow this transaction to utilize unconfirmed UTXOs as inputs",
                        "required": false
                    },
                    {
                        "name": "fee",
                        "type": "int",
                        "default": null,
                        "description": "If you'd like to specify a custom miners' fee, specify it here (in satoshis). Leave as default for the server to automatically choose",
                        "required": false
                    },
                    {
                        "name": "fee_provided",
                        "type": "int",
                        "default": 0,
                        "description": "If you would like to specify a maximum fee (up to and including which may be used as the transaction fee), specify it here (in satoshis). This differs from fee in that this is an upper bound value, which fee is an exact value",
                        "required": false
                    },
                    {
                        "name": "unspent_tx_hash",
                        "type": "str",
                        "default": null,
                        "description": "When compiling the UTXOs to use as inputs for the transaction being created, only consider unspent outputs from this specific transaction hash. Defaults to null to consider all UTXOs for the address. Do not use this parameter if you are specifying inputs_set",
                        "required": false
                    },
                    {
                        "name": "dust_return_pubkey",
                        "type": "str",
                        "default": null,
                        "description": "The dust return pubkey is used in multi-sig data outputs (as the only real pubkey) to make those the outputs spendable. By default, this pubkey is taken from the pubkey used in the first transaction input. However, it can be overridden here (and is required to be specified if a P2SH input is used and multisig is used as the data output encoding.) If specified, specify the public key (in hex format) where dust will be returned to so that it can be reclaimed. Only valid/useful when used with transactions that utilize multisig data encoding. Note that if this value is set to false, this instructs counterparty-server to use the default dust return pubkey configured at the node level. If this default is not set at the node level, the call will generate an exception",
                        "required": false
                    },
                    {
                        "name": "disable_utxo_locks",
                        "type": "bool",
                        "default": false,
                        "description": "By default, UTXOs utilized when creating a transaction are 'locked' for a few seconds, to prevent a case where rapidly generating create_ calls reuse UTXOs due to their spent status not being updated in bitcoind yet. Specify true for this parameter to disable this behavior, and not temporarily lock UTXOs",
                        "required": false
                    },
                    {
                        "name": "p2sh_pretx_txid",
                        "type": "str",
                        "default": null,
                        "description": "The previous transaction txid for a two part P2SH message. This txid must be taken from the signed transaction",
                        "required": false
                    },
                    {
                        "name": "segwit",
                        "type": "bool",
                        "default": false,
                        "description": "Use segwit",
                        "required": false
                    },
                    {
                        "name": "confirmation_target",
                        "type": "int",
                        "default": 3,
                        "description": "The number of blocks to target for confirmation",
                        "required": false
                    },
                    {
                        "name": "exclude_utxos",
                        "type": "str",
                        "default": null,
                        "description": "A comma-separated list of UTXO txids to exclude when selecting UTXOs to use as inputs for the transaction being created",
                        "required": false
                    },
                    {
                        "name": "inputs_set",
                        "type": "str",
                        "default": null,
                        "description": "A comma-separated list of UTXOs (`<txid>:<vout>`) to use as inputs for the transaction being created",
                        "required": false
                    },
                    {
                        "name": "accept_missing_params",
                        "type": "bool",
                        "default": false,
                        "description": "Accept missing parameters with no default value (True by default for API v1)",
                        "required": false
                    },
                    {
                        "name": "return_psbt",
                        "type": "bool",
                        "default": false,
                        "description": "(API v2 only) Construct a PSBT instead of a raw transaction hex",
                        "required": false
                    },
                    {
                        "name": "return_only_data",
                        "type": "bool",
                        "default": false,
                        "description": "(API v2 only) Return only the data part of the transaction",
                        "required": false
                    },
                    {
                        "name": "extended_tx_info",
                        "type": "bool",
                        "default": false,
                        "description": "(API v1 only) When this is not specified or false, the create_ calls return only a hex-encoded string. If this is true, the create_ calls return a data object with the following keys: tx_hex, btc_in, btc_out, btc_change, and btc_fee",
                        "required": false
                    },
                    {
                        "name": "old_style_api",
                        "type": "bool",
                        "default": false,
                        "description": "(API v1 only) Returns a single hex-encoded string instead of an array",
                        "required": false
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/addresses/<address>/compose/cancel": {
                "function": "compose_cancel",
                "description": "Composes a transaction to cancel an open order or bet.",
                "args": [
                    {
                        "name": "address",
                        "required": true,
                        "type": "str",
                        "description": "The address that placed the order/bet to be cancelled (e.g. $ADDRESS_1)"
                    },
                    {
                        "name": "offer_hash",
                        "required": true,
                        "type": "str",
                        "description": "The hash of the order/bet to be cancelled (e.g. $LAST_ORDER_TX_HASH)"
                    },
                    {
                        "name": "encoding",
                        "type": "str",
                        "default": "auto",
                        "description": "The encoding method to use",
                        "required": false
                    },
                    {
                        "name": "fee_per_kb",
                        "type": "int",
                        "default": null,
                        "description": "The fee per kilobyte of transaction data constant that the server uses when deciding on the dynamic fee to use (in satoshis)",
                        "required": false
                    },
                    {
                        "name": "regular_dust_size",
                        "type": "int",
                        "default": 546,
                        "description": "Specify (in satoshis) to override the (dust) amount of BTC used for each non-(bare) multisig output.",
                        "required": false
                    },
                    {
                        "name": "multisig_dust_size",
                        "type": "int",
                        "default": 1000,
                        "description": "Specify (in satoshis) to override the (dust) amount of BTC used for each (bare) multisig output",
                        "required": false
                    },
                    {
                        "name": "pubkey",
                        "type": "str",
                        "default": null,
                        "description": "The hexadecimal public key of the source address (or a list of the keys, if multi-sig). Required when using encoding parameter values of multisig or pubkeyhash.",
                        "required": false
                    },
                    {
                        "name": "allow_unconfirmed_inputs",
                        "type": "bool",
                        "default": false,
                        "description": "Set to true to allow this transaction to utilize unconfirmed UTXOs as inputs",
                        "required": false
                    },
                    {
                        "name": "fee",
                        "type": "int",
                        "default": null,
                        "description": "If you'd like to specify a custom miners' fee, specify it here (in satoshis). Leave as default for the server to automatically choose",
                        "required": false
                    },
                    {
                        "name": "fee_provided",
                        "type": "int",
                        "default": 0,
                        "description": "If you would like to specify a maximum fee (up to and including which may be used as the transaction fee), specify it here (in satoshis). This differs from fee in that this is an upper bound value, which fee is an exact value",
                        "required": false
                    },
                    {
                        "name": "unspent_tx_hash",
                        "type": "str",
                        "default": null,
                        "description": "When compiling the UTXOs to use as inputs for the transaction being created, only consider unspent outputs from this specific transaction hash. Defaults to null to consider all UTXOs for the address. Do not use this parameter if you are specifying inputs_set",
                        "required": false
                    },
                    {
                        "name": "dust_return_pubkey",
                        "type": "str",
                        "default": null,
                        "description": "The dust return pubkey is used in multi-sig data outputs (as the only real pubkey) to make those the outputs spendable. By default, this pubkey is taken from the pubkey used in the first transaction input. However, it can be overridden here (and is required to be specified if a P2SH input is used and multisig is used as the data output encoding.) If specified, specify the public key (in hex format) where dust will be returned to so that it can be reclaimed. Only valid/useful when used with transactions that utilize multisig data encoding. Note that if this value is set to false, this instructs counterparty-server to use the default dust return pubkey configured at the node level. If this default is not set at the node level, the call will generate an exception",
                        "required": false
                    },
                    {
                        "name": "disable_utxo_locks",
                        "type": "bool",
                        "default": false,
                        "description": "By default, UTXOs utilized when creating a transaction are 'locked' for a few seconds, to prevent a case where rapidly generating create_ calls reuse UTXOs due to their spent status not being updated in bitcoind yet. Specify true for this parameter to disable this behavior, and not temporarily lock UTXOs",
                        "required": false
                    },
                    {
                        "name": "p2sh_pretx_txid",
                        "type": "str",
                        "default": null,
                        "description": "The previous transaction txid for a two part P2SH message. This txid must be taken from the signed transaction",
                        "required": false
                    },
                    {
                        "name": "segwit",
                        "type": "bool",
                        "default": false,
                        "description": "Use segwit",
                        "required": false
                    },
                    {
                        "name": "confirmation_target",
                        "type": "int",
                        "default": 3,
                        "description": "The number of blocks to target for confirmation",
                        "required": false
                    },
                    {
                        "name": "exclude_utxos",
                        "type": "str",
                        "default": null,
                        "description": "A comma-separated list of UTXO txids to exclude when selecting UTXOs to use as inputs for the transaction being created",
                        "required": false
                    },
                    {
                        "name": "inputs_set",
                        "type": "str",
                        "default": null,
                        "description": "A comma-separated list of UTXOs (`<txid>:<vout>`) to use as inputs for the transaction being created",
                        "required": false
                    },
                    {
                        "name": "accept_missing_params",
                        "type": "bool",
                        "default": false,
                        "description": "Accept missing parameters with no default value (True by default for API v1)",
                        "required": false
                    },
                    {
                        "name": "return_psbt",
                        "type": "bool",
                        "default": false,
                        "description": "(API v2 only) Construct a PSBT instead of a raw transaction hex",
                        "required": false
                    },
                    {
                        "name": "return_only_data",
                        "type": "bool",
                        "default": false,
                        "description": "(API v2 only) Return only the data part of the transaction",
                        "required": false
                    },
                    {
                        "name": "extended_tx_info",
                        "type": "bool",
                        "default": false,
                        "description": "(API v1 only) When this is not specified or false, the create_ calls return only a hex-encoded string. If this is true, the create_ calls return a data object with the following keys: tx_hex, btc_in, btc_out, btc_change, and btc_fee",
                        "required": false
                    },
                    {
                        "name": "old_style_api",
                        "type": "bool",
                        "default": false,
                        "description": "(API v1 only) Returns a single hex-encoded string instead of an array",
                        "required": false
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/addresses/<address>/compose/destroy": {
                "function": "compose_destroy",
                "description": "Composes a transaction to destroy a quantity of an asset.",
                "args": [
                    {
                        "name": "address",
                        "required": true,
                        "type": "str",
                        "description": "The address that will be sending the asset to be destroyed (e.g. $ADDRESS_1)"
                    },
                    {
                        "name": "asset",
                        "required": true,
                        "type": "str",
                        "description": "The asset to be destroyed (e.g. XCP)"
                    },
                    {
                        "name": "quantity",
                        "required": true,
                        "type": "int",
                        "description": "The quantity of the asset to be destroyed (in satoshis, hence integer) (e.g. 1000)"
                    },
                    {
                        "name": "tag",
                        "required": true,
                        "type": "str",
                        "description": "A tag for the destruction (e.g. \"bugs!\")"
                    },
                    {
                        "name": "encoding",
                        "type": "str",
                        "default": "auto",
                        "description": "The encoding method to use",
                        "required": false
                    },
                    {
                        "name": "fee_per_kb",
                        "type": "int",
                        "default": null,
                        "description": "The fee per kilobyte of transaction data constant that the server uses when deciding on the dynamic fee to use (in satoshis)",
                        "required": false
                    },
                    {
                        "name": "regular_dust_size",
                        "type": "int",
                        "default": 546,
                        "description": "Specify (in satoshis) to override the (dust) amount of BTC used for each non-(bare) multisig output.",
                        "required": false
                    },
                    {
                        "name": "multisig_dust_size",
                        "type": "int",
                        "default": 1000,
                        "description": "Specify (in satoshis) to override the (dust) amount of BTC used for each (bare) multisig output",
                        "required": false
                    },
                    {
                        "name": "pubkey",
                        "type": "str",
                        "default": null,
                        "description": "The hexadecimal public key of the source address (or a list of the keys, if multi-sig). Required when using encoding parameter values of multisig or pubkeyhash.",
                        "required": false
                    },
                    {
                        "name": "allow_unconfirmed_inputs",
                        "type": "bool",
                        "default": false,
                        "description": "Set to true to allow this transaction to utilize unconfirmed UTXOs as inputs",
                        "required": false
                    },
                    {
                        "name": "fee",
                        "type": "int",
                        "default": null,
                        "description": "If you'd like to specify a custom miners' fee, specify it here (in satoshis). Leave as default for the server to automatically choose",
                        "required": false
                    },
                    {
                        "name": "fee_provided",
                        "type": "int",
                        "default": 0,
                        "description": "If you would like to specify a maximum fee (up to and including which may be used as the transaction fee), specify it here (in satoshis). This differs from fee in that this is an upper bound value, which fee is an exact value",
                        "required": false
                    },
                    {
                        "name": "unspent_tx_hash",
                        "type": "str",
                        "default": null,
                        "description": "When compiling the UTXOs to use as inputs for the transaction being created, only consider unspent outputs from this specific transaction hash. Defaults to null to consider all UTXOs for the address. Do not use this parameter if you are specifying inputs_set",
                        "required": false
                    },
                    {
                        "name": "dust_return_pubkey",
                        "type": "str",
                        "default": null,
                        "description": "The dust return pubkey is used in multi-sig data outputs (as the only real pubkey) to make those the outputs spendable. By default, this pubkey is taken from the pubkey used in the first transaction input. However, it can be overridden here (and is required to be specified if a P2SH input is used and multisig is used as the data output encoding.) If specified, specify the public key (in hex format) where dust will be returned to so that it can be reclaimed. Only valid/useful when used with transactions that utilize multisig data encoding. Note that if this value is set to false, this instructs counterparty-server to use the default dust return pubkey configured at the node level. If this default is not set at the node level, the call will generate an exception",
                        "required": false
                    },
                    {
                        "name": "disable_utxo_locks",
                        "type": "bool",
                        "default": false,
                        "description": "By default, UTXOs utilized when creating a transaction are 'locked' for a few seconds, to prevent a case where rapidly generating create_ calls reuse UTXOs due to their spent status not being updated in bitcoind yet. Specify true for this parameter to disable this behavior, and not temporarily lock UTXOs",
                        "required": false
                    },
                    {
                        "name": "p2sh_pretx_txid",
                        "type": "str",
                        "default": null,
                        "description": "The previous transaction txid for a two part P2SH message. This txid must be taken from the signed transaction",
                        "required": false
                    },
                    {
                        "name": "segwit",
                        "type": "bool",
                        "default": false,
                        "description": "Use segwit",
                        "required": false
                    },
                    {
                        "name": "confirmation_target",
                        "type": "int",
                        "default": 3,
                        "description": "The number of blocks to target for confirmation",
                        "required": false
                    },
                    {
                        "name": "exclude_utxos",
                        "type": "str",
                        "default": null,
                        "description": "A comma-separated list of UTXO txids to exclude when selecting UTXOs to use as inputs for the transaction being created",
                        "required": false
                    },
                    {
                        "name": "inputs_set",
                        "type": "str",
                        "default": null,
                        "description": "A comma-separated list of UTXOs (`<txid>:<vout>`) to use as inputs for the transaction being created",
                        "required": false
                    },
                    {
                        "name": "accept_missing_params",
                        "type": "bool",
                        "default": false,
                        "description": "Accept missing parameters with no default value (True by default for API v1)",
                        "required": false
                    },
                    {
                        "name": "return_psbt",
                        "type": "bool",
                        "default": false,
                        "description": "(API v2 only) Construct a PSBT instead of a raw transaction hex",
                        "required": false
                    },
                    {
                        "name": "return_only_data",
                        "type": "bool",
                        "default": false,
                        "description": "(API v2 only) Return only the data part of the transaction",
                        "required": false
                    },
                    {
                        "name": "extended_tx_info",
                        "type": "bool",
                        "default": false,
                        "description": "(API v1 only) When this is not specified or false, the create_ calls return only a hex-encoded string. If this is true, the create_ calls return a data object with the following keys: tx_hex, btc_in, btc_out, btc_change, and btc_fee",
                        "required": false
                    },
                    {
                        "name": "old_style_api",
                        "type": "bool",
                        "default": false,
                        "description": "(API v1 only) Returns a single hex-encoded string instead of an array",
                        "required": false
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/addresses/<address>/compose/dispenser": {
                "function": "compose_dispenser",
                "description": "Composes a transaction to opens or closes a dispenser for a given asset at a given rate of main chain asset (BTC). Escrowed quantity on open must be equal or greater than give_quantity. It is suggested that you escrow multiples of give_quantity to ease dispenser operation.",
                "args": [
                    {
                        "name": "address",
                        "required": true,
                        "type": "str",
                        "description": "The address that will be dispensing (must have the necessary escrow_quantity of the specified asset) (e.g. $ADDRESS_7)"
                    },
                    {
                        "name": "asset",
                        "required": true,
                        "type": "str",
                        "description": "The asset or subasset to dispense (e.g. XCP)"
                    },
                    {
                        "name": "give_quantity",
                        "required": true,
                        "type": "int",
                        "description": "The quantity of the asset to dispense (in satoshis, hence integer) (e.g. 1000)"
                    },
                    {
                        "name": "escrow_quantity",
                        "required": true,
                        "type": "int",
                        "description": "The quantity of the asset to reserve for this dispenser (in satoshis, hence integer) (e.g. 1000)"
                    },
                    {
                        "name": "mainchainrate",
                        "required": true,
                        "type": "int",
                        "description": "The quantity of the main chain asset (BTC) per dispensed portion (in satoshis, hence integer) (e.g. 100)"
                    },
                    {
                        "name": "status",
                        "required": true,
                        "type": "int",
                        "description": "The state of the dispenser. 0 for open, 1 for open using open_address, 10 for closed (e.g. 0)"
                    },
                    {
                        "name": "open_address",
                        "default": null,
                        "required": false,
                        "type": "str",
                        "description": "The address that you would like to open the dispenser on; MUST be equal to `address` from block 900000 onwards"
                    },
                    {
                        "name": "oracle_address",
                        "default": null,
                        "required": false,
                        "type": "str",
                        "description": "The address that you would like to use as a price oracle for this dispenser"
                    },
                    {
                        "name": "encoding",
                        "type": "str",
                        "default": "auto",
                        "description": "The encoding method to use",
                        "required": false
                    },
                    {
                        "name": "fee_per_kb",
                        "type": "int",
                        "default": null,
                        "description": "The fee per kilobyte of transaction data constant that the server uses when deciding on the dynamic fee to use (in satoshis)",
                        "required": false
                    },
                    {
                        "name": "regular_dust_size",
                        "type": "int",
                        "default": 546,
                        "description": "Specify (in satoshis) to override the (dust) amount of BTC used for each non-(bare) multisig output.",
                        "required": false
                    },
                    {
                        "name": "multisig_dust_size",
                        "type": "int",
                        "default": 1000,
                        "description": "Specify (in satoshis) to override the (dust) amount of BTC used for each (bare) multisig output",
                        "required": false
                    },
                    {
                        "name": "pubkey",
                        "type": "str",
                        "default": null,
                        "description": "The hexadecimal public key of the source address (or a list of the keys, if multi-sig). Required when using encoding parameter values of multisig or pubkeyhash.",
                        "required": false
                    },
                    {
                        "name": "allow_unconfirmed_inputs",
                        "type": "bool",
                        "default": false,
                        "description": "Set to true to allow this transaction to utilize unconfirmed UTXOs as inputs",
                        "required": false
                    },
                    {
                        "name": "fee",
                        "type": "int",
                        "default": null,
                        "description": "If you'd like to specify a custom miners' fee, specify it here (in satoshis). Leave as default for the server to automatically choose",
                        "required": false
                    },
                    {
                        "name": "fee_provided",
                        "type": "int",
                        "default": 0,
                        "description": "If you would like to specify a maximum fee (up to and including which may be used as the transaction fee), specify it here (in satoshis). This differs from fee in that this is an upper bound value, which fee is an exact value",
                        "required": false
                    },
                    {
                        "name": "unspent_tx_hash",
                        "type": "str",
                        "default": null,
                        "description": "When compiling the UTXOs to use as inputs for the transaction being created, only consider unspent outputs from this specific transaction hash. Defaults to null to consider all UTXOs for the address. Do not use this parameter if you are specifying inputs_set",
                        "required": false
                    },
                    {
                        "name": "dust_return_pubkey",
                        "type": "str",
                        "default": null,
                        "description": "The dust return pubkey is used in multi-sig data outputs (as the only real pubkey) to make those the outputs spendable. By default, this pubkey is taken from the pubkey used in the first transaction input. However, it can be overridden here (and is required to be specified if a P2SH input is used and multisig is used as the data output encoding.) If specified, specify the public key (in hex format) where dust will be returned to so that it can be reclaimed. Only valid/useful when used with transactions that utilize multisig data encoding. Note that if this value is set to false, this instructs counterparty-server to use the default dust return pubkey configured at the node level. If this default is not set at the node level, the call will generate an exception",
                        "required": false
                    },
                    {
                        "name": "disable_utxo_locks",
                        "type": "bool",
                        "default": false,
                        "description": "By default, UTXOs utilized when creating a transaction are 'locked' for a few seconds, to prevent a case where rapidly generating create_ calls reuse UTXOs due to their spent status not being updated in bitcoind yet. Specify true for this parameter to disable this behavior, and not temporarily lock UTXOs",
                        "required": false
                    },
                    {
                        "name": "p2sh_pretx_txid",
                        "type": "str",
                        "default": null,
                        "description": "The previous transaction txid for a two part P2SH message. This txid must be taken from the signed transaction",
                        "required": false
                    },
                    {
                        "name": "segwit",
                        "type": "bool",
                        "default": false,
                        "description": "Use segwit",
                        "required": false
                    },
                    {
                        "name": "confirmation_target",
                        "type": "int",
                        "default": 3,
                        "description": "The number of blocks to target for confirmation",
                        "required": false
                    },
                    {
                        "name": "exclude_utxos",
                        "type": "str",
                        "default": null,
                        "description": "A comma-separated list of UTXO txids to exclude when selecting UTXOs to use as inputs for the transaction being created",
                        "required": false
                    },
                    {
                        "name": "inputs_set",
                        "type": "str",
                        "default": null,
                        "description": "A comma-separated list of UTXOs (`<txid>:<vout>`) to use as inputs for the transaction being created",
                        "required": false
                    },
                    {
                        "name": "accept_missing_params",
                        "type": "bool",
                        "default": false,
                        "description": "Accept missing parameters with no default value (True by default for API v1)",
                        "required": false
                    },
                    {
                        "name": "return_psbt",
                        "type": "bool",
                        "default": false,
                        "description": "(API v2 only) Construct a PSBT instead of a raw transaction hex",
                        "required": false
                    },
                    {
                        "name": "return_only_data",
                        "type": "bool",
                        "default": false,
                        "description": "(API v2 only) Return only the data part of the transaction",
                        "required": false
                    },
                    {
                        "name": "extended_tx_info",
                        "type": "bool",
                        "default": false,
                        "description": "(API v1 only) When this is not specified or false, the create_ calls return only a hex-encoded string. If this is true, the create_ calls return a data object with the following keys: tx_hex, btc_in, btc_out, btc_change, and btc_fee",
                        "required": false
                    },
                    {
                        "name": "old_style_api",
                        "type": "bool",
                        "default": false,
                        "description": "(API v1 only) Returns a single hex-encoded string instead of an array",
                        "required": false
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/addresses/<address>/compose/dividend": {
                "function": "compose_dividend",
                "description": "Composes a transaction to issue a dividend to holders of a given asset.",
                "args": [
                    {
                        "name": "address",
                        "required": true,
                        "type": "str",
                        "description": "The address that will be issuing the dividend (must have the ownership of the asset which the dividend is being issued on) (e.g. $ADDRESS_1)"
                    },
                    {
                        "name": "quantity_per_unit",
                        "required": true,
                        "type": "int",
                        "description": "The amount of dividend_asset rewarded (in satoshis, hence integer) (e.g. 1)"
                    },
                    {
                        "name": "asset",
                        "required": true,
                        "type": "str",
                        "description": "The asset or subasset that the dividends are being rewarded on (e.g. $ASSET_1)"
                    },
                    {
                        "name": "dividend_asset",
                        "required": true,
                        "type": "str",
                        "description": "The asset or subasset that the dividends are paid in (e.g. XCP)"
                    },
                    {
                        "name": "encoding",
                        "type": "str",
                        "default": "auto",
                        "description": "The encoding method to use",
                        "required": false
                    },
                    {
                        "name": "fee_per_kb",
                        "type": "int",
                        "default": null,
                        "description": "The fee per kilobyte of transaction data constant that the server uses when deciding on the dynamic fee to use (in satoshis)",
                        "required": false
                    },
                    {
                        "name": "regular_dust_size",
                        "type": "int",
                        "default": 546,
                        "description": "Specify (in satoshis) to override the (dust) amount of BTC used for each non-(bare) multisig output.",
                        "required": false
                    },
                    {
                        "name": "multisig_dust_size",
                        "type": "int",
                        "default": 1000,
                        "description": "Specify (in satoshis) to override the (dust) amount of BTC used for each (bare) multisig output",
                        "required": false
                    },
                    {
                        "name": "pubkey",
                        "type": "str",
                        "default": null,
                        "description": "The hexadecimal public key of the source address (or a list of the keys, if multi-sig). Required when using encoding parameter values of multisig or pubkeyhash.",
                        "required": false
                    },
                    {
                        "name": "allow_unconfirmed_inputs",
                        "type": "bool",
                        "default": false,
                        "description": "Set to true to allow this transaction to utilize unconfirmed UTXOs as inputs",
                        "required": false
                    },
                    {
                        "name": "fee",
                        "type": "int",
                        "default": null,
                        "description": "If you'd like to specify a custom miners' fee, specify it here (in satoshis). Leave as default for the server to automatically choose",
                        "required": false
                    },
                    {
                        "name": "fee_provided",
                        "type": "int",
                        "default": 0,
                        "description": "If you would like to specify a maximum fee (up to and including which may be used as the transaction fee), specify it here (in satoshis). This differs from fee in that this is an upper bound value, which fee is an exact value",
                        "required": false
                    },
                    {
                        "name": "unspent_tx_hash",
                        "type": "str",
                        "default": null,
                        "description": "When compiling the UTXOs to use as inputs for the transaction being created, only consider unspent outputs from this specific transaction hash. Defaults to null to consider all UTXOs for the address. Do not use this parameter if you are specifying inputs_set",
                        "required": false
                    },
                    {
                        "name": "dust_return_pubkey",
                        "type": "str",
                        "default": null,
                        "description": "The dust return pubkey is used in multi-sig data outputs (as the only real pubkey) to make those the outputs spendable. By default, this pubkey is taken from the pubkey used in the first transaction input. However, it can be overridden here (and is required to be specified if a P2SH input is used and multisig is used as the data output encoding.) If specified, specify the public key (in hex format) where dust will be returned to so that it can be reclaimed. Only valid/useful when used with transactions that utilize multisig data encoding. Note that if this value is set to false, this instructs counterparty-server to use the default dust return pubkey configured at the node level. If this default is not set at the node level, the call will generate an exception",
                        "required": false
                    },
                    {
                        "name": "disable_utxo_locks",
                        "type": "bool",
                        "default": false,
                        "description": "By default, UTXOs utilized when creating a transaction are 'locked' for a few seconds, to prevent a case where rapidly generating create_ calls reuse UTXOs due to their spent status not being updated in bitcoind yet. Specify true for this parameter to disable this behavior, and not temporarily lock UTXOs",
                        "required": false
                    },
                    {
                        "name": "p2sh_pretx_txid",
                        "type": "str",
                        "default": null,
                        "description": "The previous transaction txid for a two part P2SH message. This txid must be taken from the signed transaction",
                        "required": false
                    },
                    {
                        "name": "segwit",
                        "type": "bool",
                        "default": false,
                        "description": "Use segwit",
                        "required": false
                    },
                    {
                        "name": "confirmation_target",
                        "type": "int",
                        "default": 3,
                        "description": "The number of blocks to target for confirmation",
                        "required": false
                    },
                    {
                        "name": "exclude_utxos",
                        "type": "str",
                        "default": null,
                        "description": "A comma-separated list of UTXO txids to exclude when selecting UTXOs to use as inputs for the transaction being created",
                        "required": false
                    },
                    {
                        "name": "inputs_set",
                        "type": "str",
                        "default": null,
                        "description": "A comma-separated list of UTXOs (`<txid>:<vout>`) to use as inputs for the transaction being created",
                        "required": false
                    },
                    {
                        "name": "accept_missing_params",
                        "type": "bool",
                        "default": false,
                        "description": "Accept missing parameters with no default value (True by default for API v1)",
                        "required": false
                    },
                    {
                        "name": "return_psbt",
                        "type": "bool",
                        "default": false,
                        "description": "(API v2 only) Construct a PSBT instead of a raw transaction hex",
                        "required": false
                    },
                    {
                        "name": "return_only_data",
                        "type": "bool",
                        "default": false,
                        "description": "(API v2 only) Return only the data part of the transaction",
                        "required": false
                    },
                    {
                        "name": "extended_tx_info",
                        "type": "bool",
                        "default": false,
                        "description": "(API v1 only) When this is not specified or false, the create_ calls return only a hex-encoded string. If this is true, the create_ calls return a data object with the following keys: tx_hex, btc_in, btc_out, btc_change, and btc_fee",
                        "required": false
                    },
                    {
                        "name": "old_style_api",
                        "type": "bool",
                        "default": false,
                        "description": "(API v1 only) Returns a single hex-encoded string instead of an array",
                        "required": false
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/addresses/<address>/compose/issuance": {
                "function": "compose_issuance",
                "description": "Composes a transaction to Issue a new asset, issue more of an existing asset, lock an asset, reset existing supply, or transfer the ownership of an asset.",
                "args": [
                    {
                        "name": "address",
                        "required": true,
                        "type": "str",
                        "description": "The address that will be issuing or transfering the asset (e.g. $ADDRESS_1)"
                    },
                    {
                        "name": "asset",
                        "required": true,
                        "type": "str",
                        "description": "The assets to issue or transfer. This can also be a subasset longname for new subasset issuances (e.g. XCPTEST)"
                    },
                    {
                        "name": "quantity",
                        "required": true,
                        "type": "int",
                        "description": "The quantity of the asset to issue (set to 0 if transferring an asset) (in satoshis, hence integer) (e.g. 1000)"
                    },
                    {
                        "name": "transfer_destination",
                        "default": null,
                        "required": false,
                        "type": "str",
                        "description": "The address to receive the asset (e.g. $ADDRESS_1)"
                    },
                    {
                        "name": "divisible",
                        "default": true,
                        "required": false,
                        "type": "bool",
                        "description": "Whether this asset is divisible or not (if a transfer, this value must match the value specified when the asset was originally issued)"
                    },
                    {
                        "name": "lock",
                        "default": false,
                        "required": false,
                        "type": "bool",
                        "description": "Whether this issuance should lock supply of this asset forever"
                    },
                    {
                        "name": "reset",
                        "default": false,
                        "required": false,
                        "type": "bool",
                        "description": "Wether this issuance should reset any existing supply"
                    },
                    {
                        "name": "description",
                        "default": null,
                        "required": false,
                        "type": "str",
                        "description": "A textual description for the asset"
                    },
                    {
                        "name": "encoding",
                        "type": "str",
                        "default": "auto",
                        "description": "The encoding method to use",
                        "required": false
                    },
                    {
                        "name": "fee_per_kb",
                        "type": "int",
                        "default": null,
                        "description": "The fee per kilobyte of transaction data constant that the server uses when deciding on the dynamic fee to use (in satoshis)",
                        "required": false
                    },
                    {
                        "name": "regular_dust_size",
                        "type": "int",
                        "default": 546,
                        "description": "Specify (in satoshis) to override the (dust) amount of BTC used for each non-(bare) multisig output.",
                        "required": false
                    },
                    {
                        "name": "multisig_dust_size",
                        "type": "int",
                        "default": 1000,
                        "description": "Specify (in satoshis) to override the (dust) amount of BTC used for each (bare) multisig output",
                        "required": false
                    },
                    {
                        "name": "pubkey",
                        "type": "str",
                        "default": null,
                        "description": "The hexadecimal public key of the source address (or a list of the keys, if multi-sig). Required when using encoding parameter values of multisig or pubkeyhash.",
                        "required": false
                    },
                    {
                        "name": "allow_unconfirmed_inputs",
                        "type": "bool",
                        "default": false,
                        "description": "Set to true to allow this transaction to utilize unconfirmed UTXOs as inputs",
                        "required": false
                    },
                    {
                        "name": "fee",
                        "type": "int",
                        "default": null,
                        "description": "If you'd like to specify a custom miners' fee, specify it here (in satoshis). Leave as default for the server to automatically choose",
                        "required": false
                    },
                    {
                        "name": "fee_provided",
                        "type": "int",
                        "default": 0,
                        "description": "If you would like to specify a maximum fee (up to and including which may be used as the transaction fee), specify it here (in satoshis). This differs from fee in that this is an upper bound value, which fee is an exact value",
                        "required": false
                    },
                    {
                        "name": "unspent_tx_hash",
                        "type": "str",
                        "default": null,
                        "description": "When compiling the UTXOs to use as inputs for the transaction being created, only consider unspent outputs from this specific transaction hash. Defaults to null to consider all UTXOs for the address. Do not use this parameter if you are specifying inputs_set",
                        "required": false
                    },
                    {
                        "name": "dust_return_pubkey",
                        "type": "str",
                        "default": null,
                        "description": "The dust return pubkey is used in multi-sig data outputs (as the only real pubkey) to make those the outputs spendable. By default, this pubkey is taken from the pubkey used in the first transaction input. However, it can be overridden here (and is required to be specified if a P2SH input is used and multisig is used as the data output encoding.) If specified, specify the public key (in hex format) where dust will be returned to so that it can be reclaimed. Only valid/useful when used with transactions that utilize multisig data encoding. Note that if this value is set to false, this instructs counterparty-server to use the default dust return pubkey configured at the node level. If this default is not set at the node level, the call will generate an exception",
                        "required": false
                    },
                    {
                        "name": "disable_utxo_locks",
                        "type": "bool",
                        "default": false,
                        "description": "By default, UTXOs utilized when creating a transaction are 'locked' for a few seconds, to prevent a case where rapidly generating create_ calls reuse UTXOs due to their spent status not being updated in bitcoind yet. Specify true for this parameter to disable this behavior, and not temporarily lock UTXOs",
                        "required": false
                    },
                    {
                        "name": "p2sh_pretx_txid",
                        "type": "str",
                        "default": null,
                        "description": "The previous transaction txid for a two part P2SH message. This txid must be taken from the signed transaction",
                        "required": false
                    },
                    {
                        "name": "segwit",
                        "type": "bool",
                        "default": false,
                        "description": "Use segwit",
                        "required": false
                    },
                    {
                        "name": "confirmation_target",
                        "type": "int",
                        "default": 3,
                        "description": "The number of blocks to target for confirmation",
                        "required": false
                    },
                    {
                        "name": "exclude_utxos",
                        "type": "str",
                        "default": null,
                        "description": "A comma-separated list of UTXO txids to exclude when selecting UTXOs to use as inputs for the transaction being created",
                        "required": false
                    },
                    {
                        "name": "inputs_set",
                        "type": "str",
                        "default": null,
                        "description": "A comma-separated list of UTXOs (`<txid>:<vout>`) to use as inputs for the transaction being created",
                        "required": false
                    },
                    {
                        "name": "accept_missing_params",
                        "type": "bool",
                        "default": false,
                        "description": "Accept missing parameters with no default value (True by default for API v1)",
                        "required": false
                    },
                    {
                        "name": "return_psbt",
                        "type": "bool",
                        "default": false,
                        "description": "(API v2 only) Construct a PSBT instead of a raw transaction hex",
                        "required": false
                    },
                    {
                        "name": "return_only_data",
                        "type": "bool",
                        "default": false,
                        "description": "(API v2 only) Return only the data part of the transaction",
                        "required": false
                    },
                    {
                        "name": "extended_tx_info",
                        "type": "bool",
                        "default": false,
                        "description": "(API v1 only) When this is not specified or false, the create_ calls return only a hex-encoded string. If this is true, the create_ calls return a data object with the following keys: tx_hex, btc_in, btc_out, btc_change, and btc_fee",
                        "required": false
                    },
                    {
                        "name": "old_style_api",
                        "type": "bool",
                        "default": false,
                        "description": "(API v1 only) Returns a single hex-encoded string instead of an array",
                        "required": false
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/addresses/<address>/compose/mpma": {
                "function": "compose_mpma",
                "description": "Composes a transaction to send multiple payments to multiple addresses.",
                "args": [
                    {
                        "name": "address",
                        "required": true,
                        "type": "str",
                        "description": "The address that will be sending (must have the necessary quantity of the specified asset) (e.g. $ADDRESS_1)"
                    },
                    {
                        "name": "assets",
                        "required": true,
                        "type": "str",
                        "description": "comma-separated list of assets to send (e.g. XCP,$ASSET_5)"
                    },
                    {
                        "name": "destinations",
                        "required": true,
                        "type": "str",
                        "description": "comma-separated list of addresses to send to (e.g. $ADDRESS_1,$ADDRESS_2)"
                    },
                    {
                        "name": "quantities",
                        "required": true,
                        "type": "str",
                        "description": "comma-separated list of quantities to send (in satoshis, hence integer) (e.g. 1,2)"
                    },
                    {
                        "name": "memo",
                        "default": null,
                        "required": false,
                        "type": "str",
                        "description": "The Memo associated with this transaction (e.g. \"Hello, world!\")"
                    },
                    {
                        "name": "memo_is_hex",
                        "default": false,
                        "required": false,
                        "type": "bool",
                        "description": "Whether the memo field is a hexadecimal string (e.g. False)"
                    },
                    {
                        "name": "encoding",
                        "type": "str",
                        "default": "auto",
                        "description": "The encoding method to use",
                        "required": false
                    },
                    {
                        "name": "fee_per_kb",
                        "type": "int",
                        "default": null,
                        "description": "The fee per kilobyte of transaction data constant that the server uses when deciding on the dynamic fee to use (in satoshis)",
                        "required": false
                    },
                    {
                        "name": "regular_dust_size",
                        "type": "int",
                        "default": 546,
                        "description": "Specify (in satoshis) to override the (dust) amount of BTC used for each non-(bare) multisig output.",
                        "required": false
                    },
                    {
                        "name": "multisig_dust_size",
                        "type": "int",
                        "default": 1000,
                        "description": "Specify (in satoshis) to override the (dust) amount of BTC used for each (bare) multisig output",
                        "required": false
                    },
                    {
                        "name": "pubkey",
                        "type": "str",
                        "default": null,
                        "description": "The hexadecimal public key of the source address (or a list of the keys, if multi-sig). Required when using encoding parameter values of multisig or pubkeyhash.",
                        "required": false
                    },
                    {
                        "name": "allow_unconfirmed_inputs",
                        "type": "bool",
                        "default": false,
                        "description": "Set to true to allow this transaction to utilize unconfirmed UTXOs as inputs",
                        "required": false
                    },
                    {
                        "name": "fee",
                        "type": "int",
                        "default": null,
                        "description": "If you'd like to specify a custom miners' fee, specify it here (in satoshis). Leave as default for the server to automatically choose",
                        "required": false
                    },
                    {
                        "name": "fee_provided",
                        "type": "int",
                        "default": 0,
                        "description": "If you would like to specify a maximum fee (up to and including which may be used as the transaction fee), specify it here (in satoshis). This differs from fee in that this is an upper bound value, which fee is an exact value",
                        "required": false
                    },
                    {
                        "name": "unspent_tx_hash",
                        "type": "str",
                        "default": null,
                        "description": "When compiling the UTXOs to use as inputs for the transaction being created, only consider unspent outputs from this specific transaction hash. Defaults to null to consider all UTXOs for the address. Do not use this parameter if you are specifying inputs_set",
                        "required": false
                    },
                    {
                        "name": "dust_return_pubkey",
                        "type": "str",
                        "default": null,
                        "description": "The dust return pubkey is used in multi-sig data outputs (as the only real pubkey) to make those the outputs spendable. By default, this pubkey is taken from the pubkey used in the first transaction input. However, it can be overridden here (and is required to be specified if a P2SH input is used and multisig is used as the data output encoding.) If specified, specify the public key (in hex format) where dust will be returned to so that it can be reclaimed. Only valid/useful when used with transactions that utilize multisig data encoding. Note that if this value is set to false, this instructs counterparty-server to use the default dust return pubkey configured at the node level. If this default is not set at the node level, the call will generate an exception",
                        "required": false
                    },
                    {
                        "name": "disable_utxo_locks",
                        "type": "bool",
                        "default": false,
                        "description": "By default, UTXOs utilized when creating a transaction are 'locked' for a few seconds, to prevent a case where rapidly generating create_ calls reuse UTXOs due to their spent status not being updated in bitcoind yet. Specify true for this parameter to disable this behavior, and not temporarily lock UTXOs",
                        "required": false
                    },
                    {
                        "name": "p2sh_pretx_txid",
                        "type": "str",
                        "default": null,
                        "description": "The previous transaction txid for a two part P2SH message. This txid must be taken from the signed transaction",
                        "required": false
                    },
                    {
                        "name": "segwit",
                        "type": "bool",
                        "default": false,
                        "description": "Use segwit",
                        "required": false
                    },
                    {
                        "name": "confirmation_target",
                        "type": "int",
                        "default": 3,
                        "description": "The number of blocks to target for confirmation",
                        "required": false
                    },
                    {
                        "name": "exclude_utxos",
                        "type": "str",
                        "default": null,
                        "description": "A comma-separated list of UTXO txids to exclude when selecting UTXOs to use as inputs for the transaction being created",
                        "required": false
                    },
                    {
                        "name": "inputs_set",
                        "type": "str",
                        "default": null,
                        "description": "A comma-separated list of UTXOs (`<txid>:<vout>`) to use as inputs for the transaction being created",
                        "required": false
                    },
                    {
                        "name": "accept_missing_params",
                        "type": "bool",
                        "default": false,
                        "description": "Accept missing parameters with no default value (True by default for API v1)",
                        "required": false
                    },
                    {
                        "name": "return_psbt",
                        "type": "bool",
                        "default": false,
                        "description": "(API v2 only) Construct a PSBT instead of a raw transaction hex",
                        "required": false
                    },
                    {
                        "name": "return_only_data",
                        "type": "bool",
                        "default": false,
                        "description": "(API v2 only) Return only the data part of the transaction",
                        "required": false
                    },
                    {
                        "name": "extended_tx_info",
                        "type": "bool",
                        "default": false,
                        "description": "(API v1 only) When this is not specified or false, the create_ calls return only a hex-encoded string. If this is true, the create_ calls return a data object with the following keys: tx_hex, btc_in, btc_out, btc_change, and btc_fee",
                        "required": false
                    },
                    {
                        "name": "old_style_api",
                        "type": "bool",
                        "default": false,
                        "description": "(API v1 only) Returns a single hex-encoded string instead of an array",
                        "required": false
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/addresses/<address>/compose/order": {
                "function": "compose_order",
                "description": "Composes a transaction to place an order on the distributed exchange.",
                "args": [
                    {
                        "name": "address",
                        "required": true,
                        "type": "str",
                        "description": "The address that will be issuing the order request (must have the necessary quantity of the specified asset to give) (e.g. $ADDRESS_1)"
                    },
                    {
                        "name": "give_asset",
                        "required": true,
                        "type": "str",
                        "description": "The asset that will be given in the trade (e.g. XCP)"
                    },
                    {
                        "name": "give_quantity",
                        "required": true,
                        "type": "int",
                        "description": "The quantity of the asset that will be given (in satoshis, hence integer) (e.g. 1000)"
                    },
                    {
                        "name": "get_asset",
                        "required": true,
                        "type": "str",
                        "description": "The asset that will be received in the trade (e.g. $ASSET_1)"
                    },
                    {
                        "name": "get_quantity",
                        "required": true,
                        "type": "int",
                        "description": "The quantity of the asset that will be received (in satoshis, hence integer) (e.g. 1000)"
                    },
                    {
                        "name": "expiration",
                        "required": true,
                        "type": "int",
                        "description": "The number of blocks for which the order should be valid (e.g. 100)"
                    },
                    {
                        "name": "fee_required",
                        "required": true,
                        "type": "int",
                        "description": "The miners\u2019 fee required to be paid by orders for them to match this one; in BTC; required only if buying BTC (may be zero, though) (e.g. 100)"
                    },
                    {
                        "name": "encoding",
                        "type": "str",
                        "default": "auto",
                        "description": "The encoding method to use",
                        "required": false
                    },
                    {
                        "name": "fee_per_kb",
                        "type": "int",
                        "default": null,
                        "description": "The fee per kilobyte of transaction data constant that the server uses when deciding on the dynamic fee to use (in satoshis)",
                        "required": false
                    },
                    {
                        "name": "regular_dust_size",
                        "type": "int",
                        "default": 546,
                        "description": "Specify (in satoshis) to override the (dust) amount of BTC used for each non-(bare) multisig output.",
                        "required": false
                    },
                    {
                        "name": "multisig_dust_size",
                        "type": "int",
                        "default": 1000,
                        "description": "Specify (in satoshis) to override the (dust) amount of BTC used for each (bare) multisig output",
                        "required": false
                    },
                    {
                        "name": "pubkey",
                        "type": "str",
                        "default": null,
                        "description": "The hexadecimal public key of the source address (or a list of the keys, if multi-sig). Required when using encoding parameter values of multisig or pubkeyhash.",
                        "required": false
                    },
                    {
                        "name": "allow_unconfirmed_inputs",
                        "type": "bool",
                        "default": false,
                        "description": "Set to true to allow this transaction to utilize unconfirmed UTXOs as inputs",
                        "required": false
                    },
                    {
                        "name": "fee",
                        "type": "int",
                        "default": null,
                        "description": "If you'd like to specify a custom miners' fee, specify it here (in satoshis). Leave as default for the server to automatically choose",
                        "required": false
                    },
                    {
                        "name": "fee_provided",
                        "type": "int",
                        "default": 0,
                        "description": "If you would like to specify a maximum fee (up to and including which may be used as the transaction fee), specify it here (in satoshis). This differs from fee in that this is an upper bound value, which fee is an exact value",
                        "required": false
                    },
                    {
                        "name": "unspent_tx_hash",
                        "type": "str",
                        "default": null,
                        "description": "When compiling the UTXOs to use as inputs for the transaction being created, only consider unspent outputs from this specific transaction hash. Defaults to null to consider all UTXOs for the address. Do not use this parameter if you are specifying inputs_set",
                        "required": false
                    },
                    {
                        "name": "dust_return_pubkey",
                        "type": "str",
                        "default": null,
                        "description": "The dust return pubkey is used in multi-sig data outputs (as the only real pubkey) to make those the outputs spendable. By default, this pubkey is taken from the pubkey used in the first transaction input. However, it can be overridden here (and is required to be specified if a P2SH input is used and multisig is used as the data output encoding.) If specified, specify the public key (in hex format) where dust will be returned to so that it can be reclaimed. Only valid/useful when used with transactions that utilize multisig data encoding. Note that if this value is set to false, this instructs counterparty-server to use the default dust return pubkey configured at the node level. If this default is not set at the node level, the call will generate an exception",
                        "required": false
                    },
                    {
                        "name": "disable_utxo_locks",
                        "type": "bool",
                        "default": false,
                        "description": "By default, UTXOs utilized when creating a transaction are 'locked' for a few seconds, to prevent a case where rapidly generating create_ calls reuse UTXOs due to their spent status not being updated in bitcoind yet. Specify true for this parameter to disable this behavior, and not temporarily lock UTXOs",
                        "required": false
                    },
                    {
                        "name": "p2sh_pretx_txid",
                        "type": "str",
                        "default": null,
                        "description": "The previous transaction txid for a two part P2SH message. This txid must be taken from the signed transaction",
                        "required": false
                    },
                    {
                        "name": "segwit",
                        "type": "bool",
                        "default": false,
                        "description": "Use segwit",
                        "required": false
                    },
                    {
                        "name": "confirmation_target",
                        "type": "int",
                        "default": 3,
                        "description": "The number of blocks to target for confirmation",
                        "required": false
                    },
                    {
                        "name": "exclude_utxos",
                        "type": "str",
                        "default": null,
                        "description": "A comma-separated list of UTXO txids to exclude when selecting UTXOs to use as inputs for the transaction being created",
                        "required": false
                    },
                    {
                        "name": "inputs_set",
                        "type": "str",
                        "default": null,
                        "description": "A comma-separated list of UTXOs (`<txid>:<vout>`) to use as inputs for the transaction being created",
                        "required": false
                    },
                    {
                        "name": "accept_missing_params",
                        "type": "bool",
                        "default": false,
                        "description": "Accept missing parameters with no default value (True by default for API v1)",
                        "required": false
                    },
                    {
                        "name": "return_psbt",
                        "type": "bool",
                        "default": false,
                        "description": "(API v2 only) Construct a PSBT instead of a raw transaction hex",
                        "required": false
                    },
                    {
                        "name": "return_only_data",
                        "type": "bool",
                        "default": false,
                        "description": "(API v2 only) Return only the data part of the transaction",
                        "required": false
                    },
                    {
                        "name": "extended_tx_info",
                        "type": "bool",
                        "default": false,
                        "description": "(API v1 only) When this is not specified or false, the create_ calls return only a hex-encoded string. If this is true, the create_ calls return a data object with the following keys: tx_hex, btc_in, btc_out, btc_change, and btc_fee",
                        "required": false
                    },
                    {
                        "name": "old_style_api",
                        "type": "bool",
                        "default": false,
                        "description": "(API v1 only) Returns a single hex-encoded string instead of an array",
                        "required": false
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/addresses/<address>/compose/send": {
                "function": "compose_send",
                "description": "Composes a transaction to send a quantity of an asset to another address.",
                "args": [
                    {
                        "name": "address",
                        "required": true,
                        "type": "str",
                        "description": "The address that will be sending (must have the necessary quantity of the specified asset) (e.g. $ADDRESS_1)"
                    },
                    {
                        "name": "destination",
                        "required": true,
                        "type": "str",
                        "description": "The address that will be receiving the asset (e.g. $ADDRESS_2)"
                    },
                    {
                        "name": "asset",
                        "required": true,
                        "type": "str",
                        "description": "The asset or subasset to send (e.g. XCP)"
                    },
                    {
                        "name": "quantity",
                        "required": true,
                        "type": "int",
                        "description": "The quantity of the asset to send (in satoshis, hence integer) (e.g. 1000)"
                    },
                    {
                        "name": "memo",
                        "default": null,
                        "required": false,
                        "type": "str",
                        "description": "The Memo associated with this transaction"
                    },
                    {
                        "name": "memo_is_hex",
                        "default": false,
                        "required": false,
                        "type": "bool",
                        "description": "Whether the memo field is a hexadecimal string"
                    },
                    {
                        "name": "use_enhanced_send",
                        "default": true,
                        "required": false,
                        "type": "bool",
                        "description": "If this is false, the construct a legacy transaction sending bitcoin dust"
                    },
                    {
                        "name": "encoding",
                        "type": "str",
                        "default": "auto",
                        "description": "The encoding method to use",
                        "required": false
                    },
                    {
                        "name": "fee_per_kb",
                        "type": "int",
                        "default": null,
                        "description": "The fee per kilobyte of transaction data constant that the server uses when deciding on the dynamic fee to use (in satoshis)",
                        "required": false
                    },
                    {
                        "name": "regular_dust_size",
                        "type": "int",
                        "default": 546,
                        "description": "Specify (in satoshis) to override the (dust) amount of BTC used for each non-(bare) multisig output.",
                        "required": false
                    },
                    {
                        "name": "multisig_dust_size",
                        "type": "int",
                        "default": 1000,
                        "description": "Specify (in satoshis) to override the (dust) amount of BTC used for each (bare) multisig output",
                        "required": false
                    },
                    {
                        "name": "pubkey",
                        "type": "str",
                        "default": null,
                        "description": "The hexadecimal public key of the source address (or a list of the keys, if multi-sig). Required when using encoding parameter values of multisig or pubkeyhash.",
                        "required": false
                    },
                    {
                        "name": "allow_unconfirmed_inputs",
                        "type": "bool",
                        "default": false,
                        "description": "Set to true to allow this transaction to utilize unconfirmed UTXOs as inputs",
                        "required": false
                    },
                    {
                        "name": "fee",
                        "type": "int",
                        "default": null,
                        "description": "If you'd like to specify a custom miners' fee, specify it here (in satoshis). Leave as default for the server to automatically choose",
                        "required": false
                    },
                    {
                        "name": "fee_provided",
                        "type": "int",
                        "default": 0,
                        "description": "If you would like to specify a maximum fee (up to and including which may be used as the transaction fee), specify it here (in satoshis). This differs from fee in that this is an upper bound value, which fee is an exact value",
                        "required": false
                    },
                    {
                        "name": "unspent_tx_hash",
                        "type": "str",
                        "default": null,
                        "description": "When compiling the UTXOs to use as inputs for the transaction being created, only consider unspent outputs from this specific transaction hash. Defaults to null to consider all UTXOs for the address. Do not use this parameter if you are specifying inputs_set",
                        "required": false
                    },
                    {
                        "name": "dust_return_pubkey",
                        "type": "str",
                        "default": null,
                        "description": "The dust return pubkey is used in multi-sig data outputs (as the only real pubkey) to make those the outputs spendable. By default, this pubkey is taken from the pubkey used in the first transaction input. However, it can be overridden here (and is required to be specified if a P2SH input is used and multisig is used as the data output encoding.) If specified, specify the public key (in hex format) where dust will be returned to so that it can be reclaimed. Only valid/useful when used with transactions that utilize multisig data encoding. Note that if this value is set to false, this instructs counterparty-server to use the default dust return pubkey configured at the node level. If this default is not set at the node level, the call will generate an exception",
                        "required": false
                    },
                    {
                        "name": "disable_utxo_locks",
                        "type": "bool",
                        "default": false,
                        "description": "By default, UTXOs utilized when creating a transaction are 'locked' for a few seconds, to prevent a case where rapidly generating create_ calls reuse UTXOs due to their spent status not being updated in bitcoind yet. Specify true for this parameter to disable this behavior, and not temporarily lock UTXOs",
                        "required": false
                    },
                    {
                        "name": "p2sh_pretx_txid",
                        "type": "str",
                        "default": null,
                        "description": "The previous transaction txid for a two part P2SH message. This txid must be taken from the signed transaction",
                        "required": false
                    },
                    {
                        "name": "segwit",
                        "type": "bool",
                        "default": false,
                        "description": "Use segwit",
                        "required": false
                    },
                    {
                        "name": "confirmation_target",
                        "type": "int",
                        "default": 3,
                        "description": "The number of blocks to target for confirmation",
                        "required": false
                    },
                    {
                        "name": "exclude_utxos",
                        "type": "str",
                        "default": null,
                        "description": "A comma-separated list of UTXO txids to exclude when selecting UTXOs to use as inputs for the transaction being created",
                        "required": false
                    },
                    {
                        "name": "inputs_set",
                        "type": "str",
                        "default": null,
                        "description": "A comma-separated list of UTXOs (`<txid>:<vout>`) to use as inputs for the transaction being created",
                        "required": false
                    },
                    {
                        "name": "accept_missing_params",
                        "type": "bool",
                        "default": false,
                        "description": "Accept missing parameters with no default value (True by default for API v1)",
                        "required": false
                    },
                    {
                        "name": "return_psbt",
                        "type": "bool",
                        "default": false,
                        "description": "(API v2 only) Construct a PSBT instead of a raw transaction hex",
                        "required": false
                    },
                    {
                        "name": "return_only_data",
                        "type": "bool",
                        "default": false,
                        "description": "(API v2 only) Return only the data part of the transaction",
                        "required": false
                    },
                    {
                        "name": "extended_tx_info",
                        "type": "bool",
                        "default": false,
                        "description": "(API v1 only) When this is not specified or false, the create_ calls return only a hex-encoded string. If this is true, the create_ calls return a data object with the following keys: tx_hex, btc_in, btc_out, btc_change, and btc_fee",
                        "required": false
                    },
                    {
                        "name": "old_style_api",
                        "type": "bool",
                        "default": false,
                        "description": "(API v1 only) Returns a single hex-encoded string instead of an array",
                        "required": false
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/addresses/<address>/compose/sweep": {
                "function": "compose_sweep",
                "description": "Composes a transaction to Sends all assets and/or transfer ownerships to a destination address.",
                "args": [
                    {
                        "name": "address",
                        "required": true,
                        "type": "str",
                        "description": "The address that will be sending (e.g. $ADDRESS_1)"
                    },
                    {
                        "name": "destination",
                        "required": true,
                        "type": "str",
                        "description": "The address to receive the assets and/or ownerships (e.g. $ADDRESS_2)"
                    },
                    {
                        "name": "flags",
                        "required": true,
                        "type": "int",
                        "description": "An OR mask of flags indicating how the sweep should be processed. Possible flags are:\n- FLAG_BALANCES: (integer) 1, specifies that all balances should be transferred.\n- FLAG_OWNERSHIP: (integer) 2, specifies that all ownerships should be transferred.\n- FLAG_BINARY_MEMO: (integer) 4, specifies that the memo is in binary/hex form.\n(e.g. 7)"
                    },
                    {
                        "name": "memo",
                        "required": true,
                        "type": "str",
                        "description": "The Memo associated with this transaction in hex format (e.g. FFFF)"
                    },
                    {
                        "name": "encoding",
                        "type": "str",
                        "default": "auto",
                        "description": "The encoding method to use",
                        "required": false
                    },
                    {
                        "name": "fee_per_kb",
                        "type": "int",
                        "default": null,
                        "description": "The fee per kilobyte of transaction data constant that the server uses when deciding on the dynamic fee to use (in satoshis)",
                        "required": false
                    },
                    {
                        "name": "regular_dust_size",
                        "type": "int",
                        "default": 546,
                        "description": "Specify (in satoshis) to override the (dust) amount of BTC used for each non-(bare) multisig output.",
                        "required": false
                    },
                    {
                        "name": "multisig_dust_size",
                        "type": "int",
                        "default": 1000,
                        "description": "Specify (in satoshis) to override the (dust) amount of BTC used for each (bare) multisig output",
                        "required": false
                    },
                    {
                        "name": "pubkey",
                        "type": "str",
                        "default": null,
                        "description": "The hexadecimal public key of the source address (or a list of the keys, if multi-sig). Required when using encoding parameter values of multisig or pubkeyhash.",
                        "required": false
                    },
                    {
                        "name": "allow_unconfirmed_inputs",
                        "type": "bool",
                        "default": false,
                        "description": "Set to true to allow this transaction to utilize unconfirmed UTXOs as inputs",
                        "required": false
                    },
                    {
                        "name": "fee",
                        "type": "int",
                        "default": null,
                        "description": "If you'd like to specify a custom miners' fee, specify it here (in satoshis). Leave as default for the server to automatically choose",
                        "required": false
                    },
                    {
                        "name": "fee_provided",
                        "type": "int",
                        "default": 0,
                        "description": "If you would like to specify a maximum fee (up to and including which may be used as the transaction fee), specify it here (in satoshis). This differs from fee in that this is an upper bound value, which fee is an exact value",
                        "required": false
                    },
                    {
                        "name": "unspent_tx_hash",
                        "type": "str",
                        "default": null,
                        "description": "When compiling the UTXOs to use as inputs for the transaction being created, only consider unspent outputs from this specific transaction hash. Defaults to null to consider all UTXOs for the address. Do not use this parameter if you are specifying inputs_set",
                        "required": false
                    },
                    {
                        "name": "dust_return_pubkey",
                        "type": "str",
                        "default": null,
                        "description": "The dust return pubkey is used in multi-sig data outputs (as the only real pubkey) to make those the outputs spendable. By default, this pubkey is taken from the pubkey used in the first transaction input. However, it can be overridden here (and is required to be specified if a P2SH input is used and multisig is used as the data output encoding.) If specified, specify the public key (in hex format) where dust will be returned to so that it can be reclaimed. Only valid/useful when used with transactions that utilize multisig data encoding. Note that if this value is set to false, this instructs counterparty-server to use the default dust return pubkey configured at the node level. If this default is not set at the node level, the call will generate an exception",
                        "required": false
                    },
                    {
                        "name": "disable_utxo_locks",
                        "type": "bool",
                        "default": false,
                        "description": "By default, UTXOs utilized when creating a transaction are 'locked' for a few seconds, to prevent a case where rapidly generating create_ calls reuse UTXOs due to their spent status not being updated in bitcoind yet. Specify true for this parameter to disable this behavior, and not temporarily lock UTXOs",
                        "required": false
                    },
                    {
                        "name": "p2sh_pretx_txid",
                        "type": "str",
                        "default": null,
                        "description": "The previous transaction txid for a two part P2SH message. This txid must be taken from the signed transaction",
                        "required": false
                    },
                    {
                        "name": "segwit",
                        "type": "bool",
                        "default": false,
                        "description": "Use segwit",
                        "required": false
                    },
                    {
                        "name": "confirmation_target",
                        "type": "int",
                        "default": 3,
                        "description": "The number of blocks to target for confirmation",
                        "required": false
                    },
                    {
                        "name": "exclude_utxos",
                        "type": "str",
                        "default": null,
                        "description": "A comma-separated list of UTXO txids to exclude when selecting UTXOs to use as inputs for the transaction being created",
                        "required": false
                    },
                    {
                        "name": "inputs_set",
                        "type": "str",
                        "default": null,
                        "description": "A comma-separated list of UTXOs (`<txid>:<vout>`) to use as inputs for the transaction being created",
                        "required": false
                    },
                    {
                        "name": "accept_missing_params",
                        "type": "bool",
                        "default": false,
                        "description": "Accept missing parameters with no default value (True by default for API v1)",
                        "required": false
                    },
                    {
                        "name": "return_psbt",
                        "type": "bool",
                        "default": false,
                        "description": "(API v2 only) Construct a PSBT instead of a raw transaction hex",
                        "required": false
                    },
                    {
                        "name": "return_only_data",
                        "type": "bool",
                        "default": false,
                        "description": "(API v2 only) Return only the data part of the transaction",
                        "required": false
                    },
                    {
                        "name": "extended_tx_info",
                        "type": "bool",
                        "default": false,
                        "description": "(API v1 only) When this is not specified or false, the create_ calls return only a hex-encoded string. If this is true, the create_ calls return a data object with the following keys: tx_hex, btc_in, btc_out, btc_change, and btc_fee",
                        "required": false
                    },
                    {
                        "name": "old_style_api",
                        "type": "bool",
                        "default": false,
                        "description": "(API v1 only) Returns a single hex-encoded string instead of an array",
                        "required": false
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/addresses/<address>/compose/dispense": {
                "function": "compose_dispense",
                "description": "Composes a transaction to send BTC to a dispenser.",
                "args": [
                    {
                        "name": "address",
                        "required": true,
                        "type": "str",
                        "description": "The address that will be sending (must have the necessary quantity of BTC) (e.g. $ADDRESS_2)"
                    },
                    {
                        "name": "dispenser",
                        "required": true,
                        "type": "str",
                        "description": "The dispenser that will be receiving the asset (e.g. $ADDRESS_4)"
                    },
                    {
                        "name": "quantity",
                        "required": true,
                        "type": "int",
                        "description": "The quantity of BTC to send (in satoshis, hence integer) (e.g. 1000)"
                    },
                    {
                        "name": "encoding",
                        "type": "str",
                        "default": "auto",
                        "description": "The encoding method to use",
                        "required": false
                    },
                    {
                        "name": "fee_per_kb",
                        "type": "int",
                        "default": null,
                        "description": "The fee per kilobyte of transaction data constant that the server uses when deciding on the dynamic fee to use (in satoshis)",
                        "required": false
                    },
                    {
                        "name": "regular_dust_size",
                        "type": "int",
                        "default": 546,
                        "description": "Specify (in satoshis) to override the (dust) amount of BTC used for each non-(bare) multisig output.",
                        "required": false
                    },
                    {
                        "name": "multisig_dust_size",
                        "type": "int",
                        "default": 1000,
                        "description": "Specify (in satoshis) to override the (dust) amount of BTC used for each (bare) multisig output",
                        "required": false
                    },
                    {
                        "name": "pubkey",
                        "type": "str",
                        "default": null,
                        "description": "The hexadecimal public key of the source address (or a list of the keys, if multi-sig). Required when using encoding parameter values of multisig or pubkeyhash.",
                        "required": false
                    },
                    {
                        "name": "allow_unconfirmed_inputs",
                        "type": "bool",
                        "default": false,
                        "description": "Set to true to allow this transaction to utilize unconfirmed UTXOs as inputs",
                        "required": false
                    },
                    {
                        "name": "fee",
                        "type": "int",
                        "default": null,
                        "description": "If you'd like to specify a custom miners' fee, specify it here (in satoshis). Leave as default for the server to automatically choose",
                        "required": false
                    },
                    {
                        "name": "fee_provided",
                        "type": "int",
                        "default": 0,
                        "description": "If you would like to specify a maximum fee (up to and including which may be used as the transaction fee), specify it here (in satoshis). This differs from fee in that this is an upper bound value, which fee is an exact value",
                        "required": false
                    },
                    {
                        "name": "unspent_tx_hash",
                        "type": "str",
                        "default": null,
                        "description": "When compiling the UTXOs to use as inputs for the transaction being created, only consider unspent outputs from this specific transaction hash. Defaults to null to consider all UTXOs for the address. Do not use this parameter if you are specifying inputs_set",
                        "required": false
                    },
                    {
                        "name": "dust_return_pubkey",
                        "type": "str",
                        "default": null,
                        "description": "The dust return pubkey is used in multi-sig data outputs (as the only real pubkey) to make those the outputs spendable. By default, this pubkey is taken from the pubkey used in the first transaction input. However, it can be overridden here (and is required to be specified if a P2SH input is used and multisig is used as the data output encoding.) If specified, specify the public key (in hex format) where dust will be returned to so that it can be reclaimed. Only valid/useful when used with transactions that utilize multisig data encoding. Note that if this value is set to false, this instructs counterparty-server to use the default dust return pubkey configured at the node level. If this default is not set at the node level, the call will generate an exception",
                        "required": false
                    },
                    {
                        "name": "disable_utxo_locks",
                        "type": "bool",
                        "default": false,
                        "description": "By default, UTXOs utilized when creating a transaction are 'locked' for a few seconds, to prevent a case where rapidly generating create_ calls reuse UTXOs due to their spent status not being updated in bitcoind yet. Specify true for this parameter to disable this behavior, and not temporarily lock UTXOs",
                        "required": false
                    },
                    {
                        "name": "p2sh_pretx_txid",
                        "type": "str",
                        "default": null,
                        "description": "The previous transaction txid for a two part P2SH message. This txid must be taken from the signed transaction",
                        "required": false
                    },
                    {
                        "name": "segwit",
                        "type": "bool",
                        "default": false,
                        "description": "Use segwit",
                        "required": false
                    },
                    {
                        "name": "confirmation_target",
                        "type": "int",
                        "default": 3,
                        "description": "The number of blocks to target for confirmation",
                        "required": false
                    },
                    {
                        "name": "exclude_utxos",
                        "type": "str",
                        "default": null,
                        "description": "A comma-separated list of UTXO txids to exclude when selecting UTXOs to use as inputs for the transaction being created",
                        "required": false
                    },
                    {
                        "name": "inputs_set",
                        "type": "str",
                        "default": null,
                        "description": "A comma-separated list of UTXOs (`<txid>:<vout>`) to use as inputs for the transaction being created",
                        "required": false
                    },
                    {
                        "name": "accept_missing_params",
                        "type": "bool",
                        "default": false,
                        "description": "Accept missing parameters with no default value (True by default for API v1)",
                        "required": false
                    },
                    {
                        "name": "return_psbt",
                        "type": "bool",
                        "default": false,
                        "description": "(API v2 only) Construct a PSBT instead of a raw transaction hex",
                        "required": false
                    },
                    {
                        "name": "return_only_data",
                        "type": "bool",
                        "default": false,
                        "description": "(API v2 only) Return only the data part of the transaction",
                        "required": false
                    },
                    {
                        "name": "extended_tx_info",
                        "type": "bool",
                        "default": false,
                        "description": "(API v1 only) When this is not specified or false, the create_ calls return only a hex-encoded string. If this is true, the create_ calls return a data object with the following keys: tx_hex, btc_in, btc_out, btc_change, and btc_fee",
                        "required": false
                    },
                    {
                        "name": "old_style_api",
                        "type": "bool",
                        "default": false,
                        "description": "(API v1 only) Returns a single hex-encoded string instead of an array",
                        "required": false
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/addresses/<address>/compose/fairminter": {
                "function": "compose_fairminter",
                "description": "Composes a transaction to issue a new asset using the FairMinter protocol.",
                "args": [
                    {
                        "name": "address",
                        "required": true,
                        "type": "str",
                        "description": "The address that will be issuing the asset (e.g. $ADDRESS_1)"
                    },
                    {
                        "name": "asset",
                        "required": true,
                        "type": "str",
                        "description": "The asset to issue (e.g. MYASSET)"
                    },
                    {
                        "name": "asset_parent",
                        "default": "",
                        "required": false,
                        "type": "str",
                        "description": "The parent asset of the asset to issue"
                    },
                    {
                        "name": "price",
                        "default": 0,
                        "required": false,
                        "type": "int",
                        "description": "The price in XCP of the asset to issue (e.g. 10)"
                    },
                    {
                        "name": "quantity_by_price",
                        "default": 1,
                        "required": false,
                        "type": "int",
                        "description": "The quantity of asset to mint per `price` paid"
                    },
                    {
                        "name": "max_mint_per_tx",
                        "default": 0,
                        "required": false,
                        "type": "int",
                        "description": "Amount minted if price is equal to 0; otherwise, maximum amount of asset that can be minted in a single transaction; if 0, there is no limit"
                    },
                    {
                        "name": "hard_cap",
                        "default": 0,
                        "required": false,
                        "type": "int",
                        "description": "The maximum amount of asset that can be minted; if 0 there is no limit"
                    },
                    {
                        "name": "premint_quantity",
                        "default": 0,
                        "required": false,
                        "type": "int",
                        "description": "Amount of asset to be minted when the sale starts, if 0, no premint; preminted assets are sent to the source of the transaction"
                    },
                    {
                        "name": "start_block",
                        "default": 0,
                        "required": false,
                        "type": "int",
                        "description": "The block at which the sale starts"
                    },
                    {
                        "name": "end_block",
                        "default": 0,
                        "required": false,
                        "type": "int",
                        "description": "The block at which the sale ends"
                    },
                    {
                        "name": "soft_cap",
                        "default": 0,
                        "required": false,
                        "type": "int",
                        "description": "Minimum amount of asset to be minted, if None, no minimum; if the soft cap is not reached by the soft_cap_deadline_block, the sale is canceled, asset is revoked from all minters and all payments are refunded"
                    },
                    {
                        "name": "soft_cap_deadline_block",
                        "default": 0,
                        "required": false,
                        "type": "int",
                        "description": "The block at which the soft cap must be reached"
                    },
                    {
                        "name": "minted_asset_commission",
                        "default": 0.0,
                        "required": false,
                        "type": "float",
                        "description": "Commission to be paid in minted asset, a fraction of 1 (i.e., 0.05 is five percent); the commission is deducted from the asset received by the minter and sent to the Fair Minter owner"
                    },
                    {
                        "name": "burn_payment",
                        "default": false,
                        "required": false,
                        "type": "bool",
                        "description": "If True, the payment asset is burned, otherwise it is sent to the source"
                    },
                    {
                        "name": "lock_description",
                        "default": false,
                        "required": false,
                        "type": "bool",
                        "description": "If True, the description of the asset is locked"
                    },
                    {
                        "name": "lock_quantity",
                        "default": false,
                        "required": false,
                        "type": "bool",
                        "description": "If True, the quantity of the asset cannot be changed after the minting"
                    },
                    {
                        "name": "divisible",
                        "default": true,
                        "required": false,
                        "type": "bool",
                        "description": "If True, the asset is divisible"
                    },
                    {
                        "name": "description",
                        "default": "",
                        "required": false,
                        "type": "str",
                        "description": "The description of the asset"
                    },
                    {
                        "name": "encoding",
                        "type": "str",
                        "default": "auto",
                        "description": "The encoding method to use",
                        "required": false
                    },
                    {
                        "name": "fee_per_kb",
                        "type": "int",
                        "default": null,
                        "description": "The fee per kilobyte of transaction data constant that the server uses when deciding on the dynamic fee to use (in satoshis)",
                        "required": false
                    },
                    {
                        "name": "regular_dust_size",
                        "type": "int",
                        "default": 546,
                        "description": "Specify (in satoshis) to override the (dust) amount of BTC used for each non-(bare) multisig output.",
                        "required": false
                    },
                    {
                        "name": "multisig_dust_size",
                        "type": "int",
                        "default": 1000,
                        "description": "Specify (in satoshis) to override the (dust) amount of BTC used for each (bare) multisig output",
                        "required": false
                    },
                    {
                        "name": "pubkey",
                        "type": "str",
                        "default": null,
                        "description": "The hexadecimal public key of the source address (or a list of the keys, if multi-sig). Required when using encoding parameter values of multisig or pubkeyhash.",
                        "required": false
                    },
                    {
                        "name": "allow_unconfirmed_inputs",
                        "type": "bool",
                        "default": false,
                        "description": "Set to true to allow this transaction to utilize unconfirmed UTXOs as inputs",
                        "required": false
                    },
                    {
                        "name": "fee",
                        "type": "int",
                        "default": null,
                        "description": "If you'd like to specify a custom miners' fee, specify it here (in satoshis). Leave as default for the server to automatically choose",
                        "required": false
                    },
                    {
                        "name": "fee_provided",
                        "type": "int",
                        "default": 0,
                        "description": "If you would like to specify a maximum fee (up to and including which may be used as the transaction fee), specify it here (in satoshis). This differs from fee in that this is an upper bound value, which fee is an exact value",
                        "required": false
                    },
                    {
                        "name": "unspent_tx_hash",
                        "type": "str",
                        "default": null,
                        "description": "When compiling the UTXOs to use as inputs for the transaction being created, only consider unspent outputs from this specific transaction hash. Defaults to null to consider all UTXOs for the address. Do not use this parameter if you are specifying inputs_set",
                        "required": false
                    },
                    {
                        "name": "dust_return_pubkey",
                        "type": "str",
                        "default": null,
                        "description": "The dust return pubkey is used in multi-sig data outputs (as the only real pubkey) to make those the outputs spendable. By default, this pubkey is taken from the pubkey used in the first transaction input. However, it can be overridden here (and is required to be specified if a P2SH input is used and multisig is used as the data output encoding.) If specified, specify the public key (in hex format) where dust will be returned to so that it can be reclaimed. Only valid/useful when used with transactions that utilize multisig data encoding. Note that if this value is set to false, this instructs counterparty-server to use the default dust return pubkey configured at the node level. If this default is not set at the node level, the call will generate an exception",
                        "required": false
                    },
                    {
                        "name": "disable_utxo_locks",
                        "type": "bool",
                        "default": false,
                        "description": "By default, UTXOs utilized when creating a transaction are 'locked' for a few seconds, to prevent a case where rapidly generating create_ calls reuse UTXOs due to their spent status not being updated in bitcoind yet. Specify true for this parameter to disable this behavior, and not temporarily lock UTXOs",
                        "required": false
                    },
                    {
                        "name": "p2sh_pretx_txid",
                        "type": "str",
                        "default": null,
                        "description": "The previous transaction txid for a two part P2SH message. This txid must be taken from the signed transaction",
                        "required": false
                    },
                    {
                        "name": "segwit",
                        "type": "bool",
                        "default": false,
                        "description": "Use segwit",
                        "required": false
                    },
                    {
                        "name": "confirmation_target",
                        "type": "int",
                        "default": 3,
                        "description": "The number of blocks to target for confirmation",
                        "required": false
                    },
                    {
                        "name": "exclude_utxos",
                        "type": "str",
                        "default": null,
                        "description": "A comma-separated list of UTXO txids to exclude when selecting UTXOs to use as inputs for the transaction being created",
                        "required": false
                    },
                    {
                        "name": "inputs_set",
                        "type": "str",
                        "default": null,
                        "description": "A comma-separated list of UTXOs (`<txid>:<vout>`) to use as inputs for the transaction being created",
                        "required": false
                    },
                    {
                        "name": "accept_missing_params",
                        "type": "bool",
                        "default": false,
                        "description": "Accept missing parameters with no default value (True by default for API v1)",
                        "required": false
                    },
                    {
                        "name": "return_psbt",
                        "type": "bool",
                        "default": false,
                        "description": "(API v2 only) Construct a PSBT instead of a raw transaction hex",
                        "required": false
                    },
                    {
                        "name": "return_only_data",
                        "type": "bool",
                        "default": false,
                        "description": "(API v2 only) Return only the data part of the transaction",
                        "required": false
                    },
                    {
                        "name": "extended_tx_info",
                        "type": "bool",
                        "default": false,
                        "description": "(API v1 only) When this is not specified or false, the create_ calls return only a hex-encoded string. If this is true, the create_ calls return a data object with the following keys: tx_hex, btc_in, btc_out, btc_change, and btc_fee",
                        "required": false
                    },
                    {
                        "name": "old_style_api",
                        "type": "bool",
                        "default": false,
                        "description": "(API v1 only) Returns a single hex-encoded string instead of an array",
                        "required": false
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/addresses/<address>/compose/fairmint": {
                "function": "compose_fairmint",
                "description": "Composes a transaction to mint a quantity of an asset using the FairMinter protocol.",
                "args": [
                    {
                        "name": "address",
                        "required": true,
                        "type": "str",
                        "description": "The address that will be minting the asset (e.g. $ADDRESS_1)"
                    },
                    {
                        "name": "asset",
                        "required": true,
                        "type": "str",
                        "description": "The asset to mint (e.g. $ASSET_3)"
                    },
                    {
                        "name": "quantity",
                        "default": 0,
                        "required": false,
                        "type": "int",
                        "description": "The quantity of the asset to mint (in satoshis, hence integer) (e.g. 1)"
                    },
                    {
                        "name": "encoding",
                        "type": "str",
                        "default": "auto",
                        "description": "The encoding method to use",
                        "required": false
                    },
                    {
                        "name": "fee_per_kb",
                        "type": "int",
                        "default": null,
                        "description": "The fee per kilobyte of transaction data constant that the server uses when deciding on the dynamic fee to use (in satoshis)",
                        "required": false
                    },
                    {
                        "name": "regular_dust_size",
                        "type": "int",
                        "default": 546,
                        "description": "Specify (in satoshis) to override the (dust) amount of BTC used for each non-(bare) multisig output.",
                        "required": false
                    },
                    {
                        "name": "multisig_dust_size",
                        "type": "int",
                        "default": 1000,
                        "description": "Specify (in satoshis) to override the (dust) amount of BTC used for each (bare) multisig output",
                        "required": false
                    },
                    {
                        "name": "pubkey",
                        "type": "str",
                        "default": null,
                        "description": "The hexadecimal public key of the source address (or a list of the keys, if multi-sig). Required when using encoding parameter values of multisig or pubkeyhash.",
                        "required": false
                    },
                    {
                        "name": "allow_unconfirmed_inputs",
                        "type": "bool",
                        "default": false,
                        "description": "Set to true to allow this transaction to utilize unconfirmed UTXOs as inputs",
                        "required": false
                    },
                    {
                        "name": "fee",
                        "type": "int",
                        "default": null,
                        "description": "If you'd like to specify a custom miners' fee, specify it here (in satoshis). Leave as default for the server to automatically choose",
                        "required": false
                    },
                    {
                        "name": "fee_provided",
                        "type": "int",
                        "default": 0,
                        "description": "If you would like to specify a maximum fee (up to and including which may be used as the transaction fee), specify it here (in satoshis). This differs from fee in that this is an upper bound value, which fee is an exact value",
                        "required": false
                    },
                    {
                        "name": "unspent_tx_hash",
                        "type": "str",
                        "default": null,
                        "description": "When compiling the UTXOs to use as inputs for the transaction being created, only consider unspent outputs from this specific transaction hash. Defaults to null to consider all UTXOs for the address. Do not use this parameter if you are specifying inputs_set",
                        "required": false
                    },
                    {
                        "name": "dust_return_pubkey",
                        "type": "str",
                        "default": null,
                        "description": "The dust return pubkey is used in multi-sig data outputs (as the only real pubkey) to make those the outputs spendable. By default, this pubkey is taken from the pubkey used in the first transaction input. However, it can be overridden here (and is required to be specified if a P2SH input is used and multisig is used as the data output encoding.) If specified, specify the public key (in hex format) where dust will be returned to so that it can be reclaimed. Only valid/useful when used with transactions that utilize multisig data encoding. Note that if this value is set to false, this instructs counterparty-server to use the default dust return pubkey configured at the node level. If this default is not set at the node level, the call will generate an exception",
                        "required": false
                    },
                    {
                        "name": "disable_utxo_locks",
                        "type": "bool",
                        "default": false,
                        "description": "By default, UTXOs utilized when creating a transaction are 'locked' for a few seconds, to prevent a case where rapidly generating create_ calls reuse UTXOs due to their spent status not being updated in bitcoind yet. Specify true for this parameter to disable this behavior, and not temporarily lock UTXOs",
                        "required": false
                    },
                    {
                        "name": "p2sh_pretx_txid",
                        "type": "str",
                        "default": null,
                        "description": "The previous transaction txid for a two part P2SH message. This txid must be taken from the signed transaction",
                        "required": false
                    },
                    {
                        "name": "segwit",
                        "type": "bool",
                        "default": false,
                        "description": "Use segwit",
                        "required": false
                    },
                    {
                        "name": "confirmation_target",
                        "type": "int",
                        "default": 3,
                        "description": "The number of blocks to target for confirmation",
                        "required": false
                    },
                    {
                        "name": "exclude_utxos",
                        "type": "str",
                        "default": null,
                        "description": "A comma-separated list of UTXO txids to exclude when selecting UTXOs to use as inputs for the transaction being created",
                        "required": false
                    },
                    {
                        "name": "inputs_set",
                        "type": "str",
                        "default": null,
                        "description": "A comma-separated list of UTXOs (`<txid>:<vout>`) to use as inputs for the transaction being created",
                        "required": false
                    },
                    {
                        "name": "accept_missing_params",
                        "type": "bool",
                        "default": false,
                        "description": "Accept missing parameters with no default value (True by default for API v1)",
                        "required": false
                    },
                    {
                        "name": "return_psbt",
                        "type": "bool",
                        "default": false,
                        "description": "(API v2 only) Construct a PSBT instead of a raw transaction hex",
                        "required": false
                    },
                    {
                        "name": "return_only_data",
                        "type": "bool",
                        "default": false,
                        "description": "(API v2 only) Return only the data part of the transaction",
                        "required": false
                    },
                    {
                        "name": "extended_tx_info",
                        "type": "bool",
                        "default": false,
                        "description": "(API v1 only) When this is not specified or false, the create_ calls return only a hex-encoded string. If this is true, the create_ calls return a data object with the following keys: tx_hex, btc_in, btc_out, btc_change, and btc_fee",
                        "required": false
                    },
                    {
                        "name": "old_style_api",
                        "type": "bool",
                        "default": false,
                        "description": "(API v1 only) Returns a single hex-encoded string instead of an array",
                        "required": false
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/addresses/<address>/compose/attach": {
                "function": "compose_attach",
                "description": "Composes a transaction to attach assets from an address to UTXO.",
                "args": [
                    {
                        "name": "address",
                        "required": true,
                        "type": "str",
                        "description": "The address from which the assets are attached (e.g. $ADDRESS_1)"
                    },
                    {
                        "name": "asset",
                        "required": true,
                        "type": "str",
                        "description": "The asset or subasset to attach (e.g. XCP)"
                    },
                    {
                        "name": "quantity",
                        "required": true,
                        "type": "int",
                        "description": "The quantity of the asset to attach (in satoshis, hence integer) (e.g. 1000)"
                    },
                    {
                        "name": "destination",
                        "default": null,
                        "required": false,
                        "type": "str",
                        "description": "The utxo to attach the assets to (e.g. $UTXO_1_ADDRESS_1)"
                    },
                    {
                        "name": "encoding",
                        "type": "str",
                        "default": "auto",
                        "description": "The encoding method to use",
                        "required": false
                    },
                    {
                        "name": "fee_per_kb",
                        "type": "int",
                        "default": null,
                        "description": "The fee per kilobyte of transaction data constant that the server uses when deciding on the dynamic fee to use (in satoshis)",
                        "required": false
                    },
                    {
                        "name": "regular_dust_size",
                        "type": "int",
                        "default": 546,
                        "description": "Specify (in satoshis) to override the (dust) amount of BTC used for each non-(bare) multisig output.",
                        "required": false
                    },
                    {
                        "name": "multisig_dust_size",
                        "type": "int",
                        "default": 1000,
                        "description": "Specify (in satoshis) to override the (dust) amount of BTC used for each (bare) multisig output",
                        "required": false
                    },
                    {
                        "name": "pubkey",
                        "type": "str",
                        "default": null,
                        "description": "The hexadecimal public key of the source address (or a list of the keys, if multi-sig). Required when using encoding parameter values of multisig or pubkeyhash.",
                        "required": false
                    },
                    {
                        "name": "allow_unconfirmed_inputs",
                        "type": "bool",
                        "default": false,
                        "description": "Set to true to allow this transaction to utilize unconfirmed UTXOs as inputs",
                        "required": false
                    },
                    {
                        "name": "fee",
                        "type": "int",
                        "default": null,
                        "description": "If you'd like to specify a custom miners' fee, specify it here (in satoshis). Leave as default for the server to automatically choose",
                        "required": false
                    },
                    {
                        "name": "fee_provided",
                        "type": "int",
                        "default": 0,
                        "description": "If you would like to specify a maximum fee (up to and including which may be used as the transaction fee), specify it here (in satoshis). This differs from fee in that this is an upper bound value, which fee is an exact value",
                        "required": false
                    },
                    {
                        "name": "unspent_tx_hash",
                        "type": "str",
                        "default": null,
                        "description": "When compiling the UTXOs to use as inputs for the transaction being created, only consider unspent outputs from this specific transaction hash. Defaults to null to consider all UTXOs for the address. Do not use this parameter if you are specifying inputs_set",
                        "required": false
                    },
                    {
                        "name": "dust_return_pubkey",
                        "type": "str",
                        "default": null,
                        "description": "The dust return pubkey is used in multi-sig data outputs (as the only real pubkey) to make those the outputs spendable. By default, this pubkey is taken from the pubkey used in the first transaction input. However, it can be overridden here (and is required to be specified if a P2SH input is used and multisig is used as the data output encoding.) If specified, specify the public key (in hex format) where dust will be returned to so that it can be reclaimed. Only valid/useful when used with transactions that utilize multisig data encoding. Note that if this value is set to false, this instructs counterparty-server to use the default dust return pubkey configured at the node level. If this default is not set at the node level, the call will generate an exception",
                        "required": false
                    },
                    {
                        "name": "disable_utxo_locks",
                        "type": "bool",
                        "default": false,
                        "description": "By default, UTXOs utilized when creating a transaction are 'locked' for a few seconds, to prevent a case where rapidly generating create_ calls reuse UTXOs due to their spent status not being updated in bitcoind yet. Specify true for this parameter to disable this behavior, and not temporarily lock UTXOs",
                        "required": false
                    },
                    {
                        "name": "p2sh_pretx_txid",
                        "type": "str",
                        "default": null,
                        "description": "The previous transaction txid for a two part P2SH message. This txid must be taken from the signed transaction",
                        "required": false
                    },
                    {
                        "name": "segwit",
                        "type": "bool",
                        "default": false,
                        "description": "Use segwit",
                        "required": false
                    },
                    {
                        "name": "confirmation_target",
                        "type": "int",
                        "default": 3,
                        "description": "The number of blocks to target for confirmation",
                        "required": false
                    },
                    {
                        "name": "exclude_utxos",
                        "type": "str",
                        "default": null,
                        "description": "A comma-separated list of UTXO txids to exclude when selecting UTXOs to use as inputs for the transaction being created",
                        "required": false
                    },
                    {
                        "name": "inputs_set",
                        "type": "str",
                        "default": null,
                        "description": "A comma-separated list of UTXOs (`<txid>:<vout>`) to use as inputs for the transaction being created",
                        "required": false
                    },
                    {
                        "name": "accept_missing_params",
                        "type": "bool",
                        "default": false,
                        "description": "Accept missing parameters with no default value (True by default for API v1)",
                        "required": false
                    },
                    {
                        "name": "return_psbt",
                        "type": "bool",
                        "default": false,
                        "description": "(API v2 only) Construct a PSBT instead of a raw transaction hex",
                        "required": false
                    },
                    {
                        "name": "return_only_data",
                        "type": "bool",
                        "default": false,
                        "description": "(API v2 only) Return only the data part of the transaction",
                        "required": false
                    },
                    {
                        "name": "extended_tx_info",
                        "type": "bool",
                        "default": false,
                        "description": "(API v1 only) When this is not specified or false, the create_ calls return only a hex-encoded string. If this is true, the create_ calls return a data object with the following keys: tx_hex, btc_in, btc_out, btc_change, and btc_fee",
                        "required": false
                    },
                    {
                        "name": "old_style_api",
                        "type": "bool",
                        "default": false,
                        "description": "(API v1 only) Returns a single hex-encoded string instead of an array",
                        "required": false
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/utxos/<utxo>/compose/detach": {
                "function": "compose_detach",
                "description": "Composes a transaction to detach assets from UTXO to an address.",
                "args": [
                    {
                        "name": "utxo",
                        "required": true,
                        "type": "str",
                        "description": "The utxo from which the assets are detached (e.g. $UTXO_WITH_BALANCE)"
                    },
                    {
                        "name": "destination",
                        "required": true,
                        "type": "str",
                        "description": "The address to detach the assets to (e.g. $ADDRESS_1)"
                    },
                    {
                        "name": "asset",
                        "required": true,
                        "type": "str",
                        "description": "The asset or subasset to detach (e.g. XCP)"
                    },
                    {
                        "name": "quantity",
                        "required": true,
                        "type": "int",
                        "description": "The quantity of the asset to detach (in satoshis, hence integer) (e.g. 1000)"
                    },
                    {
                        "name": "encoding",
                        "type": "str",
                        "default": "auto",
                        "description": "The encoding method to use",
                        "required": false
                    },
                    {
                        "name": "fee_per_kb",
                        "type": "int",
                        "default": null,
                        "description": "The fee per kilobyte of transaction data constant that the server uses when deciding on the dynamic fee to use (in satoshis)",
                        "required": false
                    },
                    {
                        "name": "regular_dust_size",
                        "type": "int",
                        "default": 546,
                        "description": "Specify (in satoshis) to override the (dust) amount of BTC used for each non-(bare) multisig output.",
                        "required": false
                    },
                    {
                        "name": "multisig_dust_size",
                        "type": "int",
                        "default": 1000,
                        "description": "Specify (in satoshis) to override the (dust) amount of BTC used for each (bare) multisig output",
                        "required": false
                    },
                    {
                        "name": "pubkey",
                        "type": "str",
                        "default": null,
                        "description": "The hexadecimal public key of the source address (or a list of the keys, if multi-sig). Required when using encoding parameter values of multisig or pubkeyhash.",
                        "required": false
                    },
                    {
                        "name": "allow_unconfirmed_inputs",
                        "type": "bool",
                        "default": false,
                        "description": "Set to true to allow this transaction to utilize unconfirmed UTXOs as inputs",
                        "required": false
                    },
                    {
                        "name": "fee",
                        "type": "int",
                        "default": null,
                        "description": "If you'd like to specify a custom miners' fee, specify it here (in satoshis). Leave as default for the server to automatically choose",
                        "required": false
                    },
                    {
                        "name": "fee_provided",
                        "type": "int",
                        "default": 0,
                        "description": "If you would like to specify a maximum fee (up to and including which may be used as the transaction fee), specify it here (in satoshis). This differs from fee in that this is an upper bound value, which fee is an exact value",
                        "required": false
                    },
                    {
                        "name": "unspent_tx_hash",
                        "type": "str",
                        "default": null,
                        "description": "When compiling the UTXOs to use as inputs for the transaction being created, only consider unspent outputs from this specific transaction hash. Defaults to null to consider all UTXOs for the address. Do not use this parameter if you are specifying inputs_set",
                        "required": false
                    },
                    {
                        "name": "dust_return_pubkey",
                        "type": "str",
                        "default": null,
                        "description": "The dust return pubkey is used in multi-sig data outputs (as the only real pubkey) to make those the outputs spendable. By default, this pubkey is taken from the pubkey used in the first transaction input. However, it can be overridden here (and is required to be specified if a P2SH input is used and multisig is used as the data output encoding.) If specified, specify the public key (in hex format) where dust will be returned to so that it can be reclaimed. Only valid/useful when used with transactions that utilize multisig data encoding. Note that if this value is set to false, this instructs counterparty-server to use the default dust return pubkey configured at the node level. If this default is not set at the node level, the call will generate an exception",
                        "required": false
                    },
                    {
                        "name": "disable_utxo_locks",
                        "type": "bool",
                        "default": false,
                        "description": "By default, UTXOs utilized when creating a transaction are 'locked' for a few seconds, to prevent a case where rapidly generating create_ calls reuse UTXOs due to their spent status not being updated in bitcoind yet. Specify true for this parameter to disable this behavior, and not temporarily lock UTXOs",
                        "required": false
                    },
                    {
                        "name": "p2sh_pretx_txid",
                        "type": "str",
                        "default": null,
                        "description": "The previous transaction txid for a two part P2SH message. This txid must be taken from the signed transaction",
                        "required": false
                    },
                    {
                        "name": "segwit",
                        "type": "bool",
                        "default": false,
                        "description": "Use segwit",
                        "required": false
                    },
                    {
                        "name": "confirmation_target",
                        "type": "int",
                        "default": 3,
                        "description": "The number of blocks to target for confirmation",
                        "required": false
                    },
                    {
                        "name": "exclude_utxos",
                        "type": "str",
                        "default": null,
                        "description": "A comma-separated list of UTXO txids to exclude when selecting UTXOs to use as inputs for the transaction being created",
                        "required": false
                    },
                    {
                        "name": "inputs_set",
                        "type": "str",
                        "default": null,
                        "description": "A comma-separated list of UTXOs (`<txid>:<vout>`) to use as inputs for the transaction being created",
                        "required": false
                    },
                    {
                        "name": "accept_missing_params",
                        "type": "bool",
                        "default": false,
                        "description": "Accept missing parameters with no default value (True by default for API v1)",
                        "required": false
                    },
                    {
                        "name": "return_psbt",
                        "type": "bool",
                        "default": false,
                        "description": "(API v2 only) Construct a PSBT instead of a raw transaction hex",
                        "required": false
                    },
                    {
                        "name": "return_only_data",
                        "type": "bool",
                        "default": false,
                        "description": "(API v2 only) Return only the data part of the transaction",
                        "required": false
                    },
                    {
                        "name": "extended_tx_info",
                        "type": "bool",
                        "default": false,
                        "description": "(API v1 only) When this is not specified or false, the create_ calls return only a hex-encoded string. If this is true, the create_ calls return a data object with the following keys: tx_hex, btc_in, btc_out, btc_change, and btc_fee",
                        "required": false
                    },
                    {
                        "name": "old_style_api",
                        "type": "bool",
                        "default": false,
                        "description": "(API v1 only) Returns a single hex-encoded string instead of an array",
                        "required": false
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/utxos/<utxo>/compose/movetoutxo": {
                "function": "compose_movetoutxo",
                "description": "Composes a transaction to move assets from UTXO to another UTXO.",
                "args": [
                    {
                        "name": "utxo",
                        "required": true,
                        "type": "str",
                        "description": "The utxo from which the assets are moved"
                    },
                    {
                        "name": "destination",
                        "required": true,
                        "type": "str",
                        "description": "The address to move the assets to"
                    },
                    {
                        "name": "more_utxos",
                        "default": "",
                        "required": false,
                        "type": "str",
                        "description": "The additional utxos to fund the transaction"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/assets": {
                "function": "get_valid_assets",
                "description": "Returns the valid assets",
                "args": [
                    {
                        "name": "named",
                        "default": null,
                        "required": false,
                        "type": "bool",
                        "description": "Whether to return only named assets (e.g. true)"
                    },
                    {
                        "name": "cursor",
                        "default": null,
                        "required": false,
                        "type": "str",
                        "description": "The last index of the assets to return"
                    },
                    {
                        "name": "limit",
                        "default": 100,
                        "required": false,
                        "type": "int",
                        "description": "The maximum number of assets to return (e.g. 5)"
                    },
                    {
                        "name": "offset",
                        "default": null,
                        "required": false,
                        "type": "int",
                        "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/assets/<asset>": {
                "function": "get_asset",
                "description": "Returns an asset by its name",
                "args": [
                    {
                        "name": "asset",
                        "required": true,
                        "type": "str",
                        "description": "The name of the asset to return (e.g. $ASSET_1)"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/assets/<asset>/balances": {
                "function": "get_asset_balances",
                "description": "Returns the asset balances",
                "args": [
                    {
                        "name": "asset",
                        "required": true,
                        "type": "str",
                        "description": "The asset to return (e.g. $ASSET_1)"
                    },
                    {
                        "name": "cursor",
                        "default": null,
                        "required": false,
                        "type": "str",
                        "description": "The last index of the balances to return"
                    },
                    {
                        "name": "limit",
                        "default": 100,
                        "required": false,
                        "type": "int",
                        "description": "The maximum number of balances to return (e.g. 5)"
                    },
                    {
                        "name": "offset",
                        "default": null,
                        "required": false,
                        "type": "int",
                        "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                    },
                    {
                        "name": "sort",
                        "default": null,
                        "required": false,
                        "type": "str",
                        "description": "The sort order of the balances to return (overrides the `cursor` parameter) (e.g. quantity:desc)"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/assets/<asset>/balances/<address>": {
                "function": "get_balance_by_address_and_asset",
                "description": "Returns the balance of an address and asset",
                "args": [
                    {
                        "name": "address",
                        "required": true,
                        "type": "str",
                        "description": "The address to return (e.g. $ADDRESS_1)"
                    },
                    {
                        "name": "asset",
                        "required": true,
                        "type": "str",
                        "description": "The asset to return (e.g. XCP)"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/assets/<asset>/orders": {
                "function": "get_orders_by_asset",
                "description": "Returns the orders of an asset",
                "args": [
                    {
                        "name": "asset",
                        "required": true,
                        "type": "str",
                        "description": "The asset to return (e.g. XCP)"
                    },
                    {
                        "name": "status",
                        "default": "all",
                        "required": false,
                        "type": "enum[str]",
                        "members": [
                            "all",
                            "open",
                            "expired",
                            "filled",
                            "cancelled"
                        ],
                        "description": "The status of the orders to return"
                    },
                    {
                        "name": "cursor",
                        "default": null,
                        "required": false,
                        "type": "str",
                        "description": "The last index of the orders to return"
                    },
                    {
                        "name": "limit",
                        "default": 100,
                        "required": false,
                        "type": "int",
                        "description": "The maximum number of orders to return (e.g. 5)"
                    },
                    {
                        "name": "offset",
                        "default": null,
                        "required": false,
                        "type": "int",
                        "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/assets/<asset>/matches": {
                "function": "get_order_matches_by_asset",
                "description": "Returns the orders of an asset",
                "args": [
                    {
                        "name": "asset",
                        "required": true,
                        "type": "str",
                        "description": "The asset to return (e.g. XCP)"
                    },
                    {
                        "name": "status",
                        "default": "all",
                        "required": false,
                        "type": "enum[str]",
                        "members": [
                            "all",
                            "pending",
                            "completed",
                            "expired"
                        ],
                        "description": "The status of the order matches to return"
                    },
                    {
                        "name": "cursor",
                        "default": null,
                        "required": false,
                        "type": "str",
                        "description": "The last index of the order matches to return"
                    },
                    {
                        "name": "limit",
                        "default": 100,
                        "required": false,
                        "type": "int",
                        "description": "The maximum number of order matches to return (e.g. 5)"
                    },
                    {
                        "name": "offset",
                        "default": null,
                        "required": false,
                        "type": "int",
                        "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/assets/<asset>/credits": {
                "function": "get_credits_by_asset",
                "description": "Returns the credits of an asset",
                "args": [
                    {
                        "name": "asset",
                        "required": true,
                        "type": "str",
                        "description": "The asset to return (e.g. $ASSET_1)"
                    },
                    {
                        "name": "action",
                        "default": null,
                        "required": false,
                        "type": "enum[str]",
                        "members": [
                            null,
                            "Closed: Max dispenses reached",
                            "bet settled: for equal",
                            "bet settled: for notequal",
                            "bet settled: liquidated for bear",
                            "btcpay",
                            "burn",
                            "cancel order",
                            "close dispenser",
                            "dispense",
                            "dispenser close",
                            "dividend",
                            "feed fee",
                            "filled",
                            "issuance",
                            "mpma send",
                            "open dispenser empty addr",
                            "order cancelled",
                            "order expired",
                            "order match",
                            "recredit backward quantity",
                            "recredit forward quantity",
                            "recredit wager",
                            "recredit wager remaining",
                            "reset issuance",
                            "send",
                            "sweep",
                            "wins"
                        ],
                        "description": "The action to filter by"
                    },
                    {
                        "name": "cursor",
                        "default": null,
                        "required": false,
                        "type": "str",
                        "description": "The last index of the credits to return"
                    },
                    {
                        "name": "limit",
                        "default": 100,
                        "required": false,
                        "type": "int",
                        "description": "The maximum number of credits to return (e.g. 5)"
                    },
                    {
                        "name": "offset",
                        "default": null,
                        "required": false,
                        "type": "int",
                        "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/assets/<asset>/debits": {
                "function": "get_debits_by_asset",
                "description": "Returns the debits of an asset",
                "args": [
                    {
                        "name": "asset",
                        "required": true,
                        "type": "str",
                        "description": "The asset to return (e.g. XCP)"
                    },
                    {
                        "name": "action",
                        "default": null,
                        "required": false,
                        "type": "enum[str]",
                        "members": [
                            null,
                            "bet",
                            "destroy",
                            "dividend",
                            "dividend fee",
                            "issuance fee",
                            "mpma send",
                            "open RPS",
                            "open dispenser",
                            "open dispenser empty addr",
                            "open order",
                            "refill dispenser",
                            "reopen RPS after matching expiration",
                            "reset destroy",
                            "send",
                            "sweep",
                            "sweep fee"
                        ],
                        "description": "The action to filter by"
                    },
                    {
                        "name": "cursor",
                        "default": null,
                        "required": false,
                        "type": "str",
                        "description": "The last index of the debits to return"
                    },
                    {
                        "name": "limit",
                        "default": 100,
                        "required": false,
                        "type": "int",
                        "description": "The maximum number of debits to return (e.g. 5)"
                    },
                    {
                        "name": "offset",
                        "default": null,
                        "required": false,
                        "type": "int",
                        "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/assets/<asset>/dividends": {
                "function": "get_dividends_by_asset",
                "description": "Returns the dividends of an asset",
                "args": [
                    {
                        "name": "asset",
                        "required": true,
                        "type": "str",
                        "description": "The asset to return (e.g. $ASSET_5)"
                    },
                    {
                        "name": "cursor",
                        "default": null,
                        "required": false,
                        "type": "str",
                        "description": "The last index of the dividend to return"
                    },
                    {
                        "name": "limit",
                        "default": 100,
                        "required": false,
                        "type": "int",
                        "description": "The maximum number of dividend to return (e.g. 5)"
                    },
                    {
                        "name": "offset",
                        "default": null,
                        "required": false,
                        "type": "int",
                        "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/assets/<asset>/issuances": {
                "function": "get_issuances_by_asset",
                "description": "Returns the issuances of an asset",
                "args": [
                    {
                        "name": "asset",
                        "required": true,
                        "type": "str",
                        "description": "The asset to return (e.g. $ASSET_1)"
                    },
                    {
                        "name": "cursor",
                        "default": null,
                        "required": false,
                        "type": "str",
                        "description": "The last index of the issuances to return"
                    },
                    {
                        "name": "limit",
                        "default": 100,
                        "required": false,
                        "type": "int",
                        "description": "The maximum number of issuances to return (e.g. 5)"
                    },
                    {
                        "name": "offset",
                        "default": null,
                        "required": false,
                        "type": "int",
                        "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/assets/<asset>/sends": {
                "function": "get_sends_by_asset",
                "description": "Returns the sends, include Enhanced and MPMA sends, of an asset",
                "args": [
                    {
                        "name": "asset",
                        "required": true,
                        "type": "str",
                        "description": "The asset to return (e.g. XCP)"
                    },
                    {
                        "name": "cursor",
                        "default": null,
                        "required": false,
                        "type": "str",
                        "description": "The last index of the debits to return"
                    },
                    {
                        "name": "limit",
                        "default": 100,
                        "required": false,
                        "type": "int",
                        "description": "The maximum number of debits to return (e.g. 5)"
                    },
                    {
                        "name": "offset",
                        "default": null,
                        "required": false,
                        "type": "int",
                        "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/assets/<asset>/dispensers": {
                "function": "get_dispensers_by_asset",
                "description": "Returns the dispensers of an asset",
                "args": [
                    {
                        "name": "asset",
                        "required": true,
                        "type": "str",
                        "description": "The asset to return (e.g. XCP)"
                    },
                    {
                        "name": "status",
                        "default": "all",
                        "required": false,
                        "type": "enum[str]",
                        "members": [
                            "all",
                            "open",
                            "closed",
                            "closing",
                            "open_empty_address"
                        ],
                        "description": "The status of the dispensers to return"
                    },
                    {
                        "name": "cursor",
                        "default": null,
                        "required": false,
                        "type": "str",
                        "description": "The last index of the dispensers to return"
                    },
                    {
                        "name": "limit",
                        "default": 100,
                        "required": false,
                        "type": "int",
                        "description": "The maximum number of dispensers to return (e.g. 5)"
                    },
                    {
                        "name": "offset",
                        "default": null,
                        "required": false,
                        "type": "int",
                        "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/assets/<asset>/dispensers/<address>": {
                "function": "get_dispenser_by_address_and_asset",
                "description": "Returns the dispenser of an address and an asset",
                "args": [
                    {
                        "name": "address",
                        "required": true,
                        "type": "str",
                        "description": "The address to return (e.g. $ADDRESS_1)"
                    },
                    {
                        "name": "asset",
                        "required": true,
                        "type": "str",
                        "description": "The asset to return (e.g. XCP)"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/assets/<asset>/holders": {
                "function": "get_asset_holders",
                "description": "Returns the holders of an asset",
                "args": [
                    {
                        "name": "asset",
                        "required": true,
                        "type": "str",
                        "description": "The asset to return (e.g. $ASSET_1)"
                    },
                    {
                        "name": "cursor",
                        "default": null,
                        "required": false,
                        "type": "str",
                        "description": "The last index of the holder to return"
                    },
                    {
                        "name": "limit",
                        "default": 100,
                        "required": false,
                        "type": "int",
                        "description": "The maximum number of holders to return (e.g. 5)"
                    },
                    {
                        "name": "offset",
                        "default": null,
                        "required": false,
                        "type": "int",
                        "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/assets/<asset>/dispenses": {
                "function": "get_dispenses_by_asset",
                "description": "Returns the dispenses of an asset",
                "args": [
                    {
                        "name": "asset",
                        "required": true,
                        "type": "str",
                        "description": "The asset to return (e.g. XCP)"
                    },
                    {
                        "name": "cursor",
                        "default": null,
                        "required": false,
                        "type": "str",
                        "description": "The last index of the dispenses to return"
                    },
                    {
                        "name": "limit",
                        "default": 100,
                        "required": false,
                        "type": "int",
                        "description": "The maximum number of dispenses to return (e.g. 5)"
                    },
                    {
                        "name": "offset",
                        "default": null,
                        "required": false,
                        "type": "int",
                        "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/assets/<asset>/subassets": {
                "function": "get_subassets_by_asset",
                "description": "Returns asset subassets",
                "args": [
                    {
                        "name": "asset",
                        "required": true,
                        "type": "str",
                        "description": "The name of the asset to return (e.g. $ASSET_7)"
                    },
                    {
                        "name": "cursor",
                        "default": null,
                        "required": false,
                        "type": "str",
                        "description": "The last index of the assets to return"
                    },
                    {
                        "name": "limit",
                        "default": 100,
                        "required": false,
                        "type": "int",
                        "description": "The maximum number of assets to return (e.g. 5)"
                    },
                    {
                        "name": "offset",
                        "default": null,
                        "required": false,
                        "type": "int",
                        "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/assets/<asset>/fairminters": {
                "function": "get_fairminters_by_asset",
                "description": "Returns the fairminter by its asset",
                "args": [
                    {
                        "name": "asset",
                        "required": true,
                        "type": "str",
                        "description": "The asset of the fairminter to return (e.g. $ASSET_1)"
                    },
                    {
                        "name": "cursor",
                        "default": null,
                        "required": false,
                        "type": "str"
                    },
                    {
                        "name": "limit",
                        "default": 100,
                        "required": false,
                        "type": "int"
                    },
                    {
                        "name": "offset",
                        "default": null,
                        "required": false,
                        "type": "int"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/assets/<asset>/fairmints": {
                "function": "get_fairmints_by_asset",
                "description": "Returns the mints by asset",
                "args": [
                    {
                        "name": "asset",
                        "required": true,
                        "type": "str",
                        "description": "The asset of the mints to return (e.g. $ASSET_1)"
                    },
                    {
                        "name": "cursor",
                        "default": null,
                        "required": false,
                        "type": "str"
                    },
                    {
                        "name": "limit",
                        "default": 100,
                        "required": false,
                        "type": "int"
                    },
                    {
                        "name": "offset",
                        "default": null,
                        "required": false,
                        "type": "int"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/assets/<asset>/fairmints/<address>": {
                "function": "get_fairmints_by_address_and_asset",
                "description": "Returns the mints by address and asset",
                "args": [
                    {
                        "name": "address",
                        "required": true,
                        "type": "str",
                        "description": "The address of the mints to return (e.g. $ADDRESS_2)"
                    },
                    {
                        "name": "asset",
                        "required": true,
                        "type": "str",
                        "description": "The asset of the mints to return (e.g. $ASSET_1)"
                    },
                    {
                        "name": "cursor",
                        "default": null,
                        "required": false,
                        "type": "str"
                    },
                    {
                        "name": "limit",
                        "default": 100,
                        "required": false,
                        "type": "int"
                    },
                    {
                        "name": "offset",
                        "default": null,
                        "required": false,
                        "type": "int"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/orders": {
                "function": "get_orders",
                "description": "Returns all the orders",
                "args": [
                    {
                        "name": "status",
                        "default": "all",
                        "required": false,
                        "type": "enum[str]",
                        "members": [
                            "all",
                            "open",
                            "expired",
                            "filled",
                            "cancelled"
                        ],
                        "description": "The status of the orders to return"
                    },
                    {
                        "name": "cursor",
                        "default": null,
                        "required": false,
                        "type": "str",
                        "description": "The last index of the orders to return"
                    },
                    {
                        "name": "limit",
                        "default": 100,
                        "required": false,
                        "type": "int",
                        "description": "The maximum number of orders to return (e.g. 5)"
                    },
                    {
                        "name": "offset",
                        "default": null,
                        "required": false,
                        "type": "int",
                        "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/orders/<order_hash>": {
                "function": "get_order",
                "description": "Returns the information of an order",
                "args": [
                    {
                        "name": "order_hash",
                        "required": true,
                        "type": "str",
                        "description": "The hash of the transaction that created the order (e.g. $LAST_ORDER_TX_HASH)"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/orders/<order_hash>/matches": {
                "function": "get_order_matches_by_order",
                "description": "Returns the order matches of an order",
                "args": [
                    {
                        "name": "order_hash",
                        "required": true,
                        "type": "str",
                        "description": "The hash of the transaction that created the order (e.g. $ORDER_WITH_MATCH_HASH)"
                    },
                    {
                        "name": "status",
                        "default": "all",
                        "required": false,
                        "type": "enum[str]",
                        "members": [
                            "all",
                            "pending",
                            "completed",
                            "expired"
                        ],
                        "description": "The status of the order matches to return"
                    },
                    {
                        "name": "cursor",
                        "default": null,
                        "required": false,
                        "type": "str",
                        "description": "The last index of the order matches to return"
                    },
                    {
                        "name": "limit",
                        "default": 100,
                        "required": false,
                        "type": "int",
                        "description": "The maximum number of order matches to return (e.g. 5)"
                    },
                    {
                        "name": "offset",
                        "default": null,
                        "required": false,
                        "type": "int",
                        "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/orders/<order_hash>/btcpays": {
                "function": "get_btcpays_by_order",
                "description": "Returns the BTC pays of an order",
                "args": [
                    {
                        "name": "order_hash",
                        "required": true,
                        "type": "str",
                        "description": "The hash of the transaction that created the order (e.g. $ORDER_WITH_BTCPAY_HASH)"
                    },
                    {
                        "name": "cursor",
                        "default": null,
                        "required": false,
                        "type": "str",
                        "description": "The last index of the resolutions to return"
                    },
                    {
                        "name": "limit",
                        "default": 100,
                        "required": false,
                        "type": "int",
                        "description": "The maximum number of resolutions to return (e.g. 5)"
                    },
                    {
                        "name": "offset",
                        "default": null,
                        "required": false,
                        "type": "int",
                        "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/orders/<asset1>/<asset2>": {
                "function": "get_orders_by_two_assets",
                "description": "Returns the orders to exchange two assets",
                "args": [
                    {
                        "name": "asset1",
                        "required": true,
                        "type": "str",
                        "description": "The first asset to return (e.g. BTC)"
                    },
                    {
                        "name": "asset2",
                        "required": true,
                        "type": "str",
                        "description": "The second asset to return (e.g. XCP)"
                    },
                    {
                        "name": "status",
                        "default": "all",
                        "required": false,
                        "type": "enum[str]",
                        "members": [
                            "all",
                            "open",
                            "expired",
                            "filled",
                            "cancelled"
                        ],
                        "description": "The status of the orders to return"
                    },
                    {
                        "name": "cursor",
                        "default": null,
                        "required": false,
                        "type": "str",
                        "description": "The last index of the orders to return"
                    },
                    {
                        "name": "limit",
                        "default": 100,
                        "required": false,
                        "type": "int",
                        "description": "The maximum number of orders to return (e.g. 5)"
                    },
                    {
                        "name": "offset",
                        "default": null,
                        "required": false,
                        "type": "int",
                        "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/orders/<asset1>/<asset2>/matches": {
                "function": "get_order_matches_by_two_assets",
                "description": "Returns the orders to exchange two assets",
                "args": [
                    {
                        "name": "asset1",
                        "required": true,
                        "type": "str",
                        "description": "The first asset to return (e.g. BTC)"
                    },
                    {
                        "name": "asset2",
                        "required": true,
                        "type": "str",
                        "description": "The second asset to return (e.g. XCP)"
                    },
                    {
                        "name": "status",
                        "default": "all",
                        "required": false,
                        "type": "enum[str]",
                        "members": [
                            "all",
                            "pending",
                            "completed",
                            "expired"
                        ],
                        "description": "The status of the order matches to return"
                    },
                    {
                        "name": "cursor",
                        "default": null,
                        "required": false,
                        "type": "str",
                        "description": "The last index of the order matches to return"
                    },
                    {
                        "name": "limit",
                        "default": 100,
                        "required": false,
                        "type": "int",
                        "description": "The maximum number of order matches to return (e.g. 5)"
                    },
                    {
                        "name": "offset",
                        "default": null,
                        "required": false,
                        "type": "int",
                        "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/order_matches": {
                "function": "get_all_order_matches",
                "description": "Returns all the order matches",
                "args": [
                    {
                        "name": "status",
                        "default": "all",
                        "required": false,
                        "type": "enum[str]",
                        "members": [
                            "all",
                            "pending",
                            "completed",
                            "expired"
                        ],
                        "description": "The status of the order matches to return"
                    },
                    {
                        "name": "cursor",
                        "default": null,
                        "required": false,
                        "type": "str",
                        "description": "The last index of the order matches to return"
                    },
                    {
                        "name": "limit",
                        "default": 100,
                        "required": false,
                        "type": "int",
                        "description": "The maximum number of order matches to return (e.g. 5)"
                    },
                    {
                        "name": "offset",
                        "default": null,
                        "required": false,
                        "type": "int",
                        "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/bets": {
                "function": "get_bets",
                "description": "Returns the bets of a feed",
                "args": [
                    {
                        "name": "status",
                        "default": "open",
                        "required": false,
                        "type": "enum[str]",
                        "members": [
                            "cancelled",
                            "dropped",
                            "expired",
                            "filled",
                            "open"
                        ],
                        "description": "The status of the bet (e.g. filled)"
                    },
                    {
                        "name": "cursor",
                        "default": null,
                        "required": false,
                        "type": "str",
                        "description": "The last index of the bets to return"
                    },
                    {
                        "name": "limit",
                        "default": 100,
                        "required": false,
                        "type": "int",
                        "description": "The maximum number of bets to return (e.g. 5)"
                    },
                    {
                        "name": "offset",
                        "default": null,
                        "required": false,
                        "type": "int",
                        "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/bets/<bet_hash>": {
                "function": "get_bet",
                "description": "Returns the information of a bet",
                "args": [
                    {
                        "name": "bet_hash",
                        "required": true,
                        "type": "str",
                        "description": "The hash of the transaction that created the bet (e.g. 5d097b4729cb74d927b4458d365beb811a26fcee7f8712f049ecbe780eb496ed)"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/bets/<bet_hash>/matches": {
                "function": "get_bet_matches_by_bet",
                "description": "Returns the bet matches of a bet",
                "args": [
                    {
                        "name": "bet_hash",
                        "required": true,
                        "type": "str",
                        "description": "The hash of the transaction that created the bet (e.g. 5d097b4729cb74d927b4458d365beb811a26fcee7f8712f049ecbe780eb496ed)"
                    },
                    {
                        "name": "status",
                        "default": "pending",
                        "required": false,
                        "type": "enum[str]",
                        "members": [
                            "dropped",
                            "expired",
                            "pending",
                            "settled: for equal",
                            "settled: for notequal",
                            "settled: liquidated for bear"
                        ],
                        "description": "The status of the bet matches (e.g. expired)"
                    },
                    {
                        "name": "cursor",
                        "default": null,
                        "required": false,
                        "type": "str",
                        "description": "The last index of the bet matches to return"
                    },
                    {
                        "name": "limit",
                        "default": 100,
                        "required": false,
                        "type": "int",
                        "description": "The maximum number of bet matches to return (e.g. 5)"
                    },
                    {
                        "name": "offset",
                        "default": null,
                        "required": false,
                        "type": "int",
                        "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/bets/<bet_hash>/resolutions": {
                "function": "get_resolutions_by_bet",
                "description": "Returns the resolutions of a bet",
                "args": [
                    {
                        "name": "bet_hash",
                        "required": true,
                        "type": "str",
                        "description": "The hash of the transaction that created the bet (e.g. 36bbbb7dbd85054dac140a8ad8204eda2ee859545528bd2a9da69ad77c277ace)"
                    },
                    {
                        "name": "cursor",
                        "default": null,
                        "required": false,
                        "type": "str",
                        "description": "The last index of the resolutions to return"
                    },
                    {
                        "name": "limit",
                        "default": 100,
                        "required": false,
                        "type": "int",
                        "description": "The maximum number of resolutions to return (e.g. 5)"
                    },
                    {
                        "name": "offset",
                        "default": null,
                        "required": false,
                        "type": "int",
                        "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/burns": {
                "function": "get_all_burns",
                "description": "Returns the burns",
                "args": [
                    {
                        "name": "cursor",
                        "default": null,
                        "required": false,
                        "type": "str",
                        "description": "The last index of the burns to return"
                    },
                    {
                        "name": "limit",
                        "default": 100,
                        "required": false,
                        "type": "int",
                        "description": "The maximum number of burns to return (e.g. 5)"
                    },
                    {
                        "name": "offset",
                        "default": null,
                        "required": false,
                        "type": "int",
                        "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/dispensers": {
                "function": "get_dispensers",
                "description": "Returns all dispensers",
                "args": [
                    {
                        "name": "status",
                        "default": "all",
                        "required": false,
                        "type": "enum[str]",
                        "members": [
                            "all",
                            "open",
                            "closed",
                            "closing",
                            "open_empty_address"
                        ],
                        "description": "The status of the dispensers to return"
                    },
                    {
                        "name": "cursor",
                        "default": null,
                        "required": false,
                        "type": "str",
                        "description": "The last index of the dispensers to return"
                    },
                    {
                        "name": "limit",
                        "default": 100,
                        "required": false,
                        "type": "int",
                        "description": "The maximum number of dispensers to return (e.g. 5)"
                    },
                    {
                        "name": "offset",
                        "default": null,
                        "required": false,
                        "type": "int",
                        "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/dispensers/<dispenser_hash>": {
                "function": "get_dispenser_info_by_hash",
                "description": "Returns the dispenser information by tx_hash",
                "args": [
                    {
                        "name": "dispenser_hash",
                        "required": true,
                        "type": "str",
                        "description": "The hash of the dispenser to return (e.g. $DISPENSER_TX_HASH_1)"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/dispensers/<dispenser_hash>/dispenses": {
                "function": "get_dispenses_by_dispenser",
                "description": "Returns the dispenses of a dispenser",
                "args": [
                    {
                        "name": "dispenser_hash",
                        "required": true,
                        "type": "str",
                        "description": "The hash of the dispenser to return (e.g. $DISPENSER_TX_HASH_1)"
                    },
                    {
                        "name": "cursor",
                        "default": null,
                        "required": false,
                        "type": "str",
                        "description": "The last index of the dispenses to return"
                    },
                    {
                        "name": "limit",
                        "default": 100,
                        "required": false,
                        "type": "int",
                        "description": "The maximum number of dispenses to return (e.g. 5)"
                    },
                    {
                        "name": "offset",
                        "default": null,
                        "required": false,
                        "type": "int",
                        "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/dividends": {
                "function": "get_dividends",
                "description": "Returns all the dividends",
                "args": [
                    {
                        "name": "cursor",
                        "default": null,
                        "required": false,
                        "type": "str",
                        "description": "The last index of the dividend to return"
                    },
                    {
                        "name": "limit",
                        "default": 100,
                        "required": false,
                        "type": "int",
                        "description": "The maximum number of dividend to return (e.g. 5)"
                    },
                    {
                        "name": "offset",
                        "default": null,
                        "required": false,
                        "type": "int",
                        "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/dividends/<dividend_hash>": {
                "function": "get_dividend",
                "description": "Returns a dividend by its hash",
                "args": [
                    {
                        "name": "dividend_hash",
                        "required": true,
                        "type": "str",
                        "description": "The hash of the dividend to return (e.g. $LAST_DIVIDEND_TX_HASH)"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/dividends/<dividend_hash>/credits": {
                "function": "get_dividend_disribution",
                "description": "Returns a dividend distribution by its hash",
                "args": [
                    {
                        "name": "dividend_hash",
                        "required": true,
                        "type": "str",
                        "description": "The hash of the dividend distribution to return (e.g. $LAST_DIVIDEND_TX_HASH)"
                    },
                    {
                        "name": "cursor",
                        "default": null,
                        "required": false,
                        "type": "str",
                        "description": "The last index of the credit to return"
                    },
                    {
                        "name": "limit",
                        "default": 100,
                        "required": false,
                        "type": "int",
                        "description": "The maximum number of credit to return (e.g. 5)"
                    },
                    {
                        "name": "offset",
                        "default": null,
                        "required": false,
                        "type": "int",
                        "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/events": {
                "function": "get_all_events",
                "description": "Returns all events",
                "args": [
                    {
                        "name": "event_name",
                        "default": null,
                        "required": false,
                        "type": "str",
                        "description": "Comma separated list of events to return"
                    },
                    {
                        "name": "cursor",
                        "default": null,
                        "required": false,
                        "type": "str",
                        "description": "The last event index to return (e.g. $LAST_EVENT_INDEX)"
                    },
                    {
                        "name": "limit",
                        "default": 100,
                        "required": false,
                        "type": "int",
                        "description": "The maximum number of events to return (e.g. 5)"
                    },
                    {
                        "name": "offset",
                        "default": null,
                        "required": false,
                        "type": "int",
                        "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/events/<int:event_index>": {
                "function": "get_event_by_index",
                "description": "Returns the event of an index",
                "args": [
                    {
                        "name": "event_index",
                        "required": true,
                        "type": "int",
                        "description": "The index of the event to return (e.g. $LAST_EVENT_INDEX)"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/events/counts": {
                "function": "get_all_events_counts",
                "description": "Returns the event counts of all blocks",
                "args": [
                    {
                        "name": "cursor",
                        "default": null,
                        "required": false,
                        "type": "str",
                        "description": "The last event index to return"
                    },
                    {
                        "name": "limit",
                        "default": 100,
                        "required": false,
                        "type": "int",
                        "description": "The maximum number of events to return (e.g. 5)"
                    },
                    {
                        "name": "offset",
                        "default": null,
                        "required": false,
                        "type": "int",
                        "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/events/<event>": {
                "function": "get_events_by_name",
                "description": "Returns the events filtered by event name",
                "args": [
                    {
                        "name": "event",
                        "required": true,
                        "type": "str",
                        "description": "The event to return (e.g. CREDIT)"
                    },
                    {
                        "name": "cursor",
                        "default": null,
                        "required": false,
                        "type": "str",
                        "description": "The last event index to return (e.g. $LAST_EVENT_INDEX)"
                    },
                    {
                        "name": "limit",
                        "default": 100,
                        "required": false,
                        "type": "int",
                        "description": "The maximum number of events to return (e.g. 5)"
                    },
                    {
                        "name": "offset",
                        "default": null,
                        "required": false,
                        "type": "int",
                        "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/events/<event>/count": {
                "function": "get_event_count",
                "description": "Returns the number of events",
                "args": [
                    {
                        "name": "event",
                        "required": true,
                        "type": "str",
                        "description": "The name of the event to return (e.g. CREDIT)"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/dispenses": {
                "function": "get_dispenses",
                "description": "Returns all the dispenses",
                "args": [
                    {
                        "name": "cursor",
                        "default": null,
                        "required": false,
                        "type": "str",
                        "description": "The last index of the dispenses to return"
                    },
                    {
                        "name": "limit",
                        "default": 100,
                        "required": false,
                        "type": "int",
                        "description": "The maximum number of dispenses to return (e.g. 5)"
                    },
                    {
                        "name": "offset",
                        "default": null,
                        "required": false,
                        "type": "int",
                        "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/sends": {
                "function": "get_sends",
                "description": "Returns all the sends include Enhanced and MPMA sends",
                "args": [
                    {
                        "name": "cursor",
                        "default": null,
                        "required": false,
                        "type": "str",
                        "description": "The last index of the debits to return"
                    },
                    {
                        "name": "limit",
                        "default": 100,
                        "required": false,
                        "type": "int",
                        "description": "The maximum number of debits to return (e.g. 5)"
                    },
                    {
                        "name": "offset",
                        "default": null,
                        "required": false,
                        "type": "int",
                        "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/issuances": {
                "function": "get_issuances",
                "description": "Returns all the issuances",
                "args": [
                    {
                        "name": "cursor",
                        "default": null,
                        "required": false,
                        "type": "str",
                        "description": "The last index of the issuances to return"
                    },
                    {
                        "name": "limit",
                        "default": 100,
                        "required": false,
                        "type": "int",
                        "description": "The maximum number of issuances to return (e.g. 5)"
                    },
                    {
                        "name": "offset",
                        "default": null,
                        "required": false,
                        "type": "int",
                        "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/issuances/<tx_hash>": {
                "function": "get_issuance_by_transaction_hash",
                "description": "Returns the issuances of a block",
                "args": [
                    {
                        "name": "tx_hash",
                        "required": true,
                        "type": "str",
                        "description": "The hash of the transaction to return (e.g. $LAST_ISSUANCE_TX_HASH)"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/sweeps": {
                "function": "get_sweeps",
                "description": "Returns all sweeps",
                "args": [
                    {
                        "name": "cursor",
                        "default": null,
                        "required": false,
                        "type": "str",
                        "description": "The last index of the sweeps to return"
                    },
                    {
                        "name": "limit",
                        "default": 100,
                        "required": false,
                        "type": "int",
                        "description": "The maximum number of sweeps to return (e.g. 5)"
                    },
                    {
                        "name": "offset",
                        "default": null,
                        "required": false,
                        "type": "int",
                        "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/sweeps/<tx_hash>": {
                "function": "get_sweep_by_transaction_hash",
                "description": "Returns the sweeps of a transaction",
                "args": [
                    {
                        "name": "tx_hash",
                        "required": true,
                        "type": "str",
                        "description": "The hash of the transaction to return (e.g. $LAST_SWEEP_TX_HASH)"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/broadcasts": {
                "function": "get_valid_broadcasts",
                "description": "Returns all valid broadcasts",
                "args": [
                    {
                        "name": "cursor",
                        "default": null,
                        "required": false,
                        "type": "str",
                        "description": "The last index of the broadcasts to return"
                    },
                    {
                        "name": "limit",
                        "default": 100,
                        "required": false,
                        "type": "int",
                        "description": "The maximum number of broadcasts to return (e.g. 5)"
                    },
                    {
                        "name": "offset",
                        "default": null,
                        "required": false,
                        "type": "int",
                        "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/broadcasts/<tx_hash>": {
                "function": "get_broadcast_by_transaction_hash",
                "description": "Returns the broadcast of a transaction",
                "args": [
                    {
                        "name": "tx_hash",
                        "required": true,
                        "type": "str",
                        "description": "The hash of the transaction to return (e.g. $LAST_BROADCAST_TX_HASH)"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/fairminters": {
                "function": "get_all_fairminters",
                "description": "Returns all fairminters",
                "args": [
                    {
                        "name": "cursor",
                        "default": null,
                        "required": false,
                        "type": "str",
                        "description": "The last index of the fairminter to return"
                    },
                    {
                        "name": "limit",
                        "default": 100,
                        "required": false,
                        "type": "int",
                        "description": "The maximum number of fairminter to return (e.g. 5)"
                    },
                    {
                        "name": "offset",
                        "default": null,
                        "required": false,
                        "type": "int",
                        "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/fairminters/<tx_hash>": {
                "function": "get_fairminter",
                "description": "Returns the fairminter by its hash",
                "args": [
                    {
                        "name": "tx_hash",
                        "required": true,
                        "type": "str"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/fairminters/<tx_hash>/mints": {
                "function": "get_fairmints_by_fairminter",
                "description": "Returns the mints by fairminter",
                "args": [
                    {
                        "name": "tx_hash",
                        "required": true,
                        "type": "str"
                    },
                    {
                        "name": "cursor",
                        "default": null,
                        "required": false,
                        "type": "str"
                    },
                    {
                        "name": "limit",
                        "default": 100,
                        "required": false,
                        "type": "int"
                    },
                    {
                        "name": "offset",
                        "default": null,
                        "required": false,
                        "type": "int"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/bitcoin/addresses/utxos": {
                "function": "get_unspent_txouts_by_addresses",
                "description": "Returns a list of unspent outputs for a list of addresses",
                "args": [
                    {
                        "name": "addresses",
                        "required": true,
                        "type": "str",
                        "description": "The addresses to search for (e.g. $ADDRESS_7,$ADDRESS_8)"
                    },
                    {
                        "name": "unconfirmed",
                        "default": false,
                        "required": false,
                        "type": "bool",
                        "description": "Include unconfirmed transactions"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/bitcoin/addresses/<address>/transactions": {
                "function": "get_transactions_by_address",
                "description": "Returns all transactions involving a given address",
                "args": [
                    {
                        "name": "address",
                        "required": true,
                        "type": "str",
                        "description": "The address to search for (e.g. $ADDRESS_3)"
                    },
                    {
                        "name": "unconfirmed",
                        "default": true,
                        "required": false,
                        "type": "bool",
                        "description": "Include unconfirmed transactions (e.g. True)"
                    },
                    {
                        "name": "only_tx_hashes",
                        "default": false,
                        "required": false,
                        "type": "bool",
                        "description": "Return only the tx hashes (e.g. True)"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/bitcoin/addresses/<address>/transactions/oldest": {
                "function": "get_oldest_transaction_by_address",
                "description": "Get the oldest transaction for an address.",
                "args": [
                    {
                        "name": "address",
                        "required": true,
                        "type": "str",
                        "description": "The address to search for. (e.g. $ADDRESS_9)"
                    },
                    {
                        "name": "block_index",
                        "default": null,
                        "required": false,
                        "type": "int",
                        "description": "The block index to search from."
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/bitcoin/addresses/<address>/utxos": {
                "function": "get_unspent_txouts",
                "description": "Returns a list of unspent outputs for a specific address",
                "args": [
                    {
                        "name": "address",
                        "required": true,
                        "type": "str",
                        "description": "The address to search for (e.g. $ADDRESS_7)"
                    },
                    {
                        "name": "unconfirmed",
                        "default": false,
                        "required": false,
                        "type": "bool",
                        "description": "Include unconfirmed transactions"
                    },
                    {
                        "name": "unspent_tx_hash",
                        "default": null,
                        "required": false,
                        "type": "str",
                        "description": "Filter by unspent_tx_hash"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/bitcoin/addresses/<address>/pubkey": {
                "function": "pubkeyhash_to_pubkey",
                "description": "Get pubkey for an address.",
                "args": [
                    {
                        "name": "address",
                        "required": true,
                        "type": "str",
                        "description": "Address to get pubkey for. (e.g. $ADDRESS_1)"
                    },
                    {
                        "name": "provided_pubkeys",
                        "default": null,
                        "required": false,
                        "type": "str",
                        "description": "Comma separated list of provided pubkeys."
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/bitcoin/transactions/<tx_hash>": {
                "function": "get_transaction",
                "description": "Get a transaction from the blockchain",
                "args": [
                    {
                        "name": "tx_hash",
                        "required": true,
                        "type": "str",
                        "description": "The transaction hash (e.g. $LAST_TX_HASH)"
                    },
                    {
                        "name": "format",
                        "default": "json",
                        "required": false,
                        "type": "str",
                        "description": "Whether to return JSON output or raw hex (e.g. hex)"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/bitcoin/estimatesmartfee": {
                "function": "fee_per_kb",
                "description": "Get the fee per kilobyte for a transaction to be confirmed in `conf_target` blocks.",
                "args": [
                    {
                        "name": "conf_target",
                        "default": 3,
                        "required": false,
                        "type": "int",
                        "description": "Confirmation target in blocks (1 - 1008) (e.g. 2)"
                    },
                    {
                        "name": "mode",
                        "default": "CONSERVATIVE",
                        "required": false,
                        "type": "str",
                        "description": "The fee estimate mode. (e.g. CONSERVATIVE)"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/bitcoin/transactions": {
                "function": "sendrawtransaction",
                "description": "Proxy to `sendrawtransaction` RPC call.",
                "args": [
                    {
                        "name": "signedhex",
                        "required": true,
                        "type": "str",
                        "description": "The signed transaction hex."
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/bitcoin/getmempoolinfo": {
                "function": "get_mempool_info",
                "description": "Get the current mempool info.",
                "args": [
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/mempool/events": {
                "function": "get_all_mempool_events",
                "description": "Returns all mempool events",
                "args": [
                    {
                        "name": "event_name",
                        "default": null,
                        "required": false,
                        "type": "str",
                        "description": "Comma separated list of events to return"
                    },
                    {
                        "name": "cursor",
                        "default": null,
                        "required": false,
                        "type": "str",
                        "description": "The last event index to return"
                    },
                    {
                        "name": "limit",
                        "default": 100,
                        "required": false,
                        "type": "int",
                        "description": "The maximum number of events to return (e.g. 5)"
                    },
                    {
                        "name": "offset",
                        "default": null,
                        "required": false,
                        "type": "int",
                        "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/mempool/events/<event>": {
                "function": "get_mempool_events_by_name",
                "description": "Returns the mempool events filtered by event name",
                "args": [
                    {
                        "name": "event",
                        "required": true,
                        "type": "str",
                        "description": "The event to return (e.g. CREDIT)"
                    },
                    {
                        "name": "cursor",
                        "default": null,
                        "required": false,
                        "type": "str",
                        "description": "The last event index to return"
                    },
                    {
                        "name": "limit",
                        "default": 100,
                        "required": false,
                        "type": "int",
                        "description": "The maximum number of events to return (e.g. 5)"
                    },
                    {
                        "name": "offset",
                        "default": null,
                        "required": false,
                        "type": "int",
                        "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/mempool/transactions/<tx_hash>/events": {
                "function": "get_mempool_events_by_tx_hash",
                "description": "Returns the mempool events filtered by transaction hash",
                "args": [
                    {
                        "name": "tx_hash",
                        "required": true,
                        "type": "str",
                        "description": "The hash of the transaction to return (e.g. $LAST_MEMPOOL_TX_HASH)"
                    },
                    {
                        "name": "event_name",
                        "default": null,
                        "required": false,
                        "type": "str",
                        "description": "Comma separated list of events to return"
                    },
                    {
                        "name": "cursor",
                        "default": null,
                        "required": false,
                        "type": "str",
                        "description": "The last event index to return"
                    },
                    {
                        "name": "limit",
                        "default": 100,
                        "required": false,
                        "type": "int",
                        "description": "The maximum number of events to return (e.g. 5)"
                    },
                    {
                        "name": "offset",
                        "default": null,
                        "required": false,
                        "type": "int",
                        "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/routes": {
                "function": "get_routes",
                "description": "Return the API routes.",
                "args": [
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/v2/healthz": {
                "function": "check_server_health",
                "description": "Health check route.",
                "args": [
                    {
                        "name": "check_type",
                        "default": "light",
                        "required": false,
                        "type": "str",
                        "description": "Type of health check to perform. Options are 'light' and 'heavy' (e.g. light)"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/healthz": {
                "function": "check_server_health",
                "description": "Health check route.",
                "args": [
                    {
                        "name": "check_type",
                        "default": "light",
                        "required": false,
                        "type": "str",
                        "description": "Type of health check to perform. Options are 'light' and 'heavy' (e.g. light)"
                    },
                    {
                        "name": "verbose",
                        "type": "bool",
                        "default": "false",
                        "description": "Include asset and dispenser info and normalized quantities in the response.",
                        "required": false
                    },
                    {
                        "name": "show_unconfirmed",
                        "type": "bool",
                        "default": "false",
                        "description": "Include results from Mempool.",
                        "required": false
                    }
                ]
            },
            "/": {
                "function": "redirect_to_rpc_v1",
                "description": "Redirect to the RPC API v1.",
                "args": []
            },
            "/v1/": {
                "function": "redirect_to_rpc_v1",
                "description": "Redirect to the RPC API v1.",
                "args": []
            },
            "/api/": {
                "function": "redirect_to_rpc_v1",
                "description": "Redirect to the RPC API v1.",
                "args": []
            },
            "/rpc/": {
                "function": "redirect_to_rpc_v1",
                "description": "Redirect to the RPC API v1.",
                "args": []
            }
        }
    }
}