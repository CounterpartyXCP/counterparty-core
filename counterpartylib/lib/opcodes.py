# push value
OP_0 = 0x00.to_bytes()
OP_FALSE = OP_0
OP_PUSHDATA1 = 0x4c.to_bytes()
OP_PUSHDATA2 = 0x4d.to_bytes()
OP_PUSHDATA4 = 0x4e.to_bytes()
OP_1NEGATE = 0x4f.to_bytes()
OP_RESERVED = 0x50.to_bytes()
OP_1 = 0x51.to_bytes()
OP_TRUE = OP_1
OP_2 = 0x52.to_bytes()
OP_3 = 0x53.to_bytes()
OP_4 = 0x54.to_bytes()
OP_5 = 0x55.to_bytes()
OP_6 = 0x56.to_bytes()
OP_7 = 0x57.to_bytes()
OP_8 = 0x58.to_bytes()
OP_9 = 0x59.to_bytes()
OP_10 = 0x5a.to_bytes()
OP_11 = 0x5b.to_bytes()
OP_12 = 0x5c.to_bytes()
OP_13 = 0x5d.to_bytes()
OP_14 = 0x5e.to_bytes()
OP_15 = 0x5f.to_bytes()
OP_16 = 0x60.to_bytes()

# control
OP_NOP = 0x61.to_bytes()
OP_VER = 0x62.to_bytes()
OP_IF = 0x63.to_bytes()
OP_NOTIF = 0x64.to_bytes()
OP_VERIF = 0x65.to_bytes()
OP_VERNOTIF = 0x66.to_bytes()
OP_ELSE = 0x67.to_bytes()
OP_ENDIF = 0x68.to_bytes()
OP_VERIFY = 0x69.to_bytes()
OP_RETURN = 0x6a.to_bytes()

# stack ops
OP_TOALTSTACK = 0x6b.to_bytes()
OP_FROMALTSTACK = 0x6c.to_bytes()
OP_2DROP = 0x6d.to_bytes()
OP_2DUP = 0x6e.to_bytes()
OP_3DUP = 0x6f.to_bytes()
OP_2OVER = 0x70.to_bytes()
OP_2ROT = 0x71.to_bytes()
OP_2SWAP = 0x72.to_bytes()
OP_IFDUP = 0x73.to_bytes()
OP_DEPTH = 0x74.to_bytes()
OP_DROP = 0x75.to_bytes()
OP_DUP = 0x76.to_bytes()
OP_NIP = 0x77.to_bytes()
OP_OVER = 0x78.to_bytes()
OP_PICK = 0x79.to_bytes()
OP_ROLL = 0x7a.to_bytes()
OP_ROT = 0x7b.to_bytes()
OP_SWAP = 0x7c.to_bytes()
OP_TUCK = 0x7d.to_bytes()

# splice ops
OP_CAT = 0x7e.to_bytes()
OP_SUBSTR = 0x7f.to_bytes()
OP_LEFT = 0x80.to_bytes()
OP_RIGHT = 0x81.to_bytes()
OP_SIZE = 0x82.to_bytes()

# bit logic
OP_INVERT = 0x83.to_bytes()
OP_AND = 0x84.to_bytes()
OP_OR = 0x85.to_bytes()
OP_XOR = 0x86.to_bytes()
OP_EQUAL = 0x87.to_bytes()
OP_EQUALVERIFY = 0x88.to_bytes()
OP_RESERVED1 = 0x89.to_bytes()
OP_RESERVED2 = 0x8a.to_bytes()

# numeric
OP_1ADD = 0x8b.to_bytes()
OP_1SUB = 0x8c.to_bytes()
OP_2MUL = 0x8d.to_bytes()
OP_2DIV = 0x8e.to_bytes()
OP_NEGATE = 0x8f.to_bytes()
OP_ABS = 0x90.to_bytes()
OP_NOT = 0x91.to_bytes()
OP_0NOTEQUAL = 0x92.to_bytes()

OP_ADD = 0x93.to_bytes()
OP_SUB = 0x94.to_bytes()
OP_MUL = 0x95.to_bytes()
OP_DIV = 0x96.to_bytes()
OP_MOD = 0x97.to_bytes()
OP_LSHIFT = 0x98.to_bytes()
OP_RSHIFT = 0x99.to_bytes()

OP_BOOLAND = 0x9a.to_bytes()
OP_BOOLOR = 0x9b.to_bytes()
OP_NUMEQUAL = 0x9c.to_bytes()
OP_NUMEQUALVERIFY = 0x9d.to_bytes()
OP_NUMNOTEQUAL = 0x9e.to_bytes()
OP_LESSTHAN = 0x9f.to_bytes()
OP_GREATERTHAN = 0xa0.to_bytes()
OP_LESSTHANOREQUAL = 0xa1.to_bytes()
OP_GREATERTHANOREQUAL = 0xa2.to_bytes()
OP_MIN = 0xa3.to_bytes()
OP_MAX = 0xa4.to_bytes()

OP_WITHIN = 0xa5.to_bytes()

# crypto
OP_RIPEMD160 = 0xa6.to_bytes()
OP_SHA1 = 0xa7.to_bytes()
OP_SHA256 = 0xa8.to_bytes()
OP_HASH160 = 0xa9.to_bytes()
OP_HASH256 = 0xaa.to_bytes()
OP_CODESEPARATOR = 0xab.to_bytes()
OP_CHECKSIG = 0xac.to_bytes()
OP_CHECKSIGVERIFY = 0xad.to_bytes()
OP_CHECKMULTISIG = 0xae.to_bytes()
OP_CHECKMULTISIGVERIFY = 0xaf.to_bytes()

# expansion
OP_NOP1 = 0xb0.to_bytes()
OP_NOP2 = 0xb1.to_bytes()
OP_CHECKLOCKTIMEVERIFY = OP_NOP2
OP_NOP3 = 0xb2.to_bytes()
OP_CHECKSEQUENCEVERIFY = OP_NOP3
OP_NOP4 = 0xb3.to_bytes()
OP_NOP5 = 0xb4.to_bytes()
OP_NOP6 = 0xb5.to_bytes()
OP_NOP7 = 0xb6.to_bytes()
OP_NOP8 = 0xb7.to_bytes()
OP_NOP9 = 0xb8.to_bytes()
OP_NOP10 = 0xb9.to_bytes()

# template matching params
OP_SMALLINTEGER = 0xfa.to_bytes()
OP_PUBKEYS = 0xfb.to_bytes()
OP_PUBKEYHASH = 0xfd.to_bytes()
OP_PUBKEY = 0xfe.to_bytes()

OP_INVALIDOPCODE = 0xff.to_bytes()
