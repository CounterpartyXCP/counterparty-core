[//]: # (Generated by genapidoc.py on 2025-02-25 13:28:49.443500. Do not edit manually.)
FORMAT: 1A
HOST: https://api.counterparty.io:4000

# Counterparty Core API

The Counterparty Core API is the recommended way to query the state of a Counterparty node. All other methods have no official support.

API routes are divided into groups:

- [`blocks`](#/reference/blocks)
- [`transactions`](#/reference/transactions)
- [`addresses`](#/reference/addresses)
- [`utxos`](#/reference/utxos)
- [`compose`](#/reference/compose)
- [`assets`](#/reference/assets)
- [`orders`](#/reference/orders)
- [`order_matches`](#/reference/order_matches)
- [`bets`](#/reference/bets)
- [`burns`](#/reference/burns)
- [`dispensers`](#/reference/dispensers)
- [`dividends`](#/reference/dividends)
- [`events`](#/reference/events)
- [`destructions`](#/reference/destructions)
- [`dispenses`](#/reference/dispenses)
- [`sends`](#/reference/sends)
- [`issuances`](#/reference/issuances)
- [`sweeps`](#/reference/sweeps)
- [`broadcasts`](#/reference/broadcasts)
- [`fairminters`](#/reference/fairminters)
- [`fairmints`](#/reference/fairmints)
- [`bitcoin`](#/reference/bitcoin)
- [`mempool`](#/reference/mempool)
- [`routes`](#/reference/routes)
- [`Z-Pages`](#/reference/Z-Pages)
- [`v1`](#/reference/v1)


## Headers and HTTP Code

When the server is not ready, that is to say when all the extant blocks have not yet been parsed, every route will return a `503` error, except `/` and those routes that are in the `/blocks`, `/transactions` and `/backend` groups.

All API responses contain the following 3 headers:

* `X-COUNTERPARTY-HEIGHT` contains the last block parsed by Counterparty
* `X-BITCOIN-HEIGHT` contains the last block known to Bitcoin Core
* `X-COUNTERPARTY-READY` contains true if `X-COUNTERPARTY-HEIGHT` >= `X-BITCOIN-HEIGHT` - 1
* `X-LEDGER-STATE` contains `Starting`, `Catching Up`, `Following` or `Stopping`

## Responses Format

All API responses follow the following format:

```
{
    "error": <error_messsage_if_success_is_false>,
    "result": <result_of_the_query_if_success_is_true>,
    "next_cursor": <cursor_value_to_get_the_next_page>,
    "result_count": <number_of_results>
}
```

## Pagination

For all routes that return a list of results from the database, you can choose between two pagination modes:

- With the `cursor` and `limit` parameters
- With the `offset` and `limit` parameters

The `cursor` parameter allows you to get results from a certain index. This index is generally retrieved from the `next_cursor` field of the previous result (see above).
The `offset` parameter allows you to ignore a certain number of results before returning the rest.

For example:
`/v2/blocks?limit=5&cursor=844575` allows you to recover blocks 844575 to 844570.
`/v2/blocks?limit=5&offset=5` allows you to retrieve the 5th to the tenth most recent blocks.

All responses contain a `result_count` field allowing you to calculate the number of pages.

## Bitcoin Core Proxy

Routes in the `/v2/bitcoin` group serve as a proxy to make requests to Bitcoin Core.

## Events API

One of the new features of API v2 is the ability to make requests by events. This is the most powerful way to recover the vast majority of data.

For example to retrieve events concerning dispensers for a given block:

```
/v2/blocks/<int:block_index>/events/OPEN_DISPENSER
/v2/blocks/<int:block_index>/events/DISPENSER_UPDATE
/v2/blocks/<int:block_index>/events/REFILL_DISPENSER
/v2/blocks/<int:block_index>/events/DISPENSE
```

Or to know the events triggered by a given transaction:

`/v2/transactions/<tx_hash>/events`

You can also obtain the events triggered by a transaction using the `verbose` flag:

`/v2/transactions?verbose=true`

However, please note that in this way, the following events are excluded from the list of events:
`NEW_TRANSACTION`, `TRANSACTION_PARSED`, `CREDIT`, `DEBIT`, `INCREMENT_TRANSACTION_COUNT`, `NEW_TRANSACTION_OUTPUT`.

### ZeroMQ Publisher

You can enable the ZeroMQ server by starting `counterparty-server` with the `--enable-zmq-publisher` flag.
All events are published, each in a specific topic. You can subscribe to the events that interest you. For example in Python:

```
context = zmq.asyncio.Context()
socket = context.socket(zmq.SUB)
socket.setsockopt(zmq.RCVHWM, 0)
socket.setsockopt_string(zmq.SUBSCRIBE, "CREDIT")
socket.setsockopt_string(zmq.SUBSCRIBE, "DEBIT")
```

You can use an empty string to subscribe to all events.

By default events are published on port `4001`, you can customize this port with the flag `--zmq-publisher-port`.

You can see a complete, working example in Python here: https://github.com/CounterpartyXCP/counterparty-core/blob/master/counterparty-core/tools/zmqclient.py.


### Notes about update events

For the events `DISPENSER_UPDATE` and `ORDER_UPDATE`, depending on the reason for the update, the fields present in `params` may be different.

Here are the different possibilities for `DISPENSER_UPDATE`:

On refill dispenser and on dispense:

- give_remaining
- dispense_count
- source
- asset
- status

On closing dispenser with delay:

- last_status_tx_hash
- source
- asset
- status

On closing dispenser:

- give_remaining
- source
- asset
- status

and those for `ORDER_UPDATE`:

On order cancellation:

- status
- tx_hash

On order match cancellation:

- give_remaining
- get_remaining
- status
- fee_required_remaining

On order match:

- give_remaining
- get_remaining
- fee_required_remaining
- fee_provided_remaining
- status

## Events Reference

Here is a list of events classified by theme and for each an example response:


### Blocks and Transactions

#### `NEW_BLOCK`

```
{
    "result": [
        {
            "event_index": 1029,
            "event": "NEW_BLOCK",
            "params": {
                "block_hash": "44fcdffec36869bfac0fcbe3dee59bfa74c885e0fd9b7f4eb83f716eecd633fc",
                "block_index": 245,
                "block_time": 1740490111,
                "difficulty": 545259519,
                "previous_block_hash": "59abc6ae9e93883361d2127f5c13f5228d604f6c47f2855b3d6410f8eb826846"
            },
            "tx_hash": null,
            "block_index": 245,
            "block_time": 1740490111
        }
    ],
    "next_cursor": 1027,
    "result_count": 145
}
```

#### `NEW_TRANSACTION`

```
{
    "result": [
        {
            "event_index": 1030,
            "event": "NEW_TRANSACTION",
            "params": {
                "block_hash": "44fcdffec36869bfac0fcbe3dee59bfa74c885e0fd9b7f4eb83f716eecd633fc",
                "block_index": 245,
                "block_time": 1740490111,
                "btc_amount": 1000,
                "data": "0d00",
                "destination": "bcrt1qquwz9xkh3dv34l49v32lk3kc283utd58ung2cn",
                "fee": 0,
                "source": "bcrt1qwats7crkdl4z6ac6tz2fn6pz6a5dt7hxzjustu",
                "transaction_type": "dispense",
                "tx_hash": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3",
                "tx_index": 121,
                "utxos_info": "e1da70a78196a01b1d83828ad454578cd9ccd3a37215d0732042f9cd20028b65:1 d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3:0 3 1",
                "btc_amount_normalized": "0.00001000"
            },
            "tx_hash": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3",
            "block_index": 245,
            "block_time": 1740490111
        }
    ],
    "next_cursor": 1020,
    "result_count": 122
}
```

#### `NEW_TRANSACTION_OUTPUT`

```
{
    "result": [
        {
            "event_index": 1031,
            "event": "NEW_TRANSACTION_OUTPUT",
            "params": {
                "block_index": 245,
                "btc_amount": 1000,
                "destination": "bcrt1qquwz9xkh3dv34l49v32lk3kc283utd58ung2cn",
                "out_index": 0,
                "tx_hash": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3",
                "tx_index": 121,
                "block_time": 1740490111,
                "btc_amount_normalized": "0.00001000"
            },
            "tx_hash": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3",
            "block_index": 245,
            "block_time": 1740490111
        }
    ],
    "next_cursor": 981,
    "result_count": 6
}
```

#### `BLOCK_PARSED`

```
{
    "result": [
        {
            "event_index": 1042,
            "event": "BLOCK_PARSED",
            "params": {
                "block_index": 245,
                "ledger_hash": "b9137879674322b25ee447b5c225d662c1acf3be0757f8b5e365950c1478ed55",
                "messages_hash": "a49feef7ed0848b13a8640617cd2f1339afe84eca2fa74e11a09d16cfe074612",
                "transaction_count": 1,
                "txlist_hash": "54253e0fb81873afdb56f96b0951b0600ee982e8ad70c7e45270dcc9ed2f1bbb",
                "block_time": 1740490111
            },
            "tx_hash": null,
            "block_index": 245,
            "block_time": 1740490111
        }
    ],
    "next_cursor": 1028,
    "result_count": 145
}
```

#### `TRANSACTION_PARSED`

```
{
    "result": [
        {
            "event_index": 1041,
            "event": "TRANSACTION_PARSED",
            "params": {
                "supported": true,
                "tx_hash": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3",
                "tx_index": 121
            },
            "tx_hash": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3",
            "block_index": 245,
            "block_time": 1740490111
        }
    ],
    "next_cursor": 1025,
    "result_count": 122
}
```

### Asset Movements

#### `DEBIT`

```
{
    "result": [
        {
            "event_index": 1035,
            "event": "DEBIT",
            "params": {
                "action": "utxo move",
                "address": null,
                "asset": "XCP",
                "block_index": 245,
                "event": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3",
                "quantity": 2000000000,
                "tx_index": 121,
                "utxo": "e1da70a78196a01b1d83828ad454578cd9ccd3a37215d0732042f9cd20028b65:1",
                "utxo_address": "bcrt1qwats7crkdl4z6ac6tz2fn6pz6a5dt7hxzjustu",
                "block_time": 1740490111,
                "asset_info": {
                    "asset_longname": null,
                    "description": "The Counterparty protocol native currency",
                    "issuer": null,
                    "divisible": true,
                    "locked": true,
                    "owner": null
                },
                "quantity_normalized": "20.00000000"
            },
            "tx_hash": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3",
            "block_index": 245,
            "block_time": 1740490111
        }
    ],
    "next_cursor": 1032,
    "result_count": 106
}
```

#### `CREDIT`

```
{
    "result": [
        {
            "event_index": 1038,
            "event": "CREDIT",
            "params": {
                "address": "bcrt1qwats7crkdl4z6ac6tz2fn6pz6a5dt7hxzjustu",
                "asset": "XCP",
                "block_index": 245,
                "calling_function": "dispense",
                "event": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3",
                "quantity": 66,
                "tx_index": 121,
                "utxo": null,
                "utxo_address": null,
                "block_time": 1740490111,
                "asset_info": {
                    "asset_longname": null,
                    "description": "The Counterparty protocol native currency",
                    "issuer": null,
                    "divisible": true,
                    "locked": true,
                    "owner": null
                },
                "quantity_normalized": "0.00000066"
            },
            "tx_hash": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3",
            "block_index": 245,
            "block_time": 1740490111
        }
    ],
    "next_cursor": 1036,
    "result_count": 126
}
```

#### `ENHANCED_SEND`

```
{
    "result": [
        {
            "event_index": 653,
            "event": "ENHANCED_SEND",
            "params": {
                "asset": "MPMASSET",
                "block_index": 201,
                "destination": "bcrt1qdj4ckly3lwmjqld7pu60qu9myggm6pnd58ntz6",
                "memo": null,
                "msg_index": 0,
                "quantity": 1000,
                "send_type": "send",
                "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                "status": "valid",
                "tx_hash": "0022913062f0470672f6b471ff669c43b45ce767fa522bcd64b909f606d59cd0",
                "tx_index": 77,
                "block_time": 1740489923,
                "asset_info": {
                    "asset_longname": null,
                    "description": "My super asset B",
                    "issuer": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "divisible": true,
                    "locked": false,
                    "owner": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n"
                },
                "quantity_normalized": "0.00001000"
            },
            "tx_hash": "0022913062f0470672f6b471ff669c43b45ce767fa522bcd64b909f606d59cd0",
            "block_index": 201,
            "block_time": 1740489923
        }
    ],
    "next_cursor": 528,
    "result_count": 3
}
```

#### `MPMA_SEND`

```
{
    "result": [
        {
            "event_index": 713,
            "event": "MPMA_SEND",
            "params": {
                "asset": "XCP",
                "block_index": 205,
                "destination": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                "memo": "memo1",
                "msg_index": 2,
                "quantity": 10,
                "send_type": "send",
                "source": "bcrt1qdj4ckly3lwmjqld7pu60qu9myggm6pnd58ntz6",
                "status": "valid",
                "tx_hash": "10823d6a8b3b44da8361e887a02942fa28973b782e59ec26ece5a7c88b8d974d",
                "tx_index": 81,
                "block_time": 1740489939,
                "asset_info": {
                    "asset_longname": null,
                    "description": "The Counterparty protocol native currency",
                    "issuer": null,
                    "divisible": true,
                    "locked": true,
                    "owner": null
                },
                "quantity_normalized": "0.00000010"
            },
            "tx_hash": "10823d6a8b3b44da8361e887a02942fa28973b782e59ec26ece5a7c88b8d974d",
            "block_index": 205,
            "block_time": 1740489939
        }
    ],
    "next_cursor": 712,
    "result_count": 15
}
```

#### `SEND`

```
{
    "result": [],
    "next_cursor": null,
    "result_count": 0
}
```

#### `ASSET_TRANSFER`

```
{
    "result": [],
    "next_cursor": null,
    "result_count": 0
}
```

#### `SWEEP`

```
{
    "result": [
        {
            "event_index": 571,
            "event": "SWEEP",
            "params": {
                "block_index": 190,
                "destination": "bcrt1qndrj8uy6the35p3gpjuuss7l29hwe0npylexmz",
                "fee_paid": 600000,
                "flags": 1,
                "memo": "sweep my assets",
                "source": "bcrt1qj7zsv3gv750c8mr02eytgp5xen2ke6fpak6ztc",
                "status": "valid",
                "tx_hash": "e0043724de46115717f26d5126665cd592e152dc397d4ecbcd7e41809a575b49",
                "tx_index": 65,
                "block_time": 1740489877,
                "fee_paid_normalized": "0.00600000"
            },
            "tx_hash": "e0043724de46115717f26d5126665cd592e152dc397d4ecbcd7e41809a575b49",
            "block_index": 190,
            "block_time": 1740489877
        }
    ],
    "next_cursor": null,
    "result_count": 1
}
```

#### `ASSET_DIVIDEND`

```
{
    "result": [
        {
            "event_index": 338,
            "event": "ASSET_DIVIDEND",
            "params": {
                "asset": "MYASSETA",
                "block_index": 146,
                "dividend_asset": "XCP",
                "fee_paid": 20000,
                "quantity_per_unit": 100000000,
                "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                "status": "valid",
                "tx_hash": "6404a2478fe98ef828070b2da13ef824ea7cebae41e377cfdee911728b8c926a",
                "tx_index": 42,
                "block_time": 1740489729,
                "asset_info": {
                    "asset_longname": null,
                    "description": "My super asset A",
                    "issuer": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "divisible": true,
                    "locked": false,
                    "owner": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n"
                },
                "dividend_asset_info": {
                    "asset_longname": null,
                    "description": "The Counterparty protocol native currency",
                    "issuer": null,
                    "divisible": true,
                    "locked": true,
                    "owner": null
                },
                "quantity_per_unit_normalized": "1.00000000",
                "fee_paid_normalized": "0.00020000"
            },
            "tx_hash": "6404a2478fe98ef828070b2da13ef824ea7cebae41e377cfdee911728b8c926a",
            "block_index": 146,
            "block_time": 1740489729
        }
    ],
    "next_cursor": null,
    "result_count": 1
}
```

### Asset Creation and Destruction

#### `RESET_ISSUANCE`

```
{
    "result": [
        {
            "event_index": 1001,
            "event": "RESET_ISSUANCE",
            "params": {
                "asset": "RESET",
                "asset_events": "reset",
                "asset_longname": null,
                "block_index": 240,
                "call_date": 0,
                "call_price": 0.0,
                "callable": false,
                "description": "",
                "divisible": true,
                "fee_paid": 0,
                "issuer": "bcrt1qyyjgcgnjrxkznrdk8pc9dwp98twx5qesptttlg",
                "locked": false,
                "quantity": 1200000000,
                "reset": true,
                "source": "bcrt1qyyjgcgnjrxkznrdk8pc9dwp98twx5qesptttlg",
                "status": "valid",
                "transfer": false,
                "tx_hash": "49aaaa4a39e9fd16889036cae02cf2fdb65f96d4447a92dce1c811b959105a85",
                "tx_index": 117,
                "block_time": 1740490091,
                "quantity_normalized": "12.00000000",
                "fee_paid_normalized": "0.00000000"
            },
            "tx_hash": "49aaaa4a39e9fd16889036cae02cf2fdb65f96d4447a92dce1c811b959105a85",
            "block_index": 240,
            "block_time": 1740490091
        }
    ],
    "next_cursor": null,
    "result_count": 1
}
```

#### `ASSET_CREATION`

```
{
    "result": [
        {
            "event_index": 1022,
            "event": "ASSET_CREATION",
            "params": {
                "asset_id": "117132633401",
                "asset_longname": null,
                "asset_name": "OPENFAIR",
                "block_index": 243,
                "block_time": 1740490102
            },
            "tx_hash": "c6043e9ceafa1ced581e48b9bb273a6b703ad6717ff27494f1a137dfcd039321",
            "block_index": 243,
            "block_time": 1740490102
        }
    ],
    "next_cursor": 992,
    "result_count": 30
}
```

#### `ASSET_ISSUANCE`

```
{
    "result": [
        {
            "event_index": 1023,
            "event": "ASSET_ISSUANCE",
            "params": {
                "asset": "OPENFAIR",
                "asset_events": "open_fairminter",
                "asset_longname": null,
                "block_index": 243,
                "call_date": 0,
                "call_price": 0,
                "callable": false,
                "description": "",
                "divisible": true,
                "fair_minting": true,
                "fee_paid": 50000000.0,
                "issuer": "bcrt1qquwz9xkh3dv34l49v32lk3kc283utd58ung2cn",
                "locked": false,
                "quantity": 0,
                "reset": false,
                "source": "bcrt1qquwz9xkh3dv34l49v32lk3kc283utd58ung2cn",
                "status": "valid",
                "transfer": false,
                "tx_hash": "c6043e9ceafa1ced581e48b9bb273a6b703ad6717ff27494f1a137dfcd039321",
                "tx_index": 120,
                "block_time": 1740490102,
                "quantity_normalized": "0.00000000",
                "fee_paid_normalized": "0.50000000"
            },
            "tx_hash": "c6043e9ceafa1ced581e48b9bb273a6b703ad6717ff27494f1a137dfcd039321",
            "block_index": 243,
            "block_time": 1740490102
        }
    ],
    "next_cursor": 993,
    "result_count": 55
}
```

#### `ASSET_DESTRUCTION`

```
{
    "result": [
        {
            "event_index": 1000,
            "event": "ASSET_DESTRUCTION",
            "params": {
                "asset": "RESET",
                "block_index": 240,
                "quantity": 12,
                "source": "bcrt1qyyjgcgnjrxkznrdk8pc9dwp98twx5qesptttlg",
                "status": "valid",
                "tag": "reset",
                "tx_hash": "49aaaa4a39e9fd16889036cae02cf2fdb65f96d4447a92dce1c811b959105a85",
                "tx_index": 117,
                "block_time": 1740490091,
                "asset_info": {
                    "asset_longname": null,
                    "description": "",
                    "issuer": "bcrt1qyyjgcgnjrxkznrdk8pc9dwp98twx5qesptttlg",
                    "divisible": true,
                    "locked": false,
                    "owner": "bcrt1qyyjgcgnjrxkznrdk8pc9dwp98twx5qesptttlg"
                },
                "quantity_normalized": "0.00000012"
            },
            "tx_hash": "49aaaa4a39e9fd16889036cae02cf2fdb65f96d4447a92dce1c811b959105a85",
            "block_index": 240,
            "block_time": 1740490091
        }
    ],
    "next_cursor": 885,
    "result_count": 5
}
```

### DEX

#### `OPEN_ORDER`

```
{
    "result": [
        {
            "event_index": 1013,
            "event": "OPEN_ORDER",
            "params": {
                "block_index": 242,
                "expiration": 21,
                "expire_index": 263,
                "fee_provided": 10000,
                "fee_provided_remaining": 10000,
                "fee_required": 0,
                "fee_required_remaining": 0,
                "get_asset": "UTXOASSET",
                "get_quantity": 1000,
                "get_remaining": 1000,
                "give_asset": "BTC",
                "give_quantity": 1000,
                "give_remaining": 1000,
                "source": "bcrt1qquwz9xkh3dv34l49v32lk3kc283utd58ung2cn",
                "status": "open",
                "tx_hash": "896df8fca70776cb0b38bd40c0f30d6cf657a8e5a62fb5542597d23bca4cbcd2",
                "tx_index": 119,
                "block_time": 1740490099,
                "give_asset_info": {
                    "divisible": true,
                    "asset_longname": null,
                    "description": "The Bitcoin cryptocurrency",
                    "locked": false,
                    "issuer": null
                },
                "get_asset_info": {
                    "asset_longname": null,
                    "description": "My super asset",
                    "issuer": "bcrt1qs8qhqqz7us7w5kt08wqmxmqsl8h6jknlejhyru",
                    "divisible": true,
                    "locked": false,
                    "owner": "bcrt1qs8qhqqz7us7w5kt08wqmxmqsl8h6jknlejhyru"
                },
                "give_quantity_normalized": "0.00001000",
                "get_quantity_normalized": "0.00001000",
                "get_remaining_normalized": "0.00001000",
                "give_remaining_normalized": "0.00001000",
                "fee_provided_normalized": "0.00010000",
                "fee_required_normalized": "0.00000000",
                "fee_required_remaining_normalized": "0.00000000",
                "fee_provided_remaining_normalized": "0.00010000"
            },
            "tx_hash": "896df8fca70776cb0b38bd40c0f30d6cf657a8e5a62fb5542597d23bca4cbcd2",
            "block_index": 242,
            "block_time": 1740490099
        }
    ],
    "next_cursor": 1008,
    "result_count": 9
}
```

#### `ORDER_MATCH`

```
{
    "result": [
        {
            "event_index": 1016,
            "event": "ORDER_MATCH",
            "params": {
                "backward_asset": "BTC",
                "backward_quantity": 1000,
                "block_index": 242,
                "fee_paid": 0,
                "forward_asset": "UTXOASSET",
                "forward_quantity": 1000,
                "id": "a420cfa1fd7462a7c3ed97e8f1ce5784e74a29c16ef5e371c51591c325999106_896df8fca70776cb0b38bd40c0f30d6cf657a8e5a62fb5542597d23bca4cbcd2",
                "match_expire_index": 262,
                "status": "pending",
                "tx0_address": "bcrt1qs8qhqqz7us7w5kt08wqmxmqsl8h6jknlejhyru",
                "tx0_block_index": 241,
                "tx0_expiration": 21,
                "tx0_hash": "a420cfa1fd7462a7c3ed97e8f1ce5784e74a29c16ef5e371c51591c325999106",
                "tx0_index": 118,
                "tx1_address": "bcrt1qquwz9xkh3dv34l49v32lk3kc283utd58ung2cn",
                "tx1_block_index": 242,
                "tx1_expiration": 21,
                "tx1_hash": "896df8fca70776cb0b38bd40c0f30d6cf657a8e5a62fb5542597d23bca4cbcd2",
                "tx1_index": 119,
                "block_time": 1740490099,
                "forward_asset_info": {
                    "asset_longname": null,
                    "description": "My super asset",
                    "issuer": "bcrt1qs8qhqqz7us7w5kt08wqmxmqsl8h6jknlejhyru",
                    "divisible": true,
                    "locked": false,
                    "owner": "bcrt1qs8qhqqz7us7w5kt08wqmxmqsl8h6jknlejhyru"
                },
                "backward_asset_info": {
                    "divisible": true,
                    "asset_longname": null,
                    "description": "The Bitcoin cryptocurrency",
                    "locked": false,
                    "issuer": null
                },
                "forward_quantity_normalized": "0.00001000",
                "backward_quantity_normalized": "0.00001000",
                "fee_paid_normalized": "0.00000000"
            },
            "tx_hash": "896df8fca70776cb0b38bd40c0f30d6cf657a8e5a62fb5542597d23bca4cbcd2",
            "block_index": 242,
            "block_time": 1740490099
        }
    ],
    "next_cursor": 691,
    "result_count": 5
}
```

#### `ORDER_UPDATE`

```
{
    "result": [
        {
            "event_index": 1015,
            "event": "ORDER_UPDATE",
            "params": {
                "fee_provided_remaining": 10000,
                "fee_required_remaining": 0,
                "get_remaining": 0,
                "give_remaining": 0,
                "status": "open",
                "tx_hash": "896df8fca70776cb0b38bd40c0f30d6cf657a8e5a62fb5542597d23bca4cbcd2",
                "fee_required_remaining_normalized": "0.00000000",
                "fee_provided_remaining_normalized": "0.00010000"
            },
            "tx_hash": "896df8fca70776cb0b38bd40c0f30d6cf657a8e5a62fb5542597d23bca4cbcd2",
            "block_index": 242,
            "block_time": 1740490099
        }
    ],
    "next_cursor": 1014,
    "result_count": 19
}
```

#### `ORDER_FILLED`

```
{
    "result": [
        {
            "event_index": 507,
            "event": "ORDER_FILLED",
            "params": {
                "status": "filled",
                "tx_hash": "16693d3e8624b05db62587be692a301eba7dc962293096694f84142bc3bfc5fd"
            },
            "tx_hash": "5752b590a88afde0a2481b5ca3de5c7cc18ccb4d6ebcfc87e4c59512324d399e",
            "block_index": 182,
            "block_time": 1740489847
        }
    ],
    "next_cursor": null,
    "result_count": 1
}
```

#### `ORDER_MATCH_UPDATE`

```
{
    "result": [
        {
            "event_index": 859,
            "event": "ORDER_MATCH_UPDATE",
            "params": {
                "id": "9198a9256ee36ffaa1c68b2098d9920bf461858924c70baa1e2e616814a81c54_c0b993f438e82940a24a6f2e74bca15b60d197c7afa93aea4d0f82b02cc89f96",
                "order_match_id": "9198a9256ee36ffaa1c68b2098d9920bf461858924c70baa1e2e616814a81c54_c0b993f438e82940a24a6f2e74bca15b60d197c7afa93aea4d0f82b02cc89f96",
                "status": "expired"
            },
            "tx_hash": "3672a9093ed26f6be9b0f343040f560e1986e2ad87d26b05fc56b45061b87010",
            "block_index": 225,
            "block_time": 1740490010
        }
    ],
    "next_cursor": 685,
    "result_count": 4
}
```

#### `BTC_PAY`

```
{
    "result": [
        {
            "event_index": 508,
            "event": "BTC_PAY",
            "params": {
                "block_index": 182,
                "btc_amount": 2000,
                "destination": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                "order_match_id": "6a8b04722b5121498713e9ca34b3a634f0ef5f0cf3ee9a0753bd79b8c3f0cc10_16693d3e8624b05db62587be692a301eba7dc962293096694f84142bc3bfc5fd",
                "source": "bcrt1qdj4ckly3lwmjqld7pu60qu9myggm6pnd58ntz6",
                "status": "valid",
                "tx_hash": "5752b590a88afde0a2481b5ca3de5c7cc18ccb4d6ebcfc87e4c59512324d399e",
                "tx_index": 57,
                "block_time": 1740489847,
                "btc_amount_normalized": "0.00002000"
            },
            "tx_hash": "5752b590a88afde0a2481b5ca3de5c7cc18ccb4d6ebcfc87e4c59512324d399e",
            "block_index": 182,
            "block_time": 1740489847
        }
    ],
    "next_cursor": null,
    "result_count": 1
}
```

#### `CANCEL_ORDER`

```
{
    "result": [
        {
            "event_index": 553,
            "event": "CANCEL_ORDER",
            "params": {
                "block_index": 188,
                "offer_hash": "6514dc909d289a00f85ba5b8db7b7198c6fafe5ed2e140773835a3fe73615f94",
                "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                "status": "valid",
                "tx_hash": "f93a585e39ef051fa3b8ece892fc7e7c312af255705851e42df9fbb47f0983b0",
                "tx_index": 63,
                "block_time": 1740489870
            },
            "tx_hash": "f93a585e39ef051fa3b8ece892fc7e7c312af255705851e42df9fbb47f0983b0",
            "block_index": 188,
            "block_time": 1740489870
        }
    ],
    "next_cursor": null,
    "result_count": 1
}
```

#### `ORDER_EXPIRATION`

```
{
    "result": [
        {
            "event_index": 758,
            "event": "ORDER_EXPIRATION",
            "params": {
                "block_index": 211,
                "order_hash": "9198a9256ee36ffaa1c68b2098d9920bf461858924c70baa1e2e616814a81c54",
                "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                "block_time": 1740489959
            },
            "tx_hash": "1a71a7497b56636da3130da795d86244e4bf66cc5fb4a0c3779caa71c7abb167",
            "block_index": 211,
            "block_time": 1740489959
        }
    ],
    "next_cursor": 705,
    "result_count": 5
}
```

#### `ORDER_MATCH_EXPIRATION`

```
{
    "result": [
        {
            "event_index": 861,
            "event": "ORDER_MATCH_EXPIRATION",
            "params": {
                "block_index": 225,
                "order_match_id": "9198a9256ee36ffaa1c68b2098d9920bf461858924c70baa1e2e616814a81c54_c0b993f438e82940a24a6f2e74bca15b60d197c7afa93aea4d0f82b02cc89f96",
                "tx0_address": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                "tx1_address": "bcrt1qj7zsv3gv750c8mr02eytgp5xen2ke6fpak6ztc",
                "block_time": 1740490010
            },
            "tx_hash": "3672a9093ed26f6be9b0f343040f560e1986e2ad87d26b05fc56b45061b87010",
            "block_index": 225,
            "block_time": 1740490010
        }
    ],
    "next_cursor": 688,
    "result_count": 3
}
```

### Dispenser

#### `OPEN_DISPENSER`

```
{
    "result": [
        {
            "event_index": 976,
            "event": "OPEN_DISPENSER",
            "params": {
                "asset": "XCP",
                "block_index": 236,
                "dispense_count": 0,
                "escrow_quantity": 5000,
                "give_quantity": 1,
                "give_remaining": 5000,
                "oracle_address": null,
                "origin": "bcrt1qv82qg4jp6nn6wahdnx2d2u6cdfxyc2zuw7u9mv",
                "satoshirate": 1,
                "source": "bcrt1qv82qg4jp6nn6wahdnx2d2u6cdfxyc2zuw7u9mv",
                "status": 0,
                "tx_hash": "c54957b9cbb662e2cc9eee1c09950f7365365a09abad1bdf1afb3cca05d63705",
                "tx_index": 114,
                "block_time": 1740490077,
                "asset_info": {
                    "asset_longname": null,
                    "description": "The Counterparty protocol native currency",
                    "issuer": null,
                    "divisible": true,
                    "locked": true,
                    "owner": null
                },
                "give_quantity_normalized": "0.00000001",
                "give_remaining_normalized": "0.00005000",
                "escrow_quantity_normalized": "0.00005000",
                "satoshirate_normalized": "0.00000001"
            },
            "tx_hash": "c54957b9cbb662e2cc9eee1c09950f7365365a09abad1bdf1afb3cca05d63705",
            "block_index": 236,
            "block_time": 1740490077
        }
    ],
    "next_cursor": 587,
    "result_count": 6
}
```

#### `DISPENSER_UPDATE`

```
{
    "result": [
        {
            "event_index": 1039,
            "event": "DISPENSER_UPDATE",
            "params": {
                "asset": "XCP",
                "dispense_count": 2,
                "give_remaining": 9268,
                "source": "bcrt1qquwz9xkh3dv34l49v32lk3kc283utd58ung2cn",
                "status": 0,
                "tx_hash": "1e6f693fe2759c736df4febc587f45124e79e5d8d1ce2b79f8c0bbf0f18fd87d",
                "asset_info": {
                    "asset_longname": null,
                    "description": "The Counterparty protocol native currency",
                    "issuer": null,
                    "divisible": true,
                    "locked": true,
                    "owner": null
                },
                "give_remaining_normalized": "0.00009268"
            },
            "tx_hash": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3",
            "block_index": 245,
            "block_time": 1740490111
        }
    ],
    "next_cursor": 983,
    "result_count": 9
}
```

#### `REFILL_DISPENSER`

```
{
    "result": [
        {
            "event_index": 253,
            "event": "REFILL_DISPENSER",
            "params": {
                "asset": "XCP",
                "block_index": 135,
                "destination": "mzKzGcYgawRDhSwKMs48ivyc7kq6eDFnxX",
                "dispense_quantity": 10,
                "dispenser_tx_hash": "d1c103ac8f76875e2c7f2ff452e9c73ec80534fd6513ae02abc9ca5bca4bcdb4",
                "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                "tx_hash": "cb40de33d4321bfb96d78e0ed8873b8dcd2e696825da637b73b8e91618285b79",
                "tx_index": 31,
                "block_time": 1740489688,
                "asset_info": {
                    "asset_longname": null,
                    "description": "The Counterparty protocol native currency",
                    "issuer": null,
                    "divisible": true,
                    "locked": true,
                    "owner": null
                },
                "dispense_quantity_normalized": "0.00000010"
            },
            "tx_hash": "cb40de33d4321bfb96d78e0ed8873b8dcd2e696825da637b73b8e91618285b79",
            "block_index": 135,
            "block_time": 1740489688
        }
    ],
    "next_cursor": null,
    "result_count": 1
}
```

#### `DISPENSE`

```
{
    "result": [
        {
            "event_index": 1040,
            "event": "DISPENSE",
            "params": {
                "asset": "XCP",
                "block_index": 245,
                "btc_amount": 1000,
                "destination": "bcrt1qwats7crkdl4z6ac6tz2fn6pz6a5dt7hxzjustu",
                "dispense_index": 0,
                "dispense_quantity": 66,
                "dispenser_tx_hash": "1e6f693fe2759c736df4febc587f45124e79e5d8d1ce2b79f8c0bbf0f18fd87d",
                "source": "bcrt1qquwz9xkh3dv34l49v32lk3kc283utd58ung2cn",
                "tx_hash": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3",
                "tx_index": 121,
                "block_time": 1740490111,
                "asset_info": {
                    "asset_longname": null,
                    "description": "The Counterparty protocol native currency",
                    "issuer": null,
                    "divisible": true,
                    "locked": true,
                    "owner": null
                },
                "dispense_quantity_normalized": "0.00000066",
                "btc_amount_normalized": "0.00001000"
            },
            "tx_hash": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3",
            "block_index": 245,
            "block_time": 1740490111
        }
    ],
    "next_cursor": 984,
    "result_count": 6
}
```

### Broadcast

#### `BROADCAST`

```
{
    "result": [
        {
            "event_index": 210,
            "event": "BROADCAST",
            "params": {
                "block_index": 129,
                "fee_fraction_int": 0,
                "locked": false,
                "source": "bcrt1qquwz9xkh3dv34l49v32lk3kc283utd58ung2cn",
                "status": "valid",
                "text": "price-USD",
                "timestamp": 4003903983,
                "tx_hash": "e730b05d65034f972ffd6833c069ea0b65aaf6edf2cd4a4388b21d2889a3280f",
                "tx_index": 25,
                "value": 66600.0,
                "block_time": 1740489665,
                "fee_fraction_int_normalized": "0.00000000"
            },
            "tx_hash": "e730b05d65034f972ffd6833c069ea0b65aaf6edf2cd4a4388b21d2889a3280f",
            "block_index": 129,
            "block_time": 1740489665
        }
    ],
    "next_cursor": 205,
    "result_count": 2
}
```

### Fair Minting

#### `NEW_FAIRMINTER`

```
{
    "result": [
        {
            "event_index": 1021,
            "event": "NEW_FAIRMINTER",
            "params": {
                "asset": "OPENFAIR",
                "asset_longname": null,
                "asset_parent": null,
                "block_index": 243,
                "burn_payment": false,
                "description": "",
                "divisible": true,
                "end_block": 0,
                "hard_cap": 0,
                "lock_description": false,
                "lock_quantity": false,
                "max_mint_per_tx": 10,
                "minted_asset_commission_int": 0,
                "pre_minted": false,
                "premint_quantity": 0,
                "price": 0,
                "quantity_by_price": 1,
                "soft_cap": 0,
                "soft_cap_deadline_block": 0,
                "source": "bcrt1qquwz9xkh3dv34l49v32lk3kc283utd58ung2cn",
                "start_block": 0,
                "status": "open",
                "tx_hash": "c6043e9ceafa1ced581e48b9bb273a6b703ad6717ff27494f1a137dfcd039321",
                "tx_index": 120,
                "block_time": 1740490102,
                "price_normalized": "0.0000000000000000",
                "hard_cap_normalized": "0.00000000",
                "soft_cap_normalized": "0.00000000",
                "quantity_by_price_normalized": "0.00000001",
                "max_mint_per_tx_normalized": "0.00000010",
                "premint_quantity_normalized": "0.00000000"
            },
            "tx_hash": "c6043e9ceafa1ced581e48b9bb273a6b703ad6717ff27494f1a137dfcd039321",
            "block_index": 243,
            "block_time": 1740490102
        }
    ],
    "next_cursor": 874,
    "result_count": 18
}
```

#### `FAIRMINTER_UPDATE`

```
{
    "result": [
        {
            "event_index": 883,
            "event": "FAIRMINTER_UPDATE",
            "params": {
                "status": "closed",
                "tx_hash": "0b85ece9496719a0822cb5b2d262896ad04c7ba9da111b4a240e1f9f5b5630d6"
            },
            "tx_hash": null,
            "block_index": 228,
            "block_time": 1740490019
        }
    ],
    "next_cursor": 869,
    "result_count": 8
}
```

#### `NEW_FAIRMINT`

```
{
    "result": [
        {
            "event_index": 835,
            "event": "NEW_FAIRMINT",
            "params": {
                "asset": "BURNER",
                "block_index": 221,
                "commission": 20000000,
                "earn_quantity": 80000000,
                "fairminter_tx_hash": "2efa348123c9d59037cd1352f1074a77e6c56630f04c6a742623c0d403824cb8",
                "paid_quantity": 100000000,
                "source": "bcrt1qquwz9xkh3dv34l49v32lk3kc283utd58ung2cn",
                "status": "valid",
                "tx_hash": "f008cc467441d6088b240484737bc7c3a9665fca802126e7724a0e297fec8adc",
                "tx_index": 97,
                "block_time": 1740489996,
                "asset_info": {
                    "asset_longname": null,
                    "description": "let's burn it",
                    "issuer": "bcrt1qyyjgcgnjrxkznrdk8pc9dwp98twx5qesptttlg",
                    "divisible": true,
                    "locked": true,
                    "owner": "bcrt1qyyjgcgnjrxkznrdk8pc9dwp98twx5qesptttlg"
                },
                "earn_quantity_normalized": "0.80000000",
                "commission_normalized": "0.20000000",
                "paid_quantity_normalized": "1.00000000"
            },
            "tx_hash": "f008cc467441d6088b240484737bc7c3a9665fca802126e7724a0e297fec8adc",
            "block_index": 221,
            "block_time": 1740489996
        }
    ],
    "next_cursor": 816,
    "result_count": 15
}
```

### UTXO Support

#### `ATTACH_TO_UTXO`

```
{
    "result": [
        {
            "event_index": 965,
            "event": "ATTACH_TO_UTXO",
            "params": {
                "asset": "DETACHA",
                "block_index": 235,
                "destination": "a702c044a28ed7855dac07e2dd7b9c5925db98cae259cfb2ca1c29158149b5d6:0",
                "destination_address": "bcrt1qyyjgcgnjrxkznrdk8pc9dwp98twx5qesptttlg",
                "fee_paid": 0,
                "msg_index": 0,
                "quantity": 100000000,
                "send_type": "attach",
                "source": "bcrt1qyyjgcgnjrxkznrdk8pc9dwp98twx5qesptttlg",
                "status": "valid",
                "tx_hash": "a702c044a28ed7855dac07e2dd7b9c5925db98cae259cfb2ca1c29158149b5d6",
                "tx_index": 112,
                "block_time": 1740490071,
                "asset_info": {
                    "asset_longname": null,
                    "description": "",
                    "issuer": "bcrt1qyyjgcgnjrxkznrdk8pc9dwp98twx5qesptttlg",
                    "divisible": true,
                    "locked": false,
                    "owner": "bcrt1qyyjgcgnjrxkznrdk8pc9dwp98twx5qesptttlg"
                },
                "quantity_normalized": "1.00000000",
                "fee_paid_normalized": "0.00000000"
            },
            "tx_hash": "a702c044a28ed7855dac07e2dd7b9c5925db98cae259cfb2ca1c29158149b5d6",
            "block_index": 235,
            "block_time": 1740490071
        }
    ],
    "next_cursor": 944,
    "result_count": 9
}
```

#### `DETACH_FROM_UTXO`

```
{
    "result": [
        {
            "event_index": 957,
            "event": "DETACH_FROM_UTXO",
            "params": {
                "asset": "DETACHB",
                "block_index": 234,
                "destination": "bcrt1qyyjgcgnjrxkznrdk8pc9dwp98twx5qesptttlg",
                "fee_paid": 0,
                "msg_index": 1,
                "quantity": 100000000,
                "send_type": "detach",
                "source": "20c0fc221da530e6e260f1ee566d166e62abc63cb109a4b309b1a76a06aaa7a5:0",
                "source_address": "bcrt1qyyjgcgnjrxkznrdk8pc9dwp98twx5qesptttlg",
                "status": "valid",
                "tx_hash": "0d1319c529b7c96f1df0c028a6b1fcb99341b7ecb0dbd8f5626ad9afad76b1c8",
                "tx_index": 111,
                "block_time": 1740490068,
                "asset_info": {
                    "asset_longname": null,
                    "description": "",
                    "issuer": "bcrt1qyyjgcgnjrxkznrdk8pc9dwp98twx5qesptttlg",
                    "divisible": true,
                    "locked": false,
                    "owner": "bcrt1qyyjgcgnjrxkznrdk8pc9dwp98twx5qesptttlg"
                },
                "quantity_normalized": "1.00000000",
                "fee_paid_normalized": "0.00000000"
            },
            "tx_hash": "0d1319c529b7c96f1df0c028a6b1fcb99341b7ecb0dbd8f5626ad9afad76b1c8",
            "block_index": 234,
            "block_time": 1740490068
        }
    ],
    "next_cursor": 954,
    "result_count": 5
}
```

#### `UTXO_MOVE`

```
{
    "result": [
        {
            "event_index": 1037,
            "event": "UTXO_MOVE",
            "params": {
                "asset": "XCP",
                "block_index": 245,
                "destination": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3:0",
                "destination_address": "bcrt1qquwz9xkh3dv34l49v32lk3kc283utd58ung2cn",
                "msg_index": 1,
                "quantity": 2000000000,
                "send_type": "move",
                "source": "e1da70a78196a01b1d83828ad454578cd9ccd3a37215d0732042f9cd20028b65:1",
                "source_address": "bcrt1qwats7crkdl4z6ac6tz2fn6pz6a5dt7hxzjustu",
                "status": "valid",
                "tx_hash": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3",
                "tx_index": 121,
                "block_time": 1740490111,
                "asset_info": {
                    "asset_longname": null,
                    "description": "The Counterparty protocol native currency",
                    "issuer": null,
                    "divisible": true,
                    "locked": true,
                    "owner": null
                },
                "quantity_normalized": "20.00000000"
            },
            "tx_hash": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3",
            "block_index": 245,
            "block_time": 1740490111
        }
    ],
    "next_cursor": 1034,
    "result_count": 14
}
```

### Burns

#### `BURN`

```
{
    "result": [
        {
            "event_index": 61,
            "event": "BURN",
            "params": {
                "block_index": 112,
                "burned": 50000000,
                "earned": 74999998167,
                "source": "bcrt1qqus708ucy6kecks0w8pykqmghard6kqf8tus06",
                "status": "valid",
                "tx_hash": "beda70b3db805311a89d8cd707eac784473ce3a6d7e7b6230b6533a7a242c0db",
                "tx_index": 9,
                "block_time": 1740489603,
                "burned_normalized": "0.50000000",
                "earned_normalized": "749.99998167"
            },
            "tx_hash": "beda70b3db805311a89d8cd707eac784473ce3a6d7e7b6230b6533a7a242c0db",
            "block_index": 112,
            "block_time": 1740489603
        }
    ],
    "next_cursor": 58,
    "result_count": 10
}
```


# Counterparty API Root [/v2/]

### Get Server Info [GET /v2/]

Returns server information and the list of documented routes in JSON format.

+ Response 200 (application/json)

    ```
    {
        "result": {
            "server_ready": true,
            "network": "mainnet",
            "version": "10.10.1",
            "backend_height": 850214,
            "counterparty_height": 850214,
            "ledger_state": "following",
            "documentation": "https://counterpartycore.docs.apiary.io/",
            "blueprint": "http://localhost:4000/v2/blueprint"
        }
    }
    ```

## Mempool API

The `/v2/mempool/events` route allows to retrieve events generated by transactions that have not yet been confirmed.
Unconfirmed transactions are considered unordered and each one is parsed independently of the others. Therefore some transactions can be invalid once parsed in the mempool and valid once confirmed, or valid in the mempool and invalid once confirmed. For example, if a utxo move is chained after an attach, it will be invalid in the mempool but valid once confirmed.


## Group Blocks

### Get Blocks [GET /v2/blocks{?cursor}{&limit}{&offset}{&verbose}]

Returns the list of the last ten blocks

+ Parameters
    + cursor: `245` (str, optional) - The index of the most recent block to return
        + Default: `None`
    + limit: `5` (int, optional) - The number of blocks to return
        + Default: `10`
    + offset (int, optional) - The number of lines to skip before returning results (overrides the `cursor` parameter)
        + Default: `None`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": [
                {
                    "block_index": 245,
                    "block_hash": "44fcdffec36869bfac0fcbe3dee59bfa74c885e0fd9b7f4eb83f716eecd633fc",
                    "block_time": 1740490111,
                    "ledger_hash": "b9137879674322b25ee447b5c225d662c1acf3be0757f8b5e365950c1478ed55",
                    "txlist_hash": "54253e0fb81873afdb56f96b0951b0600ee982e8ad70c7e45270dcc9ed2f1bbb",
                    "messages_hash": "a49feef7ed0848b13a8640617cd2f1339afe84eca2fa74e11a09d16cfe074612",
                    "previous_block_hash": "59abc6ae9e93883361d2127f5c13f5228d604f6c47f2855b3d6410f8eb826846",
                    "difficulty": 545259519,
                    "transaction_count": 1
                },
                {
                    "block_index": 244,
                    "block_hash": "59abc6ae9e93883361d2127f5c13f5228d604f6c47f2855b3d6410f8eb826846",
                    "block_time": 1740490105,
                    "ledger_hash": "7fed50b3951df996f161009a6069791fec11c4ae8deea6a93765ded7160ae69f",
                    "txlist_hash": "389cc49dc24b7263b22e06557573f666f3a0488b491e69d12d35d8938a29686c",
                    "messages_hash": "cf6397c19916bd9c89433867a3fea591a39ac8f4bb81b0ed06ab13fd87904a0b",
                    "previous_block_hash": "12d4f9dd3786b1c71eb33af5170df7a0adb67864ea43afa06da43431972140c6",
                    "difficulty": 545259519,
                    "transaction_count": 0
                },
                {
                    "block_index": 243,
                    "block_hash": "12d4f9dd3786b1c71eb33af5170df7a0adb67864ea43afa06da43431972140c6",
                    "block_time": 1740490102,
                    "ledger_hash": "3de385b0f3e90e527064422c1fd6d674e9365daf9637d337337d0d2b439e202e",
                    "txlist_hash": "0f5e83a92d6cd8b3b621efd4d762472f219feea92ee6f5909ddb2929847c5250",
                    "messages_hash": "fd9704ed65591d9a2060f35d184993bce62a7148def67749a45aefc9dca92335",
                    "previous_block_hash": "535e3df082a630fbd8213a240a46545bd1bc7b94346c2b337dbe86265f72b50f",
                    "difficulty": 545259519,
                    "transaction_count": 1
                },
                {
                    "block_index": 242,
                    "block_hash": "535e3df082a630fbd8213a240a46545bd1bc7b94346c2b337dbe86265f72b50f",
                    "block_time": 1740490099,
                    "ledger_hash": "2ddd2079b238f1e0c394a657b267baebe1c0196c53f37bf734a96bfb8d6dd17f",
                    "txlist_hash": "844cd40ad6fd2868fd0482d7aeb3379d6832c5aff037150426032512d999ec85",
                    "messages_hash": "e45226d562642906dc393fa820a8130ec520d05c8f36db37e7ac0e0da9200c9e",
                    "previous_block_hash": "7842890bfb89f95456258b0a4ddf608559a50a845e23b9e9c0ee9d8d62468742",
                    "difficulty": 545259519,
                    "transaction_count": 1
                },
                {
                    "block_index": 241,
                    "block_hash": "7842890bfb89f95456258b0a4ddf608559a50a845e23b9e9c0ee9d8d62468742",
                    "block_time": 1740490094,
                    "ledger_hash": "66ffe0376d748bf907cb2964943ba10c0b4877dac752c039994a596a10fa6cc4",
                    "txlist_hash": "acd6ba42a10fa3f0944faa4f6d74158a5a277d9597df134d424165a3d5f82c76",
                    "messages_hash": "bfde5efbed61be01fe764fda114d7e2adc06000cbc630313cad82e0fefab0dd9",
                    "previous_block_hash": "2d83010c2269342ae95a9f94f19429b42ca16c40d4c17b843e62bf722a556452",
                    "difficulty": 545259519,
                    "transaction_count": 1
                }
            ],
            "next_cursor": 240,
            "result_count": 145
        }
    ```

### Get Last Block [GET /v2/blocks/last{?verbose}]

Return the information of the last block

+ Parameters
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": {
                "block_index": 245,
                "block_hash": "44fcdffec36869bfac0fcbe3dee59bfa74c885e0fd9b7f4eb83f716eecd633fc",
                "block_time": 1740490111,
                "ledger_hash": "b9137879674322b25ee447b5c225d662c1acf3be0757f8b5e365950c1478ed55",
                "txlist_hash": "54253e0fb81873afdb56f96b0951b0600ee982e8ad70c7e45270dcc9ed2f1bbb",
                "messages_hash": "a49feef7ed0848b13a8640617cd2f1339afe84eca2fa74e11a09d16cfe074612",
                "previous_block_hash": "59abc6ae9e93883361d2127f5c13f5228d604f6c47f2855b3d6410f8eb826846",
                "difficulty": 545259519,
                "transaction_count": 1
            }
        }
    ```

### Get Block By Height [GET /v2/blocks/{block_index}{?verbose}]

Return the information of a block

+ Parameters
    + block_index: `245` (int, required) - The index of the block to return
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": {
                "block_index": 245,
                "block_hash": "44fcdffec36869bfac0fcbe3dee59bfa74c885e0fd9b7f4eb83f716eecd633fc",
                "block_time": 1740490111,
                "ledger_hash": "b9137879674322b25ee447b5c225d662c1acf3be0757f8b5e365950c1478ed55",
                "txlist_hash": "54253e0fb81873afdb56f96b0951b0600ee982e8ad70c7e45270dcc9ed2f1bbb",
                "messages_hash": "a49feef7ed0848b13a8640617cd2f1339afe84eca2fa74e11a09d16cfe074612",
                "previous_block_hash": "59abc6ae9e93883361d2127f5c13f5228d604f6c47f2855b3d6410f8eb826846",
                "difficulty": 545259519,
                "transaction_count": 1
            }
        }
    ```

### Get Block By Hash [GET /v2/blocks/{block_hash}{?verbose}]

Return the information of a block

+ Parameters
    + block_hash: `44fcdffec36869bfac0fcbe3dee59bfa74c885e0fd9b7f4eb83f716eecd633fc` (str, required) - The index of the block to return
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": {
                "block_index": 245,
                "block_hash": "44fcdffec36869bfac0fcbe3dee59bfa74c885e0fd9b7f4eb83f716eecd633fc",
                "block_time": 1740490111,
                "ledger_hash": "b9137879674322b25ee447b5c225d662c1acf3be0757f8b5e365950c1478ed55",
                "txlist_hash": "54253e0fb81873afdb56f96b0951b0600ee982e8ad70c7e45270dcc9ed2f1bbb",
                "messages_hash": "a49feef7ed0848b13a8640617cd2f1339afe84eca2fa74e11a09d16cfe074612",
                "previous_block_hash": "59abc6ae9e93883361d2127f5c13f5228d604f6c47f2855b3d6410f8eb826846",
                "difficulty": 545259519,
                "transaction_count": 1
            }
        }
    ```

### Get Transactions By Block [GET /v2/blocks/{block_index}/transactions{?type}{&show_unconfirmed}{&cursor}{&limit}{&offset}{&verbose}]

Returns the transactions of a block

+ Parameters
    + block_index: `245` (int, required) - The index of the block to return
    + type (enum[str], optional) - The type of the transaction to return
        + Default: `all`
        + Members
            + `all`
            + `bet`
            + `broadcast`
            + `btcpay`
            + `cancel`
            + `destroy`
            + `dispenser`
            + `dispense`
            + `dividend`
            + `issuance`
            + `order`
            + `send`
            + `enhanced_send`
            + `mpma`
            + `rps`
            + `rpsresolve`
            + `sweep`
            + `fairminter`
            + `fairmint`
            + `attach`
            + `detach`
            + `utxomove`
            + `unknown`
    + show_unconfirmed (bool, optional) - Show unconfirmed transactions
        + Default: `False`
    + cursor: `121` (str, optional) - The last transaction index to return
        + Default: `None`
    + limit: `5` (int, optional) - The maximum number of transactions to return
        + Default: `10`
    + offset (int, optional) - The number of lines to skip before returning results (overrides the `cursor` parameter)
        + Default: `None`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": [
                {
                    "tx_index": 121,
                    "tx_hash": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3",
                    "block_index": 245,
                    "block_hash": "44fcdffec36869bfac0fcbe3dee59bfa74c885e0fd9b7f4eb83f716eecd633fc",
                    "block_time": 1740490111,
                    "source": "bcrt1qwats7crkdl4z6ac6tz2fn6pz6a5dt7hxzjustu",
                    "destination": "bcrt1qquwz9xkh3dv34l49v32lk3kc283utd58ung2cn",
                    "btc_amount": 1000,
                    "fee": 0,
                    "data": "0d00",
                    "supported": true,
                    "utxos_info": "e1da70a78196a01b1d83828ad454578cd9ccd3a37215d0732042f9cd20028b65:1 d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3:0 3 1",
                    "transaction_type": "dispense",
                    "events": [
                        {
                            "event_index": 1034,
                            "event": "UTXO_MOVE",
                            "params": {
                                "asset": "MYASSETA",
                                "block_index": 245,
                                "destination": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3:0",
                                "destination_address": "bcrt1qquwz9xkh3dv34l49v32lk3kc283utd58ung2cn",
                                "msg_index": 0,
                                "quantity": 2000000000,
                                "send_type": "move",
                                "source": "e1da70a78196a01b1d83828ad454578cd9ccd3a37215d0732042f9cd20028b65:1",
                                "source_address": "bcrt1qwats7crkdl4z6ac6tz2fn6pz6a5dt7hxzjustu",
                                "status": "valid",
                                "tx_hash": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3",
                                "tx_index": 121,
                                "block_time": 1740490111,
                                "asset_info": {
                                    "asset_longname": null,
                                    "description": "My super asset A",
                                    "issuer": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                                    "divisible": true,
                                    "locked": false,
                                    "owner": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n"
                                },
                                "quantity_normalized": "20.00000000"
                            },
                            "tx_hash": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3",
                            "block_index": 245,
                            "block_time": 1740490111
                        },
                        {
                            "event_index": 1037,
                            "event": "UTXO_MOVE",
                            "params": {
                                "asset": "XCP",
                                "block_index": 245,
                                "destination": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3:0",
                                "destination_address": "bcrt1qquwz9xkh3dv34l49v32lk3kc283utd58ung2cn",
                                "msg_index": 1,
                                "quantity": 2000000000,
                                "send_type": "move",
                                "source": "e1da70a78196a01b1d83828ad454578cd9ccd3a37215d0732042f9cd20028b65:1",
                                "source_address": "bcrt1qwats7crkdl4z6ac6tz2fn6pz6a5dt7hxzjustu",
                                "status": "valid",
                                "tx_hash": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3",
                                "tx_index": 121,
                                "block_time": 1740490111,
                                "asset_info": {
                                    "asset_longname": null,
                                    "description": "The Counterparty protocol native currency",
                                    "issuer": null,
                                    "divisible": true,
                                    "locked": true,
                                    "owner": null
                                },
                                "quantity_normalized": "20.00000000"
                            },
                            "tx_hash": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3",
                            "block_index": 245,
                            "block_time": 1740490111
                        },
                        {
                            "event_index": 1039,
                            "event": "DISPENSER_UPDATE",
                            "params": {
                                "asset": "XCP",
                                "dispense_count": 2,
                                "give_remaining": 9268,
                                "source": "bcrt1qquwz9xkh3dv34l49v32lk3kc283utd58ung2cn",
                                "status": 0,
                                "tx_hash": "1e6f693fe2759c736df4febc587f45124e79e5d8d1ce2b79f8c0bbf0f18fd87d",
                                "asset_info": {
                                    "asset_longname": null,
                                    "description": "The Counterparty protocol native currency",
                                    "issuer": null,
                                    "divisible": true,
                                    "locked": true,
                                    "owner": null
                                },
                                "give_remaining_normalized": "0.00009268"
                            },
                            "tx_hash": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3",
                            "block_index": 245,
                            "block_time": 1740490111
                        },
                        {
                            "event_index": 1040,
                            "event": "DISPENSE",
                            "params": {
                                "asset": "XCP",
                                "block_index": 245,
                                "btc_amount": 1000,
                                "destination": "bcrt1qwats7crkdl4z6ac6tz2fn6pz6a5dt7hxzjustu",
                                "dispense_index": 0,
                                "dispense_quantity": 66,
                                "dispenser_tx_hash": "1e6f693fe2759c736df4febc587f45124e79e5d8d1ce2b79f8c0bbf0f18fd87d",
                                "source": "bcrt1qquwz9xkh3dv34l49v32lk3kc283utd58ung2cn",
                                "tx_hash": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3",
                                "tx_index": 121,
                                "block_time": 1740490111,
                                "asset_info": {
                                    "asset_longname": null,
                                    "description": "The Counterparty protocol native currency",
                                    "issuer": null,
                                    "divisible": true,
                                    "locked": true,
                                    "owner": null
                                },
                                "dispense_quantity_normalized": "0.00000066",
                                "btc_amount_normalized": "0.00001000"
                            },
                            "tx_hash": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3",
                            "block_index": 245,
                            "block_time": 1740490111
                        }
                    ],
                    "unpacked_data": {
                        "message_type": "dispense",
                        "message_type_id": 13,
                        "message_data": {
                            "data": "00"
                        }
                    },
                    "btc_amount_normalized": "0.00001000"
                }
            ],
            "next_cursor": null,
            "result_count": 1
        }
    ```

### Get Transaction Types Count By Block [GET /v2/blocks/{block_index}/transactions/counts{?count_unconfirmed}{&verbose}]

Returns the count of each transaction type

+ Parameters
    + block_index: `121` (int, required) - The index of the block to return
    + count_unconfirmed (bool, optional) - Count unconfirmed transactions
        + Default: `False`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": [],
            "next_cursor": null,
            "result_count": 0
        }
    ```

### Get Events By Block [GET /v2/blocks/{block_index}/events{?event_name}{&cursor}{&limit}{&offset}{&verbose}]

Returns the events of a block

+ Parameters
    + block_index: `245` (int, required) - The index of the block to return
    + event_name (str, optional) - Comma separated list of events to return
        + Default: `None`
    + cursor: `1042` (str, optional) - The last event index to return
        + Default: `None`
    + limit: `5` (int, optional) - The maximum number of events to return
        + Default: `100`
    + offset (int, optional) - The number of lines to skip before returning results (overrides the `cursor` parameter)
        + Default: `None`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": [
                {
                    "event_index": 1042,
                    "event": "BLOCK_PARSED",
                    "params": {
                        "block_index": 245,
                        "ledger_hash": "b9137879674322b25ee447b5c225d662c1acf3be0757f8b5e365950c1478ed55",
                        "messages_hash": "a49feef7ed0848b13a8640617cd2f1339afe84eca2fa74e11a09d16cfe074612",
                        "transaction_count": 1,
                        "txlist_hash": "54253e0fb81873afdb56f96b0951b0600ee982e8ad70c7e45270dcc9ed2f1bbb",
                        "block_time": 1740490111
                    },
                    "tx_hash": null
                },
                {
                    "event_index": 1041,
                    "event": "TRANSACTION_PARSED",
                    "params": {
                        "supported": true,
                        "tx_hash": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3",
                        "tx_index": 121
                    },
                    "tx_hash": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3"
                },
                {
                    "event_index": 1040,
                    "event": "DISPENSE",
                    "params": {
                        "asset": "XCP",
                        "block_index": 245,
                        "btc_amount": 1000,
                        "destination": "bcrt1qwats7crkdl4z6ac6tz2fn6pz6a5dt7hxzjustu",
                        "dispense_index": 0,
                        "dispense_quantity": 66,
                        "dispenser_tx_hash": "1e6f693fe2759c736df4febc587f45124e79e5d8d1ce2b79f8c0bbf0f18fd87d",
                        "source": "bcrt1qquwz9xkh3dv34l49v32lk3kc283utd58ung2cn",
                        "tx_hash": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3",
                        "tx_index": 121,
                        "block_time": 1740490111,
                        "asset_info": {
                            "asset_longname": null,
                            "description": "The Counterparty protocol native currency",
                            "issuer": null,
                            "divisible": true,
                            "locked": true,
                            "owner": null
                        },
                        "dispense_quantity_normalized": "0.00000066",
                        "btc_amount_normalized": "0.00001000"
                    },
                    "tx_hash": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3"
                },
                {
                    "event_index": 1039,
                    "event": "DISPENSER_UPDATE",
                    "params": {
                        "asset": "XCP",
                        "dispense_count": 2,
                        "give_remaining": 9268,
                        "source": "bcrt1qquwz9xkh3dv34l49v32lk3kc283utd58ung2cn",
                        "status": 0,
                        "tx_hash": "1e6f693fe2759c736df4febc587f45124e79e5d8d1ce2b79f8c0bbf0f18fd87d",
                        "asset_info": {
                            "asset_longname": null,
                            "description": "The Counterparty protocol native currency",
                            "issuer": null,
                            "divisible": true,
                            "locked": true,
                            "owner": null
                        },
                        "give_remaining_normalized": "0.00009268"
                    },
                    "tx_hash": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3"
                },
                {
                    "event_index": 1038,
                    "event": "CREDIT",
                    "params": {
                        "address": "bcrt1qwats7crkdl4z6ac6tz2fn6pz6a5dt7hxzjustu",
                        "asset": "XCP",
                        "block_index": 245,
                        "calling_function": "dispense",
                        "event": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3",
                        "quantity": 66,
                        "tx_index": 121,
                        "utxo": null,
                        "utxo_address": null,
                        "block_time": 1740490111,
                        "asset_info": {
                            "asset_longname": null,
                            "description": "The Counterparty protocol native currency",
                            "issuer": null,
                            "divisible": true,
                            "locked": true,
                            "owner": null
                        },
                        "quantity_normalized": "0.00000066"
                    },
                    "tx_hash": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3"
                }
            ],
            "next_cursor": 1037,
            "result_count": 14
        }
    ```

### Get Event Counts By Block [GET /v2/blocks/{block_index}/events/counts{?cursor}{&limit}{&offset}{&verbose}]

Returns the event counts of a block

+ Parameters
    + block_index: `245` (int, required) - The index of the block to return
    + cursor (str, optional) - The last event index to return
        + Default: `None`
    + limit: `5` (int, optional) - The maximum number of events to return
        + Default: `100`
    + offset (int, optional) - The number of lines to skip before returning results (overrides the `cursor` parameter)
        + Default: `None`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": [
                {
                    "event": "UTXO_MOVE",
                    "event_count": 2
                },
                {
                    "event": "TRANSACTION_PARSED",
                    "event_count": 1
                },
                {
                    "event": "NEW_TRANSACTION_OUTPUT",
                    "event_count": 1
                },
                {
                    "event": "NEW_TRANSACTION",
                    "event_count": 1
                },
                {
                    "event": "NEW_BLOCK",
                    "event_count": 1
                }
            ],
            "next_cursor": "DISPENSER_UPDATE",
            "result_count": 10
        }
    ```

### Get Events By Block And Event [GET /v2/blocks/{block_index}/events/{event}{?cursor}{&limit}{&offset}{&verbose}]

Returns the events of a block filtered by event

+ Parameters
    + block_index: `245` (int, required) - The index of the block to return
    + event: `CREDIT` (str, required) - The event to filter by
    + cursor (str, optional) - The last event index to return
        + Default: `None`
    + limit: `5` (int, optional) - The maximum number of events to return
        + Default: `100`
    + offset (int, optional) - The number of lines to skip before returning results (overrides the `cursor` parameter)
        + Default: `None`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": [
                {
                    "event_index": 1038,
                    "event": "CREDIT",
                    "params": {
                        "address": "bcrt1qwats7crkdl4z6ac6tz2fn6pz6a5dt7hxzjustu",
                        "asset": "XCP",
                        "block_index": 245,
                        "calling_function": "dispense",
                        "event": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3",
                        "quantity": 66,
                        "tx_index": 121,
                        "utxo": null,
                        "utxo_address": null,
                        "block_time": 1740490111,
                        "asset_info": {
                            "asset_longname": null,
                            "description": "The Counterparty protocol native currency",
                            "issuer": null,
                            "divisible": true,
                            "locked": true,
                            "owner": null
                        },
                        "quantity_normalized": "0.00000066"
                    },
                    "tx_hash": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3"
                },
                {
                    "event_index": 1036,
                    "event": "CREDIT",
                    "params": {
                        "address": null,
                        "asset": "XCP",
                        "block_index": 245,
                        "calling_function": "utxo move",
                        "event": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3",
                        "quantity": 2000000000,
                        "tx_index": 121,
                        "utxo": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3:0",
                        "utxo_address": "bcrt1qquwz9xkh3dv34l49v32lk3kc283utd58ung2cn",
                        "block_time": 1740490111,
                        "asset_info": {
                            "asset_longname": null,
                            "description": "The Counterparty protocol native currency",
                            "issuer": null,
                            "divisible": true,
                            "locked": true,
                            "owner": null
                        },
                        "quantity_normalized": "20.00000000"
                    },
                    "tx_hash": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3"
                },
                {
                    "event_index": 1033,
                    "event": "CREDIT",
                    "params": {
                        "address": null,
                        "asset": "MYASSETA",
                        "block_index": 245,
                        "calling_function": "utxo move",
                        "event": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3",
                        "quantity": 2000000000,
                        "tx_index": 121,
                        "utxo": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3:0",
                        "utxo_address": "bcrt1qquwz9xkh3dv34l49v32lk3kc283utd58ung2cn",
                        "block_time": 1740490111,
                        "asset_info": {
                            "asset_longname": null,
                            "description": "My super asset A",
                            "issuer": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                            "divisible": true,
                            "locked": false,
                            "owner": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n"
                        },
                        "quantity_normalized": "20.00000000"
                    },
                    "tx_hash": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3"
                }
            ],
            "next_cursor": null,
            "result_count": 3
        }
    ```

### Get Credits By Block [GET /v2/blocks/{block_index}/credits{?action}{&cursor}{&limit}{&offset}{&verbose}]

Returns the credits of a block

+ Parameters
    + block_index: `245` (int, required) - The index of the block to return
    + action (enum[str], optional) - The action to filter by
        + Default: `None`
        + Members
            + `None`
            + `Closed: Max dispenses reached`
            + `bet settled: for equal`
            + `bet settled: for notequal`
            + `bet settled: liquidated for bear`
            + `btcpay`
            + `burn`
            + `cancel order`
            + `close dispenser`
            + `dispense`
            + `dispenser close`
            + `dividend`
            + `feed fee`
            + `filled`
            + `issuance`
            + `mpma send`
            + `open dispenser empty addr`
            + `order cancelled`
            + `order expired`
            + `order match`
            + `recredit backward quantity`
            + `recredit forward quantity`
            + `recredit wager`
            + `recredit wager remaining`
            + `reset issuance`
            + `send`
            + `sweep`
            + `wins`
    + cursor (str, optional) - The last credit index to return
        + Default: `None`
    + limit: `5` (int, optional) - The maximum number of credits to return
        + Default: `100`
    + offset (int, optional) - The number of lines to skip before returning results (overrides the `cursor` parameter)
        + Default: `None`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": [
                {
                    "block_index": 245,
                    "address": "bcrt1qwats7crkdl4z6ac6tz2fn6pz6a5dt7hxzjustu",
                    "asset": "XCP",
                    "quantity": 66,
                    "calling_function": "dispense",
                    "event": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3",
                    "tx_index": 121,
                    "utxo": null,
                    "utxo_address": null,
                    "block_time": 1740490111,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "The Counterparty protocol native currency",
                        "issuer": null,
                        "divisible": true,
                        "locked": true,
                        "owner": null
                    },
                    "quantity_normalized": "0.00000066"
                },
                {
                    "block_index": 245,
                    "address": null,
                    "asset": "XCP",
                    "quantity": 2000000000,
                    "calling_function": "utxo move",
                    "event": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3",
                    "tx_index": 121,
                    "utxo": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3:0",
                    "utxo_address": "bcrt1qquwz9xkh3dv34l49v32lk3kc283utd58ung2cn",
                    "block_time": 1740490111,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "The Counterparty protocol native currency",
                        "issuer": null,
                        "divisible": true,
                        "locked": true,
                        "owner": null
                    },
                    "quantity_normalized": "20.00000000"
                },
                {
                    "block_index": 245,
                    "address": null,
                    "asset": "MYASSETA",
                    "quantity": 2000000000,
                    "calling_function": "utxo move",
                    "event": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3",
                    "tx_index": 121,
                    "utxo": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3:0",
                    "utxo_address": "bcrt1qquwz9xkh3dv34l49v32lk3kc283utd58ung2cn",
                    "block_time": 1740490111,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "My super asset A",
                        "issuer": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                        "divisible": true,
                        "locked": false,
                        "owner": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n"
                    },
                    "quantity_normalized": "20.00000000"
                }
            ],
            "next_cursor": null,
            "result_count": 3
        }
    ```

### Get Debits By Block [GET /v2/blocks/{block_index}/debits{?action}{&cursor}{&limit}{&offset}{&verbose}]

Returns the debits of a block

+ Parameters
    + block_index: `245` (int, required) - The index of the block to return
    + action (enum[str], optional) - The action to filter by
        + Default: `None`
        + Members
            + `None`
            + `bet`
            + `destroy`
            + `dividend`
            + `dividend fee`
            + `issuance fee`
            + `mpma send`
            + `open RPS`
            + `open dispenser`
            + `open dispenser empty addr`
            + `open order`
            + `refill dispenser`
            + `reopen RPS after matching expiration`
            + `reset destroy`
            + `send`
            + `sweep`
            + `sweep fee`
    + cursor (str, optional) - The last index of the debits to return
        + Default: `None`
    + limit: `5` (int, optional) - The maximum number of debits to return
        + Default: `100`
    + offset (int, optional) - The number of lines to skip before returning results (overrides the `cursor` parameter)
        + Default: `None`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": [
                {
                    "block_index": 245,
                    "address": null,
                    "asset": "XCP",
                    "quantity": 2000000000,
                    "action": "utxo move",
                    "event": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3",
                    "tx_index": 121,
                    "utxo": "e1da70a78196a01b1d83828ad454578cd9ccd3a37215d0732042f9cd20028b65:1",
                    "utxo_address": "bcrt1qwats7crkdl4z6ac6tz2fn6pz6a5dt7hxzjustu",
                    "block_time": 1740490111,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "The Counterparty protocol native currency",
                        "issuer": null,
                        "divisible": true,
                        "locked": true,
                        "owner": null
                    },
                    "quantity_normalized": "20.00000000"
                },
                {
                    "block_index": 245,
                    "address": null,
                    "asset": "MYASSETA",
                    "quantity": 2000000000,
                    "action": "utxo move",
                    "event": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3",
                    "tx_index": 121,
                    "utxo": "e1da70a78196a01b1d83828ad454578cd9ccd3a37215d0732042f9cd20028b65:1",
                    "utxo_address": "bcrt1qwats7crkdl4z6ac6tz2fn6pz6a5dt7hxzjustu",
                    "block_time": 1740490111,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "My super asset A",
                        "issuer": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                        "divisible": true,
                        "locked": false,
                        "owner": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n"
                    },
                    "quantity_normalized": "20.00000000"
                }
            ],
            "next_cursor": null,
            "result_count": 2
        }
    ```

### Get Expirations [GET /v2/blocks/{block_index}/expirations{?cursor}{&limit}{&offset}{&verbose}]

Returns the expirations of a block

+ Parameters
    + block_index: `211` (int, required) - The index of the block to return
    + cursor (str, optional) - The last index of the expirations to return
        + Default: `None`
    + limit: `5` (int, optional) - The maximum number of expirations to return
        + Default: `100`
    + offset (int, optional) - The number of lines to skip before returning results (overrides the `cursor` parameter)
        + Default: `None`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": [
                {
                    "type": "order",
                    "object_id": "9198a9256ee36ffaa1c68b2098d9920bf461858924c70baa1e2e616814a81c54",
                    "block_index": 211,
                    "block_time": 1740489959
                }
            ],
            "next_cursor": null,
            "result_count": 1
        }
    ```

### Get Cancels [GET /v2/blocks/{block_index}/cancels{?cursor}{&limit}{&offset}{&verbose}]

Returns the cancels of a block

+ Parameters
    + block_index: `188` (int, required) - The index of the block to return
    + cursor (str, optional) - The last index of the cancels to return
        + Default: `None`
    + limit: `5` (int, optional) - The maximum number of cancels to return
        + Default: `100`
    + offset (int, optional) - The number of lines to skip before returning results (overrides the `cursor` parameter)
        + Default: `None`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": [
                {
                    "tx_index": 63,
                    "tx_hash": "f93a585e39ef051fa3b8ece892fc7e7c312af255705851e42df9fbb47f0983b0",
                    "block_index": 188,
                    "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "offer_hash": "6514dc909d289a00f85ba5b8db7b7198c6fafe5ed2e140773835a3fe73615f94",
                    "status": "valid",
                    "block_time": 1740489870
                }
            ],
            "next_cursor": null,
            "result_count": 1
        }
    ```

### Get Valid Destructions By Block [GET /v2/blocks/{block_index}/destructions{?cursor}{&limit}{&offset}{&verbose}]

Returns the destructions of a block

+ Parameters
    + block_index: `240` (int, required) - The index of the block to return
    + cursor (str, optional) - The last index of the destructions to return
        + Default: `None`
    + limit: `5` (int, optional) - The maximum number of destructions to return
        + Default: `100`
    + offset (int, optional) - The number of lines to skip before returning results (overrides the `cursor` parameter)
        + Default: `None`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": [
                {
                    "tx_index": 117,
                    "tx_hash": "49aaaa4a39e9fd16889036cae02cf2fdb65f96d4447a92dce1c811b959105a85",
                    "block_index": 240,
                    "source": "bcrt1qyyjgcgnjrxkznrdk8pc9dwp98twx5qesptttlg",
                    "asset": "RESET",
                    "quantity": 12,
                    "tag": "reset",
                    "status": "valid",
                    "block_time": 1740490091,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "",
                        "issuer": "bcrt1qyyjgcgnjrxkznrdk8pc9dwp98twx5qesptttlg",
                        "divisible": true,
                        "locked": false,
                        "owner": "bcrt1qyyjgcgnjrxkznrdk8pc9dwp98twx5qesptttlg"
                    },
                    "quantity_normalized": "0.00000012"
                }
            ],
            "next_cursor": null,
            "result_count": 1
        }
    ```

### Get Issuances By Block [GET /v2/blocks/{block_index}/issuances{?asset_events}{&cursor}{&limit}{&offset}{&verbose}]

Returns the issuances of a block

+ Parameters
    + block_index: `243` (int, required) - The index of the block to return
    + asset_events (enum[str], optional) - Filter result by one or several comma separated asset events
        + Default: `all`
        + Members
            + `all`
            + `creation`
            + `reissuance`
            + `lock_quantity`
            + `reset`
            + `change_description`
            + `transfer`
            + `open_fairminter`
            + `fairmint`
            + `lock_description`
    + cursor (str, optional) - The last index of the issuances to return
        + Default: `None`
    + limit: `5` (int, optional) - The maximum number of issuances to return
        + Default: `100`
    + offset (int, optional) - The number of lines to skip before returning results (overrides the `cursor` parameter)
        + Default: `None`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": [
                {
                    "tx_index": 120,
                    "tx_hash": "c6043e9ceafa1ced581e48b9bb273a6b703ad6717ff27494f1a137dfcd039321",
                    "msg_index": 0,
                    "block_index": 243,
                    "asset": "OPENFAIR",
                    "quantity": 0,
                    "divisible": true,
                    "source": "bcrt1qquwz9xkh3dv34l49v32lk3kc283utd58ung2cn",
                    "issuer": "bcrt1qquwz9xkh3dv34l49v32lk3kc283utd58ung2cn",
                    "transfer": false,
                    "callable": false,
                    "call_date": 0,
                    "call_price": 0.0,
                    "description": "",
                    "fee_paid": 50000000,
                    "status": "valid",
                    "asset_longname": null,
                    "description_locked": false,
                    "fair_minting": true,
                    "asset_events": "open_fairminter",
                    "locked": false,
                    "reset": false,
                    "block_time": 1740490102,
                    "quantity_normalized": "0.00000000",
                    "fee_paid_normalized": "0.50000000"
                }
            ],
            "next_cursor": null,
            "result_count": 1
        }
    ```

### Get Sends By Block [GET /v2/blocks/{block_index}/sends{?send_type}{&cursor}{&limit}{&offset}{&verbose}]

Returns the sends, include Enhanced and MPMA sends, of a block

+ Parameters
    + block_index: `245` (int, required) - The index of the block to return
    + send_type (enum[str], optional) - The type of the send to return
        + Default: `all`
        + Members
            + `all`
            + `send`
            + `attach`
            + `move`
            + `detach`
    + cursor (str, optional) - The last index of the debits to return
        + Default: `None`
    + limit: `5` (int, optional) - The maximum number of debits to return
        + Default: `100`
    + offset (int, optional) - The number of lines to skip before returning results (overrides the `cursor` parameter)
        + Default: `None`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": [
                {
                    "tx_index": 121,
                    "tx_hash": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3",
                    "block_index": 245,
                    "source": "e1da70a78196a01b1d83828ad454578cd9ccd3a37215d0732042f9cd20028b65:1",
                    "destination": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3:0",
                    "asset": "XCP",
                    "quantity": 2000000000,
                    "status": "valid",
                    "msg_index": 1,
                    "memo": null,
                    "fee_paid": 0,
                    "send_type": "move",
                    "source_address": "bcrt1qwats7crkdl4z6ac6tz2fn6pz6a5dt7hxzjustu",
                    "destination_address": "bcrt1qquwz9xkh3dv34l49v32lk3kc283utd58ung2cn",
                    "block_time": 1740490111,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "The Counterparty protocol native currency",
                        "issuer": null,
                        "divisible": true,
                        "locked": true,
                        "owner": null
                    },
                    "quantity_normalized": "20.00000000",
                    "fee_paid_normalized": "0.00000000"
                },
                {
                    "tx_index": 121,
                    "tx_hash": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3",
                    "block_index": 245,
                    "source": "e1da70a78196a01b1d83828ad454578cd9ccd3a37215d0732042f9cd20028b65:1",
                    "destination": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3:0",
                    "asset": "MYASSETA",
                    "quantity": 2000000000,
                    "status": "valid",
                    "msg_index": 0,
                    "memo": null,
                    "fee_paid": 0,
                    "send_type": "move",
                    "source_address": "bcrt1qwats7crkdl4z6ac6tz2fn6pz6a5dt7hxzjustu",
                    "destination_address": "bcrt1qquwz9xkh3dv34l49v32lk3kc283utd58ung2cn",
                    "block_time": 1740490111,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "My super asset A",
                        "issuer": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                        "divisible": true,
                        "locked": false,
                        "owner": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n"
                    },
                    "quantity_normalized": "20.00000000",
                    "fee_paid_normalized": "0.00000000"
                }
            ],
            "next_cursor": null,
            "result_count": 2
        }
    ```

### Get Dispenses By Block [GET /v2/blocks/{block_index}/dispenses{?cursor}{&limit}{&offset}{&verbose}]

Returns the dispenses of a block

+ Parameters
    + block_index: `245` (int, required) - The index of the block to return
    + cursor (str, optional) - The last index of the dispenses to return
        + Default: `None`
    + limit: `5` (int, optional) - The maximum number of dispenses to return
        + Default: `100`
    + offset (int, optional) - The number of lines to skip before returning results (overrides the `cursor` parameter)
        + Default: `None`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": [
                {
                    "tx_index": 121,
                    "dispense_index": 0,
                    "tx_hash": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3",
                    "block_index": 245,
                    "source": "bcrt1qquwz9xkh3dv34l49v32lk3kc283utd58ung2cn",
                    "destination": "bcrt1qwats7crkdl4z6ac6tz2fn6pz6a5dt7hxzjustu",
                    "asset": "XCP",
                    "dispense_quantity": 66,
                    "dispenser_tx_hash": "1e6f693fe2759c736df4febc587f45124e79e5d8d1ce2b79f8c0bbf0f18fd87d",
                    "btc_amount": 1000,
                    "dispenser": {
                        "tx_index": 33,
                        "block_index": 245,
                        "source": "bcrt1qquwz9xkh3dv34l49v32lk3kc283utd58ung2cn",
                        "give_quantity": 1,
                        "escrow_quantity": 10000,
                        "satoshirate": 1,
                        "status": 0,
                        "give_remaining": 9268,
                        "oracle_address": "bcrt1qquwz9xkh3dv34l49v32lk3kc283utd58ung2cn",
                        "last_status_tx_hash": null,
                        "origin": "bcrt1qquwz9xkh3dv34l49v32lk3kc283utd58ung2cn",
                        "dispense_count": 2,
                        "last_status_tx_source": null,
                        "close_block_index": null,
                        "fiat_price": 0.01,
                        "oracle_price": 66600.0,
                        "fiat_unit": "USD",
                        "oracle_price_last_updated": 129,
                        "satoshi_price": 16,
                        "give_quantity_normalized": "0.00000001",
                        "give_remaining_normalized": "0.00009268",
                        "escrow_quantity_normalized": "0.00010000",
                        "satoshirate_normalized": "0.00000001",
                        "satoshi_price_normalized": "0.00000016"
                    },
                    "block_time": 1740490111,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "The Counterparty protocol native currency",
                        "issuer": null,
                        "divisible": true,
                        "locked": true,
                        "owner": null
                    },
                    "dispense_quantity_normalized": "0.00000066",
                    "btc_amount_normalized": "0.00001000"
                }
            ],
            "next_cursor": null,
            "result_count": 1
        }
    ```

### Get Sweeps By Block [GET /v2/blocks/{block_index}/sweeps{?cursor}{&limit}{&offset}{&verbose}]

Returns the sweeps of a block

+ Parameters
    + block_index: `190` (int, required) - The index of the block to return
    + cursor (str, optional) - The last index of the sweeps to return
        + Default: `None`
    + limit: `5` (int, optional) - The maximum number of sweeps to return
        + Default: `100`
    + offset (int, optional) - The number of lines to skip before returning results (overrides the `cursor` parameter)
        + Default: `None`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": [
                {
                    "tx_index": 65,
                    "tx_hash": "e0043724de46115717f26d5126665cd592e152dc397d4ecbcd7e41809a575b49",
                    "block_index": 190,
                    "source": "bcrt1qj7zsv3gv750c8mr02eytgp5xen2ke6fpak6ztc",
                    "destination": "bcrt1qndrj8uy6the35p3gpjuuss7l29hwe0npylexmz",
                    "flags": 1,
                    "status": "valid",
                    "memo": "sweep my assets",
                    "fee_paid": 600000,
                    "block_time": 1740489877,
                    "fee_paid_normalized": "0.00600000"
                }
            ],
            "next_cursor": null,
            "result_count": 1
        }
    ```

### Get Fairminters By Block [GET /v2/blocks/{block_index}/fairminters{?status}{&cursor}{&limit}{&offset}{&verbose}]

Returns the fairminters by its block index

+ Parameters
    + block_index: `243` (int, required) - The block index of the fairminter to return
    + status (enum[str], optional) - The status of the fairminters to return
        + Default: `all`
        + Members
            + `all`
            + `open`
            + `closed`
            + `pending`
    + cursor (str, optional) - The last index of the fairminter to return
        + Default: `None`
    + limit: `5` (int, optional) - The maximum number of fairminter to return
        + Default: `100`
    + offset (int, optional) - The number of lines to skip before
        + Default: `None`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": [
                {
                    "tx_hash": "c6043e9ceafa1ced581e48b9bb273a6b703ad6717ff27494f1a137dfcd039321",
                    "tx_index": 120,
                    "block_index": 243,
                    "source": "bcrt1qquwz9xkh3dv34l49v32lk3kc283utd58ung2cn",
                    "asset": "OPENFAIR",
                    "asset_parent": null,
                    "asset_longname": null,
                    "description": "",
                    "price": 0,
                    "quantity_by_price": 1,
                    "hard_cap": 0,
                    "burn_payment": false,
                    "max_mint_per_tx": 10,
                    "premint_quantity": 0,
                    "start_block": 0,
                    "end_block": 0,
                    "minted_asset_commission_int": 0,
                    "soft_cap": 0,
                    "soft_cap_deadline_block": 0,
                    "lock_description": false,
                    "lock_quantity": false,
                    "divisible": true,
                    "pre_minted": false,
                    "status": "open",
                    "earned_quantity": null,
                    "paid_quantity": null,
                    "commission": null,
                    "block_time": 1740490102,
                    "price_normalized": "0.0000000000000000",
                    "hard_cap_normalized": "0.00000000",
                    "soft_cap_normalized": "0.00000000",
                    "quantity_by_price_normalized": "0.00000001",
                    "max_mint_per_tx_normalized": "0.00000010",
                    "premint_quantity_normalized": "0.00000000"
                }
            ],
            "next_cursor": null,
            "result_count": 1
        }
    ```

### Get Fairmints By Block [GET /v2/blocks/{block_index}/fairmints{?cursor}{&limit}{&offset}{&verbose}]

Returns the fairmints by its block index

+ Parameters
    + block_index: `221` (int, required) - The block index of the fairmint to return
    + cursor (str, optional) - The last index of the fairmint to return
        + Default: `None`
    + limit: `5` (int, optional) - The maximum number of fairmint to return
        + Default: `100`
    + offset (int, optional) - The number of lines to skip before returning results (overrides the `cursor` parameter)
        + Default: `None`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": [
                {
                    "tx_hash": "f008cc467441d6088b240484737bc7c3a9665fca802126e7724a0e297fec8adc",
                    "tx_index": 97,
                    "block_index": 221,
                    "source": "bcrt1qquwz9xkh3dv34l49v32lk3kc283utd58ung2cn",
                    "fairminter_tx_hash": "2efa348123c9d59037cd1352f1074a77e6c56630f04c6a742623c0d403824cb8",
                    "asset": "BURNER",
                    "earn_quantity": 80000000,
                    "paid_quantity": 100000000,
                    "commission": 20000000,
                    "status": "valid",
                    "block_time": 1740489996,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "let's burn it",
                        "issuer": "bcrt1qyyjgcgnjrxkznrdk8pc9dwp98twx5qesptttlg",
                        "divisible": true,
                        "locked": true,
                        "owner": "bcrt1qyyjgcgnjrxkznrdk8pc9dwp98twx5qesptttlg"
                    },
                    "earn_quantity_normalized": "0.80000000",
                    "commission_normalized": "0.20000000",
                    "paid_quantity_normalized": "1.00000000"
                }
            ],
            "next_cursor": null,
            "result_count": 1
        }
    ```

## Group Transactions

There are 14 types of transactions:

- `broadcast`
- `btcpay`
- `cancel`
- `destroy`
- `dispenser`
- `dispense`
- `dividend`
- `issuance`
- `order`
- `enhanced_send`
- `mpma_send`
- `sweep`
- `attach`
- `detach`

Here is sample API output for each of these transactions:

**Broadcast**

```
{
    "result": {
        "tx_index": 25,
        "tx_hash": "e730b05d65034f972ffd6833c069ea0b65aaf6edf2cd4a4388b21d2889a3280f",
        "block_index": 129,
        "block_hash": "2f6beeca7a85a3166bbc95fa33b02a6fc236a558931b468f8e57bc3ebeeb9756",
        "block_time": 1740489665,
        "source": "bcrt1qquwz9xkh3dv34l49v32lk3kc283utd58ung2cn",
        "destination": null,
        "btc_amount": 0,
        "fee": 10000,
        "data": "1eeea6b9ef40f0428000000000000000000970726963652d555344",
        "supported": true,
        "utxos_info": " e730b05d65034f972ffd6833c069ea0b65aaf6edf2cd4a4388b21d2889a3280f:1 2 0",
        "transaction_type": "broadcast",
        "confirmed": true,
        "btc_amount_normalized": "0.00000000"
    }
}
```

**Btcpay**

```
{
    "result": {
        "tx_index": 57,
        "tx_hash": "5752b590a88afde0a2481b5ca3de5c7cc18ccb4d6ebcfc87e4c59512324d399e",
        "block_index": 182,
        "block_hash": "39753694feb9f7bc681f3a0accadd8ead562b18596198566b443596c4b3ba4ef",
        "block_time": 1740489847,
        "source": "bcrt1qdj4ckly3lwmjqld7pu60qu9myggm6pnd58ntz6",
        "destination": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
        "btc_amount": 2000,
        "fee": 10000,
        "data": "0b6a8b04722b5121498713e9ca34b3a634f0ef5f0cf3ee9a0753bd79b8c3f0cc1016693d3e8624b05db62587be692a301eba7dc962293096694f84142bc3bfc5fd",
        "supported": true,
        "utxos_info": " 5752b590a88afde0a2481b5ca3de5c7cc18ccb4d6ebcfc87e4c59512324d399e:0 3 1",
        "transaction_type": "btcpay",
        "confirmed": true,
        "btc_amount_normalized": "0.00002000"
    }
}
```

**Cancel**

```
{
    "result": {
        "tx_index": 63,
        "tx_hash": "f93a585e39ef051fa3b8ece892fc7e7c312af255705851e42df9fbb47f0983b0",
        "block_index": 188,
        "block_hash": "0f6dded4798fb8eae76b84df6174b9ddb7a308e48ba6ccdef8409cf05dd6a6aa",
        "block_time": 1740489870,
        "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
        "destination": null,
        "btc_amount": 0,
        "fee": 10000,
        "data": "466514dc909d289a00f85ba5b8db7b7198c6fafe5ed2e140773835a3fe73615f94",
        "supported": true,
        "utxos_info": " f93a585e39ef051fa3b8ece892fc7e7c312af255705851e42df9fbb47f0983b0:1 2 0",
        "transaction_type": "cancel",
        "confirmed": true,
        "btc_amount_normalized": "0.00000000"
    }
}
```

**Destroy**

```
{
    "result": {
        "tx_index": 117,
        "tx_hash": "49aaaa4a39e9fd16889036cae02cf2fdb65f96d4447a92dce1c811b959105a85",
        "block_index": 240,
        "block_hash": "2d83010c2269342ae95a9f94f19429b42ca16c40d4c17b843e62bf722a556452",
        "block_time": 1740490091,
        "source": "bcrt1qyyjgcgnjrxkznrdk8pc9dwp98twx5qesptttlg",
        "destination": null,
        "btc_amount": 0,
        "fee": 0,
        "data": "16000000000077ccb30000000047868c00010001c04e554c4c",
        "supported": true,
        "utxos_info": " 49aaaa4a39e9fd16889036cae02cf2fdb65f96d4447a92dce1c811b959105a85:1 2 0",
        "transaction_type": "issuance",
        "confirmed": true,
        "btc_amount_normalized": "0.00000000"
    }
}
```

**Dispenser**

```
{
    "result": {
        "tx_index": 114,
        "tx_hash": "c54957b9cbb662e2cc9eee1c09950f7365365a09abad1bdf1afb3cca05d63705",
        "block_index": 236,
        "block_hash": "2a55cafdaa4f1055aed6a18240c52a710f3da0cbffd88990a7422e9f09c7ee14",
        "block_time": 1740490077,
        "source": "bcrt1qv82qg4jp6nn6wahdnx2d2u6cdfxyc2zuw7u9mv",
        "destination": null,
        "btc_amount": 0,
        "fee": 0,
        "data": "0c000000000000000100000000000000010000000000001388000000000000000100",
        "supported": true,
        "utxos_info": " c54957b9cbb662e2cc9eee1c09950f7365365a09abad1bdf1afb3cca05d63705:1 2 0",
        "transaction_type": "dispenser",
        "confirmed": true,
        "btc_amount_normalized": "0.00000000"
    }
}
```

**Dispense**

```
{
    "result": {
        "tx_index": 121,
        "tx_hash": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3",
        "block_index": 245,
        "block_hash": "44fcdffec36869bfac0fcbe3dee59bfa74c885e0fd9b7f4eb83f716eecd633fc",
        "block_time": 1740490111,
        "source": "bcrt1qwats7crkdl4z6ac6tz2fn6pz6a5dt7hxzjustu",
        "destination": "bcrt1qquwz9xkh3dv34l49v32lk3kc283utd58ung2cn",
        "btc_amount": 1000,
        "fee": 0,
        "data": "0d00",
        "supported": true,
        "utxos_info": "e1da70a78196a01b1d83828ad454578cd9ccd3a37215d0732042f9cd20028b65:1 d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3:0 3 1",
        "transaction_type": "dispense",
        "confirmed": true,
        "btc_amount_normalized": "0.00001000"
    }
}
```

**Dividend**

```
{
    "result": {
        "tx_index": 42,
        "tx_hash": "6404a2478fe98ef828070b2da13ef824ea7cebae41e377cfdee911728b8c926a",
        "block_index": 146,
        "block_hash": "44acd57a637e2c5c4cefb2893d2652cce8b732950c25e9e68f5ca73ffe043a73",
        "block_time": 1740489729,
        "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
        "destination": null,
        "btc_amount": 0,
        "fee": 10000,
        "data": "320000000005f5e100000000182b37176e0000000000000001",
        "supported": true,
        "utxos_info": " 6404a2478fe98ef828070b2da13ef824ea7cebae41e377cfdee911728b8c926a:1 2 0",
        "transaction_type": "dividend",
        "confirmed": true,
        "btc_amount_normalized": "0.00000000"
    }
}
```

**Issuance**

```
{
    "result": {
        "tx_index": 120,
        "tx_hash": "c6043e9ceafa1ced581e48b9bb273a6b703ad6717ff27494f1a137dfcd039321",
        "block_index": 243,
        "block_hash": "12d4f9dd3786b1c71eb33af5170df7a0adb67864ea43afa06da43431972140c6",
        "block_time": 1740490102,
        "source": "bcrt1qquwz9xkh3dv34l49v32lk3kc283utd58ung2cn",
        "destination": null,
        "btc_amount": 0,
        "fee": 10000,
        "data": "5a4f50454e464149527c7c307c317c31307c307c307c307c307c307c307c307c307c307c307c317c",
        "supported": true,
        "utxos_info": " c6043e9ceafa1ced581e48b9bb273a6b703ad6717ff27494f1a137dfcd039321:1 2 0",
        "transaction_type": "fairminter",
        "confirmed": true,
        "btc_amount_normalized": "0.00000000"
    }
}
```

**Order**

```
{
    "result": {
        "tx_index": 119,
        "tx_hash": "896df8fca70776cb0b38bd40c0f30d6cf657a8e5a62fb5542597d23bca4cbcd2",
        "block_index": 242,
        "block_hash": "535e3df082a630fbd8213a240a46545bd1bc7b94346c2b337dbe86265f72b50f",
        "block_time": 1740490099,
        "source": "bcrt1qquwz9xkh3dv34l49v32lk3kc283utd58ung2cn",
        "destination": null,
        "btc_amount": 0,
        "fee": 10000,
        "data": "0a000000000000000000000000000003e8000003f1a69ea1d300000000000003e800150000000000000000",
        "supported": true,
        "utxos_info": " 896df8fca70776cb0b38bd40c0f30d6cf657a8e5a62fb5542597d23bca4cbcd2:1 2 0",
        "transaction_type": "order",
        "confirmed": true,
        "btc_amount_normalized": "0.00000000"
    }
}
```

**Enhanced_send**

```
{
    "result": {
        "tx_index": 77,
        "tx_hash": "0022913062f0470672f6b471ff669c43b45ce767fa522bcd64b909f606d59cd0",
        "block_index": 201,
        "block_hash": "690f6bce9c2313f15d4a73c04123437539a88fee9827cee78c01e572e7763647",
        "block_time": 1740489923,
        "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
        "destination": null,
        "btc_amount": 0,
        "fee": 10000,
        "data": "02000000178d82231300000000000003e8806cab8b7c91fbb7207dbe0f34f070bb2211bd066d",
        "supported": true,
        "utxos_info": " 0022913062f0470672f6b471ff669c43b45ce767fa522bcd64b909f606d59cd0:1 2 0",
        "transaction_type": "enhanced_send",
        "confirmed": true,
        "btc_amount_normalized": "0.00000000"
    }
}
```

**Mpma_send**

```
{
    "result": {
        "tx_index": 81,
        "tx_hash": "10823d6a8b3b44da8361e887a02942fa28973b782e59ec26ece5a7c88b8d974d",
        "block_index": 205,
        "block_hash": "638370e27b741fc8f6114d475dd54cff84cd548ac9b54db3656691469f7dc7d0",
        "block_time": 1740489939,
        "source": "bcrt1qdj4ckly3lwmjqld7pu60qu9myggm6pnd58ntz6",
        "destination": null,
        "btc_amount": 0,
        "fee": 10000,
        "data": "03000380293ba4d53f14e5d071a5294a216269c455519f1180978506450cf51f83ec6f5648b40686ccd56ce921809b4723f09a5df31a06280cb9c843df516eecbe6188746865206d656d6f8000000bc6c11189a80000000000000052000000000000000a856d656d6f3380000000000000008000000000000000542b6b2b6b7988",
        "supported": true,
        "utxos_info": " 10823d6a8b3b44da8361e887a02942fa28973b782e59ec26ece5a7c88b8d974d:0 4 ",
        "transaction_type": "mpma",
        "confirmed": true,
        "btc_amount_normalized": "0.00000000"
    }
}
```

**Sweep**

```
{
    "result": {
        "tx_index": 65,
        "tx_hash": "e0043724de46115717f26d5126665cd592e152dc397d4ecbcd7e41809a575b49",
        "block_index": 190,
        "block_hash": "087f4452c91e442691c3fb858ab875282ef1745cf59643c4d6682ac8747636cd",
        "block_time": 1740489877,
        "source": "bcrt1qj7zsv3gv750c8mr02eytgp5xen2ke6fpak6ztc",
        "destination": null,
        "btc_amount": 0,
        "fee": 10000,
        "data": "04809b4723f09a5df31a06280cb9c843df516eecbe61017377656570206d7920617373657473",
        "supported": true,
        "utxos_info": " e0043724de46115717f26d5126665cd592e152dc397d4ecbcd7e41809a575b49:1 2 0",
        "transaction_type": "sweep",
        "confirmed": true,
        "btc_amount_normalized": "0.00000000"
    }
}
```

**Attach**

```
{
    "result": {
        "tx_index": 112,
        "tx_hash": "a702c044a28ed7855dac07e2dd7b9c5925db98cae259cfb2ca1c29158149b5d6",
        "block_index": 235,
        "block_hash": "1dcf4d83398780796c32281acdaeb0820694f3e24720dfc04dc99f72fb3058f7",
        "block_time": 1740490071,
        "source": "bcrt1qyyjgcgnjrxkznrdk8pc9dwp98twx5qesptttlg",
        "destination": "bcrt1qyyjgcgnjrxkznrdk8pc9dwp98twx5qesptttlg",
        "btc_amount": 10000,
        "fee": 10000,
        "data": "65444554414348417c3130303030303030307c",
        "supported": true,
        "utxos_info": " a702c044a28ed7855dac07e2dd7b9c5925db98cae259cfb2ca1c29158149b5d6:0 3 1",
        "transaction_type": "attach",
        "confirmed": true,
        "btc_amount_normalized": "0.00010000"
    }
}
```

**Detach**

```
{
    "result": {
        "tx_index": 111,
        "tx_hash": "0d1319c529b7c96f1df0c028a6b1fcb99341b7ecb0dbd8f5626ad9afad76b1c8",
        "block_index": 234,
        "block_hash": "7eae4ca21212152b9fe419cb9796a6c8a248fef4cefcab3841411b2adb974875",
        "block_time": 1740490068,
        "source": "bcrt1qyyjgcgnjrxkznrdk8pc9dwp98twx5qesptttlg",
        "destination": null,
        "btc_amount": 0,
        "fee": 0,
        "data": "6630",
        "supported": true,
        "utxos_info": "20c0fc221da530e6e260f1ee566d166e62abc63cb109a4b309b1a76a06aaa7a5:0 0d1319c529b7c96f1df0c028a6b1fcb99341b7ecb0dbd8f5626ad9afad76b1c8:1 2 0",
        "transaction_type": "detach",
        "confirmed": true,
        "btc_amount_normalized": "0.00000000"
    }
}
```

### Get Transactions [GET /v2/transactions{?type}{&show_unconfirmed}{&cursor}{&limit}{&offset}{&verbose}]

Returns the list of the last ten transactions

+ Parameters
    + type (enum[str], optional) - The type of the transaction to return
        + Default: `all`
        + Members
            + `all`
            + `bet`
            + `broadcast`
            + `btcpay`
            + `cancel`
            + `destroy`
            + `dispenser`
            + `dispense`
            + `dividend`
            + `issuance`
            + `order`
            + `send`
            + `enhanced_send`
            + `mpma`
            + `rps`
            + `rpsresolve`
            + `sweep`
            + `fairminter`
            + `fairmint`
            + `attach`
            + `detach`
            + `utxomove`
            + `unknown`
    + show_unconfirmed (bool, optional) - Show unconfirmed transactions
        + Default: `False`
    + cursor: `121` (str, optional) - The index of the most recent transactions to return
        + Default: `None`
    + limit: `2` (int, optional) - The number of transactions to return
        + Default: `10`
    + offset (int, optional) - The number of lines to skip before returning results (overrides the `cursor` parameter)
        + Default: `None`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": [
                {
                    "tx_index": 121,
                    "tx_hash": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3",
                    "block_index": 245,
                    "block_hash": "44fcdffec36869bfac0fcbe3dee59bfa74c885e0fd9b7f4eb83f716eecd633fc",
                    "block_time": 1740490111,
                    "source": "bcrt1qwats7crkdl4z6ac6tz2fn6pz6a5dt7hxzjustu",
                    "destination": "bcrt1qquwz9xkh3dv34l49v32lk3kc283utd58ung2cn",
                    "btc_amount": 1000,
                    "fee": 0,
                    "data": "0d00",
                    "supported": true,
                    "utxos_info": "e1da70a78196a01b1d83828ad454578cd9ccd3a37215d0732042f9cd20028b65:1 d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3:0 3 1",
                    "transaction_type": "dispense",
                    "events": [
                        {
                            "event_index": 1034,
                            "event": "UTXO_MOVE",
                            "params": {
                                "asset": "MYASSETA",
                                "block_index": 245,
                                "destination": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3:0",
                                "destination_address": "bcrt1qquwz9xkh3dv34l49v32lk3kc283utd58ung2cn",
                                "msg_index": 0,
                                "quantity": 2000000000,
                                "send_type": "move",
                                "source": "e1da70a78196a01b1d83828ad454578cd9ccd3a37215d0732042f9cd20028b65:1",
                                "source_address": "bcrt1qwats7crkdl4z6ac6tz2fn6pz6a5dt7hxzjustu",
                                "status": "valid",
                                "tx_hash": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3",
                                "tx_index": 121,
                                "block_time": 1740490111,
                                "asset_info": {
                                    "asset_longname": null,
                                    "description": "My super asset A",
                                    "issuer": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                                    "divisible": true,
                                    "locked": false,
                                    "owner": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n"
                                },
                                "quantity_normalized": "20.00000000"
                            },
                            "tx_hash": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3",
                            "block_index": 245,
                            "block_time": 1740490111
                        },
                        {
                            "event_index": 1037,
                            "event": "UTXO_MOVE",
                            "params": {
                                "asset": "XCP",
                                "block_index": 245,
                                "destination": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3:0",
                                "destination_address": "bcrt1qquwz9xkh3dv34l49v32lk3kc283utd58ung2cn",
                                "msg_index": 1,
                                "quantity": 2000000000,
                                "send_type": "move",
                                "source": "e1da70a78196a01b1d83828ad454578cd9ccd3a37215d0732042f9cd20028b65:1",
                                "source_address": "bcrt1qwats7crkdl4z6ac6tz2fn6pz6a5dt7hxzjustu",
                                "status": "valid",
                                "tx_hash": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3",
                                "tx_index": 121,
                                "block_time": 1740490111,
                                "asset_info": {
                                    "asset_longname": null,
                                    "description": "The Counterparty protocol native currency",
                                    "issuer": null,
                                    "divisible": true,
                                    "locked": true,
                                    "owner": null
                                },
                                "quantity_normalized": "20.00000000"
                            },
                            "tx_hash": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3",
                            "block_index": 245,
                            "block_time": 1740490111
                        },
                        {
                            "event_index": 1039,
                            "event": "DISPENSER_UPDATE",
                            "params": {
                                "asset": "XCP",
                                "dispense_count": 2,
                                "give_remaining": 9268,
                                "source": "bcrt1qquwz9xkh3dv34l49v32lk3kc283utd58ung2cn",
                                "status": 0,
                                "tx_hash": "1e6f693fe2759c736df4febc587f45124e79e5d8d1ce2b79f8c0bbf0f18fd87d",
                                "asset_info": {
                                    "asset_longname": null,
                                    "description": "The Counterparty protocol native currency",
                                    "issuer": null,
                                    "divisible": true,
                                    "locked": true,
                                    "owner": null
                                },
                                "give_remaining_normalized": "0.00009268"
                            },
                            "tx_hash": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3",
                            "block_index": 245,
                            "block_time": 1740490111
                        },
                        {
                            "event_index": 1040,
                            "event": "DISPENSE",
                            "params": {
                                "asset": "XCP",
                                "block_index": 245,
                                "btc_amount": 1000,
                                "destination": "bcrt1qwats7crkdl4z6ac6tz2fn6pz6a5dt7hxzjustu",
                                "dispense_index": 0,
                                "dispense_quantity": 66,
                                "dispenser_tx_hash": "1e6f693fe2759c736df4febc587f45124e79e5d8d1ce2b79f8c0bbf0f18fd87d",
                                "source": "bcrt1qquwz9xkh3dv34l49v32lk3kc283utd58ung2cn",
                                "tx_hash": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3",
                                "tx_index": 121,
                                "block_time": 1740490111,
                                "asset_info": {
                                    "asset_longname": null,
                                    "description": "The Counterparty protocol native currency",
                                    "issuer": null,
                                    "divisible": true,
                                    "locked": true,
                                    "owner": null
                                },
                                "dispense_quantity_normalized": "0.00000066",
                                "btc_amount_normalized": "0.00001000"
                            },
                            "tx_hash": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3",
                            "block_index": 245,
                            "block_time": 1740490111
                        }
                    ],
                    "unpacked_data": {
                        "message_type": "dispense",
                        "message_type_id": 13,
                        "message_data": {
                            "data": "00"
                        }
                    },
                    "btc_amount_normalized": "0.00001000"
                },
                {
                    "tx_index": 120,
                    "tx_hash": "c6043e9ceafa1ced581e48b9bb273a6b703ad6717ff27494f1a137dfcd039321",
                    "block_index": 243,
                    "block_hash": "12d4f9dd3786b1c71eb33af5170df7a0adb67864ea43afa06da43431972140c6",
                    "block_time": 1740490102,
                    "source": "bcrt1qquwz9xkh3dv34l49v32lk3kc283utd58ung2cn",
                    "destination": null,
                    "btc_amount": 0,
                    "fee": 10000,
                    "data": "5a4f50454e464149527c7c307c317c31307c307c307c307c307c307c307c307c307c307c307c317c",
                    "supported": true,
                    "utxos_info": " c6043e9ceafa1ced581e48b9bb273a6b703ad6717ff27494f1a137dfcd039321:1 2 0",
                    "transaction_type": "fairminter",
                    "events": [
                        {
                            "event_index": 1021,
                            "event": "NEW_FAIRMINTER",
                            "params": {
                                "asset": "OPENFAIR",
                                "asset_longname": null,
                                "asset_parent": null,
                                "block_index": 243,
                                "burn_payment": false,
                                "description": "",
                                "divisible": true,
                                "end_block": 0,
                                "hard_cap": 0,
                                "lock_description": false,
                                "lock_quantity": false,
                                "max_mint_per_tx": 10,
                                "minted_asset_commission_int": 0,
                                "pre_minted": false,
                                "premint_quantity": 0,
                                "price": 0,
                                "quantity_by_price": 1,
                                "soft_cap": 0,
                                "soft_cap_deadline_block": 0,
                                "source": "bcrt1qquwz9xkh3dv34l49v32lk3kc283utd58ung2cn",
                                "start_block": 0,
                                "status": "open",
                                "tx_hash": "c6043e9ceafa1ced581e48b9bb273a6b703ad6717ff27494f1a137dfcd039321",
                                "tx_index": 120,
                                "block_time": 1740490102,
                                "price_normalized": "0.0000000000000000",
                                "hard_cap_normalized": "0.00000000",
                                "soft_cap_normalized": "0.00000000",
                                "quantity_by_price_normalized": "0.00000001",
                                "max_mint_per_tx_normalized": "0.00000010",
                                "premint_quantity_normalized": "0.00000000"
                            },
                            "tx_hash": "c6043e9ceafa1ced581e48b9bb273a6b703ad6717ff27494f1a137dfcd039321",
                            "block_index": 243,
                            "block_time": 1740490102
                        },
                        {
                            "event_index": 1022,
                            "event": "ASSET_CREATION",
                            "params": {
                                "asset_id": "117132633401",
                                "asset_longname": null,
                                "asset_name": "OPENFAIR",
                                "block_index": 243,
                                "block_time": 1740490102
                            },
                            "tx_hash": "c6043e9ceafa1ced581e48b9bb273a6b703ad6717ff27494f1a137dfcd039321",
                            "block_index": 243,
                            "block_time": 1740490102
                        },
                        {
                            "event_index": 1023,
                            "event": "ASSET_ISSUANCE",
                            "params": {
                                "asset": "OPENFAIR",
                                "asset_events": "open_fairminter",
                                "asset_longname": null,
                                "block_index": 243,
                                "call_date": 0,
                                "call_price": 0,
                                "callable": false,
                                "description": "",
                                "divisible": true,
                                "fair_minting": true,
                                "fee_paid": 50000000.0,
                                "issuer": "bcrt1qquwz9xkh3dv34l49v32lk3kc283utd58ung2cn",
                                "locked": false,
                                "quantity": 0,
                                "reset": false,
                                "source": "bcrt1qquwz9xkh3dv34l49v32lk3kc283utd58ung2cn",
                                "status": "valid",
                                "transfer": false,
                                "tx_hash": "c6043e9ceafa1ced581e48b9bb273a6b703ad6717ff27494f1a137dfcd039321",
                                "tx_index": 120,
                                "block_time": 1740490102,
                                "quantity_normalized": "0.00000000",
                                "fee_paid_normalized": "0.50000000"
                            },
                            "tx_hash": "c6043e9ceafa1ced581e48b9bb273a6b703ad6717ff27494f1a137dfcd039321",
                            "block_index": 243,
                            "block_time": 1740490102
                        }
                    ],
                    "unpacked_data": {
                        "message_type": "fairminter",
                        "message_type_id": 90,
                        "message_data": {
                            "asset": "OPENFAIR",
                            "asset_parent": "",
                            "price": 0,
                            "quantity_by_price": 1,
                            "max_mint_per_tx": 10,
                            "hard_cap": 0,
                            "premint_quantity": 0,
                            "start_block": 0,
                            "end_block": 0,
                            "soft_cap": 0,
                            "soft_cap_deadline_block": 0,
                            "minted_asset_commission": "0.00000000",
                            "burn_payment": false,
                            "lock_description": false,
                            "lock_quantity": false,
                            "divisible": true,
                            "description": "",
                            "price_normalized": "0.0000000000000000",
                            "hard_cap_normalized": "0.00000000",
                            "soft_cap_normalized": "0.00000000",
                            "quantity_by_price_normalized": "0.00000001",
                            "max_mint_per_tx_normalized": "0.00000010",
                            "premint_quantity_normalized": "0.00000000"
                        }
                    },
                    "btc_amount_normalized": "0.00000000"
                }
            ],
            "next_cursor": 119,
            "result_count": 122
        }
    ```

### Get Transaction Types Count [GET /v2/transactions/counts{?verbose}]

Returns the count of each transaction type

+ Parameters
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": [
                {
                    "transaction_type": "issuance",
                    "count": 20
                },
                {
                    "transaction_type": "fairminter",
                    "count": 18
                },
                {
                    "transaction_type": "fairmint",
                    "count": 15
                },
                {
                    "transaction_type": "burn",
                    "count": 10
                },
                {
                    "transaction_type": "order",
                    "count": 9
                },
                {
                    "transaction_type": "attach",
                    "count": 9
                },
                {
                    "transaction_type": "dispenser",
                    "count": 9
                },
                {
                    "transaction_type": "utxomove",
                    "count": 7
                },
                {
                    "transaction_type": "dispense",
                    "count": 6
                },
                {
                    "transaction_type": "mpma",
                    "count": 5
                },
                {
                    "transaction_type": "detach",
                    "count": 4
                },
                {
                    "transaction_type": "enhanced_send",
                    "count": 3
                },
                {
                    "transaction_type": "broadcast",
                    "count": 2
                },
                {
                    "transaction_type": "destroy",
                    "count": 1
                },
                {
                    "transaction_type": "sweep",
                    "count": 1
                },
                {
                    "transaction_type": "cancel",
                    "count": 1
                },
                {
                    "transaction_type": "btcpay",
                    "count": 1
                },
                {
                    "transaction_type": "dividend",
                    "count": 1
                }
            ],
            "next_cursor": null,
            "result_count": 18
        }
    ```

### Info [GET /v2/transactions/info{?rawtransaction}{&block_index}{&verbose}]

Returns Counterparty information from a raw transaction in hex format.

+ Parameters
    + rawtransaction: `02000000000101c9161f323b5c3c48c0971953515bdc677f5ed840de441bf48cc3ddac2755f9fe0200000000ffffffff02b80b000000000000160014293ba4d53f14e5d071a5294a216269c455519f1100d50727010000001600146cab8b7c91fbb7207dbe0f34f070bb2211bd066d02473044022008abf013f5a0ba1ab9e17d73753bb84beac12831ce30a7931324e95cdd3dd61902203f97c50a8f9779e5439204a9b4dc089d4c166cd489ea99669fb40570289a3856012102bd54ab1d8cc9637ed9c6ca863d02f0420f6b89ba40d93da176bd8e1d2217832200000000` (str, required) - Raw transaction in hex format
    + block_index (int, optional) - Block index mandatory for transactions before block 335000
        + Default: `None`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": {
                "source": "",
                "destination": null,
                "btc_amount": null,
                "fee": null,
                "decoded_tx": {
                    "version": 2,
                    "segwit": true,
                    "coinbase": false,
                    "lock_time": 0,
                    "tx_id": "83950e052c2fe3e4f8aacd9e06b0abe1cffb81c9ed13452953684b3508515bd7",
                    "tx_hash": "83950e052c2fe3e4f8aacd9e06b0abe1cffb81c9ed13452953684b3508515bd7",
                    "vtxinwit": [
                        [
                            "3044022008abf013f5a0ba1ab9e17d73753bb84beac12831ce30a7931324e95cdd3dd61902203f97c50a8f9779e5439204a9b4dc089d4c166cd489ea99669fb40570289a385601",
                            "02bd54ab1d8cc9637ed9c6ca863d02f0420f6b89ba40d93da176bd8e1d22178322"
                        ]
                    ],
                    "parsed_vouts": [
                        [
                            "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                            "bcrt1qdj4ckly3lwmjqld7pu60qu9myggm6pnd58ntz6"
                        ],
                        4949795000,
                        -4949795000,
                        "",
                        [
                            [
                                "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                                3000
                            ],
                            [
                                "bcrt1qdj4ckly3lwmjqld7pu60qu9myggm6pnd58ntz6",
                                4949792000
                            ]
                        ]
                    ],
                    "vin": [
                        {
                            "hash": "fef95527acddc38cf41b44de40d85e7f67dc5b51531997c0483c5c3b321f16c9",
                            "n": 2,
                            "sequence": 4294967295,
                            "script_sig": "",
                            "info": null
                        }
                    ],
                    "vout": [
                        {
                            "value": 3000,
                            "script_pub_key": "0014293ba4d53f14e5d071a5294a216269c455519f11"
                        },
                        {
                            "value": 4949792000,
                            "script_pub_key": "00146cab8b7c91fbb7207dbe0f34f070bb2211bd066d"
                        }
                    ]
                },
                "data": null,
                "unpacked_data": null
            }
        }
    ```

### Info By Tx Hash [GET /v2/transactions/{tx_hash}/info{?verbose}]

Returns Counterparty information from a transaction hash.

+ Parameters
    + tx_hash: `0ab945476155bacbb733e71fe0fe435cdb13c4954a1231bfcabc678c0ec790eb` (str, required) - Transaction hash
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": {
                "source": "bcrt1qndrj8uy6the35p3gpjuuss7l29hwe0npylexmz",
                "destination": null,
                "btc_amount": 0,
                "fee": 10000,
                "decoded_tx": {
                    "version": 2,
                    "segwit": true,
                    "coinbase": false,
                    "lock_time": 0,
                    "tx_id": "0ab945476155bacbb733e71fe0fe435cdb13c4954a1231bfcabc678c0ec790eb",
                    "tx_hash": "0ab945476155bacbb733e71fe0fe435cdb13c4954a1231bfcabc678c0ec790eb",
                    "vtxinwit": [
                        [
                            "304402201aa98398ba13d22385b29a6e043813b07fa05c723ac09463565e726c04b7506f02207292c5c1a3742f180dc5284c5054b0186cc80c0510e14cc0024c4ae558b7d40601",
                            "021a4ef5e6eacef0bd6d568db42cb2b89261b427c401519ff4e5c4d74b5eb8edd0"
                        ]
                    ],
                    "parsed_vouts": [
                        [],
                        0,
                        -4949940000,
                        "020000000000000001000000000000271080978506450cf51f83ec6f5648b40686ccd56ce921",
                        [
                            [
                                null,
                                null
                            ],
                            [
                                "bcrt1qndrj8uy6the35p3gpjuuss7l29hwe0npylexmz",
                                4949940000
                            ]
                        ]
                    ],
                    "vin": [
                        {
                            "hash": "361c12f0621cfb9d6fdc1bff4647705909256ce8ae74028af623e8a68328917b",
                            "n": 1,
                            "sequence": 4294967295,
                            "script_sig": "",
                            "info": {
                                "value": 4949950000,
                                "script_pub_key": "00149b4723f09a5df31a06280cb9c843df516eecbe61",
                                "is_segwit": true
                            }
                        }
                    ],
                    "vout": [
                        {
                            "value": 0,
                            "script_pub_key": "6a2e3f8f5fcd3b5230d72e7448cc419a3debfefaf5656cc64a6b13e27b381c3c1aec7aa419984b6e6fae169ca7fd9230"
                        },
                        {
                            "value": 4949940000,
                            "script_pub_key": "00149b4723f09a5df31a06280cb9c843df516eecbe61"
                        }
                    ]
                },
                "data": "020000000000000001000000000000271080978506450cf51f83ec6f5648b40686ccd56ce921",
                "unpacked_data": {
                    "message_type": "enhanced_send",
                    "message_type_id": 2,
                    "message_data": {
                        "asset": "XCP",
                        "quantity": 10000,
                        "address": "bcrt1qj7zsv3gv750c8mr02eytgp5xen2ke6fpak6ztc",
                        "memo": null,
                        "asset_info": {
                            "asset_longname": null,
                            "description": "The Counterparty protocol native currency",
                            "issuer": null,
                            "divisible": true,
                            "locked": true,
                            "owner": null
                        },
                        "quantity_normalized": "0.00010000"
                    }
                },
                "btc_amount_normalized": "0.00000000"
            }
        }
    ```

### Unpack [GET /v2/transactions/unpack{?datahex}{&block_index}{&verbose}]

Unpacks Counterparty data in hex format and returns the message type and data.

+ Parameters
    + datahex: `020000000001016a65c1624e53f4d33ce02e726a6606faed60cc014d5b1a578ba3e09b4b3f8f890100000000ffffffff020000000000000000176a150d55e8b6118808b7b663b365473f142274028b8af60245092701000000160014a3df8a5a83d4e2827b59b43f5ce6ce5d2e52093f0247304402204b7a2859cbce34e725a1132fec2dd4b075503dadff0a0c407ae7c22a7712fe4d0220563ceb2ceebdf649343bb24819fc808639cce7781305b4588ffbe4a20390d2780121020ace9adf60fe4ec05dab922ccdc5727cbf664cafc7cdb845de534855266314c800000000` (str, required) - Data in hex format
    + block_index (int, optional) - Block index of the transaction containing this data
        + Default: `None`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": {
                "message_type": "enhanced_send",
                "message_type_id": 2,
                "message_data": {
                    "error": "memo too long"
                }
            }
        }
    ```

### Get Transaction By Tx Index [GET /v2/transactions/{tx_index}{?verbose}]

Returns a transaction by its index.

+ Parameters
    + tx_index: `121` (int, required) - The index of the transaction
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": {
                "tx_index": 121,
                "tx_hash": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3",
                "block_index": 245,
                "block_hash": "44fcdffec36869bfac0fcbe3dee59bfa74c885e0fd9b7f4eb83f716eecd633fc",
                "block_time": 1740490111,
                "source": "bcrt1qwats7crkdl4z6ac6tz2fn6pz6a5dt7hxzjustu",
                "destination": "bcrt1qquwz9xkh3dv34l49v32lk3kc283utd58ung2cn",
                "btc_amount": 1000,
                "fee": 0,
                "data": "0d00",
                "supported": true,
                "utxos_info": "e1da70a78196a01b1d83828ad454578cd9ccd3a37215d0732042f9cd20028b65:1 d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3:0 3 1",
                "transaction_type": "dispense",
                "confirmed": true,
                "btc_amount_normalized": "0.00001000"
            }
        }
    ```

### Get Transaction By Hash [GET /v2/transactions/{tx_hash}{?verbose}]

Returns a transaction by its hash.

+ Parameters
    + tx_hash: `d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3` (str, required) - The hash of the transaction
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": {
                "tx_index": 121,
                "tx_hash": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3",
                "block_index": 245,
                "block_hash": "44fcdffec36869bfac0fcbe3dee59bfa74c885e0fd9b7f4eb83f716eecd633fc",
                "block_time": 1740490111,
                "source": "bcrt1qwats7crkdl4z6ac6tz2fn6pz6a5dt7hxzjustu",
                "destination": "bcrt1qquwz9xkh3dv34l49v32lk3kc283utd58ung2cn",
                "btc_amount": 1000,
                "fee": 0,
                "data": "0d00",
                "supported": true,
                "utxos_info": "e1da70a78196a01b1d83828ad454578cd9ccd3a37215d0732042f9cd20028b65:1 d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3:0 3 1",
                "transaction_type": "dispense",
                "confirmed": true,
                "btc_amount_normalized": "0.00001000"
            }
        }
    ```

### Get Events By Transaction Index [GET /v2/transactions/{tx_index}/events{?event_name}{&cursor}{&limit}{&offset}{&verbose}]

Returns the events of a transaction

+ Parameters
    + tx_index: `121` (int, required) - The index of the transaction to return
    + event_name (str, optional) - Comma separated list of events to return
        + Default: `None`
    + cursor (str, optional) - The last event index to return
        + Default: `None`
    + limit: `5` (int, optional) - The maximum number of events to return
        + Default: `100`
    + offset (int, optional) - The number of lines to skip before returning results (overrides the `cursor` parameter)
        + Default: `None`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": [
                {
                    "event_index": 1041,
                    "event": "TRANSACTION_PARSED",
                    "params": {
                        "supported": true,
                        "tx_hash": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3",
                        "tx_index": 121
                    },
                    "tx_hash": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3",
                    "block_index": 245,
                    "block_time": 1740490111
                },
                {
                    "event_index": 1040,
                    "event": "DISPENSE",
                    "params": {
                        "asset": "XCP",
                        "block_index": 245,
                        "btc_amount": 1000,
                        "destination": "bcrt1qwats7crkdl4z6ac6tz2fn6pz6a5dt7hxzjustu",
                        "dispense_index": 0,
                        "dispense_quantity": 66,
                        "dispenser_tx_hash": "1e6f693fe2759c736df4febc587f45124e79e5d8d1ce2b79f8c0bbf0f18fd87d",
                        "source": "bcrt1qquwz9xkh3dv34l49v32lk3kc283utd58ung2cn",
                        "tx_hash": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3",
                        "tx_index": 121,
                        "block_time": 1740490111,
                        "asset_info": {
                            "asset_longname": null,
                            "description": "The Counterparty protocol native currency",
                            "issuer": null,
                            "divisible": true,
                            "locked": true,
                            "owner": null
                        },
                        "dispense_quantity_normalized": "0.00000066",
                        "btc_amount_normalized": "0.00001000"
                    },
                    "tx_hash": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3",
                    "block_index": 245,
                    "block_time": 1740490111
                },
                {
                    "event_index": 1039,
                    "event": "DISPENSER_UPDATE",
                    "params": {
                        "asset": "XCP",
                        "dispense_count": 2,
                        "give_remaining": 9268,
                        "source": "bcrt1qquwz9xkh3dv34l49v32lk3kc283utd58ung2cn",
                        "status": 0,
                        "tx_hash": "1e6f693fe2759c736df4febc587f45124e79e5d8d1ce2b79f8c0bbf0f18fd87d",
                        "asset_info": {
                            "asset_longname": null,
                            "description": "The Counterparty protocol native currency",
                            "issuer": null,
                            "divisible": true,
                            "locked": true,
                            "owner": null
                        },
                        "give_remaining_normalized": "0.00009268"
                    },
                    "tx_hash": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3",
                    "block_index": 245,
                    "block_time": 1740490111
                },
                {
                    "event_index": 1038,
                    "event": "CREDIT",
                    "params": {
                        "address": "bcrt1qwats7crkdl4z6ac6tz2fn6pz6a5dt7hxzjustu",
                        "asset": "XCP",
                        "block_index": 245,
                        "calling_function": "dispense",
                        "event": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3",
                        "quantity": 66,
                        "tx_index": 121,
                        "utxo": null,
                        "utxo_address": null,
                        "block_time": 1740490111,
                        "asset_info": {
                            "asset_longname": null,
                            "description": "The Counterparty protocol native currency",
                            "issuer": null,
                            "divisible": true,
                            "locked": true,
                            "owner": null
                        },
                        "quantity_normalized": "0.00000066"
                    },
                    "tx_hash": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3",
                    "block_index": 245,
                    "block_time": 1740490111
                },
                {
                    "event_index": 1037,
                    "event": "UTXO_MOVE",
                    "params": {
                        "asset": "XCP",
                        "block_index": 245,
                        "destination": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3:0",
                        "destination_address": "bcrt1qquwz9xkh3dv34l49v32lk3kc283utd58ung2cn",
                        "msg_index": 1,
                        "quantity": 2000000000,
                        "send_type": "move",
                        "source": "e1da70a78196a01b1d83828ad454578cd9ccd3a37215d0732042f9cd20028b65:1",
                        "source_address": "bcrt1qwats7crkdl4z6ac6tz2fn6pz6a5dt7hxzjustu",
                        "status": "valid",
                        "tx_hash": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3",
                        "tx_index": 121,
                        "block_time": 1740490111,
                        "asset_info": {
                            "asset_longname": null,
                            "description": "The Counterparty protocol native currency",
                            "issuer": null,
                            "divisible": true,
                            "locked": true,
                            "owner": null
                        },
                        "quantity_normalized": "20.00000000"
                    },
                    "tx_hash": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3",
                    "block_index": 245,
                    "block_time": 1740490111
                }
            ],
            "next_cursor": 1036,
            "result_count": 12
        }
    ```

### Get Events By Transaction Hash [GET /v2/transactions/{tx_hash}/events{?event_name}{&cursor}{&limit}{&offset}{&verbose}]

Returns the events of a transaction

+ Parameters
    + tx_hash: `d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3` (str, required) - The hash of the transaction to return
    + event_name (str, optional) - Comma separated list of events to return
        + Default: `None`
    + cursor: `1042` (str, optional) - The last event index to return
        + Default: `None`
    + limit: `5` (int, optional) - The maximum number of events to return
        + Default: `100`
    + offset (int, optional) - The number of lines to skip before returning results (overrides the `cursor` parameter)
        + Default: `None`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": [
                {
                    "event_index": 1041,
                    "event": "TRANSACTION_PARSED",
                    "params": {
                        "supported": true,
                        "tx_hash": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3",
                        "tx_index": 121
                    },
                    "tx_hash": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3",
                    "block_index": 245,
                    "block_time": 1740490111
                },
                {
                    "event_index": 1040,
                    "event": "DISPENSE",
                    "params": {
                        "asset": "XCP",
                        "block_index": 245,
                        "btc_amount": 1000,
                        "destination": "bcrt1qwats7crkdl4z6ac6tz2fn6pz6a5dt7hxzjustu",
                        "dispense_index": 0,
                        "dispense_quantity": 66,
                        "dispenser_tx_hash": "1e6f693fe2759c736df4febc587f45124e79e5d8d1ce2b79f8c0bbf0f18fd87d",
                        "source": "bcrt1qquwz9xkh3dv34l49v32lk3kc283utd58ung2cn",
                        "tx_hash": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3",
                        "tx_index": 121,
                        "block_time": 1740490111,
                        "asset_info": {
                            "asset_longname": null,
                            "description": "The Counterparty protocol native currency",
                            "issuer": null,
                            "divisible": true,
                            "locked": true,
                            "owner": null
                        },
                        "dispense_quantity_normalized": "0.00000066",
                        "btc_amount_normalized": "0.00001000"
                    },
                    "tx_hash": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3",
                    "block_index": 245,
                    "block_time": 1740490111
                },
                {
                    "event_index": 1039,
                    "event": "DISPENSER_UPDATE",
                    "params": {
                        "asset": "XCP",
                        "dispense_count": 2,
                        "give_remaining": 9268,
                        "source": "bcrt1qquwz9xkh3dv34l49v32lk3kc283utd58ung2cn",
                        "status": 0,
                        "tx_hash": "1e6f693fe2759c736df4febc587f45124e79e5d8d1ce2b79f8c0bbf0f18fd87d",
                        "asset_info": {
                            "asset_longname": null,
                            "description": "The Counterparty protocol native currency",
                            "issuer": null,
                            "divisible": true,
                            "locked": true,
                            "owner": null
                        },
                        "give_remaining_normalized": "0.00009268"
                    },
                    "tx_hash": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3",
                    "block_index": 245,
                    "block_time": 1740490111
                },
                {
                    "event_index": 1038,
                    "event": "CREDIT",
                    "params": {
                        "address": "bcrt1qwats7crkdl4z6ac6tz2fn6pz6a5dt7hxzjustu",
                        "asset": "XCP",
                        "block_index": 245,
                        "calling_function": "dispense",
                        "event": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3",
                        "quantity": 66,
                        "tx_index": 121,
                        "utxo": null,
                        "utxo_address": null,
                        "block_time": 1740490111,
                        "asset_info": {
                            "asset_longname": null,
                            "description": "The Counterparty protocol native currency",
                            "issuer": null,
                            "divisible": true,
                            "locked": true,
                            "owner": null
                        },
                        "quantity_normalized": "0.00000066"
                    },
                    "tx_hash": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3",
                    "block_index": 245,
                    "block_time": 1740490111
                },
                {
                    "event_index": 1037,
                    "event": "UTXO_MOVE",
                    "params": {
                        "asset": "XCP",
                        "block_index": 245,
                        "destination": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3:0",
                        "destination_address": "bcrt1qquwz9xkh3dv34l49v32lk3kc283utd58ung2cn",
                        "msg_index": 1,
                        "quantity": 2000000000,
                        "send_type": "move",
                        "source": "e1da70a78196a01b1d83828ad454578cd9ccd3a37215d0732042f9cd20028b65:1",
                        "source_address": "bcrt1qwats7crkdl4z6ac6tz2fn6pz6a5dt7hxzjustu",
                        "status": "valid",
                        "tx_hash": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3",
                        "tx_index": 121,
                        "block_time": 1740490111,
                        "asset_info": {
                            "asset_longname": null,
                            "description": "The Counterparty protocol native currency",
                            "issuer": null,
                            "divisible": true,
                            "locked": true,
                            "owner": null
                        },
                        "quantity_normalized": "20.00000000"
                    },
                    "tx_hash": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3",
                    "block_index": 245,
                    "block_time": 1740490111
                }
            ],
            "next_cursor": 1036,
            "result_count": 12
        }
    ```

### Get Sends By Transaction Hash [GET /v2/transactions/{tx_hash}/sends{?send_type}{&cursor}{&limit}{&offset}{&verbose}]

Returns the sends, include Enhanced and MPMA sends, of a block

+ Parameters
    + tx_hash: `d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3` (str, required) - The hash of the transaction to return
    + send_type (enum[str], optional) - The type of the send to return
        + Default: `all`
        + Members
            + `all`
            + `send`
            + `attach`
            + `move`
            + `detach`
    + cursor (str, optional) - The last index of the debits to return
        + Default: `None`
    + limit: `5` (int, optional) - The maximum number of debits to return
        + Default: `100`
    + offset (int, optional) - The number of lines to skip before returning results (overrides the `cursor` parameter)
        + Default: `None`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": [
                {
                    "tx_index": 121,
                    "tx_hash": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3",
                    "block_index": 245,
                    "source": "e1da70a78196a01b1d83828ad454578cd9ccd3a37215d0732042f9cd20028b65:1",
                    "destination": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3:0",
                    "asset": "XCP",
                    "quantity": 2000000000,
                    "status": "valid",
                    "msg_index": 1,
                    "memo": null,
                    "fee_paid": 0,
                    "send_type": "move",
                    "source_address": "bcrt1qwats7crkdl4z6ac6tz2fn6pz6a5dt7hxzjustu",
                    "destination_address": "bcrt1qquwz9xkh3dv34l49v32lk3kc283utd58ung2cn",
                    "block_time": 1740490111,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "The Counterparty protocol native currency",
                        "issuer": null,
                        "divisible": true,
                        "locked": true,
                        "owner": null
                    },
                    "quantity_normalized": "20.00000000",
                    "fee_paid_normalized": "0.00000000"
                },
                {
                    "tx_index": 121,
                    "tx_hash": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3",
                    "block_index": 245,
                    "source": "e1da70a78196a01b1d83828ad454578cd9ccd3a37215d0732042f9cd20028b65:1",
                    "destination": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3:0",
                    "asset": "MYASSETA",
                    "quantity": 2000000000,
                    "status": "valid",
                    "msg_index": 0,
                    "memo": null,
                    "fee_paid": 0,
                    "send_type": "move",
                    "source_address": "bcrt1qwats7crkdl4z6ac6tz2fn6pz6a5dt7hxzjustu",
                    "destination_address": "bcrt1qquwz9xkh3dv34l49v32lk3kc283utd58ung2cn",
                    "block_time": 1740490111,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "My super asset A",
                        "issuer": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                        "divisible": true,
                        "locked": false,
                        "owner": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n"
                    },
                    "quantity_normalized": "20.00000000",
                    "fee_paid_normalized": "0.00000000"
                }
            ],
            "next_cursor": null,
            "result_count": 2
        }
    ```

### Get Dispenses By Transaction Hash [GET /v2/transactions/{tx_hash}/dispenses{?cursor}{&limit}{&offset}{&verbose}]

Returns the dispenses of a block

+ Parameters
    + tx_hash: `d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3` (str, required) - The hash of the transaction to return
    + cursor (str, optional) - The last index of the dispenses to return
        + Default: `None`
    + limit: `5` (int, optional) - The maximum number of dispenses to return
        + Default: `100`
    + offset (int, optional) - The number of lines to skip before returning results (overrides the `cursor` parameter)
        + Default: `None`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": [
                {
                    "tx_index": 121,
                    "dispense_index": 0,
                    "tx_hash": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3",
                    "block_index": 245,
                    "source": "bcrt1qquwz9xkh3dv34l49v32lk3kc283utd58ung2cn",
                    "destination": "bcrt1qwats7crkdl4z6ac6tz2fn6pz6a5dt7hxzjustu",
                    "asset": "XCP",
                    "dispense_quantity": 66,
                    "dispenser_tx_hash": "1e6f693fe2759c736df4febc587f45124e79e5d8d1ce2b79f8c0bbf0f18fd87d",
                    "btc_amount": 1000,
                    "dispenser": {
                        "tx_index": 33,
                        "block_index": 245,
                        "source": "bcrt1qquwz9xkh3dv34l49v32lk3kc283utd58ung2cn",
                        "give_quantity": 1,
                        "escrow_quantity": 10000,
                        "satoshirate": 1,
                        "status": 0,
                        "give_remaining": 9268,
                        "oracle_address": "bcrt1qquwz9xkh3dv34l49v32lk3kc283utd58ung2cn",
                        "last_status_tx_hash": null,
                        "origin": "bcrt1qquwz9xkh3dv34l49v32lk3kc283utd58ung2cn",
                        "dispense_count": 2,
                        "last_status_tx_source": null,
                        "close_block_index": null,
                        "fiat_price": 0.01,
                        "oracle_price": 66600.0,
                        "fiat_unit": "USD",
                        "oracle_price_last_updated": 129,
                        "satoshi_price": 16,
                        "give_quantity_normalized": "0.00000001",
                        "give_remaining_normalized": "0.00009268",
                        "escrow_quantity_normalized": "0.00010000",
                        "satoshirate_normalized": "0.00000001",
                        "satoshi_price_normalized": "0.00000016"
                    },
                    "block_time": 1740490111,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "The Counterparty protocol native currency",
                        "issuer": null,
                        "divisible": true,
                        "locked": true,
                        "owner": null
                    },
                    "dispense_quantity_normalized": "0.00000066",
                    "btc_amount_normalized": "0.00001000"
                }
            ],
            "next_cursor": null,
            "result_count": 1
        }
    ```

### Get Events By Transaction Index And Event [GET /v2/transactions/{tx_index}/events/{event}{?cursor}{&limit}{&offset}{&verbose}]

Returns the events of a transaction

+ Parameters
    + tx_index: `121` (int, required) - The index of the transaction to return
    + event: `CREDIT` (str, required) - The event to filter by
    + cursor: `1042` (str, optional) - The last event index to return
        + Default: `None`
    + limit: `5` (int, optional) - The maximum number of events to return
        + Default: `100`
    + offset (int, optional) - The number of lines to skip before returning results (overrides the `cursor` parameter)
        + Default: `None`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": [
                {
                    "event_index": 1038,
                    "event": "CREDIT",
                    "params": {
                        "address": "bcrt1qwats7crkdl4z6ac6tz2fn6pz6a5dt7hxzjustu",
                        "asset": "XCP",
                        "block_index": 245,
                        "calling_function": "dispense",
                        "event": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3",
                        "quantity": 66,
                        "tx_index": 121,
                        "utxo": null,
                        "utxo_address": null,
                        "block_time": 1740490111,
                        "asset_info": {
                            "asset_longname": null,
                            "description": "The Counterparty protocol native currency",
                            "issuer": null,
                            "divisible": true,
                            "locked": true,
                            "owner": null
                        },
                        "quantity_normalized": "0.00000066"
                    },
                    "tx_hash": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3",
                    "block_index": 245,
                    "block_time": 1740490111
                },
                {
                    "event_index": 1036,
                    "event": "CREDIT",
                    "params": {
                        "address": null,
                        "asset": "XCP",
                        "block_index": 245,
                        "calling_function": "utxo move",
                        "event": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3",
                        "quantity": 2000000000,
                        "tx_index": 121,
                        "utxo": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3:0",
                        "utxo_address": "bcrt1qquwz9xkh3dv34l49v32lk3kc283utd58ung2cn",
                        "block_time": 1740490111,
                        "asset_info": {
                            "asset_longname": null,
                            "description": "The Counterparty protocol native currency",
                            "issuer": null,
                            "divisible": true,
                            "locked": true,
                            "owner": null
                        },
                        "quantity_normalized": "20.00000000"
                    },
                    "tx_hash": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3",
                    "block_index": 245,
                    "block_time": 1740490111
                },
                {
                    "event_index": 1033,
                    "event": "CREDIT",
                    "params": {
                        "address": null,
                        "asset": "MYASSETA",
                        "block_index": 245,
                        "calling_function": "utxo move",
                        "event": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3",
                        "quantity": 2000000000,
                        "tx_index": 121,
                        "utxo": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3:0",
                        "utxo_address": "bcrt1qquwz9xkh3dv34l49v32lk3kc283utd58ung2cn",
                        "block_time": 1740490111,
                        "asset_info": {
                            "asset_longname": null,
                            "description": "My super asset A",
                            "issuer": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                            "divisible": true,
                            "locked": false,
                            "owner": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n"
                        },
                        "quantity_normalized": "20.00000000"
                    },
                    "tx_hash": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3",
                    "block_index": 245,
                    "block_time": 1740490111
                }
            ],
            "next_cursor": null,
            "result_count": 3
        }
    ```

### Get Events By Transaction Hash And Event [GET /v2/transactions/{tx_hash}/events/{event}{?cursor}{&limit}{&offset}{&verbose}]

Returns the events of a transaction

+ Parameters
    + tx_hash: `d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3` (str, required) - The hash of the transaction to return
    + event: `CREDIT` (str, required) - The event to filter by
    + cursor: `1042` (str, optional) - The last event index to return
        + Default: `None`
    + limit: `5` (int, optional) - The maximum number of events to return
        + Default: `100`
    + offset (int, optional) - The number of lines to skip before returning results (overrides the `cursor` parameter)
        + Default: `None`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": [
                {
                    "event_index": 1038,
                    "event": "CREDIT",
                    "params": {
                        "address": "bcrt1qwats7crkdl4z6ac6tz2fn6pz6a5dt7hxzjustu",
                        "asset": "XCP",
                        "block_index": 245,
                        "calling_function": "dispense",
                        "event": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3",
                        "quantity": 66,
                        "tx_index": 121,
                        "utxo": null,
                        "utxo_address": null,
                        "block_time": 1740490111,
                        "asset_info": {
                            "asset_longname": null,
                            "description": "The Counterparty protocol native currency",
                            "issuer": null,
                            "divisible": true,
                            "locked": true,
                            "owner": null
                        },
                        "quantity_normalized": "0.00000066"
                    },
                    "tx_hash": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3",
                    "block_index": 245,
                    "block_time": 1740490111
                },
                {
                    "event_index": 1036,
                    "event": "CREDIT",
                    "params": {
                        "address": null,
                        "asset": "XCP",
                        "block_index": 245,
                        "calling_function": "utxo move",
                        "event": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3",
                        "quantity": 2000000000,
                        "tx_index": 121,
                        "utxo": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3:0",
                        "utxo_address": "bcrt1qquwz9xkh3dv34l49v32lk3kc283utd58ung2cn",
                        "block_time": 1740490111,
                        "asset_info": {
                            "asset_longname": null,
                            "description": "The Counterparty protocol native currency",
                            "issuer": null,
                            "divisible": true,
                            "locked": true,
                            "owner": null
                        },
                        "quantity_normalized": "20.00000000"
                    },
                    "tx_hash": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3",
                    "block_index": 245,
                    "block_time": 1740490111
                },
                {
                    "event_index": 1033,
                    "event": "CREDIT",
                    "params": {
                        "address": null,
                        "asset": "MYASSETA",
                        "block_index": 245,
                        "calling_function": "utxo move",
                        "event": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3",
                        "quantity": 2000000000,
                        "tx_index": 121,
                        "utxo": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3:0",
                        "utxo_address": "bcrt1qquwz9xkh3dv34l49v32lk3kc283utd58ung2cn",
                        "block_time": 1740490111,
                        "asset_info": {
                            "asset_longname": null,
                            "description": "My super asset A",
                            "issuer": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                            "divisible": true,
                            "locked": false,
                            "owner": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n"
                        },
                        "quantity_normalized": "20.00000000"
                    },
                    "tx_hash": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3",
                    "block_index": 245,
                    "block_time": 1740490111
                }
            ],
            "next_cursor": null,
            "result_count": 3
        }
    ```

## Group Addresses

### Get Balances By Addresses [GET /v2/addresses/balances{?addresses}{&type}{&cursor}{&limit}{&offset}{&sort}{&verbose}]

Returns the balances of several addresses

+ Parameters
    + addresses: `bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n,bcrt1qdj4ckly3lwmjqld7pu60qu9myggm6pnd58ntz6` (str, required) - Comma separated list of addresses
    + type (enum[str], optional) - The type of balances to return
        + Default: `all`
        + Members
            + `all`
            + `utxo`
            + `address`
    + cursor (str, optional) - The last index of the balances to return
        + Default: `None`
    + limit: `5` (int, optional) - The maximum number of balances to return
        + Default: `100`
    + offset (int, optional) - The number of lines to skip before returning results (overrides the `cursor` parameter)
        + Default: `None`
    + sort: `quantity:desc` (str, optional) - The sort order of the balances to return (overrides the `cursor` parameter)
        + Default: `None`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": [
                {
                    "asset": "A95428956980101314",
                    "asset_longname": null,
                    "total": 100000000000,
                    "addresses": [
                        {
                            "address": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                            "utxo": null,
                            "utxo_address": null,
                            "quantity": 100000000000,
                            "quantity_normalized": "1000.00000000"
                        }
                    ],
                    "asset_info": {
                        "asset_longname": "A95428959745315388.SUBNUMERIC",
                        "description": "A subnumeric asset",
                        "issuer": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                        "divisible": true,
                        "locked": false,
                        "owner": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n"
                    },
                    "total_normalized": "1000.00000000"
                },
                {
                    "asset": "FAIRMINTA",
                    "asset_longname": null,
                    "total": 500000000,
                    "addresses": [
                        {
                            "address": "bcrt1qdj4ckly3lwmjqld7pu60qu9myggm6pnd58ntz6",
                            "utxo": null,
                            "utxo_address": null,
                            "quantity": 500000000,
                            "quantity_normalized": "5.00000000"
                        }
                    ],
                    "asset_info": {
                        "asset_longname": null,
                        "description": "",
                        "issuer": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                        "divisible": true,
                        "locked": false,
                        "owner": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n"
                    },
                    "total_normalized": "5.00000000"
                },
                {
                    "asset": "FREEFAIRMINT",
                    "asset_longname": null,
                    "total": 180,
                    "addresses": [
                        {
                            "address": "bcrt1qdj4ckly3lwmjqld7pu60qu9myggm6pnd58ntz6",
                            "utxo": null,
                            "utxo_address": null,
                            "quantity": 180,
                            "quantity_normalized": "0.00000180"
                        }
                    ],
                    "asset_info": {
                        "asset_longname": null,
                        "description": "",
                        "issuer": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                        "divisible": true,
                        "locked": false,
                        "owner": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n"
                    },
                    "total_normalized": "0.00000180"
                },
                {
                    "asset": "FAIRMINTD",
                    "asset_longname": null,
                    "total": 40,
                    "addresses": [
                        {
                            "address": "bcrt1qdj4ckly3lwmjqld7pu60qu9myggm6pnd58ntz6",
                            "utxo": null,
                            "utxo_address": null,
                            "quantity": 40,
                            "quantity_normalized": "0.00000040"
                        }
                    ],
                    "asset_info": {
                        "asset_longname": null,
                        "description": "",
                        "issuer": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                        "divisible": true,
                        "locked": false,
                        "owner": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n"
                    },
                    "total_normalized": "0.00000040"
                },
                {
                    "asset": "FAIRMINTC",
                    "asset_longname": null,
                    "total": 19,
                    "addresses": [
                        {
                            "address": "bcrt1qdj4ckly3lwmjqld7pu60qu9myggm6pnd58ntz6",
                            "utxo": null,
                            "utxo_address": null,
                            "quantity": 19,
                            "quantity_normalized": "0.00000019"
                        }
                    ],
                    "asset_info": {
                        "asset_longname": null,
                        "description": "",
                        "issuer": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                        "divisible": true,
                        "locked": false,
                        "owner": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n"
                    },
                    "total_normalized": "0.00000019"
                }
            ],
            "next_cursor": "MPMASSET",
            "result_count": 9
        }
    ```

### Get Transactions By Addresses [GET /v2/addresses/transactions{?addresses}{&type}{&show_unconfirmed}{&cursor}{&limit}{&offset}{&verbose}]

Returns the transactions of a list of addresses

+ Parameters
    + addresses: `bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n,bcrt1qdj4ckly3lwmjqld7pu60qu9myggm6pnd58ntz6` (str, required) - Comma separated list of addresses to return
    + type (enum[str], optional) - The type of the transaction to return
        + Default: `all`
        + Members
            + `all`
            + `bet`
            + `broadcast`
            + `btcpay`
            + `cancel`
            + `destroy`
            + `dispenser`
            + `dispense`
            + `dividend`
            + `issuance`
            + `order`
            + `send`
            + `enhanced_send`
            + `mpma`
            + `rps`
            + `rpsresolve`
            + `sweep`
            + `fairminter`
            + `fairmint`
            + `attach`
            + `detach`
            + `utxomove`
            + `unknown`
    + show_unconfirmed (bool, optional) - Show unconfirmed transactions
        + Default: `False`
    + cursor: `121` (str, optional) - The last transaction index to return
        + Default: `None`
    + limit: `5` (int, optional) - The maximum number of transactions to return
        + Default: `100`
    + offset (int, optional) - The number of lines to skip before returning results (overrides the `cursor` parameter)
        + Default: `None`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": [
                {
                    "tx_index": 115,
                    "tx_hash": "fef95527acddc38cf41b44de40d85e7f67dc5b51531997c0483c5c3b321f16c9",
                    "block_index": 237,
                    "block_hash": "1c5046600a300ab52d6df5e581ad26e371cdf54ef2e4a8908154ad380263b51b",
                    "block_time": 1740490081,
                    "source": "bcrt1qdj4ckly3lwmjqld7pu60qu9myggm6pnd58ntz6",
                    "destination": "bcrt1qv82qg4jp6nn6wahdnx2d2u6cdfxyc2zuw7u9mv",
                    "btc_amount": 3000,
                    "fee": 0,
                    "data": "0d00",
                    "supported": true,
                    "utxos_info": " fef95527acddc38cf41b44de40d85e7f67dc5b51531997c0483c5c3b321f16c9:0 3 1",
                    "transaction_type": "dispense",
                    "events": [
                        {
                            "event_index": 983,
                            "event": "DISPENSER_UPDATE",
                            "params": {
                                "asset": "XCP",
                                "dispense_count": 1,
                                "give_remaining": 2000,
                                "source": "bcrt1qv82qg4jp6nn6wahdnx2d2u6cdfxyc2zuw7u9mv",
                                "status": 0,
                                "tx_hash": "c54957b9cbb662e2cc9eee1c09950f7365365a09abad1bdf1afb3cca05d63705",
                                "asset_info": {
                                    "asset_longname": null,
                                    "description": "The Counterparty protocol native currency",
                                    "issuer": null,
                                    "divisible": true,
                                    "locked": true,
                                    "owner": null
                                },
                                "give_remaining_normalized": "0.00002000"
                            },
                            "tx_hash": "fef95527acddc38cf41b44de40d85e7f67dc5b51531997c0483c5c3b321f16c9",
                            "block_index": 237,
                            "block_time": 1740490081
                        },
                        {
                            "event_index": 984,
                            "event": "DISPENSE",
                            "params": {
                                "asset": "XCP",
                                "block_index": 237,
                                "btc_amount": 3000,
                                "destination": "bcrt1qdj4ckly3lwmjqld7pu60qu9myggm6pnd58ntz6",
                                "dispense_index": 0,
                                "dispense_quantity": 3000,
                                "dispenser_tx_hash": "c54957b9cbb662e2cc9eee1c09950f7365365a09abad1bdf1afb3cca05d63705",
                                "source": "bcrt1qv82qg4jp6nn6wahdnx2d2u6cdfxyc2zuw7u9mv",
                                "tx_hash": "fef95527acddc38cf41b44de40d85e7f67dc5b51531997c0483c5c3b321f16c9",
                                "tx_index": 115,
                                "block_time": 1740490081,
                                "asset_info": {
                                    "asset_longname": null,
                                    "description": "The Counterparty protocol native currency",
                                    "issuer": null,
                                    "divisible": true,
                                    "locked": true,
                                    "owner": null
                                },
                                "dispense_quantity_normalized": "0.00003000",
                                "btc_amount_normalized": "0.00003000"
                            },
                            "tx_hash": "fef95527acddc38cf41b44de40d85e7f67dc5b51531997c0483c5c3b321f16c9",
                            "block_index": 237,
                            "block_time": 1740490081
                        }
                    ],
                    "unpacked_data": {
                        "message_type": "dispense",
                        "message_type_id": 13,
                        "message_data": {
                            "data": "00"
                        }
                    },
                    "btc_amount_normalized": "0.00003000"
                },
                {
                    "tx_index": 81,
                    "tx_hash": "10823d6a8b3b44da8361e887a02942fa28973b782e59ec26ece5a7c88b8d974d",
                    "block_index": 205,
                    "block_hash": "638370e27b741fc8f6114d475dd54cff84cd548ac9b54db3656691469f7dc7d0",
                    "block_time": 1740489939,
                    "source": "bcrt1qdj4ckly3lwmjqld7pu60qu9myggm6pnd58ntz6",
                    "destination": null,
                    "btc_amount": 0,
                    "fee": 10000,
                    "data": "03000380293ba4d53f14e5d071a5294a216269c455519f1180978506450cf51f83ec6f5648b40686ccd56ce921809b4723f09a5df31a06280cb9c843df516eecbe6188746865206d656d6f8000000bc6c11189a80000000000000052000000000000000a856d656d6f3380000000000000008000000000000000542b6b2b6b7988",
                    "supported": true,
                    "utxos_info": " 10823d6a8b3b44da8361e887a02942fa28973b782e59ec26ece5a7c88b8d974d:0 4 ",
                    "transaction_type": "mpma",
                    "events": [
                        {
                            "event_index": 704,
                            "event": "ORDER_UPDATE",
                            "params": {
                                "status": "expired",
                                "tx_hash": "c0b993f438e82940a24a6f2e74bca15b60d197c7afa93aea4d0f82b02cc89f96"
                            },
                            "tx_hash": "10823d6a8b3b44da8361e887a02942fa28973b782e59ec26ece5a7c88b8d974d",
                            "block_index": 205,
                            "block_time": 1740489939
                        },
                        {
                            "event_index": 705,
                            "event": "ORDER_EXPIRATION",
                            "params": {
                                "block_index": 205,
                                "order_hash": "c0b993f438e82940a24a6f2e74bca15b60d197c7afa93aea4d0f82b02cc89f96",
                                "source": "bcrt1qj7zsv3gv750c8mr02eytgp5xen2ke6fpak6ztc",
                                "block_time": 1740489939
                            },
                            "tx_hash": "10823d6a8b3b44da8361e887a02942fa28973b782e59ec26ece5a7c88b8d974d",
                            "block_index": 205,
                            "block_time": 1740489939
                        },
                        {
                            "event_index": 711,
                            "event": "MPMA_SEND",
                            "params": {
                                "asset": "MPMASSET",
                                "block_index": 205,
                                "destination": "bcrt1qj7zsv3gv750c8mr02eytgp5xen2ke6fpak6ztc",
                                "memo": "the memo",
                                "msg_index": 0,
                                "quantity": 10,
                                "send_type": "send",
                                "source": "bcrt1qdj4ckly3lwmjqld7pu60qu9myggm6pnd58ntz6",
                                "status": "valid",
                                "tx_hash": "10823d6a8b3b44da8361e887a02942fa28973b782e59ec26ece5a7c88b8d974d",
                                "tx_index": 81,
                                "block_time": 1740489939,
                                "asset_info": {
                                    "asset_longname": null,
                                    "description": "My super asset B",
                                    "issuer": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                                    "divisible": true,
                                    "locked": false,
                                    "owner": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n"
                                },
                                "quantity_normalized": "0.00000010"
                            },
                            "tx_hash": "10823d6a8b3b44da8361e887a02942fa28973b782e59ec26ece5a7c88b8d974d",
                            "block_index": 205,
                            "block_time": 1740489939
                        },
                        {
                            "event_index": 712,
                            "event": "MPMA_SEND",
                            "params": {
                                "asset": "MPMASSET",
                                "block_index": 205,
                                "destination": "bcrt1qndrj8uy6the35p3gpjuuss7l29hwe0npylexmz",
                                "memo": "memo3",
                                "msg_index": 1,
                                "quantity": 10,
                                "send_type": "send",
                                "source": "bcrt1qdj4ckly3lwmjqld7pu60qu9myggm6pnd58ntz6",
                                "status": "valid",
                                "tx_hash": "10823d6a8b3b44da8361e887a02942fa28973b782e59ec26ece5a7c88b8d974d",
                                "tx_index": 81,
                                "block_time": 1740489939,
                                "asset_info": {
                                    "asset_longname": null,
                                    "description": "My super asset B",
                                    "issuer": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                                    "divisible": true,
                                    "locked": false,
                                    "owner": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n"
                                },
                                "quantity_normalized": "0.00000010"
                            },
                            "tx_hash": "10823d6a8b3b44da8361e887a02942fa28973b782e59ec26ece5a7c88b8d974d",
                            "block_index": 205,
                            "block_time": 1740489939
                        },
                        {
                            "event_index": 713,
                            "event": "MPMA_SEND",
                            "params": {
                                "asset": "XCP",
                                "block_index": 205,
                                "destination": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                                "memo": "memo1",
                                "msg_index": 2,
                                "quantity": 10,
                                "send_type": "send",
                                "source": "bcrt1qdj4ckly3lwmjqld7pu60qu9myggm6pnd58ntz6",
                                "status": "valid",
                                "tx_hash": "10823d6a8b3b44da8361e887a02942fa28973b782e59ec26ece5a7c88b8d974d",
                                "tx_index": 81,
                                "block_time": 1740489939,
                                "asset_info": {
                                    "asset_longname": null,
                                    "description": "The Counterparty protocol native currency",
                                    "issuer": null,
                                    "divisible": true,
                                    "locked": true,
                                    "owner": null
                                },
                                "quantity_normalized": "0.00000010"
                            },
                            "tx_hash": "10823d6a8b3b44da8361e887a02942fa28973b782e59ec26ece5a7c88b8d974d",
                            "block_index": 205,
                            "block_time": 1740489939
                        }
                    ],
                    "unpacked_data": {
                        "message_type": "mpma_send",
                        "message_type_id": 3,
                        "message_data": [
                            {
                                "asset": "MPMASSET",
                                "destination": "bcrt1qj7zsv3gv750c8mr02eytgp5xen2ke6fpak6ztc",
                                "quantity": 10,
                                "memo": "the memo",
                                "memo_is_hex": false,
                                "asset_info": {
                                    "asset_longname": null,
                                    "description": "My super asset B",
                                    "issuer": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                                    "divisible": true,
                                    "locked": false,
                                    "owner": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n"
                                },
                                "quantity_normalized": "0.00000010"
                            },
                            {
                                "asset": "XCP",
                                "destination": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                                "quantity": 10,
                                "memo": "memo1",
                                "memo_is_hex": false,
                                "asset_info": {
                                    "asset_longname": null,
                                    "description": "The Counterparty protocol native currency",
                                    "issuer": null,
                                    "divisible": true,
                                    "locked": true,
                                    "owner": null
                                },
                                "quantity_normalized": "0.00000010"
                            }
                        ]
                    },
                    "btc_amount_normalized": "0.00000000"
                },
                {
                    "tx_index": 80,
                    "tx_hash": "683501e1389d756a4e8cbf76052729d941f18d450f94fe7c85f5decd64162ce7",
                    "block_index": 204,
                    "block_hash": "752a9447faea932344c63f7a85e25d14f471df8c8d3ce8241b4a997b044abd12",
                    "block_time": 1740489935,
                    "source": "bcrt1qdj4ckly3lwmjqld7pu60qu9myggm6pnd58ntz6",
                    "destination": null,
                    "btc_amount": 0,
                    "fee": 10000,
                    "data": "03000380293ba4d53f14e5d071a5294a216269c455519f1180978506450cf51f83ec6f5648b40686ccd56ce921809b4723f09a5df31a06280cb9c843df516eecbe61c8746865206d656d6f8000000bc6c11189a80000000000000052000000000000000a4000000000000000400000000000000028",
                    "supported": true,
                    "utxos_info": " 683501e1389d756a4e8cbf76052729d941f18d450f94fe7c85f5decd64162ce7:0 4 ",
                    "transaction_type": "mpma",
                    "events": [
                        {
                            "event_index": 685,
                            "event": "ORDER_MATCH_UPDATE",
                            "params": {
                                "id": "6a8b04722b5121498713e9ca34b3a634f0ef5f0cf3ee9a0753bd79b8c3f0cc10_c0b993f438e82940a24a6f2e74bca15b60d197c7afa93aea4d0f82b02cc89f96",
                                "order_match_id": "6a8b04722b5121498713e9ca34b3a634f0ef5f0cf3ee9a0753bd79b8c3f0cc10_c0b993f438e82940a24a6f2e74bca15b60d197c7afa93aea4d0f82b02cc89f96",
                                "status": "expired"
                            },
                            "tx_hash": "683501e1389d756a4e8cbf76052729d941f18d450f94fe7c85f5decd64162ce7",
                            "block_index": 204,
                            "block_time": 1740489935
                        },
                        {
                            "event_index": 687,
                            "event": "ORDER_UPDATE",
                            "params": {
                                "fee_required_remaining": 0,
                                "get_remaining": 3000,
                                "give_remaining": 3000,
                                "status": "open",
                                "tx_hash": "c0b993f438e82940a24a6f2e74bca15b60d197c7afa93aea4d0f82b02cc89f96",
                                "fee_required_remaining_normalized": "0.00000000"
                            },
                            "tx_hash": "683501e1389d756a4e8cbf76052729d941f18d450f94fe7c85f5decd64162ce7",
                            "block_index": 204,
                            "block_time": 1740489935
                        },
                        {
                            "event_index": 688,
                            "event": "ORDER_MATCH_EXPIRATION",
                            "params": {
                                "block_index": 204,
                                "order_match_id": "6a8b04722b5121498713e9ca34b3a634f0ef5f0cf3ee9a0753bd79b8c3f0cc10_c0b993f438e82940a24a6f2e74bca15b60d197c7afa93aea4d0f82b02cc89f96",
                                "tx0_address": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                                "tx1_address": "bcrt1qj7zsv3gv750c8mr02eytgp5xen2ke6fpak6ztc",
                                "block_time": 1740489935
                            },
                            "tx_hash": "683501e1389d756a4e8cbf76052729d941f18d450f94fe7c85f5decd64162ce7",
                            "block_index": 204,
                            "block_time": 1740489935
                        },
                        {
                            "event_index": 689,
                            "event": "ORDER_UPDATE",
                            "params": {
                                "fee_provided_remaining": 10000,
                                "fee_required_remaining": 0,
                                "get_remaining": 0,
                                "give_remaining": 0,
                                "status": "open",
                                "tx_hash": "9198a9256ee36ffaa1c68b2098d9920bf461858924c70baa1e2e616814a81c54",
                                "fee_required_remaining_normalized": "0.00000000",
                                "fee_provided_remaining_normalized": "0.00010000"
                            },
                            "tx_hash": "683501e1389d756a4e8cbf76052729d941f18d450f94fe7c85f5decd64162ce7",
                            "block_index": 204,
                            "block_time": 1740489935
                        },
                        {
                            "event_index": 690,
                            "event": "ORDER_UPDATE",
                            "params": {
                                "fee_provided_remaining": 10000,
                                "fee_required_remaining": 0,
                                "get_remaining": 2000,
                                "give_remaining": 2000,
                                "status": "open",
                                "tx_hash": "c0b993f438e82940a24a6f2e74bca15b60d197c7afa93aea4d0f82b02cc89f96",
                                "fee_required_remaining_normalized": "0.00000000",
                                "fee_provided_remaining_normalized": "0.00010000"
                            },
                            "tx_hash": "683501e1389d756a4e8cbf76052729d941f18d450f94fe7c85f5decd64162ce7",
                            "block_index": 204,
                            "block_time": 1740489935
                        },
                        {
                            "event_index": 691,
                            "event": "ORDER_MATCH",
                            "params": {
                                "backward_asset": "BTC",
                                "backward_quantity": 1000,
                                "block_index": 204,
                                "fee_paid": 0,
                                "forward_asset": "XCP",
                                "forward_quantity": 1000,
                                "id": "9198a9256ee36ffaa1c68b2098d9920bf461858924c70baa1e2e616814a81c54_c0b993f438e82940a24a6f2e74bca15b60d197c7afa93aea4d0f82b02cc89f96",
                                "match_expire_index": 224,
                                "status": "pending",
                                "tx0_address": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                                "tx0_block_index": 189,
                                "tx0_expiration": 21,
                                "tx0_hash": "9198a9256ee36ffaa1c68b2098d9920bf461858924c70baa1e2e616814a81c54",
                                "tx0_index": 64,
                                "tx1_address": "bcrt1qj7zsv3gv750c8mr02eytgp5xen2ke6fpak6ztc",
                                "tx1_block_index": 204,
                                "tx1_expiration": 21,
                                "tx1_hash": "c0b993f438e82940a24a6f2e74bca15b60d197c7afa93aea4d0f82b02cc89f96",
                                "tx1_index": 58,
                                "block_time": 1740489935,
                                "forward_asset_info": {
                                    "asset_longname": null,
                                    "description": "The Counterparty protocol native currency",
                                    "issuer": null,
                                    "divisible": true,
                                    "locked": true,
                                    "owner": null
                                },
                                "backward_asset_info": {
                                    "divisible": true,
                                    "asset_longname": null,
                                    "description": "The Bitcoin cryptocurrency",
                                    "locked": false,
                                    "issuer": null
                                },
                                "forward_quantity_normalized": "0.00001000",
                                "backward_quantity_normalized": "0.00001000",
                                "fee_paid_normalized": "0.00000000"
                            },
                            "tx_hash": "683501e1389d756a4e8cbf76052729d941f18d450f94fe7c85f5decd64162ce7",
                            "block_index": 204,
                            "block_time": 1740489935
                        },
                        {
                            "event_index": 697,
                            "event": "MPMA_SEND",
                            "params": {
                                "asset": "MPMASSET",
                                "block_index": 204,
                                "destination": "bcrt1qj7zsv3gv750c8mr02eytgp5xen2ke6fpak6ztc",
                                "memo": "746865206d656d6f",
                                "msg_index": 0,
                                "quantity": 10,
                                "send_type": "send",
                                "source": "bcrt1qdj4ckly3lwmjqld7pu60qu9myggm6pnd58ntz6",
                                "status": "valid",
                                "tx_hash": "683501e1389d756a4e8cbf76052729d941f18d450f94fe7c85f5decd64162ce7",
                                "tx_index": 80,
                                "block_time": 1740489935,
                                "asset_info": {
                                    "asset_longname": null,
                                    "description": "My super asset B",
                                    "issuer": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                                    "divisible": true,
                                    "locked": false,
                                    "owner": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n"
                                },
                                "quantity_normalized": "0.00000010"
                            },
                            "tx_hash": "683501e1389d756a4e8cbf76052729d941f18d450f94fe7c85f5decd64162ce7",
                            "block_index": 204,
                            "block_time": 1740489935
                        },
                        {
                            "event_index": 698,
                            "event": "MPMA_SEND",
                            "params": {
                                "asset": "MPMASSET",
                                "block_index": 204,
                                "destination": "bcrt1qndrj8uy6the35p3gpjuuss7l29hwe0npylexmz",
                                "memo": "746865206d656d6f",
                                "msg_index": 1,
                                "quantity": 10,
                                "send_type": "send",
                                "source": "bcrt1qdj4ckly3lwmjqld7pu60qu9myggm6pnd58ntz6",
                                "status": "valid",
                                "tx_hash": "683501e1389d756a4e8cbf76052729d941f18d450f94fe7c85f5decd64162ce7",
                                "tx_index": 80,
                                "block_time": 1740489935,
                                "asset_info": {
                                    "asset_longname": null,
                                    "description": "My super asset B",
                                    "issuer": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                                    "divisible": true,
                                    "locked": false,
                                    "owner": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n"
                                },
                                "quantity_normalized": "0.00000010"
                            },
                            "tx_hash": "683501e1389d756a4e8cbf76052729d941f18d450f94fe7c85f5decd64162ce7",
                            "block_index": 204,
                            "block_time": 1740489935
                        },
                        {
                            "event_index": 699,
                            "event": "MPMA_SEND",
                            "params": {
                                "asset": "XCP",
                                "block_index": 204,
                                "destination": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                                "memo": "746865206d656d6f",
                                "msg_index": 2,
                                "quantity": 10,
                                "send_type": "send",
                                "source": "bcrt1qdj4ckly3lwmjqld7pu60qu9myggm6pnd58ntz6",
                                "status": "valid",
                                "tx_hash": "683501e1389d756a4e8cbf76052729d941f18d450f94fe7c85f5decd64162ce7",
                                "tx_index": 80,
                                "block_time": 1740489935,
                                "asset_info": {
                                    "asset_longname": null,
                                    "description": "The Counterparty protocol native currency",
                                    "issuer": null,
                                    "divisible": true,
                                    "locked": true,
                                    "owner": null
                                },
                                "quantity_normalized": "0.00000010"
                            },
                            "tx_hash": "683501e1389d756a4e8cbf76052729d941f18d450f94fe7c85f5decd64162ce7",
                            "block_index": 204,
                            "block_time": 1740489935
                        }
                    ],
                    "unpacked_data": {
                        "message_type": "mpma_send",
                        "message_type_id": 3,
                        "message_data": [
                            {
                                "asset": "MPMASSET",
                                "destination": "bcrt1qj7zsv3gv750c8mr02eytgp5xen2ke6fpak6ztc",
                                "quantity": 10,
                                "memo": "746865206d656d6f",
                                "memo_is_hex": true,
                                "asset_info": {
                                    "asset_longname": null,
                                    "description": "My super asset B",
                                    "issuer": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                                    "divisible": true,
                                    "locked": false,
                                    "owner": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n"
                                },
                                "quantity_normalized": "0.00000010"
                            },
                            {
                                "asset": "XCP",
                                "destination": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                                "quantity": 10,
                                "memo": "746865206d656d6f",
                                "memo_is_hex": true,
                                "asset_info": {
                                    "asset_longname": null,
                                    "description": "The Counterparty protocol native currency",
                                    "issuer": null,
                                    "divisible": true,
                                    "locked": true,
                                    "owner": null
                                },
                                "quantity_normalized": "0.00000010"
                            }
                        ]
                    },
                    "btc_amount_normalized": "0.00000000"
                },
                {
                    "tx_index": 79,
                    "tx_hash": "a664e79129ea014f2afd994abca856dfb7a93d3e5e5a9ce076c150ddbacd6bd9",
                    "block_index": 203,
                    "block_hash": "3c1630c9b791239a57b5ab83a6017c9c250bd8b19cb146f7a9e27e8a27e2ce2e",
                    "block_time": 1740489930,
                    "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "destination": null,
                    "btc_amount": 0,
                    "fee": 10000,
                    "data": "030003806cab8b7c91fbb7207dbe0f34f070bb2211bd066d80978506450cf51f83ec6f5648b40686ccd56ce921809b4723f09a5df31a06280cb9c843df516eecbe6140000005e36088c4d4000000000000002a15b595b5bcca000000000000000a856d656d6f3380000000000000008000000000000000542b6b2b6b7988",
                    "supported": true,
                    "utxos_info": " a664e79129ea014f2afd994abca856dfb7a93d3e5e5a9ce076c150ddbacd6bd9:0 4 ",
                    "transaction_type": "mpma",
                    "events": [
                        {
                            "event_index": 678,
                            "event": "MPMA_SEND",
                            "params": {
                                "asset": "MPMASSET",
                                "block_index": 203,
                                "destination": "bcrt1qj7zsv3gv750c8mr02eytgp5xen2ke6fpak6ztc",
                                "memo": "memo2",
                                "msg_index": 0,
                                "quantity": 10,
                                "send_type": "send",
                                "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                                "status": "valid",
                                "tx_hash": "a664e79129ea014f2afd994abca856dfb7a93d3e5e5a9ce076c150ddbacd6bd9",
                                "tx_index": 79,
                                "block_time": 1740489930,
                                "asset_info": {
                                    "asset_longname": null,
                                    "description": "My super asset B",
                                    "issuer": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                                    "divisible": true,
                                    "locked": false,
                                    "owner": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n"
                                },
                                "quantity_normalized": "0.00000010"
                            },
                            "tx_hash": "a664e79129ea014f2afd994abca856dfb7a93d3e5e5a9ce076c150ddbacd6bd9",
                            "block_index": 203,
                            "block_time": 1740489930
                        },
                        {
                            "event_index": 679,
                            "event": "MPMA_SEND",
                            "params": {
                                "asset": "MPMASSET",
                                "block_index": 203,
                                "destination": "bcrt1qndrj8uy6the35p3gpjuuss7l29hwe0npylexmz",
                                "memo": "memo3",
                                "msg_index": 1,
                                "quantity": 10,
                                "send_type": "send",
                                "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                                "status": "valid",
                                "tx_hash": "a664e79129ea014f2afd994abca856dfb7a93d3e5e5a9ce076c150ddbacd6bd9",
                                "tx_index": 79,
                                "block_time": 1740489930,
                                "asset_info": {
                                    "asset_longname": null,
                                    "description": "My super asset B",
                                    "issuer": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                                    "divisible": true,
                                    "locked": false,
                                    "owner": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n"
                                },
                                "quantity_normalized": "0.00000010"
                            },
                            "tx_hash": "a664e79129ea014f2afd994abca856dfb7a93d3e5e5a9ce076c150ddbacd6bd9",
                            "block_index": 203,
                            "block_time": 1740489930
                        },
                        {
                            "event_index": 680,
                            "event": "MPMA_SEND",
                            "params": {
                                "asset": "XCP",
                                "block_index": 203,
                                "destination": "bcrt1qdj4ckly3lwmjqld7pu60qu9myggm6pnd58ntz6",
                                "memo": "memo1",
                                "msg_index": 2,
                                "quantity": 10,
                                "send_type": "send",
                                "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                                "status": "valid",
                                "tx_hash": "a664e79129ea014f2afd994abca856dfb7a93d3e5e5a9ce076c150ddbacd6bd9",
                                "tx_index": 79,
                                "block_time": 1740489930,
                                "asset_info": {
                                    "asset_longname": null,
                                    "description": "The Counterparty protocol native currency",
                                    "issuer": null,
                                    "divisible": true,
                                    "locked": true,
                                    "owner": null
                                },
                                "quantity_normalized": "0.00000010"
                            },
                            "tx_hash": "a664e79129ea014f2afd994abca856dfb7a93d3e5e5a9ce076c150ddbacd6bd9",
                            "block_index": 203,
                            "block_time": 1740489930
                        }
                    ],
                    "unpacked_data": {
                        "message_type": "mpma_send",
                        "message_type_id": 3,
                        "message_data": [
                            {
                                "asset": "MPMASSET",
                                "destination": "bcrt1qj7zsv3gv750c8mr02eytgp5xen2ke6fpak6ztc",
                                "quantity": 10,
                                "memo": "memo2",
                                "memo_is_hex": false,
                                "asset_info": {
                                    "asset_longname": null,
                                    "description": "My super asset B",
                                    "issuer": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                                    "divisible": true,
                                    "locked": false,
                                    "owner": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n"
                                },
                                "quantity_normalized": "0.00000010"
                            },
                            {
                                "asset": "XCP",
                                "destination": "bcrt1qdj4ckly3lwmjqld7pu60qu9myggm6pnd58ntz6",
                                "quantity": 10,
                                "memo": "memo1",
                                "memo_is_hex": false,
                                "asset_info": {
                                    "asset_longname": null,
                                    "description": "The Counterparty protocol native currency",
                                    "issuer": null,
                                    "divisible": true,
                                    "locked": true,
                                    "owner": null
                                },
                                "quantity_normalized": "0.00000010"
                            }
                        ]
                    },
                    "btc_amount_normalized": "0.00000000"
                },
                {
                    "tx_index": 78,
                    "tx_hash": "61f1aee9ee7e879bd011800762de578a06213aa9fdff95ecb7a03585542bd78d",
                    "block_index": 202,
                    "block_hash": "3b59fe5cd5a64b9d6cffea87e2458d32f454bac64d320b5e448a25459d1bf47d",
                    "block_time": 1740489926,
                    "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "destination": null,
                    "btc_amount": 0,
                    "fee": 10000,
                    "data": "030003806cab8b7c91fbb7207dbe0f34f070bb2211bd066d80978506450cf51f83ec6f5648b40686ccd56ce921809b4723f09a5df31a06280cb9c843df516eecbe6188746865206d656d6f8000000bc6c11189a80000000000000052000000000000000a4000000000000000400000000000000028",
                    "supported": true,
                    "utxos_info": " 61f1aee9ee7e879bd011800762de578a06213aa9fdff95ecb7a03585542bd78d:0 4 ",
                    "transaction_type": "mpma",
                    "events": [
                        {
                            "event_index": 658,
                            "event": "ORDER_UPDATE",
                            "params": {
                                "status": "expired",
                                "tx_hash": "6a8b04722b5121498713e9ca34b3a634f0ef5f0cf3ee9a0753bd79b8c3f0cc10"
                            },
                            "tx_hash": "61f1aee9ee7e879bd011800762de578a06213aa9fdff95ecb7a03585542bd78d",
                            "block_index": 202,
                            "block_time": 1740489926
                        },
                        {
                            "event_index": 660,
                            "event": "ORDER_EXPIRATION",
                            "params": {
                                "block_index": 202,
                                "order_hash": "6a8b04722b5121498713e9ca34b3a634f0ef5f0cf3ee9a0753bd79b8c3f0cc10",
                                "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                                "block_time": 1740489926
                            },
                            "tx_hash": "61f1aee9ee7e879bd011800762de578a06213aa9fdff95ecb7a03585542bd78d",
                            "block_index": 202,
                            "block_time": 1740489926
                        },
                        {
                            "event_index": 666,
                            "event": "MPMA_SEND",
                            "params": {
                                "asset": "MPMASSET",
                                "block_index": 202,
                                "destination": "bcrt1qj7zsv3gv750c8mr02eytgp5xen2ke6fpak6ztc",
                                "memo": "the memo",
                                "msg_index": 0,
                                "quantity": 10,
                                "send_type": "send",
                                "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                                "status": "valid",
                                "tx_hash": "61f1aee9ee7e879bd011800762de578a06213aa9fdff95ecb7a03585542bd78d",
                                "tx_index": 78,
                                "block_time": 1740489926,
                                "asset_info": {
                                    "asset_longname": null,
                                    "description": "My super asset B",
                                    "issuer": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                                    "divisible": true,
                                    "locked": false,
                                    "owner": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n"
                                },
                                "quantity_normalized": "0.00000010"
                            },
                            "tx_hash": "61f1aee9ee7e879bd011800762de578a06213aa9fdff95ecb7a03585542bd78d",
                            "block_index": 202,
                            "block_time": 1740489926
                        },
                        {
                            "event_index": 667,
                            "event": "MPMA_SEND",
                            "params": {
                                "asset": "MPMASSET",
                                "block_index": 202,
                                "destination": "bcrt1qndrj8uy6the35p3gpjuuss7l29hwe0npylexmz",
                                "memo": "the memo",
                                "msg_index": 1,
                                "quantity": 10,
                                "send_type": "send",
                                "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                                "status": "valid",
                                "tx_hash": "61f1aee9ee7e879bd011800762de578a06213aa9fdff95ecb7a03585542bd78d",
                                "tx_index": 78,
                                "block_time": 1740489926,
                                "asset_info": {
                                    "asset_longname": null,
                                    "description": "My super asset B",
                                    "issuer": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                                    "divisible": true,
                                    "locked": false,
                                    "owner": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n"
                                },
                                "quantity_normalized": "0.00000010"
                            },
                            "tx_hash": "61f1aee9ee7e879bd011800762de578a06213aa9fdff95ecb7a03585542bd78d",
                            "block_index": 202,
                            "block_time": 1740489926
                        },
                        {
                            "event_index": 668,
                            "event": "MPMA_SEND",
                            "params": {
                                "asset": "XCP",
                                "block_index": 202,
                                "destination": "bcrt1qdj4ckly3lwmjqld7pu60qu9myggm6pnd58ntz6",
                                "memo": "the memo",
                                "msg_index": 2,
                                "quantity": 10,
                                "send_type": "send",
                                "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                                "status": "valid",
                                "tx_hash": "61f1aee9ee7e879bd011800762de578a06213aa9fdff95ecb7a03585542bd78d",
                                "tx_index": 78,
                                "block_time": 1740489926,
                                "asset_info": {
                                    "asset_longname": null,
                                    "description": "The Counterparty protocol native currency",
                                    "issuer": null,
                                    "divisible": true,
                                    "locked": true,
                                    "owner": null
                                },
                                "quantity_normalized": "0.00000010"
                            },
                            "tx_hash": "61f1aee9ee7e879bd011800762de578a06213aa9fdff95ecb7a03585542bd78d",
                            "block_index": 202,
                            "block_time": 1740489926
                        }
                    ],
                    "unpacked_data": {
                        "message_type": "mpma_send",
                        "message_type_id": 3,
                        "message_data": [
                            {
                                "asset": "MPMASSET",
                                "destination": "bcrt1qj7zsv3gv750c8mr02eytgp5xen2ke6fpak6ztc",
                                "quantity": 10,
                                "memo": "the memo",
                                "memo_is_hex": false,
                                "asset_info": {
                                    "asset_longname": null,
                                    "description": "My super asset B",
                                    "issuer": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                                    "divisible": true,
                                    "locked": false,
                                    "owner": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n"
                                },
                                "quantity_normalized": "0.00000010"
                            },
                            {
                                "asset": "XCP",
                                "destination": "bcrt1qdj4ckly3lwmjqld7pu60qu9myggm6pnd58ntz6",
                                "quantity": 10,
                                "memo": "the memo",
                                "memo_is_hex": false,
                                "asset_info": {
                                    "asset_longname": null,
                                    "description": "The Counterparty protocol native currency",
                                    "issuer": null,
                                    "divisible": true,
                                    "locked": true,
                                    "owner": null
                                },
                                "quantity_normalized": "0.00000010"
                            }
                        ]
                    },
                    "btc_amount_normalized": "0.00000000"
                }
            ],
            "next_cursor": 77,
            "result_count": 50
        }
    ```

### Get Events By Addresses [GET /v2/addresses/events{?addresses}{&event_name}{&cursor}{&limit}{&offset}{&verbose}]

Returns the events of a list of addresses

+ Parameters
    + addresses: `bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n,bcrt1qdj4ckly3lwmjqld7pu60qu9myggm6pnd58ntz6` (str, required) - Comma separated list of addresses to return
    + event_name (str, optional) - Comma separated list of events to return
        + Default: `None`
    + cursor: `1042` (str, optional) - The last event index to return
        + Default: `None`
    + limit: `5` (int, optional) - The maximum number of events to return
        + Default: `100`
    + offset (int, optional) - The number of lines to skip before returning results (overrides the `cursor` parameter)
        + Default: `None`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": [
                {
                    "event_index": 984,
                    "event": "DISPENSE",
                    "params": {
                        "asset": "XCP",
                        "block_index": 237,
                        "btc_amount": 3000,
                        "destination": "bcrt1qdj4ckly3lwmjqld7pu60qu9myggm6pnd58ntz6",
                        "dispense_index": 0,
                        "dispense_quantity": 3000,
                        "dispenser_tx_hash": "c54957b9cbb662e2cc9eee1c09950f7365365a09abad1bdf1afb3cca05d63705",
                        "source": "bcrt1qv82qg4jp6nn6wahdnx2d2u6cdfxyc2zuw7u9mv",
                        "tx_hash": "fef95527acddc38cf41b44de40d85e7f67dc5b51531997c0483c5c3b321f16c9",
                        "tx_index": 115,
                        "block_time": 1740490081,
                        "asset_info": {
                            "asset_longname": null,
                            "description": "The Counterparty protocol native currency",
                            "issuer": null,
                            "divisible": true,
                            "locked": true,
                            "owner": null
                        },
                        "dispense_quantity_normalized": "0.00003000",
                        "btc_amount_normalized": "0.00003000"
                    },
                    "tx_hash": "fef95527acddc38cf41b44de40d85e7f67dc5b51531997c0483c5c3b321f16c9",
                    "block_index": 237,
                    "block_time": 1740490081
                },
                {
                    "event_index": 982,
                    "event": "CREDIT",
                    "params": {
                        "address": "bcrt1qdj4ckly3lwmjqld7pu60qu9myggm6pnd58ntz6",
                        "asset": "XCP",
                        "block_index": 237,
                        "calling_function": "dispense",
                        "event": "fef95527acddc38cf41b44de40d85e7f67dc5b51531997c0483c5c3b321f16c9",
                        "quantity": 3000,
                        "tx_index": 115,
                        "utxo": null,
                        "utxo_address": null,
                        "block_time": 1740490081,
                        "asset_info": {
                            "asset_longname": null,
                            "description": "The Counterparty protocol native currency",
                            "issuer": null,
                            "divisible": true,
                            "locked": true,
                            "owner": null
                        },
                        "quantity_normalized": "0.00003000"
                    },
                    "tx_hash": "fef95527acddc38cf41b44de40d85e7f67dc5b51531997c0483c5c3b321f16c9",
                    "block_index": 237,
                    "block_time": 1740490081
                },
                {
                    "event_index": 980,
                    "event": "NEW_TRANSACTION",
                    "params": {
                        "block_hash": "1c5046600a300ab52d6df5e581ad26e371cdf54ef2e4a8908154ad380263b51b",
                        "block_index": 237,
                        "block_time": 1740490081,
                        "btc_amount": 3000,
                        "data": "0d00",
                        "destination": "bcrt1qv82qg4jp6nn6wahdnx2d2u6cdfxyc2zuw7u9mv",
                        "fee": 0,
                        "source": "bcrt1qdj4ckly3lwmjqld7pu60qu9myggm6pnd58ntz6",
                        "transaction_type": "dispense",
                        "tx_hash": "fef95527acddc38cf41b44de40d85e7f67dc5b51531997c0483c5c3b321f16c9",
                        "tx_index": 115,
                        "utxos_info": " fef95527acddc38cf41b44de40d85e7f67dc5b51531997c0483c5c3b321f16c9:0 3 1",
                        "btc_amount_normalized": "0.00003000"
                    },
                    "tx_hash": "fef95527acddc38cf41b44de40d85e7f67dc5b51531997c0483c5c3b321f16c9",
                    "block_index": 237,
                    "block_time": 1740490081
                },
                {
                    "event_index": 861,
                    "event": "ORDER_MATCH_EXPIRATION",
                    "params": {
                        "block_index": 225,
                        "order_match_id": "9198a9256ee36ffaa1c68b2098d9920bf461858924c70baa1e2e616814a81c54_c0b993f438e82940a24a6f2e74bca15b60d197c7afa93aea4d0f82b02cc89f96",
                        "tx0_address": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                        "tx1_address": "bcrt1qj7zsv3gv750c8mr02eytgp5xen2ke6fpak6ztc",
                        "block_time": 1740490010
                    },
                    "tx_hash": "3672a9093ed26f6be9b0f343040f560e1986e2ad87d26b05fc56b45061b87010",
                    "block_index": 225,
                    "block_time": 1740490010
                },
                {
                    "event_index": 860,
                    "event": "CREDIT",
                    "params": {
                        "address": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                        "asset": "XCP",
                        "block_index": 225,
                        "calling_function": "order expired",
                        "event": "9198a9256ee36ffaa1c68b2098d9920bf461858924c70baa1e2e616814a81c54_c0b993f438e82940a24a6f2e74bca15b60d197c7afa93aea4d0f82b02cc89f96",
                        "quantity": 1000,
                        "tx_index": 0,
                        "utxo": null,
                        "utxo_address": null,
                        "block_time": 1740490010,
                        "asset_info": {
                            "asset_longname": null,
                            "description": "The Counterparty protocol native currency",
                            "issuer": null,
                            "divisible": true,
                            "locked": true,
                            "owner": null
                        },
                        "quantity_normalized": "0.00001000"
                    },
                    "tx_hash": "3672a9093ed26f6be9b0f343040f560e1986e2ad87d26b05fc56b45061b87010",
                    "block_index": 225,
                    "block_time": 1740490010
                }
            ],
            "next_cursor": 758,
            "result_count": 267
        }
    ```

### Get Mempool Events By Addresses [GET /v2/addresses/mempool{?addresses}{&event_name}{&cursor}{&limit}{&verbose}]

Returns the mempool events of a list of addresses

+ Parameters
    + addresses: `bcrt1qj7zsv3gv750c8mr02eytgp5xen2ke6fpak6ztc,bcrt1qndrj8uy6the35p3gpjuuss7l29hwe0npylexmz` (str, required) - Comma separated list of addresses to return
    + event_name (str, optional) - Comma separated list of events to return
        + Default: `None`
    + cursor (str, optional) - The last event index to return
        + Default: `None`
    + limit: `5` (int, optional) - The maximum number of events to return
        + Default: `100`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": [
                {
                    "tx_hash": "0ab945476155bacbb733e71fe0fe435cdb13c4954a1231bfcabc678c0ec790eb",
                    "event": "ENHANCED_SEND",
                    "params": {
                        "asset": "XCP",
                        "block_index": 9999999,
                        "destination": "bcrt1qj7zsv3gv750c8mr02eytgp5xen2ke6fpak6ztc",
                        "memo": null,
                        "msg_index": 0,
                        "quantity": 10000,
                        "send_type": "send",
                        "source": "bcrt1qndrj8uy6the35p3gpjuuss7l29hwe0npylexmz",
                        "status": "valid",
                        "tx_hash": "0ab945476155bacbb733e71fe0fe435cdb13c4954a1231bfcabc678c0ec790eb",
                        "tx_index": 122,
                        "asset_info": {
                            "asset_longname": null,
                            "description": "The Counterparty protocol native currency",
                            "issuer": null,
                            "divisible": true,
                            "locked": true,
                            "owner": null
                        },
                        "quantity_normalized": "0.00010000"
                    },
                    "timestamp": 1740490115.3338332
                },
                {
                    "tx_hash": "0ab945476155bacbb733e71fe0fe435cdb13c4954a1231bfcabc678c0ec790eb",
                    "event": "CREDIT",
                    "params": {
                        "address": "bcrt1qj7zsv3gv750c8mr02eytgp5xen2ke6fpak6ztc",
                        "asset": "XCP",
                        "block_index": 245,
                        "calling_function": "send",
                        "event": "0ab945476155bacbb733e71fe0fe435cdb13c4954a1231bfcabc678c0ec790eb",
                        "quantity": 10000,
                        "tx_index": 122,
                        "utxo": null,
                        "utxo_address": null,
                        "block_time": 1740490111,
                        "asset_info": {
                            "asset_longname": null,
                            "description": "The Counterparty protocol native currency",
                            "issuer": null,
                            "divisible": true,
                            "locked": true,
                            "owner": null
                        },
                        "quantity_normalized": "0.00010000"
                    },
                    "timestamp": 1740490115.3338332
                },
                {
                    "tx_hash": "0ab945476155bacbb733e71fe0fe435cdb13c4954a1231bfcabc678c0ec790eb",
                    "event": "DEBIT",
                    "params": {
                        "action": "send",
                        "address": "bcrt1qndrj8uy6the35p3gpjuuss7l29hwe0npylexmz",
                        "asset": "XCP",
                        "block_index": 245,
                        "event": "0ab945476155bacbb733e71fe0fe435cdb13c4954a1231bfcabc678c0ec790eb",
                        "quantity": 10000,
                        "tx_index": 122,
                        "utxo": null,
                        "utxo_address": null,
                        "block_time": 1740490111,
                        "asset_info": {
                            "asset_longname": null,
                            "description": "The Counterparty protocol native currency",
                            "issuer": null,
                            "divisible": true,
                            "locked": true,
                            "owner": null
                        },
                        "quantity_normalized": "0.00010000"
                    },
                    "timestamp": 1740490115.3338332
                },
                {
                    "tx_hash": "0ab945476155bacbb733e71fe0fe435cdb13c4954a1231bfcabc678c0ec790eb",
                    "event": "NEW_TRANSACTION",
                    "params": {
                        "block_hash": "mempool",
                        "block_index": 9999999,
                        "block_time": 1740490115.3338332,
                        "btc_amount": 0,
                        "data": "020000000000000001000000000000271080978506450cf51f83ec6f5648b40686ccd56ce921",
                        "destination": "",
                        "fee": 10000,
                        "source": "bcrt1qndrj8uy6the35p3gpjuuss7l29hwe0npylexmz",
                        "transaction_type": "enhanced_send",
                        "tx_hash": "0ab945476155bacbb733e71fe0fe435cdb13c4954a1231bfcabc678c0ec790eb",
                        "tx_index": 122,
                        "utxos_info": " 0ab945476155bacbb733e71fe0fe435cdb13c4954a1231bfcabc678c0ec790eb:1 2 0",
                        "btc_amount_normalized": "0.00000000"
                    },
                    "timestamp": 1740490115.3338332
                }
            ],
            "next_cursor": null,
            "result_count": 4
        }
    ```

### Get Address Balances [GET /v2/addresses/{address}/balances{?type}{&cursor}{&limit}{&offset}{&sort}{&verbose}]

Returns the balances of an address

+ Parameters
    + address: `bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n` (str, required) - The address to return
    + type (enum[str], optional) - The type of balances to return
        + Default: `<built-in function all>`
        + Members
            + `all`
            + `utxo`
            + `address`
    + cursor (str, optional) - The last index of the balances to return
        + Default: `None`
    + limit: `5` (int, optional) - The maximum number of balances to return
        + Default: `100`
    + offset (int, optional) - The number of lines to skip before returning results (overrides the `cursor` parameter)
        + Default: `None`
    + sort: `quantity:desc` (str, optional) - The sort order of the balances to return (overrides the `cursor` parameter)
        + Default: `None`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": [
                {
                    "address": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "asset": "A95428956980101314",
                    "asset_longname": null,
                    "quantity": 100000000000,
                    "utxo": null,
                    "utxo_address": null,
                    "asset_info": {
                        "asset_longname": "A95428959745315388.SUBNUMERIC",
                        "description": "A subnumeric asset",
                        "issuer": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                        "divisible": true,
                        "locked": false,
                        "owner": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n"
                    },
                    "quantity_normalized": "1000.00000000"
                },
                {
                    "address": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "asset": "MPMASSET",
                    "asset_longname": null,
                    "quantity": 99999998960,
                    "utxo": null,
                    "utxo_address": null,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "My super asset B",
                        "issuer": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                        "divisible": true,
                        "locked": false,
                        "owner": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n"
                    },
                    "quantity_normalized": "999.99998960"
                },
                {
                    "address": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "asset": "MYASSETA",
                    "asset_longname": null,
                    "quantity": 97999999980,
                    "utxo": null,
                    "utxo_address": null,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "My super asset A",
                        "issuer": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                        "divisible": true,
                        "locked": false,
                        "owner": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n"
                    },
                    "quantity_normalized": "979.99999980"
                },
                {
                    "address": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "asset": "XCP",
                    "asset_longname": null,
                    "quantity": 82599966196,
                    "utxo": null,
                    "utxo_address": null,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "The Counterparty protocol native currency",
                        "issuer": null,
                        "divisible": true,
                        "locked": true,
                        "owner": null
                    },
                    "quantity_normalized": "825.99966196"
                },
                {
                    "address": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "asset": "TESTLOCKDESC",
                    "asset_longname": null,
                    "quantity": 9999990000,
                    "utxo": null,
                    "utxo_address": null,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "Test Locking Description",
                        "issuer": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                        "divisible": true,
                        "locked": false,
                        "owner": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n"
                    },
                    "quantity_normalized": "99.99990000"
                }
            ],
            "next_cursor": null,
            "result_count": 5
        }
    ```

### Get Balances By Address And Asset [GET /v2/addresses/{address}/balances/{asset}{?type}{&cursor}{&limit}{&offset}{&verbose}]

Returns the balances of an address and asset

+ Parameters
    + address: `bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n` (str, required) - The address to return
    + asset: `XCP` (str, required) - The asset to return
    + type (enum[str], optional) - The type of balances to return
        + Default: `all`
        + Members
            + `all`
            + `utxo`
            + `address`
    + cursor (str, optional) - The last index of the balances to return
        + Default: `None`
    + limit: `5` (int, optional) - The maximum number of balances to return
        + Default: `100`
    + offset (int, optional) - The number of lines to skip before returning results (overrides the `cursor` parameter)
        + Default: `None`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": [
                {
                    "address": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "asset": "XCP",
                    "asset_longname": null,
                    "quantity": 82599966196,
                    "utxo": null,
                    "utxo_address": null,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "The Counterparty protocol native currency",
                        "issuer": null,
                        "divisible": true,
                        "locked": true,
                        "owner": null
                    },
                    "quantity_normalized": "825.99966196"
                }
            ],
            "next_cursor": null,
            "result_count": 1
        }
    ```

### Get Credits By Address [GET /v2/addresses/{address}/credits{?action}{&cursor}{&limit}{&offset}{&verbose}]

Returns the credits of an address

+ Parameters
    + address: `bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n` (str, required) - The address to return
    + action (enum[str], optional) - The action to filter by
        + Default: `None`
        + Members
            + `None`
            + `Closed: Max dispenses reached`
            + `bet settled: for equal`
            + `bet settled: for notequal`
            + `bet settled: liquidated for bear`
            + `btcpay`
            + `burn`
            + `cancel order`
            + `close dispenser`
            + `dispense`
            + `dispenser close`
            + `dividend`
            + `feed fee`
            + `filled`
            + `issuance`
            + `mpma send`
            + `open dispenser empty addr`
            + `order cancelled`
            + `order expired`
            + `order match`
            + `recredit backward quantity`
            + `recredit forward quantity`
            + `recredit wager`
            + `recredit wager remaining`
            + `reset issuance`
            + `send`
            + `sweep`
            + `wins`
    + cursor (str, optional) - The last index of the credits to return
        + Default: `None`
    + limit: `5` (int, optional) - The maximum number of credits to return
        + Default: `100`
    + offset (int, optional) - The number of lines to skip before returning results (overrides the `cursor` parameter)
        + Default: `None`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": [
                {
                    "block_index": 225,
                    "address": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "asset": "XCP",
                    "quantity": 1000,
                    "calling_function": "order expired",
                    "event": "9198a9256ee36ffaa1c68b2098d9920bf461858924c70baa1e2e616814a81c54_c0b993f438e82940a24a6f2e74bca15b60d197c7afa93aea4d0f82b02cc89f96",
                    "tx_index": 0,
                    "utxo": null,
                    "utxo_address": null,
                    "block_time": 1740490010,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "The Counterparty protocol native currency",
                        "issuer": null,
                        "divisible": true,
                        "locked": true,
                        "owner": null
                    },
                    "quantity_normalized": "0.00001000"
                },
                {
                    "block_index": 205,
                    "address": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "asset": "XCP",
                    "quantity": 10,
                    "calling_function": "mpma send",
                    "event": "10823d6a8b3b44da8361e887a02942fa28973b782e59ec26ece5a7c88b8d974d",
                    "tx_index": 81,
                    "utxo": null,
                    "utxo_address": null,
                    "block_time": 1740489939,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "The Counterparty protocol native currency",
                        "issuer": null,
                        "divisible": true,
                        "locked": true,
                        "owner": null
                    },
                    "quantity_normalized": "0.00000010"
                },
                {
                    "block_index": 204,
                    "address": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "asset": "XCP",
                    "quantity": 10,
                    "calling_function": "mpma send",
                    "event": "683501e1389d756a4e8cbf76052729d941f18d450f94fe7c85f5decd64162ce7",
                    "tx_index": 80,
                    "utxo": null,
                    "utxo_address": null,
                    "block_time": 1740489935,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "The Counterparty protocol native currency",
                        "issuer": null,
                        "divisible": true,
                        "locked": true,
                        "owner": null
                    },
                    "quantity_normalized": "0.00000010"
                },
                {
                    "block_index": 204,
                    "address": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "asset": "XCP",
                    "quantity": 3000,
                    "calling_function": "order expired",
                    "event": "6a8b04722b5121498713e9ca34b3a634f0ef5f0cf3ee9a0753bd79b8c3f0cc10_c0b993f438e82940a24a6f2e74bca15b60d197c7afa93aea4d0f82b02cc89f96",
                    "tx_index": 0,
                    "utxo": null,
                    "utxo_address": null,
                    "block_time": 1740489935,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "The Counterparty protocol native currency",
                        "issuer": null,
                        "divisible": true,
                        "locked": true,
                        "owner": null
                    },
                    "quantity_normalized": "0.00003000"
                },
                {
                    "block_index": 202,
                    "address": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "asset": "XCP",
                    "quantity": 5000,
                    "calling_function": "cancel order",
                    "event": "6a8b04722b5121498713e9ca34b3a634f0ef5f0cf3ee9a0753bd79b8c3f0cc10",
                    "tx_index": 0,
                    "utxo": null,
                    "utxo_address": null,
                    "block_time": 1740489926,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "The Counterparty protocol native currency",
                        "issuer": null,
                        "divisible": true,
                        "locked": true,
                        "owner": null
                    },
                    "quantity_normalized": "0.00005000"
                }
            ],
            "next_cursor": 78,
            "result_count": 22
        }
    ```

### Get Debits By Address [GET /v2/addresses/{address}/debits{?action}{&cursor}{&limit}{&offset}{&verbose}]

Returns the debits of an address

+ Parameters
    + address: `bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n` (str, required) - The address to return
    + action (enum[str], optional) - The action to filter by
        + Default: `None`
        + Members
            + `None`
            + `bet`
            + `destroy`
            + `dividend`
            + `dividend fee`
            + `issuance fee`
            + `mpma send`
            + `open RPS`
            + `open dispenser`
            + `open dispenser empty addr`
            + `open order`
            + `refill dispenser`
            + `reopen RPS after matching expiration`
            + `reset destroy`
            + `send`
            + `sweep`
            + `sweep fee`
    + cursor (str, optional) - The last index of the debits to return
        + Default: `None`
    + limit: `5` (int, optional) - The maximum number of debits to return
        + Default: `100`
    + offset (int, optional) - The number of lines to skip before returning results (overrides the `cursor` parameter)
        + Default: `None`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": [
                {
                    "block_index": 203,
                    "address": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "asset": "XCP",
                    "quantity": 10,
                    "action": "mpma send",
                    "event": "a664e79129ea014f2afd994abca856dfb7a93d3e5e5a9ce076c150ddbacd6bd9",
                    "tx_index": 79,
                    "utxo": null,
                    "utxo_address": null,
                    "block_time": 1740489930,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "The Counterparty protocol native currency",
                        "issuer": null,
                        "divisible": true,
                        "locked": true,
                        "owner": null
                    },
                    "quantity_normalized": "0.00000010"
                },
                {
                    "block_index": 203,
                    "address": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "asset": "MPMASSET",
                    "quantity": 20,
                    "action": "mpma send",
                    "event": "a664e79129ea014f2afd994abca856dfb7a93d3e5e5a9ce076c150ddbacd6bd9",
                    "tx_index": 79,
                    "utxo": null,
                    "utxo_address": null,
                    "block_time": 1740489930,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "My super asset B",
                        "issuer": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                        "divisible": true,
                        "locked": false,
                        "owner": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n"
                    },
                    "quantity_normalized": "0.00000020"
                },
                {
                    "block_index": 202,
                    "address": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "asset": "XCP",
                    "quantity": 10,
                    "action": "mpma send",
                    "event": "61f1aee9ee7e879bd011800762de578a06213aa9fdff95ecb7a03585542bd78d",
                    "tx_index": 78,
                    "utxo": null,
                    "utxo_address": null,
                    "block_time": 1740489926,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "The Counterparty protocol native currency",
                        "issuer": null,
                        "divisible": true,
                        "locked": true,
                        "owner": null
                    },
                    "quantity_normalized": "0.00000010"
                },
                {
                    "block_index": 202,
                    "address": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "asset": "MPMASSET",
                    "quantity": 20,
                    "action": "mpma send",
                    "event": "61f1aee9ee7e879bd011800762de578a06213aa9fdff95ecb7a03585542bd78d",
                    "tx_index": 78,
                    "utxo": null,
                    "utxo_address": null,
                    "block_time": 1740489926,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "My super asset B",
                        "issuer": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                        "divisible": true,
                        "locked": false,
                        "owner": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n"
                    },
                    "quantity_normalized": "0.00000020"
                },
                {
                    "block_index": 201,
                    "address": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "asset": "MPMASSET",
                    "quantity": 1000,
                    "action": "send",
                    "event": "0022913062f0470672f6b471ff669c43b45ce767fa522bcd64b909f606d59cd0",
                    "tx_index": 77,
                    "utxo": null,
                    "utxo_address": null,
                    "block_time": 1740489923,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "My super asset B",
                        "issuer": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                        "divisible": true,
                        "locked": false,
                        "owner": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n"
                    },
                    "quantity_normalized": "0.00001000"
                }
            ],
            "next_cursor": 64,
            "result_count": 29
        }
    ```

### Get Bet By Feed [GET /v2/addresses/{address}/bets{?status}{&cursor}{&limit}{&offset}{&verbose}]

Returns the bets of a feed

+ Parameters
    + address: `bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n` (str, required) - The address of the feed
    + status: `filled` (enum[str], optional) - The status of the bet
        + Default: `open`
        + Members
            + `cancelled`
            + `dropped`
            + `expired`
            + `filled`
            + `open`
    + cursor (str, optional) - The last index of the bets to return
        + Default: `None`
    + limit: `5` (int, optional) - The maximum number of bets to return
        + Default: `100`
    + offset (int, optional) - The number of lines to skip before returning results (overrides the `cursor` parameter)
        + Default: `None`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": [],
            "next_cursor": null,
            "result_count": 0
        }
    ```

### Get Broadcasts By Source [GET /v2/addresses/{address}/broadcasts{?cursor}{&limit}{&offset}{&verbose}]

Returns the broadcasts of a source

+ Parameters
    + address: `bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n` (str, required) - The address to return
    + cursor (str, optional) - The last index of the broadcasts to return
        + Default: `None`
    + limit: `5` (int, optional) - The maximum number of broadcasts to return
        + Default: `100`
    + offset (int, optional) - The number of lines to skip before returning results (overrides the `cursor` parameter)
        + Default: `None`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": [
                {
                    "tx_index": 24,
                    "tx_hash": "bc83ab07e663168df3e35fd609b4cf82ac8729bee2abe936939a9a60a5f1e17f",
                    "block_index": 128,
                    "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "timestamp": 4003903983,
                    "value": 999.0,
                    "fee_fraction_int": 0,
                    "text": "Hello, world!",
                    "locked": false,
                    "status": "valid",
                    "block_time": 1740489662,
                    "fee_fraction_int_normalized": "0.00000000"
                }
            ],
            "next_cursor": null,
            "result_count": 1
        }
    ```

### Get Burns By Address [GET /v2/addresses/{address}/burns{?cursor}{&limit}{&offset}{&verbose}]

Returns the burns of an address

+ Parameters
    + address: `bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n` (str, required) - The address to return
    + cursor (str, optional) - The last index of the burns to return
        + Default: `None`
    + limit: `5` (int, optional) - The maximum number of burns to return
        + Default: `100`
    + offset (int, optional) - The number of lines to skip before returning results (overrides the `cursor` parameter)
        + Default: `None`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": [
                {
                    "tx_index": 6,
                    "tx_hash": "941d4b64e401987ea35a2aba14b68356311a81db0373e3a1758044db0a1400a8",
                    "block_index": 112,
                    "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "burned": 50000000,
                    "earned": 74999998167,
                    "status": "valid",
                    "block_time": 1740489603,
                    "burned_normalized": "0.50000000",
                    "earned_normalized": "749.99998167"
                }
            ],
            "next_cursor": null,
            "result_count": 1
        }
    ```

### Get Sends By Address [GET /v2/addresses/{address}/sends{?send_type}{&cursor}{&limit}{&offset}{&verbose}]

Returns the sends, include Enhanced and MPMA sends, of an address

+ Parameters
    + address: `bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n` (str, required) - The address to return
    + send_type (enum[str], optional) - The type of sends to return
        + Default: `all`
        + Members
            + `all`
            + `send`
            + `attach`
            + `move`
            + `detach`
    + cursor (str, optional) - The last index of the sends to return
        + Default: `None`
    + limit: `5` (int, optional) - The maximum number of sends to return
        + Default: `100`
    + offset (int, optional) - The number of lines to skip before returning results (overrides the `cursor` parameter)
        + Default: `None`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": [
                {
                    "tx_index": 81,
                    "tx_hash": "10823d6a8b3b44da8361e887a02942fa28973b782e59ec26ece5a7c88b8d974d",
                    "block_index": 205,
                    "source": "bcrt1qdj4ckly3lwmjqld7pu60qu9myggm6pnd58ntz6",
                    "destination": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "asset": "XCP",
                    "quantity": 10,
                    "status": "valid",
                    "msg_index": 2,
                    "memo": "memo1",
                    "fee_paid": 0,
                    "send_type": "send",
                    "source_address": null,
                    "destination_address": null,
                    "block_time": 1740489939,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "The Counterparty protocol native currency",
                        "issuer": null,
                        "divisible": true,
                        "locked": true,
                        "owner": null
                    },
                    "quantity_normalized": "0.00000010",
                    "fee_paid_normalized": "0.00000000"
                },
                {
                    "tx_index": 80,
                    "tx_hash": "683501e1389d756a4e8cbf76052729d941f18d450f94fe7c85f5decd64162ce7",
                    "block_index": 204,
                    "source": "bcrt1qdj4ckly3lwmjqld7pu60qu9myggm6pnd58ntz6",
                    "destination": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "asset": "XCP",
                    "quantity": 10,
                    "status": "valid",
                    "msg_index": 2,
                    "memo": "746865206d656d6f",
                    "fee_paid": 0,
                    "send_type": "send",
                    "source_address": null,
                    "destination_address": null,
                    "block_time": 1740489935,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "The Counterparty protocol native currency",
                        "issuer": null,
                        "divisible": true,
                        "locked": true,
                        "owner": null
                    },
                    "quantity_normalized": "0.00000010",
                    "fee_paid_normalized": "0.00000000"
                },
                {
                    "tx_index": 79,
                    "tx_hash": "a664e79129ea014f2afd994abca856dfb7a93d3e5e5a9ce076c150ddbacd6bd9",
                    "block_index": 203,
                    "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "destination": "bcrt1qdj4ckly3lwmjqld7pu60qu9myggm6pnd58ntz6",
                    "asset": "XCP",
                    "quantity": 10,
                    "status": "valid",
                    "msg_index": 2,
                    "memo": "memo1",
                    "fee_paid": 0,
                    "send_type": "send",
                    "source_address": null,
                    "destination_address": null,
                    "block_time": 1740489930,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "The Counterparty protocol native currency",
                        "issuer": null,
                        "divisible": true,
                        "locked": true,
                        "owner": null
                    },
                    "quantity_normalized": "0.00000010",
                    "fee_paid_normalized": "0.00000000"
                },
                {
                    "tx_index": 79,
                    "tx_hash": "a664e79129ea014f2afd994abca856dfb7a93d3e5e5a9ce076c150ddbacd6bd9",
                    "block_index": 203,
                    "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "destination": "bcrt1qndrj8uy6the35p3gpjuuss7l29hwe0npylexmz",
                    "asset": "MPMASSET",
                    "quantity": 10,
                    "status": "valid",
                    "msg_index": 1,
                    "memo": "memo3",
                    "fee_paid": 0,
                    "send_type": "send",
                    "source_address": null,
                    "destination_address": null,
                    "block_time": 1740489930,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "My super asset B",
                        "issuer": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                        "divisible": true,
                        "locked": false,
                        "owner": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n"
                    },
                    "quantity_normalized": "0.00000010",
                    "fee_paid_normalized": "0.00000000"
                },
                {
                    "tx_index": 79,
                    "tx_hash": "a664e79129ea014f2afd994abca856dfb7a93d3e5e5a9ce076c150ddbacd6bd9",
                    "block_index": 203,
                    "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "destination": "bcrt1qj7zsv3gv750c8mr02eytgp5xen2ke6fpak6ztc",
                    "asset": "MPMASSET",
                    "quantity": 10,
                    "status": "valid",
                    "msg_index": 0,
                    "memo": "memo2",
                    "fee_paid": 0,
                    "send_type": "send",
                    "source_address": null,
                    "destination_address": null,
                    "block_time": 1740489930,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "My super asset B",
                        "issuer": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                        "divisible": true,
                        "locked": false,
                        "owner": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n"
                    },
                    "quantity_normalized": "0.00000010",
                    "fee_paid_normalized": "0.00000000"
                }
            ],
            "next_cursor": 25,
            "result_count": 16
        }
    ```

### Get Receive By Address [GET /v2/addresses/{address}/receives{?send_type}{&cursor}{&limit}{&offset}{&verbose}]

Returns the receives of an address

+ Parameters
    + address: `bcrt1qqus708ucy6kecks0w8pykqmghard6kqf8tus06` (str, required) - The address to return
    + send_type (enum[str], optional) - The type of sends to return
        + Default: `all`
        + Members
            + `all`
            + `send`
            + `attach`
            + `move`
            + `detach`
    + cursor (str, optional) - The last index of the sends to return
        + Default: `None`
    + limit: `5` (int, optional) - The maximum number of sends to return
        + Default: `100`
    + offset (int, optional) - The number of lines to skip before returning results (overrides the `cursor` parameter)
        + Default: `None`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": [
                {
                    "tx_index": 38,
                    "tx_hash": "07b10b136343dff482f4ef2fcdeeed7a8403281b76c1c449c6a0bf5e50a21896",
                    "block_index": 142,
                    "source": "d953481e654442a1ec569f4173efdf983d4efc5e6801e75074867e328e228e79:0",
                    "destination": "bcrt1qqus708ucy6kecks0w8pykqmghard6kqf8tus06",
                    "asset": "MYASSETA",
                    "quantity": 1000000000,
                    "status": "valid",
                    "msg_index": 0,
                    "memo": null,
                    "fee_paid": 0,
                    "send_type": "detach",
                    "source_address": "bcrt1qndrj8uy6the35p3gpjuuss7l29hwe0npylexmz",
                    "destination_address": null,
                    "block_time": 1740489714,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "My super asset A",
                        "issuer": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                        "divisible": true,
                        "locked": false,
                        "owner": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n"
                    },
                    "quantity_normalized": "10.00000000",
                    "fee_paid_normalized": "0.00000000"
                }
            ],
            "next_cursor": null,
            "result_count": 1
        }
    ```

### Get Sends By Address And Asset [GET /v2/addresses/{address}/sends/{asset}{?send_type}{&cursor}{&limit}{&offset}{&verbose}]

Returns the sends, include Enhanced and MPMA sends, of an address and asset

+ Parameters
    + address: `bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n` (str, required) - The address to return
    + asset: `EXPANSIVE` (str, required) - The asset to return
    + send_type (enum[str], optional) - The type of sends to return
        + Default: `all`
        + Members
            + `all`
            + `send`
            + `attach`
            + `move`
            + `detach`
    + cursor (str, optional) - The last index of the sends to return
        + Default: `None`
    + limit: `5` (int, optional) - The maximum number of sends to return
        + Default: `100`
    + offset (int, optional) - The number of lines to skip before returning results (overrides the `cursor` parameter)
        + Default: `None`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": [],
            "next_cursor": null,
            "result_count": 0
        }
    ```

### Get Receive By Address And Asset [GET /v2/addresses/{address}/receives/{asset}{?send_type}{&cursor}{&limit}{&offset}{&verbose}]

Returns the receives of an address and asset

+ Parameters
    + address: `bcrt1qqus708ucy6kecks0w8pykqmghard6kqf8tus06` (str, required) - The address to return
    + asset: `EXPANSIVE` (str, required) - The asset to return
    + send_type (enum[str], optional) - The type of sends to return
        + Default: `all`
        + Members
            + `all`
            + `send`
            + `attach`
            + `move`
            + `detach`
    + cursor (str, optional) - The last index of the sends to return
        + Default: `None`
    + limit: `5` (int, optional) - The maximum number of sends to return
        + Default: `100`
    + offset (int, optional) - The number of lines to skip before returning results (overrides the `cursor` parameter)
        + Default: `None`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": [],
            "next_cursor": null,
            "result_count": 0
        }
    ```

### Get Valid Destructions By Address [GET /v2/addresses/{address}/destructions{?cursor}{&limit}{&offset}{&verbose}]

Returns the destructions of a block

+ Parameters
    + address: `bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n` (str, required) - The address to return
    + cursor (str, optional) - The last index of the destructions to return
        + Default: `None`
    + limit: `5` (int, optional) - The maximum number of destructions to return
        + Default: `100`
    + offset (int, optional) - The number of lines to skip before returning results (overrides the `cursor` parameter)
        + Default: `None`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": [
                {
                    "tx_index": 14,
                    "tx_hash": "54da50dc04fe18ff5822c81f0f4dbf0a908912f00e788a5a9cbe2a6c0900fca9",
                    "block_index": 121,
                    "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "asset": "FAIRMINTB",
                    "quantity": 300000000,
                    "tag": "soft cap not reached",
                    "status": "valid",
                    "block_time": 1740489636,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "",
                        "issuer": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                        "divisible": true,
                        "locked": false,
                        "owner": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n"
                    },
                    "quantity_normalized": "3.00000000"
                }
            ],
            "next_cursor": null,
            "result_count": 1
        }
    ```

### Get Dispensers By Address [GET /v2/addresses/{address}/dispensers{?status}{&exclude_with_oracle}{&cursor}{&limit}{&offset}{&sort}{&verbose}]

Returns the dispensers of an address

+ Parameters
    + address: `bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n` (str, required) - The address to return
    + status (enum[str], optional) - The status of the dispensers to return
        + Default: `all`
        + Members
            + `all`
            + `open`
            + `closed`
            + `closing`
            + `open_empty_address`
    + exclude_with_oracle (bool, optional) - Whether to exclude dispensers with an oracle
        + Default: `False`
    + cursor (str, optional) - The last index of the dispensers to return
        + Default: `None`
    + limit: `5` (int, optional) - The maximum number of dispensers to return
        + Default: `100`
    + offset (int, optional) - The number of lines to skip before returning results (overrides the `cursor` parameter)
        + Default: `None`
    + sort: `give_quantity:desc` (str, optional) - The sort order of the dispensers to return (overrides the `cursor` parameter)
        + Default: `None`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": [
                {
                    "tx_index": 26,
                    "tx_hash": "41cd4920db670aef82765d2f2af44e4e44ef7d9d3efb638be176676e865bf3ae",
                    "block_index": 132,
                    "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "asset": "XCP",
                    "give_quantity": 1,
                    "escrow_quantity": 10000,
                    "satoshirate": 1,
                    "status": 10,
                    "give_remaining": 0,
                    "oracle_address": null,
                    "last_status_tx_hash": null,
                    "origin": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "dispense_count": 2,
                    "last_status_tx_source": null,
                    "close_block_index": null,
                    "price": 1.0,
                    "fiat_price": null,
                    "oracle_price": null,
                    "fiat_unit": null,
                    "oracle_price_last_updated": null,
                    "satoshi_price": 1,
                    "block_time": 1740489677,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "The Counterparty protocol native currency",
                        "issuer": null,
                        "divisible": true,
                        "locked": true,
                        "owner": null
                    },
                    "give_quantity_normalized": "0.00000001",
                    "give_remaining_normalized": "0.00000000",
                    "escrow_quantity_normalized": "0.00010000",
                    "satoshirate_normalized": "0.00000001",
                    "satoshi_price_normalized": "0.00000001",
                    "price_normalized": "1.0000000000000000"
                },
                {
                    "tx_index": 68,
                    "tx_hash": "d41f2c39d9b1d48cc1eb69ad013d77ab81c8298971503c6f6414291a955ae4c2",
                    "block_index": 194,
                    "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "asset": "TESTLOCKDESC",
                    "give_quantity": 1,
                    "escrow_quantity": 10000,
                    "satoshirate": 1,
                    "status": 0,
                    "give_remaining": 6000,
                    "oracle_address": null,
                    "last_status_tx_hash": null,
                    "origin": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "dispense_count": 1,
                    "last_status_tx_source": null,
                    "close_block_index": null,
                    "price": 1.0,
                    "fiat_price": null,
                    "oracle_price": null,
                    "fiat_unit": null,
                    "oracle_price_last_updated": null,
                    "satoshi_price": 1,
                    "block_time": 1740489890,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "Test Locking Description",
                        "issuer": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                        "divisible": true,
                        "locked": false,
                        "owner": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n"
                    },
                    "give_quantity_normalized": "0.00000001",
                    "give_remaining_normalized": "0.00006000",
                    "escrow_quantity_normalized": "0.00010000",
                    "satoshirate_normalized": "0.00000001",
                    "satoshi_price_normalized": "0.00000001",
                    "price_normalized": "1.0000000000000000"
                }
            ],
            "next_cursor": null,
            "result_count": 2
        }
    ```

### Get Dispenser By Address And Asset [GET /v2/addresses/{address}/dispensers/{asset}{?verbose}]

Returns the dispenser of an address and an asset

+ Parameters
    + address: `bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n` (str, required) - The address to return
    + asset: `XCP` (str, required) - The asset to return
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": {
                "tx_index": 26,
                "tx_hash": "41cd4920db670aef82765d2f2af44e4e44ef7d9d3efb638be176676e865bf3ae",
                "block_index": 132,
                "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                "asset": "XCP",
                "give_quantity": 1,
                "escrow_quantity": 10000,
                "satoshirate": 1,
                "status": 10,
                "give_remaining": 0,
                "oracle_address": null,
                "last_status_tx_hash": null,
                "origin": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                "dispense_count": 2,
                "last_status_tx_source": null,
                "close_block_index": null,
                "price": 1.0,
                "fiat_price": null,
                "oracle_price": null,
                "fiat_unit": null,
                "oracle_price_last_updated": null,
                "satoshi_price": 1,
                "block_time": 1740489677,
                "asset_info": {
                    "asset_longname": null,
                    "description": "The Counterparty protocol native currency",
                    "issuer": null,
                    "divisible": true,
                    "locked": true,
                    "owner": null
                },
                "give_quantity_normalized": "0.00000001",
                "give_remaining_normalized": "0.00000000",
                "escrow_quantity_normalized": "0.00010000",
                "satoshirate_normalized": "0.00000001",
                "satoshi_price_normalized": "0.00000001",
                "price_normalized": "1.0000000000000000"
            }
        }
    ```

### Get Dispenses By Source [GET /v2/addresses/{address}/dispenses/sends{?cursor}{&limit}{&offset}{&verbose}]

Returns the dispenses of a source

+ Parameters
    + address: `bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n` (str, required) - The address to return
    + cursor (str, optional) - The last index of the dispenses to return
        + Default: `None`
    + limit: `5` (int, optional) - The maximum number of dispenses to return
        + Default: `100`
    + offset (int, optional) - The number of lines to skip before returning results (overrides the `cursor` parameter)
        + Default: `None`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": [
                {
                    "tx_index": 69,
                    "dispense_index": 0,
                    "tx_hash": "832f8a1eb60d96708f9123043e4f1926310d7209651c18bfa27cec0739d82574",
                    "block_index": 194,
                    "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "destination": "bcrt1qdj4ckly3lwmjqld7pu60qu9myggm6pnd58ntz6",
                    "asset": "TESTLOCKDESC",
                    "dispense_quantity": 4000,
                    "dispenser_tx_hash": "d41f2c39d9b1d48cc1eb69ad013d77ab81c8298971503c6f6414291a955ae4c2",
                    "btc_amount": 4000,
                    "dispenser": {
                        "tx_index": 68,
                        "block_index": 194,
                        "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                        "give_quantity": 1,
                        "escrow_quantity": 10000,
                        "satoshirate": 1,
                        "status": 0,
                        "give_remaining": 6000,
                        "oracle_address": null,
                        "last_status_tx_hash": null,
                        "origin": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                        "dispense_count": 1,
                        "last_status_tx_source": null,
                        "close_block_index": null,
                        "fiat_price": null,
                        "oracle_price": null,
                        "fiat_unit": null,
                        "oracle_price_last_updated": null,
                        "satoshi_price": 1,
                        "give_quantity_normalized": "0.00000001",
                        "give_remaining_normalized": "0.00006000",
                        "escrow_quantity_normalized": "0.00010000",
                        "satoshirate_normalized": "0.00000001",
                        "satoshi_price_normalized": "0.00000001"
                    },
                    "block_time": 1740489890,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "Test Locking Description",
                        "issuer": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                        "divisible": true,
                        "locked": false,
                        "owner": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n"
                    },
                    "dispense_quantity_normalized": "0.00004000",
                    "btc_amount_normalized": "0.00004000"
                },
                {
                    "tx_index": 28,
                    "dispense_index": 0,
                    "tx_hash": "6b57de313e045291168bd742555b44a9695a3640f691ee2d9732739e5f285f67",
                    "block_index": 132,
                    "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "destination": "bcrt1qdj4ckly3lwmjqld7pu60qu9myggm6pnd58ntz6",
                    "asset": "XCP",
                    "dispense_quantity": 4000,
                    "dispenser_tx_hash": "41cd4920db670aef82765d2f2af44e4e44ef7d9d3efb638be176676e865bf3ae",
                    "btc_amount": 4000,
                    "dispenser": {
                        "tx_index": 26,
                        "block_index": 132,
                        "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                        "give_quantity": 1,
                        "escrow_quantity": 10000,
                        "satoshirate": 1,
                        "status": 10,
                        "give_remaining": 0,
                        "oracle_address": null,
                        "last_status_tx_hash": null,
                        "origin": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                        "dispense_count": 2,
                        "last_status_tx_source": null,
                        "close_block_index": null,
                        "fiat_price": null,
                        "oracle_price": null,
                        "fiat_unit": null,
                        "oracle_price_last_updated": null,
                        "satoshi_price": 1,
                        "give_quantity_normalized": "0.00000001",
                        "give_remaining_normalized": "0.00000000",
                        "escrow_quantity_normalized": "0.00010000",
                        "satoshirate_normalized": "0.00000001",
                        "satoshi_price_normalized": "0.00000001"
                    },
                    "block_time": 1740489677,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "The Counterparty protocol native currency",
                        "issuer": null,
                        "divisible": true,
                        "locked": true,
                        "owner": null
                    },
                    "dispense_quantity_normalized": "0.00004000",
                    "btc_amount_normalized": "0.00004000"
                },
                {
                    "tx_index": 27,
                    "dispense_index": 0,
                    "tx_hash": "26bfec7d8335b6222db947c7a42b6c61459f92527a3724a2ec6f1102ff146dac",
                    "block_index": 131,
                    "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "destination": "bcrt1qdj4ckly3lwmjqld7pu60qu9myggm6pnd58ntz6",
                    "asset": "XCP",
                    "dispense_quantity": 6000,
                    "dispenser_tx_hash": "41cd4920db670aef82765d2f2af44e4e44ef7d9d3efb638be176676e865bf3ae",
                    "btc_amount": 6000,
                    "dispenser": {
                        "tx_index": 26,
                        "block_index": 132,
                        "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                        "give_quantity": 1,
                        "escrow_quantity": 10000,
                        "satoshirate": 1,
                        "status": 10,
                        "give_remaining": 0,
                        "oracle_address": null,
                        "last_status_tx_hash": null,
                        "origin": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                        "dispense_count": 2,
                        "last_status_tx_source": null,
                        "close_block_index": null,
                        "fiat_price": null,
                        "oracle_price": null,
                        "fiat_unit": null,
                        "oracle_price_last_updated": null,
                        "satoshi_price": 1,
                        "give_quantity_normalized": "0.00000001",
                        "give_remaining_normalized": "0.00000000",
                        "escrow_quantity_normalized": "0.00010000",
                        "satoshirate_normalized": "0.00000001",
                        "satoshi_price_normalized": "0.00000001"
                    },
                    "block_time": 1740489673,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "The Counterparty protocol native currency",
                        "issuer": null,
                        "divisible": true,
                        "locked": true,
                        "owner": null
                    },
                    "dispense_quantity_normalized": "0.00006000",
                    "btc_amount_normalized": "0.00006000"
                }
            ],
            "next_cursor": null,
            "result_count": 3
        }
    ```

### Get Dispenses By Destination [GET /v2/addresses/{address}/dispenses/receives{?cursor}{&limit}{&offset}{&verbose}]

Returns the dispenses of a destination

+ Parameters
    + address: `bcrt1qdj4ckly3lwmjqld7pu60qu9myggm6pnd58ntz6` (str, required) - The address to return
    + cursor (str, optional) - The last index of the dispenses to return
        + Default: `None`
    + limit: `5` (int, optional) - The maximum number of dispenses to return
        + Default: `100`
    + offset (int, optional) - The number of lines to skip before returning results (overrides the `cursor` parameter)
        + Default: `None`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": [
                {
                    "tx_index": 115,
                    "dispense_index": 0,
                    "tx_hash": "fef95527acddc38cf41b44de40d85e7f67dc5b51531997c0483c5c3b321f16c9",
                    "block_index": 237,
                    "source": "bcrt1qv82qg4jp6nn6wahdnx2d2u6cdfxyc2zuw7u9mv",
                    "destination": "bcrt1qdj4ckly3lwmjqld7pu60qu9myggm6pnd58ntz6",
                    "asset": "XCP",
                    "dispense_quantity": 3000,
                    "dispenser_tx_hash": "c54957b9cbb662e2cc9eee1c09950f7365365a09abad1bdf1afb3cca05d63705",
                    "btc_amount": 3000,
                    "dispenser": {
                        "tx_index": 114,
                        "block_index": 237,
                        "source": "bcrt1qv82qg4jp6nn6wahdnx2d2u6cdfxyc2zuw7u9mv",
                        "give_quantity": 1,
                        "escrow_quantity": 5000,
                        "satoshirate": 1,
                        "status": 0,
                        "give_remaining": 2000,
                        "oracle_address": null,
                        "last_status_tx_hash": null,
                        "origin": "bcrt1qv82qg4jp6nn6wahdnx2d2u6cdfxyc2zuw7u9mv",
                        "dispense_count": 1,
                        "last_status_tx_source": null,
                        "close_block_index": null,
                        "fiat_price": null,
                        "oracle_price": null,
                        "fiat_unit": null,
                        "oracle_price_last_updated": null,
                        "satoshi_price": 1,
                        "give_quantity_normalized": "0.00000001",
                        "give_remaining_normalized": "0.00002000",
                        "escrow_quantity_normalized": "0.00005000",
                        "satoshirate_normalized": "0.00000001",
                        "satoshi_price_normalized": "0.00000001"
                    },
                    "block_time": 1740490081,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "The Counterparty protocol native currency",
                        "issuer": null,
                        "divisible": true,
                        "locked": true,
                        "owner": null
                    },
                    "dispense_quantity_normalized": "0.00003000",
                    "btc_amount_normalized": "0.00003000"
                },
                {
                    "tx_index": 69,
                    "dispense_index": 0,
                    "tx_hash": "832f8a1eb60d96708f9123043e4f1926310d7209651c18bfa27cec0739d82574",
                    "block_index": 194,
                    "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "destination": "bcrt1qdj4ckly3lwmjqld7pu60qu9myggm6pnd58ntz6",
                    "asset": "TESTLOCKDESC",
                    "dispense_quantity": 4000,
                    "dispenser_tx_hash": "d41f2c39d9b1d48cc1eb69ad013d77ab81c8298971503c6f6414291a955ae4c2",
                    "btc_amount": 4000,
                    "dispenser": {
                        "tx_index": 68,
                        "block_index": 194,
                        "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                        "give_quantity": 1,
                        "escrow_quantity": 10000,
                        "satoshirate": 1,
                        "status": 0,
                        "give_remaining": 6000,
                        "oracle_address": null,
                        "last_status_tx_hash": null,
                        "origin": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                        "dispense_count": 1,
                        "last_status_tx_source": null,
                        "close_block_index": null,
                        "fiat_price": null,
                        "oracle_price": null,
                        "fiat_unit": null,
                        "oracle_price_last_updated": null,
                        "satoshi_price": 1,
                        "give_quantity_normalized": "0.00000001",
                        "give_remaining_normalized": "0.00006000",
                        "escrow_quantity_normalized": "0.00010000",
                        "satoshirate_normalized": "0.00000001",
                        "satoshi_price_normalized": "0.00000001"
                    },
                    "block_time": 1740489890,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "Test Locking Description",
                        "issuer": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                        "divisible": true,
                        "locked": false,
                        "owner": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n"
                    },
                    "dispense_quantity_normalized": "0.00004000",
                    "btc_amount_normalized": "0.00004000"
                },
                {
                    "tx_index": 28,
                    "dispense_index": 0,
                    "tx_hash": "6b57de313e045291168bd742555b44a9695a3640f691ee2d9732739e5f285f67",
                    "block_index": 132,
                    "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "destination": "bcrt1qdj4ckly3lwmjqld7pu60qu9myggm6pnd58ntz6",
                    "asset": "XCP",
                    "dispense_quantity": 4000,
                    "dispenser_tx_hash": "41cd4920db670aef82765d2f2af44e4e44ef7d9d3efb638be176676e865bf3ae",
                    "btc_amount": 4000,
                    "dispenser": {
                        "tx_index": 26,
                        "block_index": 132,
                        "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                        "give_quantity": 1,
                        "escrow_quantity": 10000,
                        "satoshirate": 1,
                        "status": 10,
                        "give_remaining": 0,
                        "oracle_address": null,
                        "last_status_tx_hash": null,
                        "origin": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                        "dispense_count": 2,
                        "last_status_tx_source": null,
                        "close_block_index": null,
                        "fiat_price": null,
                        "oracle_price": null,
                        "fiat_unit": null,
                        "oracle_price_last_updated": null,
                        "satoshi_price": 1,
                        "give_quantity_normalized": "0.00000001",
                        "give_remaining_normalized": "0.00000000",
                        "escrow_quantity_normalized": "0.00010000",
                        "satoshirate_normalized": "0.00000001",
                        "satoshi_price_normalized": "0.00000001"
                    },
                    "block_time": 1740489677,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "The Counterparty protocol native currency",
                        "issuer": null,
                        "divisible": true,
                        "locked": true,
                        "owner": null
                    },
                    "dispense_quantity_normalized": "0.00004000",
                    "btc_amount_normalized": "0.00004000"
                },
                {
                    "tx_index": 27,
                    "dispense_index": 0,
                    "tx_hash": "26bfec7d8335b6222db947c7a42b6c61459f92527a3724a2ec6f1102ff146dac",
                    "block_index": 131,
                    "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "destination": "bcrt1qdj4ckly3lwmjqld7pu60qu9myggm6pnd58ntz6",
                    "asset": "XCP",
                    "dispense_quantity": 6000,
                    "dispenser_tx_hash": "41cd4920db670aef82765d2f2af44e4e44ef7d9d3efb638be176676e865bf3ae",
                    "btc_amount": 6000,
                    "dispenser": {
                        "tx_index": 26,
                        "block_index": 132,
                        "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                        "give_quantity": 1,
                        "escrow_quantity": 10000,
                        "satoshirate": 1,
                        "status": 10,
                        "give_remaining": 0,
                        "oracle_address": null,
                        "last_status_tx_hash": null,
                        "origin": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                        "dispense_count": 2,
                        "last_status_tx_source": null,
                        "close_block_index": null,
                        "fiat_price": null,
                        "oracle_price": null,
                        "fiat_unit": null,
                        "oracle_price_last_updated": null,
                        "satoshi_price": 1,
                        "give_quantity_normalized": "0.00000001",
                        "give_remaining_normalized": "0.00000000",
                        "escrow_quantity_normalized": "0.00010000",
                        "satoshirate_normalized": "0.00000001",
                        "satoshi_price_normalized": "0.00000001"
                    },
                    "block_time": 1740489673,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "The Counterparty protocol native currency",
                        "issuer": null,
                        "divisible": true,
                        "locked": true,
                        "owner": null
                    },
                    "dispense_quantity_normalized": "0.00006000",
                    "btc_amount_normalized": "0.00006000"
                }
            ],
            "next_cursor": null,
            "result_count": 4
        }
    ```

### Get Dispenses By Source And Asset [GET /v2/addresses/{address}/dispenses/sends/{asset}{?cursor}{&limit}{&offset}{&verbose}]

Returns the dispenses of an address and an asset

+ Parameters
    + address: `bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n` (str, required) - The address to return
    + asset: `XCP` (str, required) - The asset to return
    + cursor (str, optional) - The last index of the dispenses to return
        + Default: `None`
    + limit: `5` (int, optional) - The maximum number of dispenses to return
        + Default: `100`
    + offset (int, optional) - The number of lines to skip before returning results (overrides the `cursor` parameter)
        + Default: `None`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": [
                {
                    "tx_index": 28,
                    "dispense_index": 0,
                    "tx_hash": "6b57de313e045291168bd742555b44a9695a3640f691ee2d9732739e5f285f67",
                    "block_index": 132,
                    "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "destination": "bcrt1qdj4ckly3lwmjqld7pu60qu9myggm6pnd58ntz6",
                    "asset": "XCP",
                    "dispense_quantity": 4000,
                    "dispenser_tx_hash": "41cd4920db670aef82765d2f2af44e4e44ef7d9d3efb638be176676e865bf3ae",
                    "btc_amount": 4000,
                    "dispenser": {
                        "tx_index": 26,
                        "block_index": 132,
                        "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                        "give_quantity": 1,
                        "escrow_quantity": 10000,
                        "satoshirate": 1,
                        "status": 10,
                        "give_remaining": 0,
                        "oracle_address": null,
                        "last_status_tx_hash": null,
                        "origin": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                        "dispense_count": 2,
                        "last_status_tx_source": null,
                        "close_block_index": null,
                        "fiat_price": null,
                        "oracle_price": null,
                        "fiat_unit": null,
                        "oracle_price_last_updated": null,
                        "satoshi_price": 1,
                        "give_quantity_normalized": "0.00000001",
                        "give_remaining_normalized": "0.00000000",
                        "escrow_quantity_normalized": "0.00010000",
                        "satoshirate_normalized": "0.00000001",
                        "satoshi_price_normalized": "0.00000001"
                    },
                    "block_time": 1740489677,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "The Counterparty protocol native currency",
                        "issuer": null,
                        "divisible": true,
                        "locked": true,
                        "owner": null
                    },
                    "dispense_quantity_normalized": "0.00004000",
                    "btc_amount_normalized": "0.00004000"
                },
                {
                    "tx_index": 27,
                    "dispense_index": 0,
                    "tx_hash": "26bfec7d8335b6222db947c7a42b6c61459f92527a3724a2ec6f1102ff146dac",
                    "block_index": 131,
                    "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "destination": "bcrt1qdj4ckly3lwmjqld7pu60qu9myggm6pnd58ntz6",
                    "asset": "XCP",
                    "dispense_quantity": 6000,
                    "dispenser_tx_hash": "41cd4920db670aef82765d2f2af44e4e44ef7d9d3efb638be176676e865bf3ae",
                    "btc_amount": 6000,
                    "dispenser": {
                        "tx_index": 26,
                        "block_index": 132,
                        "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                        "give_quantity": 1,
                        "escrow_quantity": 10000,
                        "satoshirate": 1,
                        "status": 10,
                        "give_remaining": 0,
                        "oracle_address": null,
                        "last_status_tx_hash": null,
                        "origin": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                        "dispense_count": 2,
                        "last_status_tx_source": null,
                        "close_block_index": null,
                        "fiat_price": null,
                        "oracle_price": null,
                        "fiat_unit": null,
                        "oracle_price_last_updated": null,
                        "satoshi_price": 1,
                        "give_quantity_normalized": "0.00000001",
                        "give_remaining_normalized": "0.00000000",
                        "escrow_quantity_normalized": "0.00010000",
                        "satoshirate_normalized": "0.00000001",
                        "satoshi_price_normalized": "0.00000001"
                    },
                    "block_time": 1740489673,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "The Counterparty protocol native currency",
                        "issuer": null,
                        "divisible": true,
                        "locked": true,
                        "owner": null
                    },
                    "dispense_quantity_normalized": "0.00006000",
                    "btc_amount_normalized": "0.00006000"
                }
            ],
            "next_cursor": null,
            "result_count": 2
        }
    ```

### Get Dispenses By Destination And Asset [GET /v2/addresses/{address}/dispenses/receives/{asset}{?cursor}{&limit}{&offset}{&verbose}]

Returns the dispenses of an address and an asset

+ Parameters
    + address: `bcrt1qdj4ckly3lwmjqld7pu60qu9myggm6pnd58ntz6` (str, required) - The address to return
    + asset: `XCP` (str, required) - The asset to return
    + cursor (str, optional) - The last index of the dispenses to return
        + Default: `None`
    + limit: `5` (int, optional) - The maximum number of dispenses to return
        + Default: `100`
    + offset (int, optional) - The number of lines to skip before returning results (overrides the `cursor` parameter)
        + Default: `None`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": [
                {
                    "tx_index": 115,
                    "dispense_index": 0,
                    "tx_hash": "fef95527acddc38cf41b44de40d85e7f67dc5b51531997c0483c5c3b321f16c9",
                    "block_index": 237,
                    "source": "bcrt1qv82qg4jp6nn6wahdnx2d2u6cdfxyc2zuw7u9mv",
                    "destination": "bcrt1qdj4ckly3lwmjqld7pu60qu9myggm6pnd58ntz6",
                    "asset": "XCP",
                    "dispense_quantity": 3000,
                    "dispenser_tx_hash": "c54957b9cbb662e2cc9eee1c09950f7365365a09abad1bdf1afb3cca05d63705",
                    "btc_amount": 3000,
                    "dispenser": {
                        "tx_index": 114,
                        "block_index": 237,
                        "source": "bcrt1qv82qg4jp6nn6wahdnx2d2u6cdfxyc2zuw7u9mv",
                        "give_quantity": 1,
                        "escrow_quantity": 5000,
                        "satoshirate": 1,
                        "status": 0,
                        "give_remaining": 2000,
                        "oracle_address": null,
                        "last_status_tx_hash": null,
                        "origin": "bcrt1qv82qg4jp6nn6wahdnx2d2u6cdfxyc2zuw7u9mv",
                        "dispense_count": 1,
                        "last_status_tx_source": null,
                        "close_block_index": null,
                        "fiat_price": null,
                        "oracle_price": null,
                        "fiat_unit": null,
                        "oracle_price_last_updated": null,
                        "satoshi_price": 1,
                        "give_quantity_normalized": "0.00000001",
                        "give_remaining_normalized": "0.00002000",
                        "escrow_quantity_normalized": "0.00005000",
                        "satoshirate_normalized": "0.00000001",
                        "satoshi_price_normalized": "0.00000001"
                    },
                    "block_time": 1740490081,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "The Counterparty protocol native currency",
                        "issuer": null,
                        "divisible": true,
                        "locked": true,
                        "owner": null
                    },
                    "dispense_quantity_normalized": "0.00003000",
                    "btc_amount_normalized": "0.00003000"
                },
                {
                    "tx_index": 28,
                    "dispense_index": 0,
                    "tx_hash": "6b57de313e045291168bd742555b44a9695a3640f691ee2d9732739e5f285f67",
                    "block_index": 132,
                    "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "destination": "bcrt1qdj4ckly3lwmjqld7pu60qu9myggm6pnd58ntz6",
                    "asset": "XCP",
                    "dispense_quantity": 4000,
                    "dispenser_tx_hash": "41cd4920db670aef82765d2f2af44e4e44ef7d9d3efb638be176676e865bf3ae",
                    "btc_amount": 4000,
                    "dispenser": {
                        "tx_index": 26,
                        "block_index": 132,
                        "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                        "give_quantity": 1,
                        "escrow_quantity": 10000,
                        "satoshirate": 1,
                        "status": 10,
                        "give_remaining": 0,
                        "oracle_address": null,
                        "last_status_tx_hash": null,
                        "origin": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                        "dispense_count": 2,
                        "last_status_tx_source": null,
                        "close_block_index": null,
                        "fiat_price": null,
                        "oracle_price": null,
                        "fiat_unit": null,
                        "oracle_price_last_updated": null,
                        "satoshi_price": 1,
                        "give_quantity_normalized": "0.00000001",
                        "give_remaining_normalized": "0.00000000",
                        "escrow_quantity_normalized": "0.00010000",
                        "satoshirate_normalized": "0.00000001",
                        "satoshi_price_normalized": "0.00000001"
                    },
                    "block_time": 1740489677,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "The Counterparty protocol native currency",
                        "issuer": null,
                        "divisible": true,
                        "locked": true,
                        "owner": null
                    },
                    "dispense_quantity_normalized": "0.00004000",
                    "btc_amount_normalized": "0.00004000"
                },
                {
                    "tx_index": 27,
                    "dispense_index": 0,
                    "tx_hash": "26bfec7d8335b6222db947c7a42b6c61459f92527a3724a2ec6f1102ff146dac",
                    "block_index": 131,
                    "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "destination": "bcrt1qdj4ckly3lwmjqld7pu60qu9myggm6pnd58ntz6",
                    "asset": "XCP",
                    "dispense_quantity": 6000,
                    "dispenser_tx_hash": "41cd4920db670aef82765d2f2af44e4e44ef7d9d3efb638be176676e865bf3ae",
                    "btc_amount": 6000,
                    "dispenser": {
                        "tx_index": 26,
                        "block_index": 132,
                        "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                        "give_quantity": 1,
                        "escrow_quantity": 10000,
                        "satoshirate": 1,
                        "status": 10,
                        "give_remaining": 0,
                        "oracle_address": null,
                        "last_status_tx_hash": null,
                        "origin": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                        "dispense_count": 2,
                        "last_status_tx_source": null,
                        "close_block_index": null,
                        "fiat_price": null,
                        "oracle_price": null,
                        "fiat_unit": null,
                        "oracle_price_last_updated": null,
                        "satoshi_price": 1,
                        "give_quantity_normalized": "0.00000001",
                        "give_remaining_normalized": "0.00000000",
                        "escrow_quantity_normalized": "0.00010000",
                        "satoshirate_normalized": "0.00000001",
                        "satoshi_price_normalized": "0.00000001"
                    },
                    "block_time": 1740489673,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "The Counterparty protocol native currency",
                        "issuer": null,
                        "divisible": true,
                        "locked": true,
                        "owner": null
                    },
                    "dispense_quantity_normalized": "0.00006000",
                    "btc_amount_normalized": "0.00006000"
                }
            ],
            "next_cursor": null,
            "result_count": 3
        }
    ```

### Get Sweeps By Address [GET /v2/addresses/{address}/sweeps{?cursor}{&limit}{&offset}{&verbose}]

Returns the sweeps of an address

+ Parameters
    + address: `bcrt1qj7zsv3gv750c8mr02eytgp5xen2ke6fpak6ztc` (str, required) - The address to return
    + cursor (str, optional) - The last index of the sweeps to return
        + Default: `None`
    + limit: `5` (int, optional) - The maximum number of sweeps to return
        + Default: `100`
    + offset (int, optional) - The number of lines to skip before returning results (overrides the `cursor` parameter)
        + Default: `None`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": [
                {
                    "tx_index": 65,
                    "tx_hash": "e0043724de46115717f26d5126665cd592e152dc397d4ecbcd7e41809a575b49",
                    "block_index": 190,
                    "source": "bcrt1qj7zsv3gv750c8mr02eytgp5xen2ke6fpak6ztc",
                    "destination": "bcrt1qndrj8uy6the35p3gpjuuss7l29hwe0npylexmz",
                    "flags": 1,
                    "status": "valid",
                    "memo": "sweep my assets",
                    "fee_paid": 600000,
                    "block_time": 1740489877,
                    "fee_paid_normalized": "0.00600000"
                }
            ],
            "next_cursor": null,
            "result_count": 1
        }
    ```

### Get Issuances By Address [GET /v2/addresses/{address}/issuances{?asset_events}{&cursor}{&limit}{&offset}{&verbose}]

Returns the issuances of an address

+ Parameters
    + address: `bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n` (str, required) - The address to return
    + asset_events (enum[str], optional) - Filter result by one or several comma separated asset events
        + Default: `all`
        + Members
            + `all`
            + `creation`
            + `reissuance`
            + `lock_quantity`
            + `reset`
            + `change_description`
            + `transfer`
            + `open_fairminter`
            + `fairmint`
            + `lock_description`
    + cursor (str, optional) - The last index of the issuances to return
        + Default: `None`
    + limit: `5` (int, optional) - The maximum number of issuances to return
        + Default: `100`
    + offset (int, optional) - The number of lines to skip before returning results (overrides the `cursor` parameter)
        + Default: `None`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": [
                {
                    "tx_index": 76,
                    "tx_hash": "618fc9de3f53e656d35672aae92d4f5f967b0be380055402be05eb5b4616c680",
                    "msg_index": 0,
                    "block_index": 200,
                    "asset": "MPMASSET",
                    "quantity": 100000000000,
                    "divisible": true,
                    "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "issuer": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "transfer": false,
                    "callable": false,
                    "call_date": 0,
                    "call_price": 0.0,
                    "description": "My super asset B",
                    "fee_paid": 50000000,
                    "status": "valid",
                    "asset_longname": null,
                    "description_locked": false,
                    "fair_minting": false,
                    "asset_events": "creation",
                    "locked": false,
                    "reset": false,
                    "block_time": 1740489919,
                    "quantity_normalized": "1000.00000000",
                    "fee_paid_normalized": "0.50000000"
                },
                {
                    "tx_index": 52,
                    "tx_hash": "6462b7c0a285d9ddeaa9882afedb1a658a587df6c774e23ba6be2e52ffc5a8db",
                    "msg_index": 0,
                    "block_index": 156,
                    "asset": "A95428956980101314",
                    "quantity": 100000000000,
                    "divisible": true,
                    "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "issuer": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "transfer": false,
                    "callable": false,
                    "call_date": 0,
                    "call_price": 0.0,
                    "description": "A subnumeric asset",
                    "fee_paid": 0,
                    "status": "valid",
                    "asset_longname": "A95428959745315388.SUBNUMERIC",
                    "description_locked": false,
                    "fair_minting": false,
                    "asset_events": "creation",
                    "locked": false,
                    "reset": false,
                    "block_time": 1740489764,
                    "quantity_normalized": "1000.00000000",
                    "fee_paid_normalized": "0.00000000"
                },
                {
                    "tx_index": 51,
                    "tx_hash": "d1614bc6ac4ad49e83a2d1c530ec601d2700e2f024267c80355b2858665fa851",
                    "msg_index": 0,
                    "block_index": 155,
                    "asset": "TESTLOCKDESC",
                    "quantity": 0,
                    "divisible": true,
                    "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "issuer": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "transfer": false,
                    "callable": false,
                    "call_date": 0,
                    "call_price": 0.0,
                    "description": "Test Locking Description",
                    "fee_paid": 0,
                    "status": "valid",
                    "asset_longname": null,
                    "description_locked": true,
                    "fair_minting": false,
                    "asset_events": "lock_description",
                    "locked": false,
                    "reset": false,
                    "block_time": 1740489760,
                    "quantity_normalized": "0.00000000",
                    "fee_paid_normalized": "0.00000000"
                },
                {
                    "tx_index": 50,
                    "tx_hash": "db65ebabadbfbaa1ccd0c61a811ae5a5922472ad3f33ece8aca9a73ef76d46a1",
                    "msg_index": 0,
                    "block_index": 154,
                    "asset": "A95428959745315388",
                    "quantity": 0,
                    "divisible": true,
                    "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "issuer": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "transfer": false,
                    "callable": false,
                    "call_date": 0,
                    "call_price": 0.0,
                    "description": "Test Locking Description",
                    "fee_paid": 0,
                    "status": "valid",
                    "asset_longname": "TESTLOCKDESC.MYSUBASSET",
                    "description_locked": false,
                    "fair_minting": false,
                    "asset_events": "creation",
                    "locked": false,
                    "reset": false,
                    "block_time": 1740489756,
                    "quantity_normalized": "0.00000000",
                    "fee_paid_normalized": "0.00000000"
                },
                {
                    "tx_index": 49,
                    "tx_hash": "99f95ed98411f0bc6826f68854aa5e64393c6baeb043c3f7d81b052650501b1f",
                    "msg_index": 0,
                    "block_index": 153,
                    "asset": "TESTLOCKDESC",
                    "quantity": 10000000000,
                    "divisible": true,
                    "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "issuer": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "transfer": false,
                    "callable": false,
                    "call_date": 0,
                    "call_price": 0.0,
                    "description": "Test Locking Description",
                    "fee_paid": 50000000,
                    "status": "valid",
                    "asset_longname": null,
                    "description_locked": false,
                    "fair_minting": false,
                    "asset_events": "creation",
                    "locked": false,
                    "reset": false,
                    "block_time": 1740489753,
                    "quantity_normalized": "100.00000000",
                    "fee_paid_normalized": "0.50000000"
                }
            ],
            "next_cursor": 20,
            "result_count": 25
        }
    ```

### Get Valid Assets By Issuer Or Owner [GET /v2/addresses/{address}/assets{?named}{&cursor}{&limit}{&offset}{&verbose}]

Returns the valid assets issued or owned by an address

+ Parameters
    + address: `bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n` (str, required) - The issuer or owner to return
    + named: `true` (bool, optional) - Whether to return only named assets
        + Default: `None`
    + cursor (str, optional) - The last index of the assets to return
        + Default: `None`
    + limit: `5` (int, optional) - The maximum number of assets to return
        + Default: `100`
    + offset (int, optional) - The number of lines to skip before returning results (overrides the `cursor` parameter)
        + Default: `None`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": [
                {
                    "asset": "MPMASSET",
                    "asset_id": "101158363923",
                    "asset_longname": null,
                    "issuer": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "owner": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "divisible": true,
                    "locked": false,
                    "supply": 100000000000,
                    "description": "My super asset B",
                    "description_locked": false,
                    "first_issuance_block_index": 200,
                    "last_issuance_block_index": 200,
                    "first_issuance_block_time": 1740489919,
                    "last_issuance_block_time": 1740489919,
                    "supply_normalized": "1000.00000000"
                },
                {
                    "asset": "TESTLOCKDESC",
                    "asset_id": "70403005118950974",
                    "asset_longname": null,
                    "issuer": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "owner": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "divisible": true,
                    "locked": false,
                    "supply": 10000000000,
                    "description": "Test Locking Description",
                    "description_locked": false,
                    "first_issuance_block_index": 153,
                    "last_issuance_block_index": 155,
                    "first_issuance_block_time": 1740489753,
                    "last_issuance_block_time": 1740489760,
                    "supply_normalized": "100.00000000"
                },
                {
                    "asset": "FREEFAIRMINT",
                    "asset_id": "20774156646107637",
                    "asset_longname": null,
                    "issuer": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "owner": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "divisible": true,
                    "locked": false,
                    "supply": 180,
                    "description": "",
                    "description_locked": false,
                    "first_issuance_block_index": 148,
                    "last_issuance_block_index": 150,
                    "first_issuance_block_time": 1740489736,
                    "last_issuance_block_time": 1740489742,
                    "supply_normalized": "0.00000180"
                },
                {
                    "asset": "MYASSETA",
                    "asset_id": "103804245870",
                    "asset_longname": null,
                    "issuer": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "owner": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "divisible": true,
                    "locked": false,
                    "supply": 100000000000,
                    "description": "My super asset A",
                    "description_locked": false,
                    "first_issuance_block_index": 139,
                    "last_issuance_block_index": 139,
                    "first_issuance_block_time": 1740489704,
                    "last_issuance_block_time": 1740489704,
                    "supply_normalized": "1000.00000000"
                },
                {
                    "asset": "FAIRMINTD",
                    "asset_id": "1046814266085",
                    "asset_longname": null,
                    "issuer": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "owner": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "divisible": true,
                    "locked": false,
                    "supply": 40,
                    "description": "",
                    "description_locked": false,
                    "first_issuance_block_index": 126,
                    "last_issuance_block_index": 127,
                    "first_issuance_block_time": 1740489654,
                    "last_issuance_block_time": 1740489657,
                    "supply_normalized": "0.00000040"
                }
            ],
            "next_cursor": 4,
            "result_count": 8
        }
    ```

### Get Valid Assets By Issuer [GET /v2/addresses/{address}/assets/issued{?named}{&cursor}{&limit}{&offset}{&verbose}]

Returns the valid assets issued by an address

+ Parameters
    + address: `bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n` (str, required) - The issuer to return
    + named: `true` (bool, optional) - Whether to return only named assets
        + Default: `None`
    + cursor (str, optional) - The last index of the assets to return
        + Default: `None`
    + limit: `5` (int, optional) - The maximum number of assets to return
        + Default: `100`
    + offset (int, optional) - The number of lines to skip before returning results (overrides the `cursor` parameter)
        + Default: `None`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": [
                {
                    "asset": "MPMASSET",
                    "asset_id": "101158363923",
                    "asset_longname": null,
                    "issuer": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "owner": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "divisible": true,
                    "locked": false,
                    "supply": 100000000000,
                    "description": "My super asset B",
                    "description_locked": false,
                    "first_issuance_block_index": 200,
                    "last_issuance_block_index": 200,
                    "first_issuance_block_time": 1740489919,
                    "last_issuance_block_time": 1740489919,
                    "supply_normalized": "1000.00000000"
                },
                {
                    "asset": "TESTLOCKDESC",
                    "asset_id": "70403005118950974",
                    "asset_longname": null,
                    "issuer": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "owner": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "divisible": true,
                    "locked": false,
                    "supply": 10000000000,
                    "description": "Test Locking Description",
                    "description_locked": false,
                    "first_issuance_block_index": 153,
                    "last_issuance_block_index": 155,
                    "first_issuance_block_time": 1740489753,
                    "last_issuance_block_time": 1740489760,
                    "supply_normalized": "100.00000000"
                },
                {
                    "asset": "FREEFAIRMINT",
                    "asset_id": "20774156646107637",
                    "asset_longname": null,
                    "issuer": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "owner": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "divisible": true,
                    "locked": false,
                    "supply": 180,
                    "description": "",
                    "description_locked": false,
                    "first_issuance_block_index": 148,
                    "last_issuance_block_index": 150,
                    "first_issuance_block_time": 1740489736,
                    "last_issuance_block_time": 1740489742,
                    "supply_normalized": "0.00000180"
                },
                {
                    "asset": "MYASSETA",
                    "asset_id": "103804245870",
                    "asset_longname": null,
                    "issuer": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "owner": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "divisible": true,
                    "locked": false,
                    "supply": 100000000000,
                    "description": "My super asset A",
                    "description_locked": false,
                    "first_issuance_block_index": 139,
                    "last_issuance_block_index": 139,
                    "first_issuance_block_time": 1740489704,
                    "last_issuance_block_time": 1740489704,
                    "supply_normalized": "1000.00000000"
                },
                {
                    "asset": "FAIRMINTD",
                    "asset_id": "1046814266085",
                    "asset_longname": null,
                    "issuer": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "owner": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "divisible": true,
                    "locked": false,
                    "supply": 40,
                    "description": "",
                    "description_locked": false,
                    "first_issuance_block_index": 126,
                    "last_issuance_block_index": 127,
                    "first_issuance_block_time": 1740489654,
                    "last_issuance_block_time": 1740489657,
                    "supply_normalized": "0.00000040"
                }
            ],
            "next_cursor": 4,
            "result_count": 8
        }
    ```

### Get Valid Assets By Owner [GET /v2/addresses/{address}/assets/owned{?named}{&cursor}{&limit}{&offset}{&verbose}]

Returns the valid assets owned by an address

+ Parameters
    + address: `bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n` (str, required) - The owner to return
    + named: `true` (bool, optional) - Whether to return only named assets
        + Default: `None`
    + cursor (str, optional) - The last index of the assets to return
        + Default: `None`
    + limit: `5` (int, optional) - The maximum number of assets to return
        + Default: `100`
    + offset (int, optional) - The number of lines to skip before returning results (overrides the `cursor` parameter)
        + Default: `None`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": [
                {
                    "asset": "MPMASSET",
                    "asset_id": "101158363923",
                    "asset_longname": null,
                    "issuer": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "owner": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "divisible": true,
                    "locked": false,
                    "supply": 100000000000,
                    "description": "My super asset B",
                    "description_locked": false,
                    "first_issuance_block_index": 200,
                    "last_issuance_block_index": 200,
                    "first_issuance_block_time": 1740489919,
                    "last_issuance_block_time": 1740489919,
                    "supply_normalized": "1000.00000000"
                },
                {
                    "asset": "TESTLOCKDESC",
                    "asset_id": "70403005118950974",
                    "asset_longname": null,
                    "issuer": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "owner": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "divisible": true,
                    "locked": false,
                    "supply": 10000000000,
                    "description": "Test Locking Description",
                    "description_locked": false,
                    "first_issuance_block_index": 153,
                    "last_issuance_block_index": 155,
                    "first_issuance_block_time": 1740489753,
                    "last_issuance_block_time": 1740489760,
                    "supply_normalized": "100.00000000"
                },
                {
                    "asset": "FREEFAIRMINT",
                    "asset_id": "20774156646107637",
                    "asset_longname": null,
                    "issuer": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "owner": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "divisible": true,
                    "locked": false,
                    "supply": 180,
                    "description": "",
                    "description_locked": false,
                    "first_issuance_block_index": 148,
                    "last_issuance_block_index": 150,
                    "first_issuance_block_time": 1740489736,
                    "last_issuance_block_time": 1740489742,
                    "supply_normalized": "0.00000180"
                },
                {
                    "asset": "MYASSETA",
                    "asset_id": "103804245870",
                    "asset_longname": null,
                    "issuer": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "owner": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "divisible": true,
                    "locked": false,
                    "supply": 100000000000,
                    "description": "My super asset A",
                    "description_locked": false,
                    "first_issuance_block_index": 139,
                    "last_issuance_block_index": 139,
                    "first_issuance_block_time": 1740489704,
                    "last_issuance_block_time": 1740489704,
                    "supply_normalized": "1000.00000000"
                },
                {
                    "asset": "FAIRMINTD",
                    "asset_id": "1046814266085",
                    "asset_longname": null,
                    "issuer": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "owner": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "divisible": true,
                    "locked": false,
                    "supply": 40,
                    "description": "",
                    "description_locked": false,
                    "first_issuance_block_index": 126,
                    "last_issuance_block_index": 127,
                    "first_issuance_block_time": 1740489654,
                    "last_issuance_block_time": 1740489657,
                    "supply_normalized": "0.00000040"
                }
            ],
            "next_cursor": 4,
            "result_count": 8
        }
    ```

### Get Transactions By Address [GET /v2/addresses/{address}/transactions{?type}{&show_unconfirmed}{&cursor}{&limit}{&offset}{&verbose}]

Returns the transactions of an address

+ Parameters
    + address: `bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n` (str, required) - The address to return
    + type (enum[str], optional) - The type of the transaction to return
        + Default: `all`
        + Members
            + `all`
            + `bet`
            + `broadcast`
            + `btcpay`
            + `cancel`
            + `destroy`
            + `dispenser`
            + `dispense`
            + `dividend`
            + `issuance`
            + `order`
            + `send`
            + `enhanced_send`
            + `mpma`
            + `rps`
            + `rpsresolve`
            + `sweep`
            + `fairminter`
            + `fairmint`
            + `attach`
            + `detach`
            + `utxomove`
            + `unknown`
    + show_unconfirmed (bool, optional) - Show unconfirmed transactions
        + Default: `False`
    + cursor: `121` (str, optional) - The last transaction index to return
        + Default: `None`
    + limit: `5` (int, optional) - The maximum number of transactions to return
        + Default: `10`
    + offset (int, optional) - The number of lines to skip before returning results (overrides the `cursor` parameter)
        + Default: `None`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": [
                {
                    "tx_index": 79,
                    "tx_hash": "a664e79129ea014f2afd994abca856dfb7a93d3e5e5a9ce076c150ddbacd6bd9",
                    "block_index": 203,
                    "block_hash": "3c1630c9b791239a57b5ab83a6017c9c250bd8b19cb146f7a9e27e8a27e2ce2e",
                    "block_time": 1740489930,
                    "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "destination": null,
                    "btc_amount": 0,
                    "fee": 10000,
                    "data": "030003806cab8b7c91fbb7207dbe0f34f070bb2211bd066d80978506450cf51f83ec6f5648b40686ccd56ce921809b4723f09a5df31a06280cb9c843df516eecbe6140000005e36088c4d4000000000000002a15b595b5bcca000000000000000a856d656d6f3380000000000000008000000000000000542b6b2b6b7988",
                    "supported": true,
                    "utxos_info": " a664e79129ea014f2afd994abca856dfb7a93d3e5e5a9ce076c150ddbacd6bd9:0 4 ",
                    "transaction_type": "mpma",
                    "events": [
                        {
                            "event_index": 678,
                            "event": "MPMA_SEND",
                            "params": {
                                "asset": "MPMASSET",
                                "block_index": 203,
                                "destination": "bcrt1qj7zsv3gv750c8mr02eytgp5xen2ke6fpak6ztc",
                                "memo": "memo2",
                                "msg_index": 0,
                                "quantity": 10,
                                "send_type": "send",
                                "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                                "status": "valid",
                                "tx_hash": "a664e79129ea014f2afd994abca856dfb7a93d3e5e5a9ce076c150ddbacd6bd9",
                                "tx_index": 79,
                                "block_time": 1740489930,
                                "asset_info": {
                                    "asset_longname": null,
                                    "description": "My super asset B",
                                    "issuer": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                                    "divisible": true,
                                    "locked": false,
                                    "owner": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n"
                                },
                                "quantity_normalized": "0.00000010"
                            },
                            "tx_hash": "a664e79129ea014f2afd994abca856dfb7a93d3e5e5a9ce076c150ddbacd6bd9",
                            "block_index": 203,
                            "block_time": 1740489930
                        },
                        {
                            "event_index": 679,
                            "event": "MPMA_SEND",
                            "params": {
                                "asset": "MPMASSET",
                                "block_index": 203,
                                "destination": "bcrt1qndrj8uy6the35p3gpjuuss7l29hwe0npylexmz",
                                "memo": "memo3",
                                "msg_index": 1,
                                "quantity": 10,
                                "send_type": "send",
                                "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                                "status": "valid",
                                "tx_hash": "a664e79129ea014f2afd994abca856dfb7a93d3e5e5a9ce076c150ddbacd6bd9",
                                "tx_index": 79,
                                "block_time": 1740489930,
                                "asset_info": {
                                    "asset_longname": null,
                                    "description": "My super asset B",
                                    "issuer": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                                    "divisible": true,
                                    "locked": false,
                                    "owner": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n"
                                },
                                "quantity_normalized": "0.00000010"
                            },
                            "tx_hash": "a664e79129ea014f2afd994abca856dfb7a93d3e5e5a9ce076c150ddbacd6bd9",
                            "block_index": 203,
                            "block_time": 1740489930
                        },
                        {
                            "event_index": 680,
                            "event": "MPMA_SEND",
                            "params": {
                                "asset": "XCP",
                                "block_index": 203,
                                "destination": "bcrt1qdj4ckly3lwmjqld7pu60qu9myggm6pnd58ntz6",
                                "memo": "memo1",
                                "msg_index": 2,
                                "quantity": 10,
                                "send_type": "send",
                                "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                                "status": "valid",
                                "tx_hash": "a664e79129ea014f2afd994abca856dfb7a93d3e5e5a9ce076c150ddbacd6bd9",
                                "tx_index": 79,
                                "block_time": 1740489930,
                                "asset_info": {
                                    "asset_longname": null,
                                    "description": "The Counterparty protocol native currency",
                                    "issuer": null,
                                    "divisible": true,
                                    "locked": true,
                                    "owner": null
                                },
                                "quantity_normalized": "0.00000010"
                            },
                            "tx_hash": "a664e79129ea014f2afd994abca856dfb7a93d3e5e5a9ce076c150ddbacd6bd9",
                            "block_index": 203,
                            "block_time": 1740489930
                        }
                    ],
                    "unpacked_data": {
                        "message_type": "mpma_send",
                        "message_type_id": 3,
                        "message_data": [
                            {
                                "asset": "MPMASSET",
                                "destination": "bcrt1qj7zsv3gv750c8mr02eytgp5xen2ke6fpak6ztc",
                                "quantity": 10,
                                "memo": "memo2",
                                "memo_is_hex": false,
                                "asset_info": {
                                    "asset_longname": null,
                                    "description": "My super asset B",
                                    "issuer": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                                    "divisible": true,
                                    "locked": false,
                                    "owner": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n"
                                },
                                "quantity_normalized": "0.00000010"
                            },
                            {
                                "asset": "XCP",
                                "destination": "bcrt1qdj4ckly3lwmjqld7pu60qu9myggm6pnd58ntz6",
                                "quantity": 10,
                                "memo": "memo1",
                                "memo_is_hex": false,
                                "asset_info": {
                                    "asset_longname": null,
                                    "description": "The Counterparty protocol native currency",
                                    "issuer": null,
                                    "divisible": true,
                                    "locked": true,
                                    "owner": null
                                },
                                "quantity_normalized": "0.00000010"
                            }
                        ]
                    },
                    "btc_amount_normalized": "0.00000000"
                },
                {
                    "tx_index": 78,
                    "tx_hash": "61f1aee9ee7e879bd011800762de578a06213aa9fdff95ecb7a03585542bd78d",
                    "block_index": 202,
                    "block_hash": "3b59fe5cd5a64b9d6cffea87e2458d32f454bac64d320b5e448a25459d1bf47d",
                    "block_time": 1740489926,
                    "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "destination": null,
                    "btc_amount": 0,
                    "fee": 10000,
                    "data": "030003806cab8b7c91fbb7207dbe0f34f070bb2211bd066d80978506450cf51f83ec6f5648b40686ccd56ce921809b4723f09a5df31a06280cb9c843df516eecbe6188746865206d656d6f8000000bc6c11189a80000000000000052000000000000000a4000000000000000400000000000000028",
                    "supported": true,
                    "utxos_info": " 61f1aee9ee7e879bd011800762de578a06213aa9fdff95ecb7a03585542bd78d:0 4 ",
                    "transaction_type": "mpma",
                    "events": [
                        {
                            "event_index": 658,
                            "event": "ORDER_UPDATE",
                            "params": {
                                "status": "expired",
                                "tx_hash": "6a8b04722b5121498713e9ca34b3a634f0ef5f0cf3ee9a0753bd79b8c3f0cc10"
                            },
                            "tx_hash": "61f1aee9ee7e879bd011800762de578a06213aa9fdff95ecb7a03585542bd78d",
                            "block_index": 202,
                            "block_time": 1740489926
                        },
                        {
                            "event_index": 660,
                            "event": "ORDER_EXPIRATION",
                            "params": {
                                "block_index": 202,
                                "order_hash": "6a8b04722b5121498713e9ca34b3a634f0ef5f0cf3ee9a0753bd79b8c3f0cc10",
                                "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                                "block_time": 1740489926
                            },
                            "tx_hash": "61f1aee9ee7e879bd011800762de578a06213aa9fdff95ecb7a03585542bd78d",
                            "block_index": 202,
                            "block_time": 1740489926
                        },
                        {
                            "event_index": 666,
                            "event": "MPMA_SEND",
                            "params": {
                                "asset": "MPMASSET",
                                "block_index": 202,
                                "destination": "bcrt1qj7zsv3gv750c8mr02eytgp5xen2ke6fpak6ztc",
                                "memo": "the memo",
                                "msg_index": 0,
                                "quantity": 10,
                                "send_type": "send",
                                "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                                "status": "valid",
                                "tx_hash": "61f1aee9ee7e879bd011800762de578a06213aa9fdff95ecb7a03585542bd78d",
                                "tx_index": 78,
                                "block_time": 1740489926,
                                "asset_info": {
                                    "asset_longname": null,
                                    "description": "My super asset B",
                                    "issuer": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                                    "divisible": true,
                                    "locked": false,
                                    "owner": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n"
                                },
                                "quantity_normalized": "0.00000010"
                            },
                            "tx_hash": "61f1aee9ee7e879bd011800762de578a06213aa9fdff95ecb7a03585542bd78d",
                            "block_index": 202,
                            "block_time": 1740489926
                        },
                        {
                            "event_index": 667,
                            "event": "MPMA_SEND",
                            "params": {
                                "asset": "MPMASSET",
                                "block_index": 202,
                                "destination": "bcrt1qndrj8uy6the35p3gpjuuss7l29hwe0npylexmz",
                                "memo": "the memo",
                                "msg_index": 1,
                                "quantity": 10,
                                "send_type": "send",
                                "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                                "status": "valid",
                                "tx_hash": "61f1aee9ee7e879bd011800762de578a06213aa9fdff95ecb7a03585542bd78d",
                                "tx_index": 78,
                                "block_time": 1740489926,
                                "asset_info": {
                                    "asset_longname": null,
                                    "description": "My super asset B",
                                    "issuer": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                                    "divisible": true,
                                    "locked": false,
                                    "owner": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n"
                                },
                                "quantity_normalized": "0.00000010"
                            },
                            "tx_hash": "61f1aee9ee7e879bd011800762de578a06213aa9fdff95ecb7a03585542bd78d",
                            "block_index": 202,
                            "block_time": 1740489926
                        },
                        {
                            "event_index": 668,
                            "event": "MPMA_SEND",
                            "params": {
                                "asset": "XCP",
                                "block_index": 202,
                                "destination": "bcrt1qdj4ckly3lwmjqld7pu60qu9myggm6pnd58ntz6",
                                "memo": "the memo",
                                "msg_index": 2,
                                "quantity": 10,
                                "send_type": "send",
                                "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                                "status": "valid",
                                "tx_hash": "61f1aee9ee7e879bd011800762de578a06213aa9fdff95ecb7a03585542bd78d",
                                "tx_index": 78,
                                "block_time": 1740489926,
                                "asset_info": {
                                    "asset_longname": null,
                                    "description": "The Counterparty protocol native currency",
                                    "issuer": null,
                                    "divisible": true,
                                    "locked": true,
                                    "owner": null
                                },
                                "quantity_normalized": "0.00000010"
                            },
                            "tx_hash": "61f1aee9ee7e879bd011800762de578a06213aa9fdff95ecb7a03585542bd78d",
                            "block_index": 202,
                            "block_time": 1740489926
                        }
                    ],
                    "unpacked_data": {
                        "message_type": "mpma_send",
                        "message_type_id": 3,
                        "message_data": [
                            {
                                "asset": "MPMASSET",
                                "destination": "bcrt1qj7zsv3gv750c8mr02eytgp5xen2ke6fpak6ztc",
                                "quantity": 10,
                                "memo": "the memo",
                                "memo_is_hex": false,
                                "asset_info": {
                                    "asset_longname": null,
                                    "description": "My super asset B",
                                    "issuer": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                                    "divisible": true,
                                    "locked": false,
                                    "owner": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n"
                                },
                                "quantity_normalized": "0.00000010"
                            },
                            {
                                "asset": "XCP",
                                "destination": "bcrt1qdj4ckly3lwmjqld7pu60qu9myggm6pnd58ntz6",
                                "quantity": 10,
                                "memo": "the memo",
                                "memo_is_hex": false,
                                "asset_info": {
                                    "asset_longname": null,
                                    "description": "The Counterparty protocol native currency",
                                    "issuer": null,
                                    "divisible": true,
                                    "locked": true,
                                    "owner": null
                                },
                                "quantity_normalized": "0.00000010"
                            }
                        ]
                    },
                    "btc_amount_normalized": "0.00000000"
                },
                {
                    "tx_index": 77,
                    "tx_hash": "0022913062f0470672f6b471ff669c43b45ce767fa522bcd64b909f606d59cd0",
                    "block_index": 201,
                    "block_hash": "690f6bce9c2313f15d4a73c04123437539a88fee9827cee78c01e572e7763647",
                    "block_time": 1740489923,
                    "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "destination": null,
                    "btc_amount": 0,
                    "fee": 10000,
                    "data": "02000000178d82231300000000000003e8806cab8b7c91fbb7207dbe0f34f070bb2211bd066d",
                    "supported": true,
                    "utxos_info": " 0022913062f0470672f6b471ff669c43b45ce767fa522bcd64b909f606d59cd0:1 2 0",
                    "transaction_type": "enhanced_send",
                    "events": [
                        {
                            "event_index": 653,
                            "event": "ENHANCED_SEND",
                            "params": {
                                "asset": "MPMASSET",
                                "block_index": 201,
                                "destination": "bcrt1qdj4ckly3lwmjqld7pu60qu9myggm6pnd58ntz6",
                                "memo": null,
                                "msg_index": 0,
                                "quantity": 1000,
                                "send_type": "send",
                                "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                                "status": "valid",
                                "tx_hash": "0022913062f0470672f6b471ff669c43b45ce767fa522bcd64b909f606d59cd0",
                                "tx_index": 77,
                                "block_time": 1740489923,
                                "asset_info": {
                                    "asset_longname": null,
                                    "description": "My super asset B",
                                    "issuer": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                                    "divisible": true,
                                    "locked": false,
                                    "owner": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n"
                                },
                                "quantity_normalized": "0.00001000"
                            },
                            "tx_hash": "0022913062f0470672f6b471ff669c43b45ce767fa522bcd64b909f606d59cd0",
                            "block_index": 201,
                            "block_time": 1740489923
                        }
                    ],
                    "unpacked_data": {
                        "message_type": "enhanced_send",
                        "message_type_id": 2,
                        "message_data": {
                            "asset": "MPMASSET",
                            "quantity": 1000,
                            "address": "bcrt1qdj4ckly3lwmjqld7pu60qu9myggm6pnd58ntz6",
                            "memo": null,
                            "asset_info": {
                                "asset_longname": null,
                                "description": "My super asset B",
                                "issuer": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                                "divisible": true,
                                "locked": false,
                                "owner": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n"
                            },
                            "quantity_normalized": "0.00001000"
                        }
                    },
                    "btc_amount_normalized": "0.00000000"
                },
                {
                    "tx_index": 76,
                    "tx_hash": "618fc9de3f53e656d35672aae92d4f5f967b0be380055402be05eb5b4616c680",
                    "block_index": 200,
                    "block_hash": "17676afd13547e0944c4954dbc69de86a418ce46d770f4ca973109bd95851f5d",
                    "block_time": 1740489919,
                    "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "destination": null,
                    "btc_amount": 0,
                    "fee": 10000,
                    "data": "16000000178d822313000000174876e8000100004d792073757065722061737365742042",
                    "supported": true,
                    "utxos_info": " 618fc9de3f53e656d35672aae92d4f5f967b0be380055402be05eb5b4616c680:1 2 0",
                    "transaction_type": "issuance",
                    "events": [
                        {
                            "event_index": 644,
                            "event": "ASSET_CREATION",
                            "params": {
                                "asset_id": "101158363923",
                                "asset_longname": null,
                                "asset_name": "MPMASSET",
                                "block_index": 200,
                                "block_time": 1740489919
                            },
                            "tx_hash": "618fc9de3f53e656d35672aae92d4f5f967b0be380055402be05eb5b4616c680",
                            "block_index": 200,
                            "block_time": 1740489919
                        },
                        {
                            "event_index": 645,
                            "event": "ASSET_ISSUANCE",
                            "params": {
                                "asset": "MPMASSET",
                                "asset_events": "creation",
                                "asset_longname": null,
                                "block_index": 200,
                                "call_date": 0,
                                "call_price": 0.0,
                                "callable": false,
                                "description": "My super asset B",
                                "description_locked": false,
                                "divisible": true,
                                "fee_paid": 50000000,
                                "issuer": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                                "locked": false,
                                "quantity": 100000000000,
                                "reset": false,
                                "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                                "status": "valid",
                                "transfer": false,
                                "tx_hash": "618fc9de3f53e656d35672aae92d4f5f967b0be380055402be05eb5b4616c680",
                                "tx_index": 76,
                                "block_time": 1740489919,
                                "quantity_normalized": "1000.00000000",
                                "fee_paid_normalized": "0.50000000"
                            },
                            "tx_hash": "618fc9de3f53e656d35672aae92d4f5f967b0be380055402be05eb5b4616c680",
                            "block_index": 200,
                            "block_time": 1740489919
                        }
                    ],
                    "unpacked_data": {
                        "message_type": "issuance",
                        "message_type_id": 22,
                        "message_data": {
                            "asset_id": 101158363923,
                            "asset": "MPMASSET",
                            "subasset_longname": null,
                            "quantity": 100000000000,
                            "divisible": true,
                            "lock": false,
                            "reset": false,
                            "callable": false,
                            "call_date": 0,
                            "call_price": 0.0,
                            "description": "My super asset B",
                            "status": "valid",
                            "quantity_normalized": "1000.00000000"
                        }
                    },
                    "btc_amount_normalized": "0.00000000"
                },
                {
                    "tx_index": 68,
                    "tx_hash": "d41f2c39d9b1d48cc1eb69ad013d77ab81c8298971503c6f6414291a955ae4c2",
                    "block_index": 193,
                    "block_hash": "480b1525666278bb5db3d7bbe452404bcbd74393eeadcdb56883ca0ef4322aa6",
                    "block_time": 1740489887,
                    "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "destination": null,
                    "btc_amount": 0,
                    "fee": 10000,
                    "data": "0c00fa1f28ff3c2e3e00000000000000010000000000002710000000000000000100",
                    "supported": true,
                    "utxos_info": " d41f2c39d9b1d48cc1eb69ad013d77ab81c8298971503c6f6414291a955ae4c2:1 2 0",
                    "transaction_type": "dispenser",
                    "events": [
                        {
                            "event_index": 587,
                            "event": "OPEN_DISPENSER",
                            "params": {
                                "asset": "TESTLOCKDESC",
                                "block_index": 193,
                                "dispense_count": 0,
                                "escrow_quantity": 10000,
                                "give_quantity": 1,
                                "give_remaining": 10000,
                                "oracle_address": null,
                                "origin": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                                "satoshirate": 1,
                                "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                                "status": 0,
                                "tx_hash": "d41f2c39d9b1d48cc1eb69ad013d77ab81c8298971503c6f6414291a955ae4c2",
                                "tx_index": 68,
                                "block_time": 1740489887,
                                "asset_info": {
                                    "asset_longname": null,
                                    "description": "Test Locking Description",
                                    "issuer": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                                    "divisible": true,
                                    "locked": false,
                                    "owner": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n"
                                },
                                "give_quantity_normalized": "0.00000001",
                                "give_remaining_normalized": "0.00010000",
                                "escrow_quantity_normalized": "0.00010000",
                                "satoshirate_normalized": "0.00000001"
                            },
                            "tx_hash": "d41f2c39d9b1d48cc1eb69ad013d77ab81c8298971503c6f6414291a955ae4c2",
                            "block_index": 193,
                            "block_time": 1740489887
                        }
                    ],
                    "unpacked_data": {
                        "message_type": "dispenser",
                        "message_type_id": 12,
                        "message_data": {
                            "asset": "TESTLOCKDESC",
                            "give_quantity": 1,
                            "escrow_quantity": 10000,
                            "mainchainrate": 1,
                            "dispenser_status": 0,
                            "action_address": null,
                            "oracle_address": null,
                            "status": "valid",
                            "asset_info": {
                                "asset_longname": null,
                                "description": "Test Locking Description",
                                "issuer": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                                "divisible": true,
                                "locked": false,
                                "owner": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n"
                            },
                            "give_quantity_normalized": "0.00000001",
                            "escrow_quantity_normalized": "0.00010000"
                        }
                    },
                    "btc_amount_normalized": "0.00000000"
                }
            ],
            "next_cursor": 67,
            "result_count": 32
        }
    ```

### Get Transaction Types Count By Address [GET /v2/addresses/{address}/transactions/counts{?count_unconfirmed}{&verbose}]

Returns the count of each transaction type

+ Parameters
    + address: `bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n` (str, required) - The address to return
    + count_unconfirmed (bool, optional) - Count unconfirmed transactions
        + Default: `False`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": [
                {
                    "transaction_type": "issuance",
                    "count": 6
                },
                {
                    "transaction_type": "fairminter",
                    "count": 6
                },
                {
                    "transaction_type": "dispenser",
                    "count": 6
                },
                {
                    "transaction_type": "order",
                    "count": 4
                },
                {
                    "transaction_type": "mpma",
                    "count": 3
                },
                {
                    "transaction_type": "attach",
                    "count": 2
                },
                {
                    "transaction_type": "enhanced_send",
                    "count": 1
                },
                {
                    "transaction_type": "dividend",
                    "count": 1
                },
                {
                    "transaction_type": "cancel",
                    "count": 1
                },
                {
                    "transaction_type": "burn",
                    "count": 1
                },
                {
                    "transaction_type": "broadcast",
                    "count": 1
                }
            ],
            "next_cursor": null,
            "result_count": 11
        }
    ```

### Get Dividends Distributed By Address [GET /v2/addresses/{address}/dividends{?cursor}{&limit}{&offset}{&verbose}]

Returns the dividends distributed by an address

+ Parameters
    + address: `bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n` (str, required) - The address to return
    + cursor (str, optional) - The last index of the assets to return
        + Default: `None`
    + limit: `5` (int, optional) - The maximum number of assets to return
        + Default: `100`
    + offset (int, optional) - The number of lines to skip before returning results (overrides the `cursor` parameter)
        + Default: `None`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": [
                {
                    "tx_index": 42,
                    "tx_hash": "6404a2478fe98ef828070b2da13ef824ea7cebae41e377cfdee911728b8c926a",
                    "block_index": 146,
                    "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "asset": "MYASSETA",
                    "dividend_asset": "XCP",
                    "quantity_per_unit": 100000000,
                    "fee_paid": 20000,
                    "status": "valid",
                    "block_time": 1740489729,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "My super asset A",
                        "issuer": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                        "divisible": true,
                        "locked": false,
                        "owner": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n"
                    },
                    "dividend_asset_info": {
                        "asset_longname": null,
                        "description": "The Counterparty protocol native currency",
                        "issuer": null,
                        "divisible": true,
                        "locked": true,
                        "owner": null
                    },
                    "quantity_per_unit_normalized": "1.00000000",
                    "fee_paid_normalized": "0.00020000"
                }
            ],
            "next_cursor": null,
            "result_count": 1
        }
    ```

### Get Orders By Address [GET /v2/addresses/{address}/orders{?status}{&cursor}{&limit}{&offset}{&sort}{&verbose}]

Returns the orders of an address

+ Parameters
    + address: `bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n` (str, required) - The address to return
    + status (enum[str], optional) - The status of the orders to return
        + Default: `all`
        + Members
            + `all`
            + `open`
            + `expired`
            + `filled`
            + `cancelled`
    + cursor (str, optional) - The last index of the orders to return
        + Default: `None`
    + limit: `5` (int, optional) - The maximum number of orders to return
        + Default: `100`
    + offset (int, optional) - The number of lines to skip before returning results (overrides the `cursor` parameter)
        + Default: `None`
    + sort: `expiration:desc` (str, optional) - The sort order of the orders to return (overrides the `cursor` parameter)
        + Default: `None`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": [
                {
                    "tx_index": 53,
                    "tx_hash": "2064dd5294807ea46ffdb9f82780a89424b75ec45715ea0fbc6f440b31133b66",
                    "block_index": 179,
                    "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "give_asset": "XCP",
                    "give_quantity": 1000,
                    "give_remaining": 1000,
                    "get_asset": "BTC",
                    "get_quantity": 1000,
                    "get_remaining": 1000,
                    "expiration": 21,
                    "expire_index": 178,
                    "fee_required": 0,
                    "fee_required_remaining": 0,
                    "fee_provided": 10000,
                    "fee_provided_remaining": 10000,
                    "status": "expired",
                    "give_price": 1.0,
                    "get_price": 1.0,
                    "block_time": 1740489778,
                    "give_asset_info": {
                        "asset_longname": null,
                        "description": "The Counterparty protocol native currency",
                        "issuer": null,
                        "divisible": true,
                        "locked": true,
                        "owner": null
                    },
                    "get_asset_info": {
                        "divisible": true,
                        "asset_longname": null,
                        "description": "The Bitcoin cryptocurrency",
                        "locked": false,
                        "issuer": null
                    },
                    "give_quantity_normalized": "0.00001000",
                    "get_quantity_normalized": "0.00001000",
                    "get_remaining_normalized": "0.00001000",
                    "give_remaining_normalized": "0.00001000",
                    "fee_provided_normalized": "0.00010000",
                    "fee_required_normalized": "0.00000000",
                    "fee_required_remaining_normalized": "0.00000000",
                    "fee_provided_remaining_normalized": "0.00010000",
                    "give_price_normalized": "1.0000000000000000",
                    "get_price_normalized": "1.0000000000000000"
                },
                {
                    "tx_index": 55,
                    "tx_hash": "6a8b04722b5121498713e9ca34b3a634f0ef5f0cf3ee9a0753bd79b8c3f0cc10",
                    "block_index": 202,
                    "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "give_asset": "XCP",
                    "give_quantity": 10000,
                    "give_remaining": 5000,
                    "get_asset": "BTC",
                    "get_quantity": 10000,
                    "get_remaining": 5000,
                    "expiration": 21,
                    "expire_index": 201,
                    "fee_required": 0,
                    "fee_required_remaining": 0,
                    "fee_provided": 10000,
                    "fee_provided_remaining": 10000,
                    "status": "expired",
                    "give_price": 1.0,
                    "get_price": 1.0,
                    "block_time": 1740489926,
                    "give_asset_info": {
                        "asset_longname": null,
                        "description": "The Counterparty protocol native currency",
                        "issuer": null,
                        "divisible": true,
                        "locked": true,
                        "owner": null
                    },
                    "get_asset_info": {
                        "divisible": true,
                        "asset_longname": null,
                        "description": "The Bitcoin cryptocurrency",
                        "locked": false,
                        "issuer": null
                    },
                    "give_quantity_normalized": "0.00010000",
                    "get_quantity_normalized": "0.00010000",
                    "get_remaining_normalized": "0.00005000",
                    "give_remaining_normalized": "0.00005000",
                    "fee_provided_normalized": "0.00010000",
                    "fee_required_normalized": "0.00000000",
                    "fee_required_remaining_normalized": "0.00000000",
                    "fee_provided_remaining_normalized": "0.00010000",
                    "give_price_normalized": "1.0000000000000000",
                    "get_price_normalized": "1.0000000000000000"
                },
                {
                    "tx_index": 62,
                    "tx_hash": "6514dc909d289a00f85ba5b8db7b7198c6fafe5ed2e140773835a3fe73615f94",
                    "block_index": 188,
                    "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "give_asset": "XCP",
                    "give_quantity": 1000,
                    "give_remaining": 1000,
                    "get_asset": "BTC",
                    "get_quantity": 1000,
                    "get_remaining": 1000,
                    "expiration": 21,
                    "expire_index": 208,
                    "fee_required": 0,
                    "fee_required_remaining": 0,
                    "fee_provided": 10000,
                    "fee_provided_remaining": 10000,
                    "status": "cancelled",
                    "give_price": 1.0,
                    "get_price": 1.0,
                    "block_time": 1740489870,
                    "give_asset_info": {
                        "asset_longname": null,
                        "description": "The Counterparty protocol native currency",
                        "issuer": null,
                        "divisible": true,
                        "locked": true,
                        "owner": null
                    },
                    "get_asset_info": {
                        "divisible": true,
                        "asset_longname": null,
                        "description": "The Bitcoin cryptocurrency",
                        "locked": false,
                        "issuer": null
                    },
                    "give_quantity_normalized": "0.00001000",
                    "get_quantity_normalized": "0.00001000",
                    "get_remaining_normalized": "0.00001000",
                    "give_remaining_normalized": "0.00001000",
                    "fee_provided_normalized": "0.00010000",
                    "fee_required_normalized": "0.00000000",
                    "fee_required_remaining_normalized": "0.00000000",
                    "fee_provided_remaining_normalized": "0.00010000",
                    "give_price_normalized": "1.0000000000000000",
                    "get_price_normalized": "1.0000000000000000"
                },
                {
                    "tx_index": 64,
                    "tx_hash": "9198a9256ee36ffaa1c68b2098d9920bf461858924c70baa1e2e616814a81c54",
                    "block_index": 211,
                    "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "give_asset": "XCP",
                    "give_quantity": 1000,
                    "give_remaining": 0,
                    "get_asset": "BTC",
                    "get_quantity": 1000,
                    "get_remaining": 0,
                    "expiration": 21,
                    "expire_index": 210,
                    "fee_required": 0,
                    "fee_required_remaining": 0,
                    "fee_provided": 10000,
                    "fee_provided_remaining": 10000,
                    "status": "expired",
                    "give_price": 1.0,
                    "get_price": 1.0,
                    "block_time": 1740489959,
                    "give_asset_info": {
                        "asset_longname": null,
                        "description": "The Counterparty protocol native currency",
                        "issuer": null,
                        "divisible": true,
                        "locked": true,
                        "owner": null
                    },
                    "get_asset_info": {
                        "divisible": true,
                        "asset_longname": null,
                        "description": "The Bitcoin cryptocurrency",
                        "locked": false,
                        "issuer": null
                    },
                    "give_quantity_normalized": "0.00001000",
                    "get_quantity_normalized": "0.00001000",
                    "get_remaining_normalized": "0.00000000",
                    "give_remaining_normalized": "0.00000000",
                    "fee_provided_normalized": "0.00010000",
                    "fee_required_normalized": "0.00000000",
                    "fee_required_remaining_normalized": "0.00000000",
                    "fee_provided_remaining_normalized": "0.00010000",
                    "give_price_normalized": "1.0000000000000000",
                    "get_price_normalized": "1.0000000000000000"
                }
            ],
            "next_cursor": null,
            "result_count": 4
        }
    ```

### Get Fairminters By Address [GET /v2/addresses/{address}/fairminters{?status}{&cursor}{&limit}{&offset}{&verbose}]

Returns the fairminter by its source

+ Parameters
    + address: `bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n` (str, required) - The source of the fairminter to return
    + status (enum[str], optional) - The status of the fairminters to return
        + Default: `all`
        + Members
            + `all`
            + `open`
            + `closed`
            + `pending`
    + cursor (str, optional) - 
        + Default: `None`
    + limit (int, optional) - 
        + Default: `100`
    + offset (int, optional) - 
        + Default: `None`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": [
                {
                    "tx_hash": "90cd0970da6991e63976a4bf990b252867c94d4946fa288e4fac6a8c821fcf89",
                    "tx_index": 44,
                    "block_index": 150,
                    "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "asset": "FREEFAIRMINT",
                    "asset_parent": null,
                    "asset_longname": null,
                    "description": "",
                    "price": 0,
                    "quantity_by_price": 1,
                    "hard_cap": 180,
                    "burn_payment": false,
                    "max_mint_per_tx": 100,
                    "premint_quantity": 0,
                    "start_block": 0,
                    "end_block": 0,
                    "minted_asset_commission_int": 0,
                    "soft_cap": 0,
                    "soft_cap_deadline_block": 0,
                    "lock_description": false,
                    "lock_quantity": false,
                    "divisible": true,
                    "pre_minted": false,
                    "status": "closed",
                    "earned_quantity": 180,
                    "paid_quantity": 0,
                    "commission": 0,
                    "block_time": 1740489742,
                    "price_normalized": "0.0000000000000000",
                    "hard_cap_normalized": "0.00000180",
                    "soft_cap_normalized": "0.00000000",
                    "quantity_by_price_normalized": "0.00000001",
                    "max_mint_per_tx_normalized": "0.00000100",
                    "premint_quantity_normalized": "0.00000000",
                    "earned_quantity_normalized": "0.00000180",
                    "commission_normalized": "0.00000000",
                    "paid_quantity_normalized": "0.00000000"
                },
                {
                    "tx_hash": "6737a830bd7ba3066606e467c06fb7b523c778f62051eea8529cd5fe8d40bc85",
                    "tx_index": 43,
                    "block_index": 147,
                    "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "asset": "A95428958968845068",
                    "asset_parent": "MYASSETA",
                    "asset_longname": "MYASSETA.SUBMYASSETA",
                    "description": "",
                    "price": 1,
                    "quantity_by_price": 5,
                    "hard_cap": 0,
                    "burn_payment": false,
                    "max_mint_per_tx": 0,
                    "premint_quantity": 0,
                    "start_block": 0,
                    "end_block": 0,
                    "minted_asset_commission_int": 0,
                    "soft_cap": 0,
                    "soft_cap_deadline_block": 0,
                    "lock_description": false,
                    "lock_quantity": false,
                    "divisible": true,
                    "pre_minted": false,
                    "status": "open",
                    "earned_quantity": null,
                    "paid_quantity": null,
                    "commission": null,
                    "block_time": 1740489732,
                    "price_normalized": "1.0000000000000000",
                    "hard_cap_normalized": "0.00000000",
                    "soft_cap_normalized": "0.00000000",
                    "quantity_by_price_normalized": "0.00000005",
                    "max_mint_per_tx_normalized": "0.00000000",
                    "premint_quantity_normalized": "0.00000000"
                },
                {
                    "tx_hash": "7b9120ec72424987eb972f58ca1b8e8cd4bf8b7e06f9ff065e91ecf96fcdfa40",
                    "tx_index": 22,
                    "block_index": 126,
                    "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "asset": "FAIRMINTD",
                    "asset_parent": null,
                    "asset_longname": null,
                    "description": "",
                    "price": 50,
                    "quantity_by_price": 60,
                    "hard_cap": 0,
                    "burn_payment": false,
                    "max_mint_per_tx": 0,
                    "premint_quantity": 0,
                    "start_block": 0,
                    "end_block": 0,
                    "minted_asset_commission_int": 0,
                    "soft_cap": 0,
                    "soft_cap_deadline_block": 0,
                    "lock_description": false,
                    "lock_quantity": false,
                    "divisible": true,
                    "pre_minted": false,
                    "status": "open",
                    "earned_quantity": 40,
                    "paid_quantity": 34,
                    "commission": 0,
                    "block_time": 1740489654,
                    "price_normalized": "50.0000000000000000",
                    "hard_cap_normalized": "0.00000000",
                    "soft_cap_normalized": "0.00000000",
                    "quantity_by_price_normalized": "0.00000060",
                    "max_mint_per_tx_normalized": "0.00000000",
                    "premint_quantity_normalized": "0.00000000",
                    "earned_quantity_normalized": "0.00000040",
                    "commission_normalized": "0.00000000",
                    "paid_quantity_normalized": "0.00000034"
                },
                {
                    "tx_hash": "06628f5fac1af4e971bb7b2d2e0ede1cce4482ff9950b228d1603f184cc9588e",
                    "tx_index": 18,
                    "block_index": 122,
                    "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "asset": "FAIRMINTC",
                    "asset_parent": null,
                    "asset_longname": null,
                    "description": "",
                    "price": 1,
                    "quantity_by_price": 5,
                    "hard_cap": 0,
                    "burn_payment": false,
                    "max_mint_per_tx": 0,
                    "premint_quantity": 0,
                    "start_block": 0,
                    "end_block": 0,
                    "minted_asset_commission_int": 0,
                    "soft_cap": 0,
                    "soft_cap_deadline_block": 0,
                    "lock_description": false,
                    "lock_quantity": false,
                    "divisible": true,
                    "pre_minted": false,
                    "status": "open",
                    "earned_quantity": 19,
                    "paid_quantity": 5,
                    "commission": 0,
                    "block_time": 1740489640,
                    "price_normalized": "1.0000000000000000",
                    "hard_cap_normalized": "0.00000000",
                    "soft_cap_normalized": "0.00000000",
                    "quantity_by_price_normalized": "0.00000005",
                    "max_mint_per_tx_normalized": "0.00000000",
                    "premint_quantity_normalized": "0.00000000",
                    "earned_quantity_normalized": "0.00000019",
                    "commission_normalized": "0.00000000",
                    "paid_quantity_normalized": "0.00000005"
                },
                {
                    "tx_hash": "54da50dc04fe18ff5822c81f0f4dbf0a908912f00e788a5a9cbe2a6c0900fca9",
                    "tx_index": 14,
                    "block_index": 121,
                    "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "asset": "FAIRMINTB",
                    "asset_parent": null,
                    "asset_longname": null,
                    "description": "",
                    "price": 1,
                    "quantity_by_price": 1,
                    "hard_cap": 10000000000,
                    "burn_payment": false,
                    "max_mint_per_tx": 0,
                    "premint_quantity": 0,
                    "start_block": 0,
                    "end_block": 0,
                    "minted_asset_commission_int": 0,
                    "soft_cap": 1000000000,
                    "soft_cap_deadline_block": 121,
                    "lock_description": false,
                    "lock_quantity": false,
                    "divisible": true,
                    "pre_minted": false,
                    "status": "closed",
                    "earned_quantity": 300000000,
                    "paid_quantity": 300000000,
                    "commission": 0,
                    "block_time": 1740489636,
                    "price_normalized": "1.0000000000000000",
                    "hard_cap_normalized": "100.00000000",
                    "soft_cap_normalized": "10.00000000",
                    "quantity_by_price_normalized": "0.00000001",
                    "max_mint_per_tx_normalized": "0.00000000",
                    "premint_quantity_normalized": "0.00000000",
                    "earned_quantity_normalized": "3.00000000",
                    "commission_normalized": "0.00000000",
                    "paid_quantity_normalized": "3.00000000"
                },
                {
                    "tx_hash": "493f5c42a0285343de36fa4adf7fa48cd2c61b083addaf4e9a1d2e609c781fcc",
                    "tx_index": 10,
                    "block_index": 116,
                    "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "asset": "FAIRMINTA",
                    "asset_parent": null,
                    "asset_longname": null,
                    "description": "",
                    "price": 1,
                    "quantity_by_price": 1,
                    "hard_cap": 10000000000,
                    "burn_payment": false,
                    "max_mint_per_tx": 0,
                    "premint_quantity": 0,
                    "start_block": 0,
                    "end_block": 0,
                    "minted_asset_commission_int": 0,
                    "soft_cap": 1000000000,
                    "soft_cap_deadline_block": 115,
                    "lock_description": false,
                    "lock_quantity": false,
                    "divisible": true,
                    "pre_minted": false,
                    "status": "closed",
                    "earned_quantity": 10000000000,
                    "paid_quantity": 10000000000,
                    "commission": 0,
                    "block_time": 1740489618,
                    "price_normalized": "1.0000000000000000",
                    "hard_cap_normalized": "100.00000000",
                    "soft_cap_normalized": "10.00000000",
                    "quantity_by_price_normalized": "0.00000001",
                    "max_mint_per_tx_normalized": "0.00000000",
                    "premint_quantity_normalized": "0.00000000",
                    "earned_quantity_normalized": "100.00000000",
                    "commission_normalized": "0.00000000",
                    "paid_quantity_normalized": "100.00000000"
                }
            ],
            "next_cursor": null,
            "result_count": 6
        }
    ```

### Get Fairmints By Address [GET /v2/addresses/{address}/fairmints{?cursor}{&limit}{&offset}{&verbose}]

Returns the mints by address

+ Parameters
    + address: `bcrt1qdj4ckly3lwmjqld7pu60qu9myggm6pnd58ntz6` (str, required) - The address of the mints to return
    + cursor (str, optional) - 
        + Default: `None`
    + limit (int, optional) - 
        + Default: `100`
    + offset (int, optional) - 
        + Default: `None`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": [
                {
                    "tx_hash": "860c65fa9ca38d56cd7c7632b7e272c419871035b7bf9b39c4ea113091c138d6",
                    "tx_index": 46,
                    "block_index": 150,
                    "source": "bcrt1qdj4ckly3lwmjqld7pu60qu9myggm6pnd58ntz6",
                    "fairminter_tx_hash": "90cd0970da6991e63976a4bf990b252867c94d4946fa288e4fac6a8c821fcf89",
                    "asset": "FREEFAIRMINT",
                    "earn_quantity": 80,
                    "paid_quantity": 0,
                    "commission": 0,
                    "status": "valid",
                    "block_time": 1740489742,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "",
                        "issuer": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                        "divisible": true,
                        "locked": false,
                        "owner": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n"
                    },
                    "earn_quantity_normalized": "0.00000080",
                    "commission_normalized": "0.00000000",
                    "paid_quantity_normalized": "0.00000000"
                },
                {
                    "tx_hash": "d9a9c7f0a9d0e9f477ff1ffe84146ff9dedfdc96d138876393b5b589dec038ef",
                    "tx_index": 45,
                    "block_index": 149,
                    "source": "bcrt1qdj4ckly3lwmjqld7pu60qu9myggm6pnd58ntz6",
                    "fairminter_tx_hash": "90cd0970da6991e63976a4bf990b252867c94d4946fa288e4fac6a8c821fcf89",
                    "asset": "FREEFAIRMINT",
                    "earn_quantity": 100,
                    "paid_quantity": 0,
                    "commission": 0,
                    "status": "valid",
                    "block_time": 1740489739,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "",
                        "issuer": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                        "divisible": true,
                        "locked": false,
                        "owner": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n"
                    },
                    "earn_quantity_normalized": "0.00000100",
                    "commission_normalized": "0.00000000",
                    "paid_quantity_normalized": "0.00000000"
                },
                {
                    "tx_hash": "f61d66eca5b1223859c208ebcd171d389c03171891d762373222b0b795d24dbc",
                    "tx_index": 23,
                    "block_index": 127,
                    "source": "bcrt1qdj4ckly3lwmjqld7pu60qu9myggm6pnd58ntz6",
                    "fairminter_tx_hash": "7b9120ec72424987eb972f58ca1b8e8cd4bf8b7e06f9ff065e91ecf96fcdfa40",
                    "asset": "FAIRMINTD",
                    "earn_quantity": 40,
                    "paid_quantity": 34,
                    "commission": 0,
                    "status": "valid",
                    "block_time": 1740489657,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "",
                        "issuer": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                        "divisible": true,
                        "locked": false,
                        "owner": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n"
                    },
                    "earn_quantity_normalized": "0.00000040",
                    "commission_normalized": "0.00000000",
                    "paid_quantity_normalized": "0.00000034"
                },
                {
                    "tx_hash": "a62d1d25542fee85167f8f34dea8f2a9b0ab1188bfe27505cbfca0e6461e23f9",
                    "tx_index": 21,
                    "block_index": 125,
                    "source": "bcrt1qdj4ckly3lwmjqld7pu60qu9myggm6pnd58ntz6",
                    "fairminter_tx_hash": "06628f5fac1af4e971bb7b2d2e0ede1cce4482ff9950b228d1603f184cc9588e",
                    "asset": "FAIRMINTC",
                    "earn_quantity": 11,
                    "paid_quantity": 3,
                    "commission": 0,
                    "status": "valid",
                    "block_time": 1740489651,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "",
                        "issuer": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                        "divisible": true,
                        "locked": false,
                        "owner": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n"
                    },
                    "earn_quantity_normalized": "0.00000011",
                    "commission_normalized": "0.00000000",
                    "paid_quantity_normalized": "0.00000003"
                },
                {
                    "tx_hash": "d6689ebfed411196bb091bda6893c988336dcf45a4d2935ce560ed48b7f14166",
                    "tx_index": 20,
                    "block_index": 124,
                    "source": "bcrt1qdj4ckly3lwmjqld7pu60qu9myggm6pnd58ntz6",
                    "fairminter_tx_hash": "06628f5fac1af4e971bb7b2d2e0ede1cce4482ff9950b228d1603f184cc9588e",
                    "asset": "FAIRMINTC",
                    "earn_quantity": 3,
                    "paid_quantity": 1,
                    "commission": 0,
                    "status": "valid",
                    "block_time": 1740489647,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "",
                        "issuer": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                        "divisible": true,
                        "locked": false,
                        "owner": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n"
                    },
                    "earn_quantity_normalized": "0.00000003",
                    "commission_normalized": "0.00000000",
                    "paid_quantity_normalized": "0.00000001"
                },
                {
                    "tx_hash": "d037907f6e8d581d7f28044a24bdddb343b69a274713f2fc05904a1a2c603d5a",
                    "tx_index": 19,
                    "block_index": 123,
                    "source": "bcrt1qdj4ckly3lwmjqld7pu60qu9myggm6pnd58ntz6",
                    "fairminter_tx_hash": "06628f5fac1af4e971bb7b2d2e0ede1cce4482ff9950b228d1603f184cc9588e",
                    "asset": "FAIRMINTC",
                    "earn_quantity": 5,
                    "paid_quantity": 1,
                    "commission": 0,
                    "status": "valid",
                    "block_time": 1740489643,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "",
                        "issuer": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                        "divisible": true,
                        "locked": false,
                        "owner": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n"
                    },
                    "earn_quantity_normalized": "0.00000005",
                    "commission_normalized": "0.00000000",
                    "paid_quantity_normalized": "0.00000001"
                },
                {
                    "tx_hash": "ef6477790738b8d6d27bad3c8403618068e4184b59a85e0e19ffa0f729ecfbc4",
                    "tx_index": 15,
                    "block_index": 118,
                    "source": "bcrt1qdj4ckly3lwmjqld7pu60qu9myggm6pnd58ntz6",
                    "fairminter_tx_hash": "54da50dc04fe18ff5822c81f0f4dbf0a908912f00e788a5a9cbe2a6c0900fca9",
                    "asset": "FAIRMINTB",
                    "earn_quantity": 100000000,
                    "paid_quantity": 100000000,
                    "commission": 0,
                    "status": "valid",
                    "block_time": 1740489625,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "",
                        "issuer": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                        "divisible": true,
                        "locked": false,
                        "owner": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n"
                    },
                    "earn_quantity_normalized": "1.00000000",
                    "commission_normalized": "0.00000000",
                    "paid_quantity_normalized": "1.00000000"
                },
                {
                    "tx_hash": "aa92fb90bc5b74cedc4cd5d4526e9208f13aed243ceec99f4560a4d7b0213de2",
                    "tx_index": 11,
                    "block_index": 114,
                    "source": "bcrt1qdj4ckly3lwmjqld7pu60qu9myggm6pnd58ntz6",
                    "fairminter_tx_hash": "493f5c42a0285343de36fa4adf7fa48cd2c61b083addaf4e9a1d2e609c781fcc",
                    "asset": "FAIRMINTA",
                    "earn_quantity": 500000000,
                    "paid_quantity": 500000000,
                    "commission": 0,
                    "status": "valid",
                    "block_time": 1740489612,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "",
                        "issuer": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                        "divisible": true,
                        "locked": false,
                        "owner": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n"
                    },
                    "earn_quantity_normalized": "5.00000000",
                    "commission_normalized": "0.00000000",
                    "paid_quantity_normalized": "5.00000000"
                }
            ],
            "next_cursor": null,
            "result_count": 8
        }
    ```

### Get Fairmints By Address And Asset [GET /v2/addresses/{address}/fairmints/{asset}{?cursor}{&limit}{&offset}{&verbose}]

Returns the mints by address and asset

+ Parameters
    + address: `bcrt1qdj4ckly3lwmjqld7pu60qu9myggm6pnd58ntz6` (str, required) - The address of the mints to return
    + asset: `BURNER` (str, required) - The asset of the mints to return
    + cursor (str, optional) - 
        + Default: `None`
    + limit (int, optional) - 
        + Default: `100`
    + offset (int, optional) - 
        + Default: `None`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": [],
            "next_cursor": null,
            "result_count": 0
        }
    ```

## Group Utxos

### Get Utxo Balances [GET /v2/utxos/{utxo}/balances{?cursor}{&limit}{&offset}{&verbose}]

Returns the balances of an utxo

+ Parameters
    + utxo: `ecaff771fec807f55a71fea24818445ff090e7cc16d90b90c478a2b97511edcc:0` (str, required) - The utxo to return
    + cursor (str, optional) - The last index of the balances to return
        + Default: `None`
    + limit: `5` (int, optional) - The maximum number of balances to return
        + Default: `100`
    + offset (int, optional) - The number of lines to skip before returning results (overrides the `cursor` parameter)
        + Default: `None`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": [
                {
                    "asset": "UTXOASSET",
                    "asset_longname": null,
                    "quantity": 1000000000,
                    "utxo": "ecaff771fec807f55a71fea24818445ff090e7cc16d90b90c478a2b97511edcc:0",
                    "utxo_address": "bcrt1qs8qhqqz7us7w5kt08wqmxmqsl8h6jknlejhyru",
                    "asset_info": {
                        "asset_longname": null,
                        "description": "My super asset",
                        "issuer": "bcrt1qs8qhqqz7us7w5kt08wqmxmqsl8h6jknlejhyru",
                        "divisible": true,
                        "locked": false,
                        "owner": "bcrt1qs8qhqqz7us7w5kt08wqmxmqsl8h6jknlejhyru"
                    },
                    "quantity_normalized": "10.00000000"
                }
            ],
            "next_cursor": null,
            "result_count": 1
        }
    ```

### Utxos With Balances [GET /v2/utxos/withbalances{?utxos}{&verbose}]

Check if the utxos have balances

+ Parameters
    + utxos: `$UTXO_1,$UTXO_2` (str, required) - Comma separated list of utxos
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": {
                "$UTXO_1": false,
                "$UTXO_2": false
            }
        }
    ```

## Group Compose
**Notes about fee calculation**

To calculate the fees required for a transaction, we do not know the final size of the transaction before signing it.
So the  composer injects fake script_sig and witnesses into the transaction before calculating the adjusted vsize.

Two remarks:

1. this only works for standard scripts

1. the size of DER signatures can vary by a few bytes and it is impossible to predict it. The composer uses a fixed size of 70 bytes so there may be a discrepancy of a few satoshis with the fees requested with `sat_per_vbyte` (for example if a DER signature is 72 bytes with `sat_per_vbyte=2` there will be an error of 4 sats in the calculated fees).

**Note about transaction chaining**

if you make several transactions in the same block, you need to chain them using `inputs_set=<previous_tx_hash_in_the_chain>:<vout>`; otherwise, you can't guarantee the final order of the transactions.

**Deprecated parameters**

The following parameters are deprecated in the new composer and will no longer be supported in a future version:

- `fee_per_kb`: Use `sat_per_vbyte` instead
- `fee_provided`: Ue `max_fee` instead
- `unspent_tx_hash`: Use `inputs_set` instead
- `dust_return_pubkey`: Use `mutlisig_pubkey` instead
- `return_psbt`: Use `verbose` instead
- `regular_dust_size`: Automatically calculated
- `multisig_dust_size`: Automatically calculated
- `extended_tx_info`: API v1 only, use API v2 instead
- `old_style_api`: API v1 only, use API v2 instead
- `p2sh_pretx_txid`: Ignored, P2SH disabled
- `segwit`: Ignored, Segwit automatically detected

### Compose Bet [GET /v2/addresses/{address}/compose/bet{?feed_address}{&bet_type}{&deadline}{&wager_quantity}{&counterwager_quantity}{&expiration}{&leverage}{&target_value}{&encoding}{&validate}{&sat_per_vbyte}{&confirmation_target}{&exact_fee}{&max_fee}{&inputs_set}{&allow_unconfirmed_inputs}{&exclude_utxos}{&use_utxos_with_balances}{&exclude_utxos_with_balances}{&disable_utxo_locks}{&use_all_inputs_set}{&mutlisig_pubkey}{&change_address}{&more_outputs}{&pubkeys}{&verbose}{&return_only_data}{&fee_per_kb}{&fee_provided}{&unspent_tx_hash}{&dust_return_pubkey}{&return_psbt}{&regular_dust_size}{&multisig_dust_size}{&extended_tx_info}{&old_style_api}{&p2sh_pretx_txid}{&segwit}{&verbose}]

Composes a transaction to issue a bet against a feed.

+ Parameters
    + address: `bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n` (str, required) - The address that will make the bet
    + feed_address: `bcrt1qdj4ckly3lwmjqld7pu60qu9myggm6pnd58ntz6` (str, required) - The address that hosts the feed to be bet on
    + bet_type: `2` (int, required) - Bet 0 for Bullish CFD (deprecated), 1 for Bearish CFD (deprecated), 2 for Equal, 3 for NotEqual
    + deadline: `3000000000` (int, required) - The time at which the bet should be decided/settled, in Unix time (seconds since epoch)
    + wager_quantity: `1000` (int, required) - The quantities of XCP to wager (in satoshis, hence integer)
    + counterwager_quantity: `1000` (int, required) - The minimum quantities of XCP to be wagered against, for the bets to match (in satoshis, hence integer)
    + expiration: `100` (int, required) - The number of blocks after which the bet expires if it remains unmatched
    + leverage (int, optional) - Leverage, as a fraction of 5040
        + Default: `5040`
    + target_value: `1000` (int, optional) - Target value for Equal/NotEqual bet
        + Default: `None`
    + encoding (str, optional) - The encoding method to use
        + Default: `auto`
    + validate (bool, optional) - Validate the transaction
        + Default: `True`
    + sat_per_vbyte (float, optional) - The fee per vbyte in satoshis
        + Default: `None`
    + confirmation_target (int, optional) - The number of blocks to target for confirmation
        + Default: `3`
    + exact_fee: `0` (int, optional) - The exact fee to use in satoshis
        + Default: `None`
    + max_fee (int, optional) - The maximum fee to use in satoshis
        + Default: `None`
    + inputs_set (str, optional) - A comma-separated list of UTXOs (`<txid>:<vout>`) to use as inputs for the transaction being created. To speed up the composition you can also use the following format for utxos: `<txid>:<vout>:<value>:<script_pub_key>`.
        + Default: `None`
    + allow_unconfirmed_inputs (bool, optional) - Set to true to allow this transaction to utilize unconfirmed UTXOs as inputs
        + Default: `False`
    + exclude_utxos (str, optional) - A comma-separated list of UTXO txids to exclude when selecting UTXOs to use as inputs for the transaction being created
        + Default: `None`
    + use_utxos_with_balances (bool, optional) - Use UTXO with balances
        + Default: `False`
    + exclude_utxos_with_balances (bool, optional) - Exclude silently UTXO with balances instead of raising an exception. Important: the `exclude_utxos_with_balances` will not exclude unconfirmed `attach` and `utxomove`. You need to explicitly exclude them with the `exclude_utxos` parameter
        + Default: `False`
    + disable_utxo_locks (bool, optional) - By default, UTXOs utilized when creating a transaction are 'locked' for a few seconds, to prevent a case where rapidly generating create_ calls reuse UTXOs due to their spent status not being updated in bitcoind yet. Specify true for this parameter to disable this behavior, and not temporarily lock UTXOs
        + Default: `False`
    + use_all_inputs_set (bool, optional) - Use all UTXOs provide with `inputs_set` parameter
        + Default: `False`
    + mutlisig_pubkey (str, optional) - The reedem public key to use for multisig encoding, by default it is searched for the source address
        + Default: `None`
    + change_address (str, optional) - The address to send the change to
        + Default: `None`
    + more_outputs (str, optional) - Additional outputs to include in the transaction in the format `<value>:<address>` or `<value>:<script>`
        + Default: `None`
    + pubkeys (str, optional) - Pubkeys needed in case one or more destinations are multisig addresses
        + Default: `None`
    + verbose: `true` (bool, optional) - Include additional information in the result including data and psbt
        + Default: `False`
    + return_only_data (bool, optional) - Return only the data part of the transaction
        + Default: `False`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": {
                "rawtransaction": "02000000015b70862caa97cae319eb6657de48a7fc6274f95c8e306b3103f2acc69b537f3d0000000000ffffffff0322020000000000001600146cab8b7c91fbb7207dbe0f34f070bb2211bd066d0000000000000000316a2f471c8bb9d39f15ecdbf08573f46823c66b1c7f4d3b9fb6a10b0a80146ce33e8726e9694793d247ed6dc1ef59dcc8347e76072a01000000160014293ba4d53f14e5d071a5294a216269c455519f1100000000",
                "btc_in": 5000100000,
                "btc_out": 546,
                "btc_change": 5000099454,
                "btc_fee": 0,
                "data": "434e545250525459280002b2d05e0000000000000003e800000000000003e8408f400000000000000013b000000064",
                "lock_scripts": [
                    "0014293ba4d53f14e5d071a5294a216269c455519f11"
                ],
                "inputs_values": [
                    5000100000
                ],
                "signed_tx_estimated_size": {
                    "vsize": 199,
                    "adjusted_vsize": 199,
                    "sigops_count": 1
                },
                "psbt": "cHNidP8BAKsCAAAAAVtwhiyql8rjGetmV95Ip/xidPlcjjBrMQPyrMabU389AAAAAAD/////AyICAAAAAAAAFgAUbKuLfJH7tyB9vg808HC7IhG9Bm0AAAAAAAAAADFqL0cci7nTnxXs2/CFc/RoI8ZrHH9NO5+2oQsKgBRs4z6HJulpR5PSR+1twe9Z3Mg0fnYHKgEAAAAWABQpO6TVPxTl0HGlKUohYmnEVVGfEQAAAAAAAAAAAA==",
                "params": {
                    "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "feed_address": "bcrt1qdj4ckly3lwmjqld7pu60qu9myggm6pnd58ntz6",
                    "bet_type": 2,
                    "deadline": 3000000000,
                    "wager_quantity": 1000,
                    "counterwager_quantity": 1000,
                    "target_value": 1000,
                    "leverage": 5040,
                    "expiration": 100,
                    "skip_validation": true
                },
                "name": "bet"
            }
        }
    ```

### Compose Broadcast [GET /v2/addresses/{address}/compose/broadcast{?timestamp}{&value}{&fee_fraction}{&text}{&encoding}{&validate}{&sat_per_vbyte}{&confirmation_target}{&exact_fee}{&max_fee}{&inputs_set}{&allow_unconfirmed_inputs}{&exclude_utxos}{&use_utxos_with_balances}{&exclude_utxos_with_balances}{&disable_utxo_locks}{&use_all_inputs_set}{&mutlisig_pubkey}{&change_address}{&more_outputs}{&pubkeys}{&verbose}{&return_only_data}{&fee_per_kb}{&fee_provided}{&unspent_tx_hash}{&dust_return_pubkey}{&return_psbt}{&regular_dust_size}{&multisig_dust_size}{&extended_tx_info}{&old_style_api}{&p2sh_pretx_txid}{&segwit}{&verbose}]

Composes a transaction to broadcast textual and numerical information to the network.

+ Parameters
    + address: `bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n` (str, required) - The address that will be sending (must have the necessary quantity of the specified asset)
    + timestamp: `4003903985` (int, required) - The timestamp of the broadcast, in Unix time
    + value: `100` (float, required) - Numerical value of the broadcast
    + fee_fraction: `0.05` (float, required) - How much of every bet on this feed should go to its operator; a fraction of 1, (i.e. 0.05 is five percent)
    + text: `"Hello, world!"` (str, required) - The textual part of the broadcast
    + encoding (str, optional) - The encoding method to use
        + Default: `auto`
    + validate (bool, optional) - Validate the transaction
        + Default: `True`
    + sat_per_vbyte (float, optional) - The fee per vbyte in satoshis
        + Default: `None`
    + confirmation_target (int, optional) - The number of blocks to target for confirmation
        + Default: `3`
    + exact_fee: `0` (int, optional) - The exact fee to use in satoshis
        + Default: `None`
    + max_fee (int, optional) - The maximum fee to use in satoshis
        + Default: `None`
    + inputs_set (str, optional) - A comma-separated list of UTXOs (`<txid>:<vout>`) to use as inputs for the transaction being created. To speed up the composition you can also use the following format for utxos: `<txid>:<vout>:<value>:<script_pub_key>`.
        + Default: `None`
    + allow_unconfirmed_inputs (bool, optional) - Set to true to allow this transaction to utilize unconfirmed UTXOs as inputs
        + Default: `False`
    + exclude_utxos (str, optional) - A comma-separated list of UTXO txids to exclude when selecting UTXOs to use as inputs for the transaction being created
        + Default: `None`
    + use_utxos_with_balances (bool, optional) - Use UTXO with balances
        + Default: `False`
    + exclude_utxos_with_balances (bool, optional) - Exclude silently UTXO with balances instead of raising an exception. Important: the `exclude_utxos_with_balances` will not exclude unconfirmed `attach` and `utxomove`. You need to explicitly exclude them with the `exclude_utxos` parameter
        + Default: `False`
    + disable_utxo_locks (bool, optional) - By default, UTXOs utilized when creating a transaction are 'locked' for a few seconds, to prevent a case where rapidly generating create_ calls reuse UTXOs due to their spent status not being updated in bitcoind yet. Specify true for this parameter to disable this behavior, and not temporarily lock UTXOs
        + Default: `False`
    + use_all_inputs_set (bool, optional) - Use all UTXOs provide with `inputs_set` parameter
        + Default: `False`
    + mutlisig_pubkey (str, optional) - The reedem public key to use for multisig encoding, by default it is searched for the source address
        + Default: `None`
    + change_address (str, optional) - The address to send the change to
        + Default: `None`
    + more_outputs (str, optional) - Additional outputs to include in the transaction in the format `<value>:<address>` or `<value>:<script>`
        + Default: `None`
    + pubkeys (str, optional) - Pubkeys needed in case one or more destinations are multisig addresses
        + Default: `None`
    + verbose: `true` (bool, optional) - Include additional information in the result including data and psbt
        + Default: `False`
    + return_only_data (bool, optional) - Return only the data part of the transaction
        + Default: `False`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": {
                "rawtransaction": "0200000001483017ed27e3392d734d2901816feb0d5c6093461cf7caa4a5fcb90d99c83bb00000000000ffffffff0200000000000000002b6a295082f7c9d0d6dd69e77038b86d70d984da89e1273c77bb541d808918061a756966e0dfbb4f8a89a6441019062a01000000160014293ba4d53f14e5d071a5294a216269c455519f1100000000",
                "btc_in": 5000010000,
                "btc_out": 0,
                "btc_change": 5000010000,
                "btc_fee": 0,
                "data": "434e5452505254591eeea6b9f14059000000000000004c4b400f2248656c6c6f2c20776f726c642122",
                "lock_scripts": [
                    "0014293ba4d53f14e5d071a5294a216269c455519f11"
                ],
                "inputs_values": [
                    5000010000
                ],
                "signed_tx_estimated_size": {
                    "vsize": 162,
                    "adjusted_vsize": 162,
                    "sigops_count": 1
                },
                "psbt": "cHNidP8BAIYCAAAAAUgwF+0n4zktc00pAYFv6w1cYJNGHPfKpKX8uQ2ZyDuwAAAAAAD/////AgAAAAAAAAAAK2opUIL3ydDW3WnncDi4bXDZhNqJ4Sc8d7tUHYCJGAYadWlm4N+7T4qJpkQQGQYqAQAAABYAFCk7pNU/FOXQcaUpSiFiacRVUZ8RAAAAAAAAAAA=",
                "params": {
                    "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "timestamp": 4003903985,
                    "value": 100.0,
                    "fee_fraction": 0.05,
                    "text": "\"Hello, world!\"",
                    "skip_validation": true
                },
                "name": "broadcast"
            }
        }
    ```

### Compose BTCPay [GET /v2/addresses/{address}/compose/btcpay{?order_match_id}{&encoding}{&validate}{&sat_per_vbyte}{&confirmation_target}{&exact_fee}{&max_fee}{&inputs_set}{&allow_unconfirmed_inputs}{&exclude_utxos}{&use_utxos_with_balances}{&exclude_utxos_with_balances}{&disable_utxo_locks}{&use_all_inputs_set}{&mutlisig_pubkey}{&change_address}{&more_outputs}{&pubkeys}{&verbose}{&return_only_data}{&fee_per_kb}{&fee_provided}{&unspent_tx_hash}{&dust_return_pubkey}{&return_psbt}{&regular_dust_size}{&multisig_dust_size}{&extended_tx_info}{&old_style_api}{&p2sh_pretx_txid}{&segwit}{&verbose}]

Composes a transaction to pay for a BTC order match.

+ Parameters
    + address: `bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n` (str, required) - The address that will be sending the payment
    + order_match_id: `a420cfa1fd7462a7c3ed97e8f1ce5784e74a29c16ef5e371c51591c325999106_896df8fca70776cb0b38bd40c0f30d6cf657a8e5a62fb5542597d23bca4cbcd2` (str, required) - The ID of the order match to pay for
    + encoding (str, optional) - The encoding method to use
        + Default: `auto`
    + validate (bool, optional) - Validate the transaction
        + Default: `True`
    + sat_per_vbyte (float, optional) - The fee per vbyte in satoshis
        + Default: `None`
    + confirmation_target (int, optional) - The number of blocks to target for confirmation
        + Default: `3`
    + exact_fee: `0` (int, optional) - The exact fee to use in satoshis
        + Default: `None`
    + max_fee (int, optional) - The maximum fee to use in satoshis
        + Default: `None`
    + inputs_set (str, optional) - A comma-separated list of UTXOs (`<txid>:<vout>`) to use as inputs for the transaction being created. To speed up the composition you can also use the following format for utxos: `<txid>:<vout>:<value>:<script_pub_key>`.
        + Default: `None`
    + allow_unconfirmed_inputs (bool, optional) - Set to true to allow this transaction to utilize unconfirmed UTXOs as inputs
        + Default: `False`
    + exclude_utxos (str, optional) - A comma-separated list of UTXO txids to exclude when selecting UTXOs to use as inputs for the transaction being created
        + Default: `None`
    + use_utxos_with_balances (bool, optional) - Use UTXO with balances
        + Default: `False`
    + exclude_utxos_with_balances (bool, optional) - Exclude silently UTXO with balances instead of raising an exception. Important: the `exclude_utxos_with_balances` will not exclude unconfirmed `attach` and `utxomove`. You need to explicitly exclude them with the `exclude_utxos` parameter
        + Default: `False`
    + disable_utxo_locks (bool, optional) - By default, UTXOs utilized when creating a transaction are 'locked' for a few seconds, to prevent a case where rapidly generating create_ calls reuse UTXOs due to their spent status not being updated in bitcoind yet. Specify true for this parameter to disable this behavior, and not temporarily lock UTXOs
        + Default: `False`
    + use_all_inputs_set (bool, optional) - Use all UTXOs provide with `inputs_set` parameter
        + Default: `False`
    + mutlisig_pubkey (str, optional) - The reedem public key to use for multisig encoding, by default it is searched for the source address
        + Default: `None`
    + change_address (str, optional) - The address to send the change to
        + Default: `None`
    + more_outputs (str, optional) - Additional outputs to include in the transaction in the format `<value>:<address>` or `<value>:<script>`
        + Default: `None`
    + pubkeys (str, optional) - Pubkeys needed in case one or more destinations are multisig addresses
        + Default: `None`
    + verbose: `true` (bool, optional) - Include additional information in the result including data and psbt
        + Default: `False`
    + return_only_data (bool, optional) - Return only the data part of the transaction
        + Default: `False`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": {
                "rawtransaction": "0200000001b58d1091ae976fbd8e5b90e56ddb5675da970e0f2b38ba8ceedd430415a1c35a0000000000ffffffff03e80300000000000016001481c170005ee43cea596f3b81b36c10f9efa95a7f00000000000000004b6a4926c84d7df8341f5db5d25b24e041d0ede62fc03b5d72de5dd8dd6e5d1efac348d9ab2daa7ff91d4caaa015d8305ca5cbf52452ca2b28cbdbc77560fc35d3736f5fcfd2011365846f4f2815062a01000000160014293ba4d53f14e5d071a5294a216269c455519f1100000000",
                "btc_in": 5000010000,
                "btc_out": 1000,
                "btc_change": 5000009000,
                "btc_fee": 0,
                "data": "434e5452505254590ba420cfa1fd7462a7c3ed97e8f1ce5784e74a29c16ef5e371c51591c325999106896df8fca70776cb0b38bd40c0f30d6cf657a8e5a62fb5542597d23bca4cbcd2",
                "lock_scripts": [
                    "0014293ba4d53f14e5d071a5294a216269c455519f11"
                ],
                "inputs_values": [
                    5000010000
                ],
                "signed_tx_estimated_size": {
                    "vsize": 225,
                    "adjusted_vsize": 225,
                    "sigops_count": 1
                },
                "psbt": "cHNidP8BAMUCAAAAAbWNEJGul2+9jluQ5W3bVnXalw4PKzi6jO7dQwQVocNaAAAAAAD/////A+gDAAAAAAAAFgAUgcFwAF7kPOpZbzuBs2wQ+e+pWn8AAAAAAAAAAEtqSSbITX34NB9dtdJbJOBB0O3mL8A7XXLeXdjdbl0e+sNI2astqn/5HUyqoBXYMFyly/UkUsorKMvbx3Vg/DXTc29fz9IBE2WEb08oFQYqAQAAABYAFCk7pNU/FOXQcaUpSiFiacRVUZ8RAAAAAAAAAAAA",
                "params": {
                    "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "order_match_id": "a420cfa1fd7462a7c3ed97e8f1ce5784e74a29c16ef5e371c51591c325999106_896df8fca70776cb0b38bd40c0f30d6cf657a8e5a62fb5542597d23bca4cbcd2",
                    "skip_validation": true
                },
                "name": "btcpay"
            }
        }
    ```

### Compose Burn [GET /v2/addresses/{address}/compose/burn{?quantity}{&overburn}{&encoding}{&validate}{&sat_per_vbyte}{&confirmation_target}{&exact_fee}{&max_fee}{&inputs_set}{&allow_unconfirmed_inputs}{&exclude_utxos}{&use_utxos_with_balances}{&exclude_utxos_with_balances}{&disable_utxo_locks}{&use_all_inputs_set}{&mutlisig_pubkey}{&change_address}{&more_outputs}{&pubkeys}{&verbose}{&return_only_data}{&fee_per_kb}{&fee_provided}{&unspent_tx_hash}{&dust_return_pubkey}{&return_psbt}{&regular_dust_size}{&multisig_dust_size}{&extended_tx_info}{&old_style_api}{&p2sh_pretx_txid}{&segwit}{&verbose}]

Composes a transaction to burn a given quantity of BTC for XCP (on mainnet, possible between blocks 278310 and 283810; on testnet it is still available).

+ Parameters
    + address: `bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n` (str, required) - The address with the BTC to burn
    + quantity: `1000` (int, required) - The quantities of BTC to burn (in satoshis, hence integer) (1 BTC maximum burn per address)
    + overburn (bool, optional) - Whether to allow the burn to exceed 1 BTC for the address
        + Default: `False`
    + encoding (str, optional) - The encoding method to use
        + Default: `auto`
    + validate (bool, optional) - Validate the transaction
        + Default: `True`
    + sat_per_vbyte (float, optional) - The fee per vbyte in satoshis
        + Default: `None`
    + confirmation_target (int, optional) - The number of blocks to target for confirmation
        + Default: `3`
    + exact_fee: `0` (int, optional) - The exact fee to use in satoshis
        + Default: `None`
    + max_fee (int, optional) - The maximum fee to use in satoshis
        + Default: `None`
    + inputs_set (str, optional) - A comma-separated list of UTXOs (`<txid>:<vout>`) to use as inputs for the transaction being created. To speed up the composition you can also use the following format for utxos: `<txid>:<vout>:<value>:<script_pub_key>`.
        + Default: `None`
    + allow_unconfirmed_inputs (bool, optional) - Set to true to allow this transaction to utilize unconfirmed UTXOs as inputs
        + Default: `False`
    + exclude_utxos (str, optional) - A comma-separated list of UTXO txids to exclude when selecting UTXOs to use as inputs for the transaction being created
        + Default: `None`
    + use_utxos_with_balances (bool, optional) - Use UTXO with balances
        + Default: `False`
    + exclude_utxos_with_balances (bool, optional) - Exclude silently UTXO with balances instead of raising an exception. Important: the `exclude_utxos_with_balances` will not exclude unconfirmed `attach` and `utxomove`. You need to explicitly exclude them with the `exclude_utxos` parameter
        + Default: `False`
    + disable_utxo_locks (bool, optional) - By default, UTXOs utilized when creating a transaction are 'locked' for a few seconds, to prevent a case where rapidly generating create_ calls reuse UTXOs due to their spent status not being updated in bitcoind yet. Specify true for this parameter to disable this behavior, and not temporarily lock UTXOs
        + Default: `False`
    + use_all_inputs_set (bool, optional) - Use all UTXOs provide with `inputs_set` parameter
        + Default: `False`
    + mutlisig_pubkey (str, optional) - The reedem public key to use for multisig encoding, by default it is searched for the source address
        + Default: `None`
    + change_address (str, optional) - The address to send the change to
        + Default: `None`
    + more_outputs (str, optional) - Additional outputs to include in the transaction in the format `<value>:<address>` or `<value>:<script>`
        + Default: `None`
    + pubkeys (str, optional) - Pubkeys needed in case one or more destinations are multisig addresses
        + Default: `None`
    + verbose: `true` (bool, optional) - Include additional information in the result including data and psbt
        + Default: `False`
    + return_only_data (bool, optional) - Return only the data part of the transaction
        + Default: `False`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": {
                "rawtransaction": "020000000155f9885e011ec025d4562ccb179629ea6cb068741f50b0b1442f328fded0ffae0000000000ffffffff02e8030000000000001976a914a11b66a67b3ff69671c8f82254099faf374b800e88ac2815062a01000000160014293ba4d53f14e5d071a5294a216269c455519f1100000000",
                "btc_in": 5000010000,
                "btc_out": 1000,
                "btc_change": 5000009000,
                "btc_fee": 0,
                "data": null,
                "lock_scripts": [
                    "0014293ba4d53f14e5d071a5294a216269c455519f11"
                ],
                "inputs_values": [
                    5000010000
                ],
                "signed_tx_estimated_size": {
                    "vsize": 144,
                    "adjusted_vsize": 144,
                    "sigops_count": 5
                },
                "psbt": "cHNidP8BAHQCAAAAAVX5iF4BHsAl1FYsyxeWKepssGh0H1CwsUQvMo/e0P+uAAAAAAD/////AugDAAAAAAAAGXapFKEbZqZ7P/aWccj4IlQJn683S4AOiKwoFQYqAQAAABYAFCk7pNU/FOXQcaUpSiFiacRVUZ8RAAAAAAAAAAA=",
                "params": {
                    "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "quantity": 1000,
                    "overburn": false,
                    "skip_validation": true
                },
                "name": "burn"
            }
        }
    ```

### Compose Cancel [GET /v2/addresses/{address}/compose/cancel{?offer_hash}{&encoding}{&validate}{&sat_per_vbyte}{&confirmation_target}{&exact_fee}{&max_fee}{&inputs_set}{&allow_unconfirmed_inputs}{&exclude_utxos}{&use_utxos_with_balances}{&exclude_utxos_with_balances}{&disable_utxo_locks}{&use_all_inputs_set}{&mutlisig_pubkey}{&change_address}{&more_outputs}{&pubkeys}{&verbose}{&return_only_data}{&fee_per_kb}{&fee_provided}{&unspent_tx_hash}{&dust_return_pubkey}{&return_psbt}{&regular_dust_size}{&multisig_dust_size}{&extended_tx_info}{&old_style_api}{&p2sh_pretx_txid}{&segwit}{&verbose}]

Composes a transaction to cancel an open order or bet.

+ Parameters
    + address: `bcrt1qquwz9xkh3dv34l49v32lk3kc283utd58ung2cn` (str, required) - The address that placed the order/bet to be cancelled
    + offer_hash: `896df8fca70776cb0b38bd40c0f30d6cf657a8e5a62fb5542597d23bca4cbcd2` (str, required) - The hash of the order/bet to be cancelled
    + encoding (str, optional) - The encoding method to use
        + Default: `auto`
    + validate (bool, optional) - Validate the transaction
        + Default: `True`
    + sat_per_vbyte (float, optional) - The fee per vbyte in satoshis
        + Default: `None`
    + confirmation_target (int, optional) - The number of blocks to target for confirmation
        + Default: `3`
    + exact_fee: `0` (int, optional) - The exact fee to use in satoshis
        + Default: `None`
    + max_fee (int, optional) - The maximum fee to use in satoshis
        + Default: `None`
    + inputs_set (str, optional) - A comma-separated list of UTXOs (`<txid>:<vout>`) to use as inputs for the transaction being created. To speed up the composition you can also use the following format for utxos: `<txid>:<vout>:<value>:<script_pub_key>`.
        + Default: `None`
    + allow_unconfirmed_inputs (bool, optional) - Set to true to allow this transaction to utilize unconfirmed UTXOs as inputs
        + Default: `False`
    + exclude_utxos (str, optional) - A comma-separated list of UTXO txids to exclude when selecting UTXOs to use as inputs for the transaction being created
        + Default: `None`
    + use_utxos_with_balances (bool, optional) - Use UTXO with balances
        + Default: `False`
    + exclude_utxos_with_balances (bool, optional) - Exclude silently UTXO with balances instead of raising an exception. Important: the `exclude_utxos_with_balances` will not exclude unconfirmed `attach` and `utxomove`. You need to explicitly exclude them with the `exclude_utxos` parameter
        + Default: `False`
    + disable_utxo_locks (bool, optional) - By default, UTXOs utilized when creating a transaction are 'locked' for a few seconds, to prevent a case where rapidly generating create_ calls reuse UTXOs due to their spent status not being updated in bitcoind yet. Specify true for this parameter to disable this behavior, and not temporarily lock UTXOs
        + Default: `False`
    + use_all_inputs_set (bool, optional) - Use all UTXOs provide with `inputs_set` parameter
        + Default: `False`
    + mutlisig_pubkey (str, optional) - The reedem public key to use for multisig encoding, by default it is searched for the source address
        + Default: `None`
    + change_address (str, optional) - The address to send the change to
        + Default: `None`
    + more_outputs (str, optional) - Additional outputs to include in the transaction in the format `<value>:<address>` or `<value>:<script>`
        + Default: `None`
    + pubkeys (str, optional) - Pubkeys needed in case one or more destinations are multisig addresses
        + Default: `None`
    + verbose: `true` (bool, optional) - Include additional information in the result including data and psbt
        + Default: `False`
    + return_only_data (bool, optional) - Return only the data part of the transaction
        + Default: `False`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": {
                "rawtransaction": "0200000001884eb3c884091c3beaa6a9f1e4203e7ee0afa8ab029d51c2e2efed21404812240100000000ffffffff0200000000000000002b6a2910930282b248a0e70bc170d4a27457ece60e9e94bf556bde909733eb05628c6c4ca3b4e2ed26600b7178b5092701000000160014071c229ad78b591afea56455fb46d851e3c5b68700000000",
                "btc_in": 4949915000,
                "btc_out": 0,
                "btc_change": 4949915000,
                "btc_fee": 0,
                "data": "434e54525052545946896df8fca70776cb0b38bd40c0f30d6cf657a8e5a62fb5542597d23bca4cbcd2",
                "lock_scripts": [
                    "0014071c229ad78b591afea56455fb46d851e3c5b687"
                ],
                "inputs_values": [
                    4949915000
                ],
                "signed_tx_estimated_size": {
                    "vsize": 162,
                    "adjusted_vsize": 162,
                    "sigops_count": 1
                },
                "psbt": "cHNidP8BAIYCAAAAAYhOs8iECRw76qap8eQgPn7gr6irAp1RwuLv7SFASBIkAQAAAAD/////AgAAAAAAAAAAK2opEJMCgrJIoOcLwXDUonRX7OYOnpS/VWvekJcz6wVijGxMo7Ti7SZgC3F4tQknAQAAABYAFAccIprXi1ka/qVkVftG2FHjxbaHAAAAAAAAAAA=",
                "params": {
                    "source": "bcrt1qquwz9xkh3dv34l49v32lk3kc283utd58ung2cn",
                    "offer_hash": "896df8fca70776cb0b38bd40c0f30d6cf657a8e5a62fb5542597d23bca4cbcd2",
                    "skip_validation": true
                },
                "name": "cancel"
            }
        }
    ```

### Compose Destroy [GET /v2/addresses/{address}/compose/destroy{?asset}{&quantity}{&tag}{&encoding}{&validate}{&sat_per_vbyte}{&confirmation_target}{&exact_fee}{&max_fee}{&inputs_set}{&allow_unconfirmed_inputs}{&exclude_utxos}{&use_utxos_with_balances}{&exclude_utxos_with_balances}{&disable_utxo_locks}{&use_all_inputs_set}{&mutlisig_pubkey}{&change_address}{&more_outputs}{&pubkeys}{&verbose}{&return_only_data}{&fee_per_kb}{&fee_provided}{&unspent_tx_hash}{&dust_return_pubkey}{&return_psbt}{&regular_dust_size}{&multisig_dust_size}{&extended_tx_info}{&old_style_api}{&p2sh_pretx_txid}{&segwit}{&verbose}]

Composes a transaction to destroy a quantity of an asset.

+ Parameters
    + address: `bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n` (str, required) - The address that will be sending the asset to be destroyed
    + asset: `XCP` (str, required) - The asset to be destroyed
    + quantity: `1000` (int, required) - The quantity of the asset to be destroyed (in satoshis, hence integer)
    + tag: `"bugs!"` (str, required) - A tag for the destruction
    + encoding (str, optional) - The encoding method to use
        + Default: `auto`
    + validate (bool, optional) - Validate the transaction
        + Default: `True`
    + sat_per_vbyte (float, optional) - The fee per vbyte in satoshis
        + Default: `None`
    + confirmation_target (int, optional) - The number of blocks to target for confirmation
        + Default: `3`
    + exact_fee: `0` (int, optional) - The exact fee to use in satoshis
        + Default: `None`
    + max_fee (int, optional) - The maximum fee to use in satoshis
        + Default: `None`
    + inputs_set (str, optional) - A comma-separated list of UTXOs (`<txid>:<vout>`) to use as inputs for the transaction being created. To speed up the composition you can also use the following format for utxos: `<txid>:<vout>:<value>:<script_pub_key>`.
        + Default: `None`
    + allow_unconfirmed_inputs (bool, optional) - Set to true to allow this transaction to utilize unconfirmed UTXOs as inputs
        + Default: `False`
    + exclude_utxos (str, optional) - A comma-separated list of UTXO txids to exclude when selecting UTXOs to use as inputs for the transaction being created
        + Default: `None`
    + use_utxos_with_balances (bool, optional) - Use UTXO with balances
        + Default: `False`
    + exclude_utxos_with_balances (bool, optional) - Exclude silently UTXO with balances instead of raising an exception. Important: the `exclude_utxos_with_balances` will not exclude unconfirmed `attach` and `utxomove`. You need to explicitly exclude them with the `exclude_utxos` parameter
        + Default: `False`
    + disable_utxo_locks (bool, optional) - By default, UTXOs utilized when creating a transaction are 'locked' for a few seconds, to prevent a case where rapidly generating create_ calls reuse UTXOs due to their spent status not being updated in bitcoind yet. Specify true for this parameter to disable this behavior, and not temporarily lock UTXOs
        + Default: `False`
    + use_all_inputs_set (bool, optional) - Use all UTXOs provide with `inputs_set` parameter
        + Default: `False`
    + mutlisig_pubkey (str, optional) - The reedem public key to use for multisig encoding, by default it is searched for the source address
        + Default: `None`
    + change_address (str, optional) - The address to send the change to
        + Default: `None`
    + more_outputs (str, optional) - Additional outputs to include in the transaction in the format `<value>:<address>` or `<value>:<script>`
        + Default: `None`
    + pubkeys (str, optional) - Pubkeys needed in case one or more destinations are multisig addresses
        + Default: `None`
    + verbose: `true` (bool, optional) - Include additional information in the result including data and psbt
        + Default: `False`
    + return_only_data (bool, optional) - Return only the data part of the transaction
        + Default: `False`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": {
                "rawtransaction": "0200000001f2c96a6b03f513efac0f88a9700d347855e99a09ca32934128e5fde21c018d7b0000000000ffffffff020000000000000000226a20df178466dc025d343dbbeb699dd89927ba959c0087eeaa4057c53b71d770ad561019062a01000000160014293ba4d53f14e5d071a5294a216269c455519f1100000000",
                "btc_in": 5000010000,
                "btc_out": 0,
                "btc_change": 5000010000,
                "btc_fee": 0,
                "data": "434e5452505254596e000000000000000100000000000003e822627567732122",
                "lock_scripts": [
                    "0014293ba4d53f14e5d071a5294a216269c455519f11"
                ],
                "inputs_values": [
                    5000010000
                ],
                "signed_tx_estimated_size": {
                    "vsize": 153,
                    "adjusted_vsize": 153,
                    "sigops_count": 1
                },
                "psbt": "cHNidP8BAH0CAAAAAfLJamsD9RPvrA+IqXANNHhV6ZoJyjKTQSjl/eIcAY17AAAAAAD/////AgAAAAAAAAAAImog3xeEZtwCXTQ9u+tpndiZJ7qVnACH7qpAV8U7cddwrVYQGQYqAQAAABYAFCk7pNU/FOXQcaUpSiFiacRVUZ8RAAAAAAAAAAA=",
                "params": {
                    "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "asset": "XCP",
                    "quantity": 1000,
                    "tag": "\"bugs!\"",
                    "skip_validation": true,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "The Counterparty protocol native currency",
                        "issuer": null,
                        "divisible": true,
                        "locked": true,
                        "owner": null
                    },
                    "quantity_normalized": "0.00001000"
                },
                "name": "destroy"
            }
        }
    ```

### Compose Dispenser [GET /v2/addresses/{address}/compose/dispenser{?asset}{&give_quantity}{&escrow_quantity}{&mainchainrate}{&status}{&open_address}{&oracle_address}{&encoding}{&validate}{&sat_per_vbyte}{&confirmation_target}{&exact_fee}{&max_fee}{&inputs_set}{&allow_unconfirmed_inputs}{&exclude_utxos}{&use_utxos_with_balances}{&exclude_utxos_with_balances}{&disable_utxo_locks}{&use_all_inputs_set}{&mutlisig_pubkey}{&change_address}{&more_outputs}{&pubkeys}{&verbose}{&return_only_data}{&fee_per_kb}{&fee_provided}{&unspent_tx_hash}{&dust_return_pubkey}{&return_psbt}{&regular_dust_size}{&multisig_dust_size}{&extended_tx_info}{&old_style_api}{&p2sh_pretx_txid}{&segwit}{&verbose}]

Composes a transaction to opens or closes a dispenser for a given asset at a given rate of main chain asset (BTC). Escrowed quantity on open must be equal or greater than give_quantity. It is suggested that you escrow multiples of give_quantity to ease dispenser operation.

+ Parameters
    + address: `bcrt1qwats7crkdl4z6ac6tz2fn6pz6a5dt7hxzjustu` (str, required) - The address that will be dispensing (must have the necessary escrow_quantity of the specified asset)
    + asset: `XCP` (str, required) - The asset or subasset to dispense
    + give_quantity: `1000` (int, required) - The quantity of the asset to dispense (in satoshis, hence integer)
    + escrow_quantity: `1000` (int, required) - The quantity of the asset to reserve for this dispenser (in satoshis, hence integer)
    + mainchainrate: `100` (int, required) - The quantity of the main chain asset (BTC) per dispensed portion (in satoshis, hence integer)
    + status: `0` (int, required) - The state of the dispenser. 0 for open, 1 for open using open_address, 10 for closed
    + open_address (str, optional) - The address that you would like to open the dispenser on; MUST be equal to `address` from block 866000 onwards
        + Default: `None`
    + oracle_address (str, optional) - The address that you would like to use as a price oracle for this dispenser
        + Default: `None`
    + encoding (str, optional) - The encoding method to use
        + Default: `auto`
    + validate (bool, optional) - Validate the transaction
        + Default: `True`
    + sat_per_vbyte (float, optional) - The fee per vbyte in satoshis
        + Default: `None`
    + confirmation_target (int, optional) - The number of blocks to target for confirmation
        + Default: `3`
    + exact_fee: `0` (int, optional) - The exact fee to use in satoshis
        + Default: `None`
    + max_fee (int, optional) - The maximum fee to use in satoshis
        + Default: `None`
    + inputs_set (str, optional) - A comma-separated list of UTXOs (`<txid>:<vout>`) to use as inputs for the transaction being created. To speed up the composition you can also use the following format for utxos: `<txid>:<vout>:<value>:<script_pub_key>`.
        + Default: `None`
    + allow_unconfirmed_inputs (bool, optional) - Set to true to allow this transaction to utilize unconfirmed UTXOs as inputs
        + Default: `False`
    + exclude_utxos (str, optional) - A comma-separated list of UTXO txids to exclude when selecting UTXOs to use as inputs for the transaction being created
        + Default: `None`
    + use_utxos_with_balances (bool, optional) - Use UTXO with balances
        + Default: `False`
    + exclude_utxos_with_balances (bool, optional) - Exclude silently UTXO with balances instead of raising an exception. Important: the `exclude_utxos_with_balances` will not exclude unconfirmed `attach` and `utxomove`. You need to explicitly exclude them with the `exclude_utxos` parameter
        + Default: `False`
    + disable_utxo_locks (bool, optional) - By default, UTXOs utilized when creating a transaction are 'locked' for a few seconds, to prevent a case where rapidly generating create_ calls reuse UTXOs due to their spent status not being updated in bitcoind yet. Specify true for this parameter to disable this behavior, and not temporarily lock UTXOs
        + Default: `False`
    + use_all_inputs_set (bool, optional) - Use all UTXOs provide with `inputs_set` parameter
        + Default: `False`
    + mutlisig_pubkey (str, optional) - The reedem public key to use for multisig encoding, by default it is searched for the source address
        + Default: `None`
    + change_address (str, optional) - The address to send the change to
        + Default: `None`
    + more_outputs (str, optional) - Additional outputs to include in the transaction in the format `<value>:<address>` or `<value>:<script>`
        + Default: `None`
    + pubkeys (str, optional) - Pubkeys needed in case one or more destinations are multisig addresses
        + Default: `None`
    + verbose: `true` (bool, optional) - Include additional information in the result including data and psbt
        + Default: `False`
    + return_only_data (bool, optional) - Return only the data part of the transaction
        + Default: `False`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": {
                "rawtransaction": "0200000001d33aa4b307b73f2c39d17b53c083b277bf313f3d36cf7d745cc3460f9e516cd60200000000ffffffff0200000000000000002c6a2ab5ff020279c61bd6d7d4f71995df2d5c52faecf255feb23c0745aa2a437e000d89e362f7499e23c8169a871409270100000016001477570f60766fea2d771a589499e822d768d5fae600000000",
                "btc_in": 4949873799,
                "btc_out": 0,
                "btc_change": 4949873799,
                "btc_fee": 0,
                "data": "434e5452505254590c000000000000000100000000000003e800000000000003e8000000000000006400",
                "lock_scripts": [
                    "001477570f60766fea2d771a589499e822d768d5fae6"
                ],
                "inputs_values": [
                    4949873799
                ],
                "signed_tx_estimated_size": {
                    "vsize": 163,
                    "adjusted_vsize": 163,
                    "sigops_count": 1
                },
                "psbt": "cHNidP8BAIcCAAAAAdM6pLMHtz8sOdF7U8CDsne/MT89Ns99dFzDRg+eUWzWAgAAAAD/////AgAAAAAAAAAALGoqtf8CAnnGG9bX1PcZld8tXFL67PJV/rI8B0WqKkN+AA2J42L3SZ4jyBaahxQJJwEAAAAWABR3Vw9gdm/qLXcaWJSZ6CLXaNX65gAAAAAAAAAA",
                "params": {
                    "source": "bcrt1qwats7crkdl4z6ac6tz2fn6pz6a5dt7hxzjustu",
                    "asset": "XCP",
                    "give_quantity": 1000,
                    "escrow_quantity": 1000,
                    "mainchainrate": 100,
                    "status": 0,
                    "open_address": null,
                    "oracle_address": null,
                    "skip_validation": true,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "The Counterparty protocol native currency",
                        "issuer": null,
                        "divisible": true,
                        "locked": true,
                        "owner": null
                    },
                    "give_quantity_normalized": "0.00001000",
                    "escrow_quantity_normalized": "0.00001000"
                },
                "name": "dispenser"
            }
        }
    ```

### Compose Dividend [GET /v2/addresses/{address}/compose/dividend{?quantity_per_unit}{&asset}{&dividend_asset}{&encoding}{&validate}{&sat_per_vbyte}{&confirmation_target}{&exact_fee}{&max_fee}{&inputs_set}{&allow_unconfirmed_inputs}{&exclude_utxos}{&use_utxos_with_balances}{&exclude_utxos_with_balances}{&disable_utxo_locks}{&use_all_inputs_set}{&mutlisig_pubkey}{&change_address}{&more_outputs}{&pubkeys}{&verbose}{&return_only_data}{&fee_per_kb}{&fee_provided}{&unspent_tx_hash}{&dust_return_pubkey}{&return_psbt}{&regular_dust_size}{&multisig_dust_size}{&extended_tx_info}{&old_style_api}{&p2sh_pretx_txid}{&segwit}{&verbose}]

Composes a transaction to issue a dividend to holders of a given asset.

+ Parameters
    + address: `bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n` (str, required) - The address that will be issuing the dividend (must have the ownership of the asset which the dividend is being issued on)
    + quantity_per_unit: `1` (int, required) - The amount of dividend_asset rewarded (in satoshis, hence integer)
    + asset: `MYASSETA` (str, required) - The asset or subasset that the dividends are being rewarded on
    + dividend_asset: `XCP` (str, required) - The asset or subasset that the dividends are paid in
    + encoding (str, optional) - The encoding method to use
        + Default: `auto`
    + validate (bool, optional) - Validate the transaction
        + Default: `True`
    + sat_per_vbyte (float, optional) - The fee per vbyte in satoshis
        + Default: `None`
    + confirmation_target (int, optional) - The number of blocks to target for confirmation
        + Default: `3`
    + exact_fee: `0` (int, optional) - The exact fee to use in satoshis
        + Default: `None`
    + max_fee (int, optional) - The maximum fee to use in satoshis
        + Default: `None`
    + inputs_set (str, optional) - A comma-separated list of UTXOs (`<txid>:<vout>`) to use as inputs for the transaction being created. To speed up the composition you can also use the following format for utxos: `<txid>:<vout>:<value>:<script_pub_key>`.
        + Default: `None`
    + allow_unconfirmed_inputs (bool, optional) - Set to true to allow this transaction to utilize unconfirmed UTXOs as inputs
        + Default: `False`
    + exclude_utxos (str, optional) - A comma-separated list of UTXO txids to exclude when selecting UTXOs to use as inputs for the transaction being created
        + Default: `None`
    + use_utxos_with_balances (bool, optional) - Use UTXO with balances
        + Default: `False`
    + exclude_utxos_with_balances (bool, optional) - Exclude silently UTXO with balances instead of raising an exception. Important: the `exclude_utxos_with_balances` will not exclude unconfirmed `attach` and `utxomove`. You need to explicitly exclude them with the `exclude_utxos` parameter
        + Default: `False`
    + disable_utxo_locks (bool, optional) - By default, UTXOs utilized when creating a transaction are 'locked' for a few seconds, to prevent a case where rapidly generating create_ calls reuse UTXOs due to their spent status not being updated in bitcoind yet. Specify true for this parameter to disable this behavior, and not temporarily lock UTXOs
        + Default: `False`
    + use_all_inputs_set (bool, optional) - Use all UTXOs provide with `inputs_set` parameter
        + Default: `False`
    + mutlisig_pubkey (str, optional) - The reedem public key to use for multisig encoding, by default it is searched for the source address
        + Default: `None`
    + change_address (str, optional) - The address to send the change to
        + Default: `None`
    + more_outputs (str, optional) - Additional outputs to include in the transaction in the format `<value>:<address>` or `<value>:<script>`
        + Default: `None`
    + pubkeys (str, optional) - Pubkeys needed in case one or more destinations are multisig addresses
        + Default: `None`
    + verbose: `true` (bool, optional) - Include additional information in the result including data and psbt
        + Default: `False`
    + return_only_data (bool, optional) - Return only the data part of the transaction
        + Default: `False`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": {
                "rawtransaction": "0200000001fc836553a881646f6ff964bb064144e068187120580bacff4d3dbf8e9f62dfda0000000000ffffffff020000000000000000236a21f380e5e6e5fa48f121cedb578934178038be3cdf1b7085cc5588051781ebbff8071019062a01000000160014293ba4d53f14e5d071a5294a216269c455519f1100000000",
                "btc_in": 5000010000,
                "btc_out": 0,
                "btc_change": 5000010000,
                "btc_fee": 0,
                "data": "434e545250525459320000000000000001000000182b37176e0000000000000001",
                "lock_scripts": [
                    "0014293ba4d53f14e5d071a5294a216269c455519f11"
                ],
                "inputs_values": [
                    5000010000
                ],
                "signed_tx_estimated_size": {
                    "vsize": 154,
                    "adjusted_vsize": 154,
                    "sigops_count": 1
                },
                "psbt": "cHNidP8BAH4CAAAAAfyDZVOogWRvb/lkuwZBROBoGHEgWAus/009v46fYt/aAAAAAAD/////AgAAAAAAAAAAI2oh84Dl5uX6SPEhzttXiTQXgDi+PN8bcIXMVYgFF4Hrv/gHEBkGKgEAAAAWABQpO6TVPxTl0HGlKUohYmnEVVGfEQAAAAAAAAAA",
                "params": {
                    "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "quantity_per_unit": 1,
                    "asset": "MYASSETA",
                    "dividend_asset": "XCP",
                    "skip_validation": true,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "My super asset A",
                        "issuer": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                        "divisible": true,
                        "locked": false,
                        "owner": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n"
                    },
                    "dividend_asset_info": {
                        "asset_longname": null,
                        "description": "The Counterparty protocol native currency",
                        "issuer": null,
                        "divisible": true,
                        "locked": true,
                        "owner": null
                    },
                    "quantity_per_unit_normalized": "0.00000001"
                },
                "name": "dividend"
            }
        }
    ```

### Get Dividend Estimate Xcp Fee [GET /v2/addresses/{address}/compose/dividend/estimatexcpfees{?asset}{&verbose}]

Returns the estimated fee for issuing a dividend.

+ Parameters
    + address: `bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n` (str, required) - The address that will be issuing the dividend
    + asset: `MYASSETA` (str, required) - The asset or subasset that the dividends are being rewarded on
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": 60000
        }
    ```

### Compose Issuance [GET /v2/addresses/{address}/compose/issuance{?asset}{&quantity}{&transfer_destination}{&divisible}{&lock}{&reset}{&description}{&encoding}{&validate}{&sat_per_vbyte}{&confirmation_target}{&exact_fee}{&max_fee}{&inputs_set}{&allow_unconfirmed_inputs}{&exclude_utxos}{&use_utxos_with_balances}{&exclude_utxos_with_balances}{&disable_utxo_locks}{&use_all_inputs_set}{&mutlisig_pubkey}{&change_address}{&more_outputs}{&pubkeys}{&verbose}{&return_only_data}{&fee_per_kb}{&fee_provided}{&unspent_tx_hash}{&dust_return_pubkey}{&return_psbt}{&regular_dust_size}{&multisig_dust_size}{&extended_tx_info}{&old_style_api}{&p2sh_pretx_txid}{&segwit}{&verbose}]

Composes a transaction to Issue a new asset, issue more of an existing asset, lock an asset, reset existing supply, or transfer the ownership of an asset.

+ Parameters
    + address: `bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n` (str, required) - The address that will be issuing or transfering the asset
    + asset: `XCPTEST` (str, required) - The assets to issue or transfer. This can also be a subasset longname for new subasset issuances
    + quantity: `1000` (int, required) - The quantity of the asset to issue (set to 0 if transferring an asset) (in satoshis, hence integer)
    + transfer_destination: `bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n` (str, optional) - The address to receive the asset
        + Default: `None`
    + divisible (bool, optional) - Whether this asset is divisible or not (if a transfer, this value must match the value specified when the asset was originally issued)
        + Default: `True`
    + lock (bool, optional) - Whether this issuance should lock supply of this asset forever
        + Default: `False`
    + reset (bool, optional) - Wether this issuance should reset any existing supply
        + Default: `False`
    + description (str, optional) - A textual description for the asset
        + Default: `None`
    + encoding (str, optional) - The encoding method to use
        + Default: `auto`
    + validate (bool, optional) - Validate the transaction
        + Default: `True`
    + sat_per_vbyte (float, optional) - The fee per vbyte in satoshis
        + Default: `None`
    + confirmation_target (int, optional) - The number of blocks to target for confirmation
        + Default: `3`
    + exact_fee: `0` (int, optional) - The exact fee to use in satoshis
        + Default: `None`
    + max_fee (int, optional) - The maximum fee to use in satoshis
        + Default: `None`
    + inputs_set (str, optional) - A comma-separated list of UTXOs (`<txid>:<vout>`) to use as inputs for the transaction being created. To speed up the composition you can also use the following format for utxos: `<txid>:<vout>:<value>:<script_pub_key>`.
        + Default: `None`
    + allow_unconfirmed_inputs (bool, optional) - Set to true to allow this transaction to utilize unconfirmed UTXOs as inputs
        + Default: `False`
    + exclude_utxos (str, optional) - A comma-separated list of UTXO txids to exclude when selecting UTXOs to use as inputs for the transaction being created
        + Default: `None`
    + use_utxos_with_balances (bool, optional) - Use UTXO with balances
        + Default: `False`
    + exclude_utxos_with_balances (bool, optional) - Exclude silently UTXO with balances instead of raising an exception. Important: the `exclude_utxos_with_balances` will not exclude unconfirmed `attach` and `utxomove`. You need to explicitly exclude them with the `exclude_utxos` parameter
        + Default: `False`
    + disable_utxo_locks (bool, optional) - By default, UTXOs utilized when creating a transaction are 'locked' for a few seconds, to prevent a case where rapidly generating create_ calls reuse UTXOs due to their spent status not being updated in bitcoind yet. Specify true for this parameter to disable this behavior, and not temporarily lock UTXOs
        + Default: `False`
    + use_all_inputs_set (bool, optional) - Use all UTXOs provide with `inputs_set` parameter
        + Default: `False`
    + mutlisig_pubkey (str, optional) - The reedem public key to use for multisig encoding, by default it is searched for the source address
        + Default: `None`
    + change_address (str, optional) - The address to send the change to
        + Default: `None`
    + more_outputs (str, optional) - Additional outputs to include in the transaction in the format `<value>:<address>` or `<value>:<script>`
        + Default: `None`
    + pubkeys (str, optional) - Pubkeys needed in case one or more destinations are multisig addresses
        + Default: `None`
    + verbose: `true` (bool, optional) - Include additional information in the result including data and psbt
        + Default: `False`
    + return_only_data (bool, optional) - Return only the data part of the transaction
        + Default: `False`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": {
                "rawtransaction": "0200000001f2655da4d44c26826b5d9e60f8f8061722fe3d01b468ffb4c552e1c42cf42f2f0000000000ffffffff032202000000000000160014293ba4d53f14e5d071a5294a216269c455519f110000000000000000236a213c11d6a43fcd2f492ce4ea68704f2a7f8d3871359735da6a611eeef616b0fb0a16ee16062a01000000160014293ba4d53f14e5d071a5294a216269c455519f1100000000",
                "btc_in": 5000010000,
                "btc_out": 546,
                "btc_change": 5000009454,
                "btc_fee": 0,
                "data": "434e5452505254591600000001a956fbdf00000000000003e8010000c04e554c4c",
                "lock_scripts": [
                    "0014293ba4d53f14e5d071a5294a216269c455519f11"
                ],
                "inputs_values": [
                    5000010000
                ],
                "signed_tx_estimated_size": {
                    "vsize": 185,
                    "adjusted_vsize": 185,
                    "sigops_count": 1
                },
                "psbt": "cHNidP8BAJ0CAAAAAfJlXaTUTCaCa12eYPj4Bhci/j0BtGj/tMVS4cQs9C8vAAAAAAD/////AyICAAAAAAAAFgAUKTuk1T8U5dBxpSlKIWJpxFVRnxEAAAAAAAAAACNqITwR1qQ/zS9JLOTqaHBPKn+NOHE1lzXaamEe7vYWsPsKFu4WBioBAAAAFgAUKTuk1T8U5dBxpSlKIWJpxFVRnxEAAAAAAAAAAAA=",
                "params": {
                    "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "asset": "XCPTEST",
                    "quantity": 1000,
                    "transfer_destination": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "divisible": true,
                    "lock": false,
                    "reset": false,
                    "description": null,
                    "skip_validation": true,
                    "quantity_normalized": "0.00001000"
                },
                "name": "issuance"
            }
        }
    ```

### Compose MPMA [GET /v2/addresses/{address}/compose/mpma{?assets}{&destinations}{&quantities}{&memos}{&memos_are_hex}{&memo}{&memo_is_hex}{&encoding}{&validate}{&sat_per_vbyte}{&confirmation_target}{&exact_fee}{&max_fee}{&inputs_set}{&allow_unconfirmed_inputs}{&exclude_utxos}{&use_utxos_with_balances}{&exclude_utxos_with_balances}{&disable_utxo_locks}{&use_all_inputs_set}{&mutlisig_pubkey}{&change_address}{&more_outputs}{&pubkeys}{&verbose}{&return_only_data}{&fee_per_kb}{&fee_provided}{&unspent_tx_hash}{&dust_return_pubkey}{&return_psbt}{&regular_dust_size}{&multisig_dust_size}{&extended_tx_info}{&old_style_api}{&p2sh_pretx_txid}{&segwit}{&verbose}]

Composes a transaction to send multiple payments to multiple addresses.

+ Parameters
    + address: `bcrt1qdj4ckly3lwmjqld7pu60qu9myggm6pnd58ntz6` (str, required) - The address that will be sending (must have the necessary quantity of the specified asset)
    + assets: `XCP,FAIRMINTC` (str, required) - comma-separated list of assets to send
    + destinations: `bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n,bcrt1qdj4ckly3lwmjqld7pu60qu9myggm6pnd58ntz6` (str, required) - comma-separated list of addresses to send to
    + quantities: `1,2` (str, required) - comma-separated list of quantities to send (in satoshis, hence integer)
    + memos (list, optional) - One `memos` argument by send, if any
        + Default: `None`
    + memos_are_hex (bool, optional) - Whether the memos are in hexadecimal format
        + Default: `None`
    + memo (str, optional) - The Memo associated with this transaction, used by default for all sends if no `memos` are specified
        + Default: `None`
    + memo_is_hex (bool, optional) - Whether the memo field is a hexadecimal string
        + Default: `False`
    + encoding (str, optional) - The encoding method to use
        + Default: `auto`
    + validate (bool, optional) - Validate the transaction
        + Default: `True`
    + sat_per_vbyte (float, optional) - The fee per vbyte in satoshis
        + Default: `None`
    + confirmation_target (int, optional) - The number of blocks to target for confirmation
        + Default: `3`
    + exact_fee: `0` (int, optional) - The exact fee to use in satoshis
        + Default: `None`
    + max_fee (int, optional) - The maximum fee to use in satoshis
        + Default: `None`
    + inputs_set (str, optional) - A comma-separated list of UTXOs (`<txid>:<vout>`) to use as inputs for the transaction being created. To speed up the composition you can also use the following format for utxos: `<txid>:<vout>:<value>:<script_pub_key>`.
        + Default: `None`
    + allow_unconfirmed_inputs (bool, optional) - Set to true to allow this transaction to utilize unconfirmed UTXOs as inputs
        + Default: `False`
    + exclude_utxos (str, optional) - A comma-separated list of UTXO txids to exclude when selecting UTXOs to use as inputs for the transaction being created
        + Default: `None`
    + use_utxos_with_balances (bool, optional) - Use UTXO with balances
        + Default: `False`
    + exclude_utxos_with_balances (bool, optional) - Exclude silently UTXO with balances instead of raising an exception. Important: the `exclude_utxos_with_balances` will not exclude unconfirmed `attach` and `utxomove`. You need to explicitly exclude them with the `exclude_utxos` parameter
        + Default: `False`
    + disable_utxo_locks (bool, optional) - By default, UTXOs utilized when creating a transaction are 'locked' for a few seconds, to prevent a case where rapidly generating create_ calls reuse UTXOs due to their spent status not being updated in bitcoind yet. Specify true for this parameter to disable this behavior, and not temporarily lock UTXOs
        + Default: `False`
    + use_all_inputs_set (bool, optional) - Use all UTXOs provide with `inputs_set` parameter
        + Default: `False`
    + mutlisig_pubkey (str, optional) - The reedem public key to use for multisig encoding, by default it is searched for the source address
        + Default: `None`
    + change_address (str, optional) - The address to send the change to
        + Default: `None`
    + more_outputs (str, optional) - Additional outputs to include in the transaction in the format `<value>:<address>` or `<value>:<script>`
        + Default: `None`
    + pubkeys (str, optional) - Pubkeys needed in case one or more destinations are multisig addresses
        + Default: `None`
    + verbose: `true` (bool, optional) - Include additional information in the result including data and psbt
        + Default: `False`
    + return_only_data (bool, optional) - Return only the data part of the transaction
        + Default: `False`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": {
                "rawtransaction": "0200000001d75b5108354b6853294513edc981fbcfe1abb0069ecdaaf8e4e32f2c050e95830100000000ffffffff03e8030000000000006951210372ad16db4dd34370c8e20a564e0d2c0c3dda46383f36961cc75bbee3e968e3c32102c9b44e28ec1d8cab7eb8f60c5e0e2e8ead90956beab5e8c89e9d70a2d1547eb32102bd54ab1d8cc9637ed9c6ca863d02f0420f6b89ba40d93da176bd8e1d2217832253aee803000000000000695121026dad16db4dd34370c8f10a54ce2417a8e8c152ddef4733358d7edc8a2d3db2b0210356a5cf444796f03a850fd671e0011a7edd2bb77a57b385889e9d4c4c6ed0c7402102bd54ab1d8cc9637ed9c6ca863d02f0420f6b89ba40d93da176bd8e1d2217832253ae30cd0727010000001600146cab8b7c91fbb7207dbe0f34f070bb2211bd066d00000000",
                "btc_in": 4949792000,
                "btc_out": 2000,
                "btc_change": 4949790000,
                "btc_fee": 0,
                "data": "434e54525052545903000280293ba4d53f14e5d071a5294a216269c455519f11806cab8b7c91fbb7207dbe0f34f070bb2211bd066d4000003ceebf84b91000000000000000240000000000000004000000000000000100",
                "lock_scripts": [
                    "00146cab8b7c91fbb7207dbe0f34f070bb2211bd066d"
                ],
                "inputs_values": [
                    4949792000
                ],
                "signed_tx_estimated_size": {
                    "vsize": 338,
                    "adjusted_vsize": 805,
                    "sigops_count": 161
                },
                "psbt": "cHNidP8BAP02AQIAAAAB11tRCDVLaFMpRRPtyYH7z+GrsAaezar45OMvLAUOlYMBAAAAAP////8D6AMAAAAAAABpUSEDcq0W203TQ3DI4gpWTg0sDD3aRjg/NpYcx1u+4+lo48MhAsm0TijsHYyrfrj2DF4OLo6tkJVr6rXoyJ6dcKLRVH6zIQK9VKsdjMljftnGyoY9AvBCD2uJukDZPaF2vY4dIheDIlOu6AMAAAAAAABpUSECba0W203TQ3DI8QpUziQXqOjBUt3vRzM1jX7cii09srAhA1alz0RHlvA6hQ/WceABGn7dK7d6V7OFiJ6dTExu0MdAIQK9VKsdjMljftnGyoY9AvBCD2uJukDZPaF2vY4dIheDIlOuMM0HJwEAAAAWABRsq4t8kfu3IH2+DzTwcLsiEb0GbQAAAAAAAAAAAA==",
                "params": {
                    "source": "bcrt1qdj4ckly3lwmjqld7pu60qu9myggm6pnd58ntz6",
                    "asset_dest_quant_list": [
                        [
                            "XCP",
                            "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                            1
                        ],
                        [
                            "FAIRMINTC",
                            "bcrt1qdj4ckly3lwmjqld7pu60qu9myggm6pnd58ntz6",
                            2
                        ]
                    ],
                    "memo": null,
                    "memo_is_hex": false,
                    "skip_validation": true
                },
                "name": "mpma"
            }
        }
    ```

### Compose Order [GET /v2/addresses/{address}/compose/order{?give_asset}{&give_quantity}{&get_asset}{&get_quantity}{&expiration}{&fee_required}{&encoding}{&validate}{&sat_per_vbyte}{&confirmation_target}{&exact_fee}{&max_fee}{&inputs_set}{&allow_unconfirmed_inputs}{&exclude_utxos}{&use_utxos_with_balances}{&exclude_utxos_with_balances}{&disable_utxo_locks}{&use_all_inputs_set}{&mutlisig_pubkey}{&change_address}{&more_outputs}{&pubkeys}{&verbose}{&return_only_data}{&fee_per_kb}{&fee_provided}{&unspent_tx_hash}{&dust_return_pubkey}{&return_psbt}{&regular_dust_size}{&multisig_dust_size}{&extended_tx_info}{&old_style_api}{&p2sh_pretx_txid}{&segwit}{&verbose}]

Composes a transaction to place an order on the distributed exchange.

+ Parameters
    + address: `bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n` (str, required) - The address that will be issuing the order request (must have the necessary quantity of the specified asset to give)
    + give_asset: `XCP` (str, required) - The asset that will be given in the trade
    + give_quantity: `1000` (int, required) - The quantity of the asset that will be given (in satoshis, hence integer)
    + get_asset: `BURNER` (str, required) - The asset that will be received in the trade
    + get_quantity: `1000` (int, required) - The quantity of the asset that will be received (in satoshis, hence integer)
    + expiration: `100` (int, required) - The number of blocks for which the order should be valid
    + fee_required: `100` (int, required) - The miners’ fee required to be paid by orders for them to match this one; in BTC; required only if buying BTC (may be zero, though)
    + encoding (str, optional) - The encoding method to use
        + Default: `auto`
    + validate (bool, optional) - Validate the transaction
        + Default: `True`
    + sat_per_vbyte (float, optional) - The fee per vbyte in satoshis
        + Default: `None`
    + confirmation_target (int, optional) - The number of blocks to target for confirmation
        + Default: `3`
    + exact_fee: `0` (int, optional) - The exact fee to use in satoshis
        + Default: `None`
    + max_fee (int, optional) - The maximum fee to use in satoshis
        + Default: `None`
    + inputs_set (str, optional) - A comma-separated list of UTXOs (`<txid>:<vout>`) to use as inputs for the transaction being created. To speed up the composition you can also use the following format for utxos: `<txid>:<vout>:<value>:<script_pub_key>`.
        + Default: `None`
    + allow_unconfirmed_inputs (bool, optional) - Set to true to allow this transaction to utilize unconfirmed UTXOs as inputs
        + Default: `False`
    + exclude_utxos (str, optional) - A comma-separated list of UTXO txids to exclude when selecting UTXOs to use as inputs for the transaction being created
        + Default: `None`
    + use_utxos_with_balances (bool, optional) - Use UTXO with balances
        + Default: `False`
    + exclude_utxos_with_balances (bool, optional) - Exclude silently UTXO with balances instead of raising an exception. Important: the `exclude_utxos_with_balances` will not exclude unconfirmed `attach` and `utxomove`. You need to explicitly exclude them with the `exclude_utxos` parameter
        + Default: `False`
    + disable_utxo_locks (bool, optional) - By default, UTXOs utilized when creating a transaction are 'locked' for a few seconds, to prevent a case where rapidly generating create_ calls reuse UTXOs due to their spent status not being updated in bitcoind yet. Specify true for this parameter to disable this behavior, and not temporarily lock UTXOs
        + Default: `False`
    + use_all_inputs_set (bool, optional) - Use all UTXOs provide with `inputs_set` parameter
        + Default: `False`
    + mutlisig_pubkey (str, optional) - The reedem public key to use for multisig encoding, by default it is searched for the source address
        + Default: `None`
    + change_address (str, optional) - The address to send the change to
        + Default: `None`
    + more_outputs (str, optional) - Additional outputs to include in the transaction in the format `<value>:<address>` or `<value>:<script>`
        + Default: `None`
    + pubkeys (str, optional) - Pubkeys needed in case one or more destinations are multisig addresses
        + Default: `None`
    + verbose: `true` (bool, optional) - Include additional information in the result including data and psbt
        + Default: `False`
    + return_only_data (bool, optional) - Return only the data part of the transaction
        + Default: `False`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": {
                "rawtransaction": "0200000001f43a46d6ea3e7b4341f2bfb5afa55ff9dba1d63d2afae5151bae6209ec2f25260000000000ffffffff020000000000000000356a3393c6cb1fb029e096c06cd410da78851b93c88f39b8f3c689bf0d7c08c01ae6bf81e75e4e80a4fdf90e128d82328b96ee9d9c981019062a01000000160014293ba4d53f14e5d071a5294a216269c455519f1100000000",
                "btc_in": 5000010000,
                "btc_out": 0,
                "btc_change": 5000010000,
                "btc_fee": 0,
                "data": "434e5452505254590a000000000000000100000000000003e800000000014572d500000000000003e800640000000000000064",
                "lock_scripts": [
                    "0014293ba4d53f14e5d071a5294a216269c455519f11"
                ],
                "inputs_values": [
                    5000010000
                ],
                "signed_tx_estimated_size": {
                    "vsize": 172,
                    "adjusted_vsize": 172,
                    "sigops_count": 1
                },
                "psbt": "cHNidP8BAJACAAAAAfQ6RtbqPntDQfK/ta+lX/nbodY9KvrlFRuuYgnsLyUmAAAAAAD/////AgAAAAAAAAAANWozk8bLH7Ap4JbAbNQQ2niFG5PIjzm488aJvw18CMAa5r+B515OgKT9+Q4SjYIyi5bunZyYEBkGKgEAAAAWABQpO6TVPxTl0HGlKUohYmnEVVGfEQAAAAAAAAAA",
                "params": {
                    "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "give_asset": "XCP",
                    "give_quantity": 1000,
                    "get_asset": "BURNER",
                    "get_quantity": 1000,
                    "expiration": 100,
                    "fee_required": 100,
                    "skip_validation": true,
                    "give_asset_info": {
                        "asset_longname": null,
                        "description": "The Counterparty protocol native currency",
                        "issuer": null,
                        "divisible": true,
                        "locked": true,
                        "owner": null
                    },
                    "get_asset_info": {
                        "asset_longname": null,
                        "description": "let's burn it",
                        "issuer": "bcrt1qyyjgcgnjrxkznrdk8pc9dwp98twx5qesptttlg",
                        "divisible": true,
                        "locked": true,
                        "owner": "bcrt1qyyjgcgnjrxkznrdk8pc9dwp98twx5qesptttlg"
                    },
                    "give_quantity_normalized": "0.00001000",
                    "get_quantity_normalized": "0.00001000",
                    "fee_required_normalized": "0.00000100"
                },
                "name": "order"
            }
        }
    ```

### Compose Send [GET /v2/addresses/{address}/compose/send{?destination}{&asset}{&quantity}{&memo}{&memo_is_hex}{&use_enhanced_send}{&no_dispense}{&encoding}{&validate}{&sat_per_vbyte}{&confirmation_target}{&exact_fee}{&max_fee}{&inputs_set}{&allow_unconfirmed_inputs}{&exclude_utxos}{&use_utxos_with_balances}{&exclude_utxos_with_balances}{&disable_utxo_locks}{&use_all_inputs_set}{&mutlisig_pubkey}{&change_address}{&more_outputs}{&pubkeys}{&verbose}{&return_only_data}{&fee_per_kb}{&fee_provided}{&unspent_tx_hash}{&dust_return_pubkey}{&return_psbt}{&regular_dust_size}{&multisig_dust_size}{&extended_tx_info}{&old_style_api}{&p2sh_pretx_txid}{&segwit}{&verbose}]

Composes a transaction to send a quantity of an asset to another address.

+ Parameters
    + address: `bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n` (str, required) - The address that will be sending (must have the necessary quantity of the specified asset)
    + destination: `bcrt1qdj4ckly3lwmjqld7pu60qu9myggm6pnd58ntz6` (str, required) - The address that will be receiving the asset
    + asset: `XCP` (str, required) - The asset or subasset to send
    + quantity: `1000` (int, required) - The quantity of the asset to send (in satoshis, hence integer)
    + memo (str, optional) - The Memo associated with this transaction
        + Default: `None`
    + memo_is_hex (bool, optional) - Whether the memo field is a hexadecimal string
        + Default: `False`
    + use_enhanced_send (bool, optional) - If this is false, the construct a legacy transaction sending bitcoin dust
        + Default: `True`
    + no_dispense (bool, optional) - don't compose a dispense transaction even if the destination is a dispenser
        + Default: `False`
    + encoding (str, optional) - The encoding method to use
        + Default: `auto`
    + validate (bool, optional) - Validate the transaction
        + Default: `True`
    + sat_per_vbyte (float, optional) - The fee per vbyte in satoshis
        + Default: `None`
    + confirmation_target (int, optional) - The number of blocks to target for confirmation
        + Default: `3`
    + exact_fee: `0` (int, optional) - The exact fee to use in satoshis
        + Default: `None`
    + max_fee (int, optional) - The maximum fee to use in satoshis
        + Default: `None`
    + inputs_set (str, optional) - A comma-separated list of UTXOs (`<txid>:<vout>`) to use as inputs for the transaction being created. To speed up the composition you can also use the following format for utxos: `<txid>:<vout>:<value>:<script_pub_key>`.
        + Default: `None`
    + allow_unconfirmed_inputs (bool, optional) - Set to true to allow this transaction to utilize unconfirmed UTXOs as inputs
        + Default: `False`
    + exclude_utxos (str, optional) - A comma-separated list of UTXO txids to exclude when selecting UTXOs to use as inputs for the transaction being created
        + Default: `None`
    + use_utxos_with_balances (bool, optional) - Use UTXO with balances
        + Default: `False`
    + exclude_utxos_with_balances (bool, optional) - Exclude silently UTXO with balances instead of raising an exception. Important: the `exclude_utxos_with_balances` will not exclude unconfirmed `attach` and `utxomove`. You need to explicitly exclude them with the `exclude_utxos` parameter
        + Default: `False`
    + disable_utxo_locks (bool, optional) - By default, UTXOs utilized when creating a transaction are 'locked' for a few seconds, to prevent a case where rapidly generating create_ calls reuse UTXOs due to their spent status not being updated in bitcoind yet. Specify true for this parameter to disable this behavior, and not temporarily lock UTXOs
        + Default: `False`
    + use_all_inputs_set (bool, optional) - Use all UTXOs provide with `inputs_set` parameter
        + Default: `False`
    + mutlisig_pubkey (str, optional) - The reedem public key to use for multisig encoding, by default it is searched for the source address
        + Default: `None`
    + change_address (str, optional) - The address to send the change to
        + Default: `None`
    + more_outputs (str, optional) - Additional outputs to include in the transaction in the format `<value>:<address>` or `<value>:<script>`
        + Default: `None`
    + pubkeys (str, optional) - Pubkeys needed in case one or more destinations are multisig addresses
        + Default: `None`
    + verbose: `true` (bool, optional) - Include additional information in the result including data and psbt
        + Default: `False`
    + return_only_data (bool, optional) - Return only the data part of the transaction
        + Default: `False`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": {
                "rawtransaction": "0200000001fad40499f9084e5ed1f0214aa4483215deb3d18bae761ccd78616c1f88a4dd970000000000ffffffff020000000000000000306a2e2f8d24d3177bb83ea19124889359ef4c9f718f37a008170fab6eb843c6105ca0c9355cbe9ca03a19933248b089d31019062a01000000160014293ba4d53f14e5d071a5294a216269c455519f1100000000",
                "btc_in": 5000010000,
                "btc_out": 0,
                "btc_change": 5000010000,
                "btc_fee": 0,
                "data": "434e54525052545902000000000000000100000000000003e8806cab8b7c91fbb7207dbe0f34f070bb2211bd066d",
                "lock_scripts": [
                    "0014293ba4d53f14e5d071a5294a216269c455519f11"
                ],
                "inputs_values": [
                    5000010000
                ],
                "signed_tx_estimated_size": {
                    "vsize": 167,
                    "adjusted_vsize": 167,
                    "sigops_count": 1
                },
                "psbt": "cHNidP8BAIsCAAAAAfrUBJn5CE5e0fAhSqRIMhXes9GLrnYczXhhbB+IpN2XAAAAAAD/////AgAAAAAAAAAAMGouL40k0xd7uD6hkSSIk1nvTJ9xjzegCBcPq264Q8YQXKDJNVy+nKA6GZMySLCJ0xAZBioBAAAAFgAUKTuk1T8U5dBxpSlKIWJpxFVRnxEAAAAAAAAAAA==",
                "params": {
                    "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "destination": "bcrt1qdj4ckly3lwmjqld7pu60qu9myggm6pnd58ntz6",
                    "asset": "XCP",
                    "quantity": 1000,
                    "memo": null,
                    "memo_is_hex": false,
                    "use_enhanced_send": true,
                    "no_dispense": false,
                    "skip_validation": true,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "The Counterparty protocol native currency",
                        "issuer": null,
                        "divisible": true,
                        "locked": true,
                        "owner": null
                    },
                    "quantity_normalized": "0.00001000"
                },
                "name": "send"
            }
        }
    ```

### Compose Sweep [GET /v2/addresses/{address}/compose/sweep{?destination}{&flags}{&memo}{&encoding}{&validate}{&sat_per_vbyte}{&confirmation_target}{&exact_fee}{&max_fee}{&inputs_set}{&allow_unconfirmed_inputs}{&exclude_utxos}{&use_utxos_with_balances}{&exclude_utxos_with_balances}{&disable_utxo_locks}{&use_all_inputs_set}{&mutlisig_pubkey}{&change_address}{&more_outputs}{&pubkeys}{&verbose}{&return_only_data}{&fee_per_kb}{&fee_provided}{&unspent_tx_hash}{&dust_return_pubkey}{&return_psbt}{&regular_dust_size}{&multisig_dust_size}{&extended_tx_info}{&old_style_api}{&p2sh_pretx_txid}{&segwit}{&verbose}]

Composes a transaction to Sends all assets and/or transfer ownerships to a destination address.

+ Parameters
    + address: `bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n` (str, required) - The address that will be sending
    + destination: `bcrt1qdj4ckly3lwmjqld7pu60qu9myggm6pnd58ntz6` (str, required) - The address to receive the assets and/or ownerships
    + flags: `7` (int, required) - An OR mask of flags indicating how the sweep should be processed. Possible flags are: - FLAG_BALANCES: (integer) 1, specifies that all balances should be transferred. - FLAG_OWNERSHIP: (integer) 2, specifies that all ownerships should be transferred. - FLAG_BINARY_MEMO: (integer) 4, specifies that the memo is in binary/hex form.
    + memo: `FFFF` (str, required) - The Memo associated with this transaction in hex format
    + encoding (str, optional) - The encoding method to use
        + Default: `auto`
    + validate (bool, optional) - Validate the transaction
        + Default: `True`
    + sat_per_vbyte (float, optional) - The fee per vbyte in satoshis
        + Default: `None`
    + confirmation_target (int, optional) - The number of blocks to target for confirmation
        + Default: `3`
    + exact_fee: `0` (int, optional) - The exact fee to use in satoshis
        + Default: `None`
    + max_fee (int, optional) - The maximum fee to use in satoshis
        + Default: `None`
    + inputs_set (str, optional) - A comma-separated list of UTXOs (`<txid>:<vout>`) to use as inputs for the transaction being created. To speed up the composition you can also use the following format for utxos: `<txid>:<vout>:<value>:<script_pub_key>`.
        + Default: `None`
    + allow_unconfirmed_inputs (bool, optional) - Set to true to allow this transaction to utilize unconfirmed UTXOs as inputs
        + Default: `False`
    + exclude_utxos (str, optional) - A comma-separated list of UTXO txids to exclude when selecting UTXOs to use as inputs for the transaction being created
        + Default: `None`
    + use_utxos_with_balances (bool, optional) - Use UTXO with balances
        + Default: `False`
    + exclude_utxos_with_balances (bool, optional) - Exclude silently UTXO with balances instead of raising an exception. Important: the `exclude_utxos_with_balances` will not exclude unconfirmed `attach` and `utxomove`. You need to explicitly exclude them with the `exclude_utxos` parameter
        + Default: `False`
    + disable_utxo_locks (bool, optional) - By default, UTXOs utilized when creating a transaction are 'locked' for a few seconds, to prevent a case where rapidly generating create_ calls reuse UTXOs due to their spent status not being updated in bitcoind yet. Specify true for this parameter to disable this behavior, and not temporarily lock UTXOs
        + Default: `False`
    + use_all_inputs_set (bool, optional) - Use all UTXOs provide with `inputs_set` parameter
        + Default: `False`
    + mutlisig_pubkey (str, optional) - The reedem public key to use for multisig encoding, by default it is searched for the source address
        + Default: `None`
    + change_address (str, optional) - The address to send the change to
        + Default: `None`
    + more_outputs (str, optional) - Additional outputs to include in the transaction in the format `<value>:<address>` or `<value>:<script>`
        + Default: `None`
    + pubkeys (str, optional) - Pubkeys needed in case one or more destinations are multisig addresses
        + Default: `None`
    + verbose: `true` (bool, optional) - Include additional information in the result including data and psbt
        + Default: `False`
    + return_only_data (bool, optional) - Return only the data part of the transaction
        + Default: `False`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": {
                "rawtransaction": "0200000001ca0e88930da3f3946c719480710eaa1984517a1f99ccff8440551d858a8e30880000000000ffffffff020000000000000000236a21ba30ff137d8bde2f466b95eb3995fe66ec354e79f5eb5ab5ebbbd09b87a34292ab1019062a01000000160014293ba4d53f14e5d071a5294a216269c455519f1100000000",
                "btc_in": 5000010000,
                "btc_out": 0,
                "btc_change": 5000010000,
                "btc_fee": 0,
                "data": "434e54525052545904806cab8b7c91fbb7207dbe0f34f070bb2211bd066d07ffff",
                "lock_scripts": [
                    "0014293ba4d53f14e5d071a5294a216269c455519f11"
                ],
                "inputs_values": [
                    5000010000
                ],
                "signed_tx_estimated_size": {
                    "vsize": 154,
                    "adjusted_vsize": 154,
                    "sigops_count": 1
                },
                "psbt": "cHNidP8BAH4CAAAAAcoOiJMNo/OUbHGUgHEOqhmEUXofmcz/hEBVHYWKjjCIAAAAAAD/////AgAAAAAAAAAAI2ohujD/E32L3i9Ga5XrOZX+Zuw1Tnn161q167vQm4ejQpKrEBkGKgEAAAAWABQpO6TVPxTl0HGlKUohYmnEVVGfEQAAAAAAAAAA",
                "params": {
                    "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "destination": "bcrt1qdj4ckly3lwmjqld7pu60qu9myggm6pnd58ntz6",
                    "flags": 7,
                    "memo": "FFFF",
                    "skip_validation": true
                },
                "name": "sweep"
            }
        }
    ```

### Get Sweep Estimate Xcp Fee [GET /v2/addresses/{address}/compose/sweep/estimatexcpfees{?verbose}]

Returns the estimated fee for sweeping all assets and/or transfer ownerships to a destination address.

+ Parameters
    + address: `bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n` (str, required) - The address that will be sweeping
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": 5400000
        }
    ```

### Compose Dispense [GET /v2/addresses/{address}/compose/dispense{?dispenser}{&quantity}{&encoding}{&validate}{&sat_per_vbyte}{&confirmation_target}{&exact_fee}{&max_fee}{&inputs_set}{&allow_unconfirmed_inputs}{&exclude_utxos}{&use_utxos_with_balances}{&exclude_utxos_with_balances}{&disable_utxo_locks}{&use_all_inputs_set}{&mutlisig_pubkey}{&change_address}{&more_outputs}{&pubkeys}{&verbose}{&return_only_data}{&fee_per_kb}{&fee_provided}{&unspent_tx_hash}{&dust_return_pubkey}{&return_psbt}{&regular_dust_size}{&multisig_dust_size}{&extended_tx_info}{&old_style_api}{&p2sh_pretx_txid}{&segwit}{&verbose}]

Composes a transaction to send BTC to a dispenser.

+ Parameters
    + address: `bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n` (str, required) - The address that will be sending (must have the necessary quantity of BTC)
    + dispenser: `bcrt1qndrj8uy6the35p3gpjuuss7l29hwe0npylexmz` (str, required) - The dispenser that will be receiving the asset
    + quantity: `1000` (int, required) - The quantity of BTC to send (in satoshis, hence integer)
    + encoding (str, optional) - The encoding method to use
        + Default: `auto`
    + validate (bool, optional) - Validate the transaction
        + Default: `True`
    + sat_per_vbyte (float, optional) - The fee per vbyte in satoshis
        + Default: `None`
    + confirmation_target (int, optional) - The number of blocks to target for confirmation
        + Default: `3`
    + exact_fee: `0` (int, optional) - The exact fee to use in satoshis
        + Default: `None`
    + max_fee (int, optional) - The maximum fee to use in satoshis
        + Default: `None`
    + inputs_set (str, optional) - A comma-separated list of UTXOs (`<txid>:<vout>`) to use as inputs for the transaction being created. To speed up the composition you can also use the following format for utxos: `<txid>:<vout>:<value>:<script_pub_key>`.
        + Default: `None`
    + allow_unconfirmed_inputs (bool, optional) - Set to true to allow this transaction to utilize unconfirmed UTXOs as inputs
        + Default: `False`
    + exclude_utxos (str, optional) - A comma-separated list of UTXO txids to exclude when selecting UTXOs to use as inputs for the transaction being created
        + Default: `None`
    + use_utxos_with_balances (bool, optional) - Use UTXO with balances
        + Default: `False`
    + exclude_utxos_with_balances (bool, optional) - Exclude silently UTXO with balances instead of raising an exception. Important: the `exclude_utxos_with_balances` will not exclude unconfirmed `attach` and `utxomove`. You need to explicitly exclude them with the `exclude_utxos` parameter
        + Default: `False`
    + disable_utxo_locks (bool, optional) - By default, UTXOs utilized when creating a transaction are 'locked' for a few seconds, to prevent a case where rapidly generating create_ calls reuse UTXOs due to their spent status not being updated in bitcoind yet. Specify true for this parameter to disable this behavior, and not temporarily lock UTXOs
        + Default: `False`
    + use_all_inputs_set (bool, optional) - Use all UTXOs provide with `inputs_set` parameter
        + Default: `False`
    + mutlisig_pubkey (str, optional) - The reedem public key to use for multisig encoding, by default it is searched for the source address
        + Default: `None`
    + change_address (str, optional) - The address to send the change to
        + Default: `None`
    + more_outputs (str, optional) - Additional outputs to include in the transaction in the format `<value>:<address>` or `<value>:<script>`
        + Default: `None`
    + pubkeys (str, optional) - Pubkeys needed in case one or more destinations are multisig addresses
        + Default: `None`
    + verbose: `true` (bool, optional) - Include additional information in the result including data and psbt
        + Default: `False`
    + return_only_data (bool, optional) - Return only the data part of the transaction
        + Default: `False`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": {
                "rawtransaction": "0200000001dd2ec1b2742e700a8075dba95de672a42d2ead67de850543835cfe07a91b6ebb0000000000ffffffff03e8030000000000001600149b4723f09a5df31a06280cb9c843df516eecbe6100000000000000000c6a0aa280f5d722353d8860532815062a01000000160014293ba4d53f14e5d071a5294a216269c455519f1100000000",
                "btc_in": 5000010000,
                "btc_out": 1000,
                "btc_change": 5000009000,
                "btc_fee": 0,
                "data": "434e5452505254590d00",
                "lock_scripts": [
                    "0014293ba4d53f14e5d071a5294a216269c455519f11"
                ],
                "inputs_values": [
                    5000010000
                ],
                "signed_tx_estimated_size": {
                    "vsize": 162,
                    "adjusted_vsize": 162,
                    "sigops_count": 1
                },
                "psbt": "cHNidP8BAIYCAAAAAd0uwbJ0LnAKgHXbqV3mcqQtLq1n3oUFQ4Nc/gepG267AAAAAAD/////A+gDAAAAAAAAFgAUm0cj8Jpd8xoGKAy5yEPfUW7svmEAAAAAAAAAAAxqCqKA9dciNT2IYFMoFQYqAQAAABYAFCk7pNU/FOXQcaUpSiFiacRVUZ8RAAAAAAAAAAAA",
                "params": {
                    "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "destination": "bcrt1qndrj8uy6the35p3gpjuuss7l29hwe0npylexmz",
                    "quantity": 1000,
                    "skip_validation": true
                },
                "name": "dispense"
            }
        }
    ```

### Compose Fairminter [GET /v2/addresses/{address}/compose/fairminter{?asset}{&asset_parent}{&price}{&quantity_by_price}{&max_mint_per_tx}{&hard_cap}{&premint_quantity}{&start_block}{&end_block}{&soft_cap}{&soft_cap_deadline_block}{&minted_asset_commission}{&burn_payment}{&lock_description}{&lock_quantity}{&divisible}{&description}{&encoding}{&validate}{&sat_per_vbyte}{&confirmation_target}{&exact_fee}{&max_fee}{&inputs_set}{&allow_unconfirmed_inputs}{&exclude_utxos}{&use_utxos_with_balances}{&exclude_utxos_with_balances}{&disable_utxo_locks}{&use_all_inputs_set}{&mutlisig_pubkey}{&change_address}{&more_outputs}{&pubkeys}{&verbose}{&return_only_data}{&fee_per_kb}{&fee_provided}{&unspent_tx_hash}{&dust_return_pubkey}{&return_psbt}{&regular_dust_size}{&multisig_dust_size}{&extended_tx_info}{&old_style_api}{&p2sh_pretx_txid}{&segwit}{&verbose}]

Composes a transaction to issue a new asset using the FairMinter protocol.

+ Parameters
    + address: `bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n` (str, required) - The address that will be issuing the asset
    + asset: `MYASSET` (str, required) - The asset to issue
    + asset_parent (str, optional) - The parent asset of the asset to issue
        + Default: ``
    + price: `10` (int, optional) - The price in XCP of the asset to issue
        + Default: `0`
    + quantity_by_price (int, optional) - The quantity of asset to mint per `price` paid
        + Default: `1`
    + max_mint_per_tx (int, optional) - Amount minted if price is equal to 0; otherwise, maximum amount of asset that can be minted in a single transaction; if 0, there is no limit
        + Default: `0`
    + hard_cap (int, optional) - The maximum amount of asset that can be minted; if 0 there is no limit
        + Default: `0`
    + premint_quantity (int, optional) - Amount of asset to be minted when the sale starts, if 0, no premint; preminted assets are sent to the source of the transaction
        + Default: `0`
    + start_block (int, optional) - The block at which the sale starts
        + Default: `0`
    + end_block (int, optional) - The block at which the sale ends
        + Default: `0`
    + soft_cap (int, optional) - Minimum amount of asset to be minted, if None, no minimum; if the soft cap is not reached by the soft_cap_deadline_block, the sale is canceled, asset is revoked from all minters and all payments are refunded
        + Default: `0`
    + soft_cap_deadline_block (int, optional) - The block at which the soft cap must be reached
        + Default: `0`
    + minted_asset_commission (float, optional) - Commission to be paid in minted asset, a fraction of 1 (i.e., 0.05 is five percent); the commission is deducted from the asset received by the minter and sent to the Fair Minter owner
        + Default: `0.0`
    + burn_payment (bool, optional) - If True, the payment asset is burned, otherwise it is sent to the source
        + Default: `False`
    + lock_description (bool, optional) - If True, the description of the asset is locked
        + Default: `False`
    + lock_quantity (bool, optional) - If True, the quantity of the asset cannot be changed after the minting
        + Default: `False`
    + divisible (bool, optional) - If True, the asset is divisible
        + Default: `True`
    + description (str, optional) - The description of the asset. Overrides the current description if the asset already exists.
        + Default: ``
    + encoding (str, optional) - The encoding method to use
        + Default: `auto`
    + validate (bool, optional) - Validate the transaction
        + Default: `True`
    + sat_per_vbyte (float, optional) - The fee per vbyte in satoshis
        + Default: `None`
    + confirmation_target (int, optional) - The number of blocks to target for confirmation
        + Default: `3`
    + exact_fee: `0` (int, optional) - The exact fee to use in satoshis
        + Default: `None`
    + max_fee (int, optional) - The maximum fee to use in satoshis
        + Default: `None`
    + inputs_set (str, optional) - A comma-separated list of UTXOs (`<txid>:<vout>`) to use as inputs for the transaction being created. To speed up the composition you can also use the following format for utxos: `<txid>:<vout>:<value>:<script_pub_key>`.
        + Default: `None`
    + allow_unconfirmed_inputs (bool, optional) - Set to true to allow this transaction to utilize unconfirmed UTXOs as inputs
        + Default: `False`
    + exclude_utxos (str, optional) - A comma-separated list of UTXO txids to exclude when selecting UTXOs to use as inputs for the transaction being created
        + Default: `None`
    + use_utxos_with_balances (bool, optional) - Use UTXO with balances
        + Default: `False`
    + exclude_utxos_with_balances (bool, optional) - Exclude silently UTXO with balances instead of raising an exception. Important: the `exclude_utxos_with_balances` will not exclude unconfirmed `attach` and `utxomove`. You need to explicitly exclude them with the `exclude_utxos` parameter
        + Default: `False`
    + disable_utxo_locks (bool, optional) - By default, UTXOs utilized when creating a transaction are 'locked' for a few seconds, to prevent a case where rapidly generating create_ calls reuse UTXOs due to their spent status not being updated in bitcoind yet. Specify true for this parameter to disable this behavior, and not temporarily lock UTXOs
        + Default: `False`
    + use_all_inputs_set (bool, optional) - Use all UTXOs provide with `inputs_set` parameter
        + Default: `False`
    + mutlisig_pubkey (str, optional) - The reedem public key to use for multisig encoding, by default it is searched for the source address
        + Default: `None`
    + change_address (str, optional) - The address to send the change to
        + Default: `None`
    + more_outputs (str, optional) - Additional outputs to include in the transaction in the format `<value>:<address>` or `<value>:<script>`
        + Default: `None`
    + pubkeys (str, optional) - Pubkeys needed in case one or more destinations are multisig addresses
        + Default: `None`
    + verbose: `true` (bool, optional) - Include additional information in the result including data and psbt
        + Default: `False`
    + return_only_data (bool, optional) - Return only the data part of the transaction
        + Default: `False`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": {
                "rawtransaction": "0200000001f1138baaa476033c91bab066c2c62ac9fa058ddabdda3a8a9ed242538078105c0000000000ffffffff020000000000000000316a2f6fe81293f7ec0650c9f4e524fc16a8f0d2621d286e3dfda07fa17029f1da93e1f37fec4a28d51d813f4e2b442f127d1019062a01000000160014293ba4d53f14e5d071a5294a216269c455519f1100000000",
                "btc_in": 5000010000,
                "btc_out": 0,
                "btc_change": 5000010000,
                "btc_fee": 0,
                "data": "434e5452505254595a4d5941535345547c7c31307c317c307c307c307c307c307c307c307c307c307c307c307c317c",
                "lock_scripts": [
                    "0014293ba4d53f14e5d071a5294a216269c455519f11"
                ],
                "inputs_values": [
                    5000010000
                ],
                "signed_tx_estimated_size": {
                    "vsize": 168,
                    "adjusted_vsize": 168,
                    "sigops_count": 1
                },
                "psbt": "cHNidP8BAIwCAAAAAfETi6qkdgM8kbqwZsLGKsn6BY3avdo6ip7SQlOAeBBcAAAAAAD/////AgAAAAAAAAAAMWovb+gSk/fsBlDJ9OUk/Bao8NJiHShuPf2gf6FwKfHak+Hzf+xKKNUdgT9OK0QvEn0QGQYqAQAAABYAFCk7pNU/FOXQcaUpSiFiacRVUZ8RAAAAAAAAAAA=",
                "params": {
                    "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "asset": "MYASSET",
                    "asset_parent": "",
                    "price": 10,
                    "quantity_by_price": 1,
                    "max_mint_per_tx": 0,
                    "hard_cap": 0,
                    "premint_quantity": 0,
                    "start_block": 0,
                    "end_block": 0,
                    "soft_cap": 0,
                    "soft_cap_deadline_block": 0,
                    "minted_asset_commission": 0.0,
                    "burn_payment": false,
                    "lock_description": false,
                    "lock_quantity": false,
                    "divisible": true,
                    "description": "",
                    "skip_validation": true,
                    "price_normalized": "10.0000000000000000",
                    "hard_cap_normalized": "0.00000000",
                    "soft_cap_normalized": "0.00000000",
                    "quantity_by_price_normalized": "0.00000001",
                    "max_mint_per_tx_normalized": "0.00000000",
                    "premint_quantity_normalized": "0.00000000"
                },
                "name": "fairminter"
            }
        }
    ```

### Compose Fairmint [GET /v2/addresses/{address}/compose/fairmint{?asset}{&quantity}{&encoding}{&validate}{&sat_per_vbyte}{&confirmation_target}{&exact_fee}{&max_fee}{&inputs_set}{&allow_unconfirmed_inputs}{&exclude_utxos}{&use_utxos_with_balances}{&exclude_utxos_with_balances}{&disable_utxo_locks}{&use_all_inputs_set}{&mutlisig_pubkey}{&change_address}{&more_outputs}{&pubkeys}{&verbose}{&return_only_data}{&fee_per_kb}{&fee_provided}{&unspent_tx_hash}{&dust_return_pubkey}{&return_psbt}{&regular_dust_size}{&multisig_dust_size}{&extended_tx_info}{&old_style_api}{&p2sh_pretx_txid}{&segwit}{&verbose}]

Composes a transaction to mint a quantity of an asset using the FairMinter protocol.

+ Parameters
    + address: `bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n` (str, required) - The address that will be minting the asset
    + asset: `OPENFAIR` (str, required) - The asset to mint
    + quantity (int, optional) - The quantity of the asset to mint (in satoshis, hence integer)
        + Default: `0`
    + encoding (str, optional) - The encoding method to use
        + Default: `auto`
    + validate (bool, optional) - Validate the transaction
        + Default: `True`
    + sat_per_vbyte (float, optional) - The fee per vbyte in satoshis
        + Default: `None`
    + confirmation_target (int, optional) - The number of blocks to target for confirmation
        + Default: `3`
    + exact_fee: `0` (int, optional) - The exact fee to use in satoshis
        + Default: `None`
    + max_fee (int, optional) - The maximum fee to use in satoshis
        + Default: `None`
    + inputs_set (str, optional) - A comma-separated list of UTXOs (`<txid>:<vout>`) to use as inputs for the transaction being created. To speed up the composition you can also use the following format for utxos: `<txid>:<vout>:<value>:<script_pub_key>`.
        + Default: `None`
    + allow_unconfirmed_inputs (bool, optional) - Set to true to allow this transaction to utilize unconfirmed UTXOs as inputs
        + Default: `False`
    + exclude_utxos (str, optional) - A comma-separated list of UTXO txids to exclude when selecting UTXOs to use as inputs for the transaction being created
        + Default: `None`
    + use_utxos_with_balances (bool, optional) - Use UTXO with balances
        + Default: `False`
    + exclude_utxos_with_balances (bool, optional) - Exclude silently UTXO with balances instead of raising an exception. Important: the `exclude_utxos_with_balances` will not exclude unconfirmed `attach` and `utxomove`. You need to explicitly exclude them with the `exclude_utxos` parameter
        + Default: `False`
    + disable_utxo_locks (bool, optional) - By default, UTXOs utilized when creating a transaction are 'locked' for a few seconds, to prevent a case where rapidly generating create_ calls reuse UTXOs due to their spent status not being updated in bitcoind yet. Specify true for this parameter to disable this behavior, and not temporarily lock UTXOs
        + Default: `False`
    + use_all_inputs_set (bool, optional) - Use all UTXOs provide with `inputs_set` parameter
        + Default: `False`
    + mutlisig_pubkey (str, optional) - The reedem public key to use for multisig encoding, by default it is searched for the source address
        + Default: `None`
    + change_address (str, optional) - The address to send the change to
        + Default: `None`
    + more_outputs (str, optional) - Additional outputs to include in the transaction in the format `<value>:<address>` or `<value>:<script>`
        + Default: `None`
    + pubkeys (str, optional) - Pubkeys needed in case one or more destinations are multisig addresses
        + Default: `None`
    + verbose: `true` (bool, optional) - Include additional information in the result including data and psbt
        + Default: `False`
    + return_only_data (bool, optional) - Return only the data part of the transaction
        + Default: `False`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": {
                "rawtransaction": "02000000012e3a57a1d195bfca9062a6b195a85d192e7d20f2174baf8958a21e5fc1d318630000000000ffffffff020000000000000000156a134ef1e411ad3b5e4c96df6899a9ac9b5ee586721019062a01000000160014293ba4d53f14e5d071a5294a216269c455519f1100000000",
                "btc_in": 5000010000,
                "btc_out": 0,
                "btc_change": 5000010000,
                "btc_fee": 0,
                "data": "434e5452505254595b4f50454e464149527c30",
                "lock_scripts": [
                    "0014293ba4d53f14e5d071a5294a216269c455519f11"
                ],
                "inputs_values": [
                    5000010000
                ],
                "signed_tx_estimated_size": {
                    "vsize": 140,
                    "adjusted_vsize": 140,
                    "sigops_count": 1
                },
                "psbt": "cHNidP8BAHACAAAAAS46V6HRlb/KkGKmsZWoXRkufSDyF0uviViiHl/B0xhjAAAAAAD/////AgAAAAAAAAAAFWoTTvHkEa07XkyW32iZqaybXuWGchAZBioBAAAAFgAUKTuk1T8U5dBxpSlKIWJpxFVRnxEAAAAAAAAAAA==",
                "params": {
                    "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "asset": "OPENFAIR",
                    "quantity": 0,
                    "skip_validation": true,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "",
                        "issuer": "bcrt1qquwz9xkh3dv34l49v32lk3kc283utd58ung2cn",
                        "divisible": true,
                        "locked": false,
                        "owner": "bcrt1qquwz9xkh3dv34l49v32lk3kc283utd58ung2cn"
                    },
                    "quantity_normalized": "0.00000000"
                },
                "name": "fairmint"
            }
        }
    ```

### Compose Attach [GET /v2/addresses/{address}/compose/attach{?asset}{&quantity}{&utxo_value}{&destination_vout}{&encoding}{&validate}{&sat_per_vbyte}{&confirmation_target}{&exact_fee}{&max_fee}{&inputs_set}{&allow_unconfirmed_inputs}{&exclude_utxos}{&use_utxos_with_balances}{&exclude_utxos_with_balances}{&disable_utxo_locks}{&use_all_inputs_set}{&mutlisig_pubkey}{&change_address}{&more_outputs}{&pubkeys}{&verbose}{&return_only_data}{&fee_per_kb}{&fee_provided}{&unspent_tx_hash}{&dust_return_pubkey}{&return_psbt}{&regular_dust_size}{&multisig_dust_size}{&extended_tx_info}{&old_style_api}{&p2sh_pretx_txid}{&segwit}{&verbose}]

Composes a transaction to attach assets from an address to UTXO.
Warning: after attaching assets to a UTXO, remember to use the `exclude_utxos` parameter to exclude it from subsequent transactions. This is done automatically by the Composer but only once the attach is confirmed.

+ Parameters
    + address: `bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n` (str, required) - The address from which the assets are attached
    + asset: `XCP` (str, required) - The asset or subasset to attach
    + quantity: `1000` (int, required) - The quantity of the asset to attach (in satoshis, hence integer)
    + utxo_value (int, optional) - The value of the UTXO to attach the assets to (in satoshis, hence integer)
        + Default: `None`
    + destination_vout (str, optional) - The vout of the destination output
        + Default: `None`
    + encoding (str, optional) - The encoding method to use
        + Default: `auto`
    + validate (bool, optional) - Validate the transaction
        + Default: `True`
    + sat_per_vbyte (float, optional) - The fee per vbyte in satoshis
        + Default: `None`
    + confirmation_target (int, optional) - The number of blocks to target for confirmation
        + Default: `3`
    + exact_fee: `0` (int, optional) - The exact fee to use in satoshis
        + Default: `None`
    + max_fee (int, optional) - The maximum fee to use in satoshis
        + Default: `None`
    + inputs_set (str, optional) - A comma-separated list of UTXOs (`<txid>:<vout>`) to use as inputs for the transaction being created. To speed up the composition you can also use the following format for utxos: `<txid>:<vout>:<value>:<script_pub_key>`.
        + Default: `None`
    + allow_unconfirmed_inputs (bool, optional) - Set to true to allow this transaction to utilize unconfirmed UTXOs as inputs
        + Default: `False`
    + exclude_utxos (str, optional) - A comma-separated list of UTXO txids to exclude when selecting UTXOs to use as inputs for the transaction being created
        + Default: `None`
    + use_utxos_with_balances (bool, optional) - Use UTXO with balances
        + Default: `False`
    + exclude_utxos_with_balances (bool, optional) - Exclude silently UTXO with balances instead of raising an exception. Important: the `exclude_utxos_with_balances` will not exclude unconfirmed `attach` and `utxomove`. You need to explicitly exclude them with the `exclude_utxos` parameter
        + Default: `False`
    + disable_utxo_locks (bool, optional) - By default, UTXOs utilized when creating a transaction are 'locked' for a few seconds, to prevent a case where rapidly generating create_ calls reuse UTXOs due to their spent status not being updated in bitcoind yet. Specify true for this parameter to disable this behavior, and not temporarily lock UTXOs
        + Default: `False`
    + use_all_inputs_set (bool, optional) - Use all UTXOs provide with `inputs_set` parameter
        + Default: `False`
    + mutlisig_pubkey (str, optional) - The reedem public key to use for multisig encoding, by default it is searched for the source address
        + Default: `None`
    + change_address (str, optional) - The address to send the change to
        + Default: `None`
    + more_outputs (str, optional) - Additional outputs to include in the transaction in the format `<value>:<address>` or `<value>:<script>`
        + Default: `None`
    + pubkeys (str, optional) - Pubkeys needed in case one or more destinations are multisig addresses
        + Default: `None`
    + verbose: `true` (bool, optional) - Include additional information in the result including data and psbt
        + Default: `False`
    + return_only_data (bool, optional) - Return only the data part of the transaction
        + Default: `False`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": {
                "rawtransaction": "0200000001c6e06fb9eca0e4ec0d2de5f173e65096187084c37e8a46ac901da16462039d200000000000ffffffff032202000000000000160014293ba4d53f14e5d071a5294a216269c455519f110000000000000000146a12767a547abf2c5ac8ddf53e20f6e94f9140e2ee16062a01000000160014293ba4d53f14e5d071a5294a216269c455519f1100000000",
                "btc_in": 5000010000,
                "btc_out": 546,
                "btc_change": 5000009454,
                "btc_fee": 0,
                "data": "434e545250525459655843507c313030307c",
                "lock_scripts": [
                    "0014293ba4d53f14e5d071a5294a216269c455519f11"
                ],
                "inputs_values": [
                    5000010000
                ],
                "signed_tx_estimated_size": {
                    "vsize": 170,
                    "adjusted_vsize": 170,
                    "sigops_count": 1
                },
                "psbt": "cHNidP8BAI4CAAAAAcbgb7nsoOTsDS3l8XPmUJYYcITDfopGrJAdoWRiA50gAAAAAAD/////AyICAAAAAAAAFgAUKTuk1T8U5dBxpSlKIWJpxFVRnxEAAAAAAAAAABRqEnZ6VHq/LFrI3fU+IPbpT5FA4u4WBioBAAAAFgAUKTuk1T8U5dBxpSlKIWJpxFVRnxEAAAAAAAAAAAA=",
                "params": {
                    "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "asset": "XCP",
                    "quantity": 1000,
                    "utxo_value": null,
                    "destination_vout": null,
                    "skip_validation": true,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "The Counterparty protocol native currency",
                        "issuer": null,
                        "divisible": true,
                        "locked": true,
                        "owner": null
                    },
                    "quantity_normalized": "0.00001000"
                },
                "name": "attach"
            }
        }
    ```

### Get Attach Estimate Xcp Fee [GET /v2/addresses/{address}/compose/attach/estimatexcpfees{?verbose}]

Returns the estimated fee for attaching assets to a UTXO.

+ Parameters
    + address: `bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n` (str, optional) - The address from which the assets are attached
        + Default: `None`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": 0
        }
    ```

### Compose Detach [GET /v2/utxos/{utxo}/compose/detach{?destination}{&encoding}{&validate}{&sat_per_vbyte}{&confirmation_target}{&exact_fee}{&max_fee}{&inputs_set}{&allow_unconfirmed_inputs}{&exclude_utxos}{&use_utxos_with_balances}{&exclude_utxos_with_balances}{&disable_utxo_locks}{&use_all_inputs_set}{&mutlisig_pubkey}{&change_address}{&more_outputs}{&pubkeys}{&verbose}{&return_only_data}{&fee_per_kb}{&fee_provided}{&unspent_tx_hash}{&dust_return_pubkey}{&return_psbt}{&regular_dust_size}{&multisig_dust_size}{&extended_tx_info}{&old_style_api}{&p2sh_pretx_txid}{&segwit}{&verbose}]

Composes a transaction to detach assets from UTXO to an address.

+ Parameters
    + utxo: `ecaff771fec807f55a71fea24818445ff090e7cc16d90b90c478a2b97511edcc:0` (str, required) - The utxo from which the assets are detached
    + destination: `bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n` (str, optional) - The address to detach the assets to, if not provided the addresse corresponding to the utxo is used
        + Default: `None`
    + encoding (str, optional) - The encoding method to use
        + Default: `auto`
    + validate (bool, optional) - Validate the transaction
        + Default: `True`
    + sat_per_vbyte (float, optional) - The fee per vbyte in satoshis
        + Default: `None`
    + confirmation_target (int, optional) - The number of blocks to target for confirmation
        + Default: `3`
    + exact_fee: `0` (int, optional) - The exact fee to use in satoshis
        + Default: `None`
    + max_fee (int, optional) - The maximum fee to use in satoshis
        + Default: `None`
    + inputs_set (str, optional) - A comma-separated list of UTXOs (`<txid>:<vout>`) to use as inputs for the transaction being created. To speed up the composition you can also use the following format for utxos: `<txid>:<vout>:<value>:<script_pub_key>`.
        + Default: `None`
    + allow_unconfirmed_inputs (bool, optional) - Set to true to allow this transaction to utilize unconfirmed UTXOs as inputs
        + Default: `False`
    + exclude_utxos (str, optional) - A comma-separated list of UTXO txids to exclude when selecting UTXOs to use as inputs for the transaction being created
        + Default: `None`
    + use_utxos_with_balances (bool, optional) - Use UTXO with balances
        + Default: `False`
    + exclude_utxos_with_balances (bool, optional) - Exclude silently UTXO with balances instead of raising an exception. Important: the `exclude_utxos_with_balances` will not exclude unconfirmed `attach` and `utxomove`. You need to explicitly exclude them with the `exclude_utxos` parameter
        + Default: `False`
    + disable_utxo_locks (bool, optional) - By default, UTXOs utilized when creating a transaction are 'locked' for a few seconds, to prevent a case where rapidly generating create_ calls reuse UTXOs due to their spent status not being updated in bitcoind yet. Specify true for this parameter to disable this behavior, and not temporarily lock UTXOs
        + Default: `False`
    + use_all_inputs_set (bool, optional) - Use all UTXOs provide with `inputs_set` parameter
        + Default: `False`
    + mutlisig_pubkey (str, optional) - The reedem public key to use for multisig encoding, by default it is searched for the source address
        + Default: `None`
    + change_address (str, optional) - The address to send the change to
        + Default: `None`
    + more_outputs (str, optional) - Additional outputs to include in the transaction in the format `<value>:<address>` or `<value>:<script>`
        + Default: `None`
    + pubkeys (str, optional) - Pubkeys needed in case one or more destinations are multisig addresses
        + Default: `None`
    + verbose: `true` (bool, optional) - Include additional information in the result including data and psbt
        + Default: `False`
    + return_only_data (bool, optional) - Return only the data part of the transaction
        + Default: `False`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": {
                "rawtransaction": "0200000001cced1175b9a278c4900bd916cce790f05f441848a2fe715af507c8fe71f7afec0000000000ffffffff020000000000000000376a35a74a75a4c8320b17244a902c6a923b9dffbba8f8f065798908ee90f81fe5e1e632bd1093f8d74feabf1f5a905a1ff8f48656133007102700000000000016001481c170005ee43cea596f3b81b36c10f9efa95a7f00000000",
                "btc_in": 10000,
                "btc_out": 0,
                "btc_change": 10000,
                "btc_fee": 0,
                "data": "434e54525052545966626372743171397961366634666c7a6e6a61717564393939397a7a636e66633332347238633363716d6c326e",
                "lock_scripts": [
                    "001481c170005ee43cea596f3b81b36c10f9efa95a7f"
                ],
                "inputs_values": [
                    10000
                ],
                "signed_tx_estimated_size": {
                    "vsize": 174,
                    "adjusted_vsize": 174,
                    "sigops_count": 1
                },
                "psbt": "cHNidP8BAJICAAAAAcztEXW5onjEkAvZFsznkPBfRBhIov5xWvUHyP5x96/sAAAAAAD/////AgAAAAAAAAAAN2o1p0p1pMgyCxckSpAsapI7nf+7qPjwZXmJCO6Q+B/l4eYyvRCT+NdP6r8fWpBaH/j0hlYTMAcQJwAAAAAAABYAFIHBcABe5DzqWW87gbNsEPnvqVp/AAAAAAAAAAA=",
                "params": {
                    "source": "ecaff771fec807f55a71fea24818445ff090e7cc16d90b90c478a2b97511edcc:0",
                    "destination": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "skip_validation": true
                },
                "name": "detach"
            }
        }
    ```

### Compose Movetoutxo [GET /v2/utxos/{utxo}/compose/movetoutxo{?destination}{&utxo_value}{&encoding}{&validate}{&sat_per_vbyte}{&confirmation_target}{&exact_fee}{&max_fee}{&inputs_set}{&allow_unconfirmed_inputs}{&exclude_utxos}{&use_utxos_with_balances}{&exclude_utxos_with_balances}{&disable_utxo_locks}{&use_all_inputs_set}{&mutlisig_pubkey}{&change_address}{&more_outputs}{&pubkeys}{&verbose}{&return_only_data}{&fee_per_kb}{&fee_provided}{&unspent_tx_hash}{&dust_return_pubkey}{&return_psbt}{&regular_dust_size}{&multisig_dust_size}{&extended_tx_info}{&old_style_api}{&p2sh_pretx_txid}{&segwit}{&verbose}]

Composes a transaction like a send but for moving from one UTXO to another, with the destination is specified as an address.

+ Parameters
    + utxo: `ecaff771fec807f55a71fea24818445ff090e7cc16d90b90c478a2b97511edcc:0` (str, required) - The utxo from which the assets are moved
    + destination: `bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n` (str, required) - the address for which the destination utxo will be created
    + utxo_value (int, optional) - The value of the UTXO to move the assets from (in satoshis, hence integer)
        + Default: `None`
    + encoding (str, optional) - The encoding method to use
        + Default: `auto`
    + validate (bool, optional) - Validate the transaction
        + Default: `True`
    + sat_per_vbyte (float, optional) - The fee per vbyte in satoshis
        + Default: `None`
    + confirmation_target (int, optional) - The number of blocks to target for confirmation
        + Default: `3`
    + exact_fee: `0` (int, optional) - The exact fee to use in satoshis
        + Default: `None`
    + max_fee (int, optional) - The maximum fee to use in satoshis
        + Default: `None`
    + inputs_set (str, optional) - A comma-separated list of UTXOs (`<txid>:<vout>`) to use as inputs for the transaction being created. To speed up the composition you can also use the following format for utxos: `<txid>:<vout>:<value>:<script_pub_key>`.
        + Default: `None`
    + allow_unconfirmed_inputs (bool, optional) - Set to true to allow this transaction to utilize unconfirmed UTXOs as inputs
        + Default: `False`
    + exclude_utxos (str, optional) - A comma-separated list of UTXO txids to exclude when selecting UTXOs to use as inputs for the transaction being created
        + Default: `None`
    + use_utxos_with_balances (bool, optional) - Use UTXO with balances
        + Default: `False`
    + exclude_utxos_with_balances (bool, optional) - Exclude silently UTXO with balances instead of raising an exception. Important: the `exclude_utxos_with_balances` will not exclude unconfirmed `attach` and `utxomove`. You need to explicitly exclude them with the `exclude_utxos` parameter
        + Default: `False`
    + disable_utxo_locks (bool, optional) - By default, UTXOs utilized when creating a transaction are 'locked' for a few seconds, to prevent a case where rapidly generating create_ calls reuse UTXOs due to their spent status not being updated in bitcoind yet. Specify true for this parameter to disable this behavior, and not temporarily lock UTXOs
        + Default: `False`
    + use_all_inputs_set (bool, optional) - Use all UTXOs provide with `inputs_set` parameter
        + Default: `False`
    + mutlisig_pubkey (str, optional) - The reedem public key to use for multisig encoding, by default it is searched for the source address
        + Default: `None`
    + change_address (str, optional) - The address to send the change to
        + Default: `None`
    + more_outputs (str, optional) - Additional outputs to include in the transaction in the format `<value>:<address>` or `<value>:<script>`
        + Default: `None`
    + pubkeys (str, optional) - Pubkeys needed in case one or more destinations are multisig addresses
        + Default: `None`
    + verbose: `true` (bool, optional) - Include additional information in the result including data and psbt
        + Default: `False`
    + return_only_data (bool, optional) - Return only the data part of the transaction
        + Default: `False`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": {
                "rawtransaction": "0200000001cced1175b9a278c4900bd916cce790f05f441848a2fe715af507c8fe71f7afec0000000000ffffffff022202000000000000160014293ba4d53f14e5d071a5294a216269c455519f11ee2400000000000016001481c170005ee43cea596f3b81b36c10f9efa95a7f00000000",
                "btc_in": 10000,
                "btc_out": 546,
                "btc_change": 9454,
                "btc_fee": 0,
                "data": null,
                "lock_scripts": [
                    "001481c170005ee43cea596f3b81b36c10f9efa95a7f"
                ],
                "inputs_values": [
                    10000
                ],
                "signed_tx_estimated_size": {
                    "vsize": 141,
                    "adjusted_vsize": 141,
                    "sigops_count": 1
                },
                "psbt": "cHNidP8BAHECAAAAAcztEXW5onjEkAvZFsznkPBfRBhIov5xWvUHyP5x96/sAAAAAAD/////AiICAAAAAAAAFgAUKTuk1T8U5dBxpSlKIWJpxFVRnxHuJAAAAAAAABYAFIHBcABe5DzqWW87gbNsEPnvqVp/AAAAAAAAAAA=",
                "params": {
                    "source": "ecaff771fec807f55a71fea24818445ff090e7cc16d90b90c478a2b97511edcc:0",
                    "destination": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "utxo_value": null,
                    "skip_validation": true
                },
                "name": "move"
            }
        }
    ```

### Get Attach Estimate Xcp Fee [GET /v2/compose/attach/estimatexcpfees{?address}{&verbose}]

Returns the estimated fee for attaching assets to a UTXO.

+ Parameters
    + address: `bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n` (str, optional) - The address from which the assets are attached
        + Default: `None`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": 0
        }
    ```

## Group Assets

### Get Valid Assets [GET /v2/assets{?named}{&cursor}{&limit}{&offset}{&verbose}]

Returns the valid assets

+ Parameters
    + named: `true` (bool, optional) - Whether to return only named assets
        + Default: `None`
    + cursor (str, optional) - The last index of the assets to return
        + Default: `None`
    + limit: `5` (int, optional) - The maximum number of assets to return
        + Default: `100`
    + offset (int, optional) - The number of lines to skip before returning results (overrides the `cursor` parameter)
        + Default: `None`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": [
                {
                    "asset": "OPENFAIR",
                    "asset_id": "117132633401",
                    "asset_longname": null,
                    "issuer": "bcrt1qquwz9xkh3dv34l49v32lk3kc283utd58ung2cn",
                    "owner": "bcrt1qquwz9xkh3dv34l49v32lk3kc283utd58ung2cn",
                    "divisible": true,
                    "locked": false,
                    "supply": 0,
                    "description": "",
                    "description_locked": false,
                    "first_issuance_block_index": 243,
                    "last_issuance_block_index": 243,
                    "first_issuance_block_time": 1740490102,
                    "last_issuance_block_time": 1740490102,
                    "supply_normalized": "0.00000000"
                },
                {
                    "asset": "RESET",
                    "asset_id": "7851187",
                    "asset_longname": null,
                    "issuer": "bcrt1qyyjgcgnjrxkznrdk8pc9dwp98twx5qesptttlg",
                    "owner": "bcrt1qyyjgcgnjrxkznrdk8pc9dwp98twx5qesptttlg",
                    "divisible": true,
                    "locked": false,
                    "supply": 1200000000,
                    "description": "",
                    "description_locked": false,
                    "first_issuance_block_index": 239,
                    "last_issuance_block_index": 240,
                    "first_issuance_block_time": 1740490088,
                    "last_issuance_block_time": 1740490091,
                    "supply_normalized": "12.00000000"
                },
                {
                    "asset": "DETACHB",
                    "asset_id": "982956911",
                    "asset_longname": null,
                    "issuer": "bcrt1qyyjgcgnjrxkznrdk8pc9dwp98twx5qesptttlg",
                    "owner": "bcrt1qyyjgcgnjrxkznrdk8pc9dwp98twx5qesptttlg",
                    "divisible": true,
                    "locked": false,
                    "supply": 1000000000,
                    "description": "",
                    "description_locked": false,
                    "first_issuance_block_index": 232,
                    "last_issuance_block_index": 232,
                    "first_issuance_block_time": 1740490055,
                    "last_issuance_block_time": 1740490055,
                    "supply_normalized": "10.00000000"
                },
                {
                    "asset": "DETACHA",
                    "asset_id": "982956910",
                    "asset_longname": null,
                    "issuer": "bcrt1qyyjgcgnjrxkznrdk8pc9dwp98twx5qesptttlg",
                    "owner": "bcrt1qyyjgcgnjrxkznrdk8pc9dwp98twx5qesptttlg",
                    "divisible": true,
                    "locked": false,
                    "supply": 1000000000,
                    "description": "",
                    "description_locked": false,
                    "first_issuance_block_index": 231,
                    "last_issuance_block_index": 231,
                    "first_issuance_block_time": 1740490051,
                    "last_issuance_block_time": 1740490051,
                    "supply_normalized": "10.00000000"
                },
                {
                    "asset": "CHAINING",
                    "asset_id": "18229920832",
                    "asset_longname": null,
                    "issuer": "bcrt1qyyjgcgnjrxkznrdk8pc9dwp98twx5qesptttlg",
                    "owner": "bcrt1qyyjgcgnjrxkznrdk8pc9dwp98twx5qesptttlg",
                    "divisible": true,
                    "locked": false,
                    "supply": 1000000000,
                    "description": "My super asset CHAINING",
                    "description_locked": false,
                    "first_issuance_block_index": 230,
                    "last_issuance_block_index": 230,
                    "first_issuance_block_time": 1740490047,
                    "last_issuance_block_time": 1740490047,
                    "supply_normalized": "10.00000000"
                }
            ],
            "next_cursor": 26,
            "result_count": 23
        }
    ```

### Get Asset [GET /v2/assets/{asset}{?verbose}]

Returns an asset by its name

+ Parameters
    + asset: `BURNER` (str, required) - The name of the asset to return
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": {
                "asset": "BURNER",
                "asset_id": "21328597",
                "asset_longname": null,
                "issuer": "bcrt1qyyjgcgnjrxkznrdk8pc9dwp98twx5qesptttlg",
                "owner": "bcrt1qyyjgcgnjrxkznrdk8pc9dwp98twx5qesptttlg",
                "divisible": true,
                "locked": true,
                "supply": 100000000,
                "description": "let's burn it",
                "description_locked": false,
                "first_issuance_block_index": 220,
                "last_issuance_block_index": 221,
                "first_issuance_block_time": 1740489993,
                "last_issuance_block_time": 1740489996,
                "supply_normalized": "1.00000000"
            }
        }
    ```

### Get Asset Balances [GET /v2/assets/{asset}/balances{?type}{&cursor}{&limit}{&offset}{&sort}{&verbose}]

Returns the asset balances

+ Parameters
    + asset: `BURNER` (str, required) - The asset to return
    + type (enum[str], optional) - The type of balances to return
        + Default: `all`
        + Members
            + `all`
            + `utxo`
            + `address`
    + cursor (str, optional) - The last index of the balances to return
        + Default: `None`
    + limit: `5` (int, optional) - The maximum number of balances to return
        + Default: `100`
    + offset (int, optional) - The number of lines to skip before returning results (overrides the `cursor` parameter)
        + Default: `None`
    + sort: `quantity:desc` (str, optional) - The sort order of the balances to return (overrides the `cursor` parameter)
        + Default: `None`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": [
                {
                    "address": "bcrt1qquwz9xkh3dv34l49v32lk3kc283utd58ung2cn",
                    "utxo": null,
                    "utxo_address": null,
                    "asset": "BURNER",
                    "asset_longname": null,
                    "quantity": 80000000,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "let's burn it",
                        "issuer": "bcrt1qyyjgcgnjrxkznrdk8pc9dwp98twx5qesptttlg",
                        "divisible": true,
                        "locked": true,
                        "owner": "bcrt1qyyjgcgnjrxkznrdk8pc9dwp98twx5qesptttlg"
                    },
                    "quantity_normalized": "0.80000000"
                },
                {
                    "address": "bcrt1qyyjgcgnjrxkznrdk8pc9dwp98twx5qesptttlg",
                    "utxo": null,
                    "utxo_address": null,
                    "asset": "BURNER",
                    "asset_longname": null,
                    "quantity": 20000000,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "let's burn it",
                        "issuer": "bcrt1qyyjgcgnjrxkznrdk8pc9dwp98twx5qesptttlg",
                        "divisible": true,
                        "locked": true,
                        "owner": "bcrt1qyyjgcgnjrxkznrdk8pc9dwp98twx5qesptttlg"
                    },
                    "quantity_normalized": "0.20000000"
                }
            ],
            "next_cursor": null,
            "result_count": 2
        }
    ```

### Get Balances By Asset And Address [GET /v2/assets/{asset}/balances/{address}{?verbose}]

Returns the balances of an address and asset

+ Parameters
    + asset: `XCP` (str, required) - The asset to return
    + address: `bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n` (str, required) - The address to return
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": [
                {
                    "address": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "asset": "XCP",
                    "asset_longname": null,
                    "quantity": 82599966196,
                    "utxo": null,
                    "utxo_address": null,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "The Counterparty protocol native currency",
                        "issuer": null,
                        "divisible": true,
                        "locked": true,
                        "owner": null
                    },
                    "quantity_normalized": "825.99966196"
                }
            ],
            "next_cursor": null,
            "result_count": 1
        }
    ```

### Get Orders By Asset [GET /v2/assets/{asset}/orders{?status}{&get_asset}{&give_asset}{&cursor}{&limit}{&offset}{&sort}{&verbose}]

Returns the orders of an asset

+ Parameters
    + asset: `XCP` (str, required) - The asset to return
    + status (enum[str], optional) - The status of the orders to return
        + Default: `all`
        + Members
            + `all`
            + `open`
            + `expired`
            + `filled`
            + `cancelled`
    + get_asset (str, optional) - The get asset to return
        + Default: `None`
    + give_asset (str, optional) - The give asset to return
        + Default: `None`
    + cursor (str, optional) - The last index of the orders to return
        + Default: `None`
    + limit: `5` (int, optional) - The maximum number of orders to return
        + Default: `100`
    + offset (int, optional) - The number of lines to skip before returning results (overrides the `cursor` parameter)
        + Default: `None`
    + sort: `expiration:desc` (str, optional) - The sort order of the orders to return (overrides the `cursor` parameter)
        + Default: `None`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": [
                {
                    "tx_index": 53,
                    "tx_hash": "2064dd5294807ea46ffdb9f82780a89424b75ec45715ea0fbc6f440b31133b66",
                    "block_index": 179,
                    "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "give_asset": "XCP",
                    "give_quantity": 1000,
                    "give_remaining": 1000,
                    "get_asset": "BTC",
                    "get_quantity": 1000,
                    "get_remaining": 1000,
                    "expiration": 21,
                    "expire_index": 178,
                    "fee_required": 0,
                    "fee_required_remaining": 0,
                    "fee_provided": 10000,
                    "fee_provided_remaining": 10000,
                    "status": "expired",
                    "give_price": 1.0,
                    "get_price": 1.0,
                    "block_time": 1740489778,
                    "give_asset_info": {
                        "asset_longname": null,
                        "description": "The Counterparty protocol native currency",
                        "issuer": null,
                        "divisible": true,
                        "locked": true,
                        "owner": null
                    },
                    "get_asset_info": {
                        "divisible": true,
                        "asset_longname": null,
                        "description": "The Bitcoin cryptocurrency",
                        "locked": false,
                        "issuer": null
                    },
                    "give_quantity_normalized": "0.00001000",
                    "get_quantity_normalized": "0.00001000",
                    "get_remaining_normalized": "0.00001000",
                    "give_remaining_normalized": "0.00001000",
                    "fee_provided_normalized": "0.00010000",
                    "fee_required_normalized": "0.00000000",
                    "fee_required_remaining_normalized": "0.00000000",
                    "fee_provided_remaining_normalized": "0.00010000",
                    "give_price_normalized": "1.0000000000000000",
                    "get_price_normalized": "1.0000000000000000"
                },
                {
                    "tx_index": 55,
                    "tx_hash": "6a8b04722b5121498713e9ca34b3a634f0ef5f0cf3ee9a0753bd79b8c3f0cc10",
                    "block_index": 202,
                    "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "give_asset": "XCP",
                    "give_quantity": 10000,
                    "give_remaining": 5000,
                    "get_asset": "BTC",
                    "get_quantity": 10000,
                    "get_remaining": 5000,
                    "expiration": 21,
                    "expire_index": 201,
                    "fee_required": 0,
                    "fee_required_remaining": 0,
                    "fee_provided": 10000,
                    "fee_provided_remaining": 10000,
                    "status": "expired",
                    "give_price": 1.0,
                    "get_price": 1.0,
                    "block_time": 1740489926,
                    "give_asset_info": {
                        "asset_longname": null,
                        "description": "The Counterparty protocol native currency",
                        "issuer": null,
                        "divisible": true,
                        "locked": true,
                        "owner": null
                    },
                    "get_asset_info": {
                        "divisible": true,
                        "asset_longname": null,
                        "description": "The Bitcoin cryptocurrency",
                        "locked": false,
                        "issuer": null
                    },
                    "give_quantity_normalized": "0.00010000",
                    "get_quantity_normalized": "0.00010000",
                    "get_remaining_normalized": "0.00005000",
                    "give_remaining_normalized": "0.00005000",
                    "fee_provided_normalized": "0.00010000",
                    "fee_required_normalized": "0.00000000",
                    "fee_required_remaining_normalized": "0.00000000",
                    "fee_provided_remaining_normalized": "0.00010000",
                    "give_price_normalized": "1.0000000000000000",
                    "get_price_normalized": "1.0000000000000000"
                },
                {
                    "tx_index": 62,
                    "tx_hash": "6514dc909d289a00f85ba5b8db7b7198c6fafe5ed2e140773835a3fe73615f94",
                    "block_index": 188,
                    "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "give_asset": "XCP",
                    "give_quantity": 1000,
                    "give_remaining": 1000,
                    "get_asset": "BTC",
                    "get_quantity": 1000,
                    "get_remaining": 1000,
                    "expiration": 21,
                    "expire_index": 208,
                    "fee_required": 0,
                    "fee_required_remaining": 0,
                    "fee_provided": 10000,
                    "fee_provided_remaining": 10000,
                    "status": "cancelled",
                    "give_price": 1.0,
                    "get_price": 1.0,
                    "block_time": 1740489870,
                    "give_asset_info": {
                        "asset_longname": null,
                        "description": "The Counterparty protocol native currency",
                        "issuer": null,
                        "divisible": true,
                        "locked": true,
                        "owner": null
                    },
                    "get_asset_info": {
                        "divisible": true,
                        "asset_longname": null,
                        "description": "The Bitcoin cryptocurrency",
                        "locked": false,
                        "issuer": null
                    },
                    "give_quantity_normalized": "0.00001000",
                    "get_quantity_normalized": "0.00001000",
                    "get_remaining_normalized": "0.00001000",
                    "give_remaining_normalized": "0.00001000",
                    "fee_provided_normalized": "0.00010000",
                    "fee_required_normalized": "0.00000000",
                    "fee_required_remaining_normalized": "0.00000000",
                    "fee_provided_remaining_normalized": "0.00010000",
                    "give_price_normalized": "1.0000000000000000",
                    "get_price_normalized": "1.0000000000000000"
                },
                {
                    "tx_index": 64,
                    "tx_hash": "9198a9256ee36ffaa1c68b2098d9920bf461858924c70baa1e2e616814a81c54",
                    "block_index": 211,
                    "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "give_asset": "XCP",
                    "give_quantity": 1000,
                    "give_remaining": 0,
                    "get_asset": "BTC",
                    "get_quantity": 1000,
                    "get_remaining": 0,
                    "expiration": 21,
                    "expire_index": 210,
                    "fee_required": 0,
                    "fee_required_remaining": 0,
                    "fee_provided": 10000,
                    "fee_provided_remaining": 10000,
                    "status": "expired",
                    "give_price": 1.0,
                    "get_price": 1.0,
                    "block_time": 1740489959,
                    "give_asset_info": {
                        "asset_longname": null,
                        "description": "The Counterparty protocol native currency",
                        "issuer": null,
                        "divisible": true,
                        "locked": true,
                        "owner": null
                    },
                    "get_asset_info": {
                        "divisible": true,
                        "asset_longname": null,
                        "description": "The Bitcoin cryptocurrency",
                        "locked": false,
                        "issuer": null
                    },
                    "give_quantity_normalized": "0.00001000",
                    "get_quantity_normalized": "0.00001000",
                    "get_remaining_normalized": "0.00000000",
                    "give_remaining_normalized": "0.00000000",
                    "fee_provided_normalized": "0.00010000",
                    "fee_required_normalized": "0.00000000",
                    "fee_required_remaining_normalized": "0.00000000",
                    "fee_provided_remaining_normalized": "0.00010000",
                    "give_price_normalized": "1.0000000000000000",
                    "get_price_normalized": "1.0000000000000000"
                },
                {
                    "tx_index": 56,
                    "tx_hash": "16693d3e8624b05db62587be692a301eba7dc962293096694f84142bc3bfc5fd",
                    "block_index": 182,
                    "source": "bcrt1qdj4ckly3lwmjqld7pu60qu9myggm6pnd58ntz6",
                    "give_asset": "BTC",
                    "give_quantity": 2000,
                    "give_remaining": 0,
                    "get_asset": "XCP",
                    "get_quantity": 2000,
                    "get_remaining": 0,
                    "expiration": 21,
                    "expire_index": 202,
                    "fee_required": 0,
                    "fee_required_remaining": 0,
                    "fee_provided": 10000,
                    "fee_provided_remaining": 10000,
                    "status": "filled",
                    "give_price": 1.0,
                    "get_price": 1.0,
                    "block_time": 1740489847,
                    "give_asset_info": {
                        "divisible": true,
                        "asset_longname": null,
                        "description": "The Bitcoin cryptocurrency",
                        "locked": false,
                        "issuer": null
                    },
                    "get_asset_info": {
                        "asset_longname": null,
                        "description": "The Counterparty protocol native currency",
                        "issuer": null,
                        "divisible": true,
                        "locked": true,
                        "owner": null
                    },
                    "give_quantity_normalized": "0.00002000",
                    "get_quantity_normalized": "0.00002000",
                    "get_remaining_normalized": "0.00000000",
                    "give_remaining_normalized": "0.00000000",
                    "fee_provided_normalized": "0.00010000",
                    "fee_required_normalized": "0.00000000",
                    "fee_required_remaining_normalized": "0.00000000",
                    "fee_provided_remaining_normalized": "0.00010000",
                    "give_price_normalized": "1.0000000000000000",
                    "get_price_normalized": "1.0000000000000000"
                }
            ],
            "next_cursor": 58,
            "result_count": 7
        }
    ```

### Get Order Matches By Asset [GET /v2/assets/{asset}/matches{?status}{&forward_asset}{&backward_asset}{&block_index}{&cursor}{&limit}{&offset}{&sort}{&verbose}]

Returns the orders of an asset

+ Parameters
    + asset: `XCP` (str, required) - The asset to return
    + status (enum[str], optional) - The status of the order matches to return
        + Default: `all`
        + Members
            + `all`
            + `pending`
            + `completed`
            + `expired`
    + forward_asset (str, optional) - The forward asset to return
        + Default: `None`
    + backward_asset (str, optional) - The backward asset to return
        + Default: `None`
    + block_index (int, optional) - The block index of the order matches to return
        + Default: `None`
    + cursor (str, optional) - The last index of the order matches to return
        + Default: `None`
    + limit: `5` (int, optional) - The maximum number of order matches to return
        + Default: `100`
    + offset (int, optional) - The number of lines to skip before returning results (overrides the `cursor` parameter)
        + Default: `None`
    + sort: `forward_quantity:desc` (str, optional) - The sort order of the order matches to return (overrides the `cursor` parameter)
        + Default: `None`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": [
                {
                    "id": "6a8b04722b5121498713e9ca34b3a634f0ef5f0cf3ee9a0753bd79b8c3f0cc10_c0b993f438e82940a24a6f2e74bca15b60d197c7afa93aea4d0f82b02cc89f96",
                    "tx0_index": 55,
                    "tx0_hash": "6a8b04722b5121498713e9ca34b3a634f0ef5f0cf3ee9a0753bd79b8c3f0cc10",
                    "tx0_address": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "tx1_index": 58,
                    "tx1_hash": "c0b993f438e82940a24a6f2e74bca15b60d197c7afa93aea4d0f82b02cc89f96",
                    "tx1_address": "bcrt1qj7zsv3gv750c8mr02eytgp5xen2ke6fpak6ztc",
                    "forward_asset": "XCP",
                    "forward_quantity": 3000,
                    "backward_asset": "BTC",
                    "backward_quantity": 3000,
                    "tx0_block_index": 181,
                    "tx1_block_index": 183,
                    "block_index": 204,
                    "tx0_expiration": 21,
                    "tx1_expiration": 21,
                    "match_expire_index": 203,
                    "fee_paid": 0,
                    "status": "expired",
                    "backward_price": 1.0,
                    "forward_price": 1.0,
                    "block_time": 1740489935,
                    "forward_asset_info": {
                        "asset_longname": null,
                        "description": "The Counterparty protocol native currency",
                        "issuer": null,
                        "divisible": true,
                        "locked": true,
                        "owner": null
                    },
                    "backward_asset_info": {
                        "divisible": true,
                        "asset_longname": null,
                        "description": "The Bitcoin cryptocurrency",
                        "locked": false,
                        "issuer": null
                    },
                    "forward_quantity_normalized": "0.00003000",
                    "backward_quantity_normalized": "0.00003000",
                    "fee_paid_normalized": "0.00000000",
                    "forward_price_normalized": "1.0000000000000000",
                    "backward_price_normalized": "1.0000000000000000"
                },
                {
                    "id": "6a8b04722b5121498713e9ca34b3a634f0ef5f0cf3ee9a0753bd79b8c3f0cc10_16693d3e8624b05db62587be692a301eba7dc962293096694f84142bc3bfc5fd",
                    "tx0_index": 55,
                    "tx0_hash": "6a8b04722b5121498713e9ca34b3a634f0ef5f0cf3ee9a0753bd79b8c3f0cc10",
                    "tx0_address": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "tx1_index": 56,
                    "tx1_hash": "16693d3e8624b05db62587be692a301eba7dc962293096694f84142bc3bfc5fd",
                    "tx1_address": "bcrt1qdj4ckly3lwmjqld7pu60qu9myggm6pnd58ntz6",
                    "forward_asset": "XCP",
                    "forward_quantity": 2000,
                    "backward_asset": "BTC",
                    "backward_quantity": 2000,
                    "tx0_block_index": 180,
                    "tx1_block_index": 181,
                    "block_index": 182,
                    "tx0_expiration": 21,
                    "tx1_expiration": 21,
                    "match_expire_index": 201,
                    "fee_paid": 0,
                    "status": "completed",
                    "backward_price": 1.0,
                    "forward_price": 1.0,
                    "block_time": 1740489847,
                    "forward_asset_info": {
                        "asset_longname": null,
                        "description": "The Counterparty protocol native currency",
                        "issuer": null,
                        "divisible": true,
                        "locked": true,
                        "owner": null
                    },
                    "backward_asset_info": {
                        "divisible": true,
                        "asset_longname": null,
                        "description": "The Bitcoin cryptocurrency",
                        "locked": false,
                        "issuer": null
                    },
                    "forward_quantity_normalized": "0.00002000",
                    "backward_quantity_normalized": "0.00002000",
                    "fee_paid_normalized": "0.00000000",
                    "forward_price_normalized": "1.0000000000000000",
                    "backward_price_normalized": "1.0000000000000000"
                },
                {
                    "id": "2064dd5294807ea46ffdb9f82780a89424b75ec45715ea0fbc6f440b31133b66_1018e9622091c61deb0a374f7a8898b56ca433be915fe9a732ae5d0c8c7a4482",
                    "tx0_index": 53,
                    "tx0_hash": "2064dd5294807ea46ffdb9f82780a89424b75ec45715ea0fbc6f440b31133b66",
                    "tx0_address": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "tx1_index": 54,
                    "tx1_hash": "1018e9622091c61deb0a374f7a8898b56ca433be915fe9a732ae5d0c8c7a4482",
                    "tx1_address": "bcrt1qdj4ckly3lwmjqld7pu60qu9myggm6pnd58ntz6",
                    "forward_asset": "XCP",
                    "forward_quantity": 1000,
                    "backward_asset": "BTC",
                    "backward_quantity": 1000,
                    "tx0_block_index": 157,
                    "tx1_block_index": 158,
                    "block_index": 179,
                    "tx0_expiration": 21,
                    "tx1_expiration": 20,
                    "match_expire_index": 178,
                    "fee_paid": 0,
                    "status": "expired",
                    "backward_price": 1.0,
                    "forward_price": 1.0,
                    "block_time": 1740489778,
                    "forward_asset_info": {
                        "asset_longname": null,
                        "description": "The Counterparty protocol native currency",
                        "issuer": null,
                        "divisible": true,
                        "locked": true,
                        "owner": null
                    },
                    "backward_asset_info": {
                        "divisible": true,
                        "asset_longname": null,
                        "description": "The Bitcoin cryptocurrency",
                        "locked": false,
                        "issuer": null
                    },
                    "forward_quantity_normalized": "0.00001000",
                    "backward_quantity_normalized": "0.00001000",
                    "fee_paid_normalized": "0.00000000",
                    "forward_price_normalized": "1.0000000000000000",
                    "backward_price_normalized": "1.0000000000000000"
                },
                {
                    "id": "9198a9256ee36ffaa1c68b2098d9920bf461858924c70baa1e2e616814a81c54_c0b993f438e82940a24a6f2e74bca15b60d197c7afa93aea4d0f82b02cc89f96",
                    "tx0_index": 64,
                    "tx0_hash": "9198a9256ee36ffaa1c68b2098d9920bf461858924c70baa1e2e616814a81c54",
                    "tx0_address": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "tx1_index": 58,
                    "tx1_hash": "c0b993f438e82940a24a6f2e74bca15b60d197c7afa93aea4d0f82b02cc89f96",
                    "tx1_address": "bcrt1qj7zsv3gv750c8mr02eytgp5xen2ke6fpak6ztc",
                    "forward_asset": "XCP",
                    "forward_quantity": 1000,
                    "backward_asset": "BTC",
                    "backward_quantity": 1000,
                    "tx0_block_index": 189,
                    "tx1_block_index": 204,
                    "block_index": 225,
                    "tx0_expiration": 21,
                    "tx1_expiration": 21,
                    "match_expire_index": 224,
                    "fee_paid": 0,
                    "status": "expired",
                    "backward_price": 1.0,
                    "forward_price": 1.0,
                    "block_time": 1740490010,
                    "forward_asset_info": {
                        "asset_longname": null,
                        "description": "The Counterparty protocol native currency",
                        "issuer": null,
                        "divisible": true,
                        "locked": true,
                        "owner": null
                    },
                    "backward_asset_info": {
                        "divisible": true,
                        "asset_longname": null,
                        "description": "The Bitcoin cryptocurrency",
                        "locked": false,
                        "issuer": null
                    },
                    "forward_quantity_normalized": "0.00001000",
                    "backward_quantity_normalized": "0.00001000",
                    "fee_paid_normalized": "0.00000000",
                    "forward_price_normalized": "1.0000000000000000",
                    "backward_price_normalized": "1.0000000000000000"
                }
            ],
            "next_cursor": null,
            "result_count": 4
        }
    ```

### Get Credits By Asset [GET /v2/assets/{asset}/credits{?action}{&cursor}{&limit}{&offset}{&verbose}]

Returns the credits of an asset

+ Parameters
    + asset: `BURNER` (str, required) - The asset to return
    + action (enum[str], optional) - The action to filter by
        + Default: `None`
        + Members
            + `None`
            + `Closed: Max dispenses reached`
            + `bet settled: for equal`
            + `bet settled: for notequal`
            + `bet settled: liquidated for bear`
            + `btcpay`
            + `burn`
            + `cancel order`
            + `close dispenser`
            + `dispense`
            + `dispenser close`
            + `dividend`
            + `feed fee`
            + `filled`
            + `issuance`
            + `mpma send`
            + `open dispenser empty addr`
            + `order cancelled`
            + `order expired`
            + `order match`
            + `recredit backward quantity`
            + `recredit forward quantity`
            + `recredit wager`
            + `recredit wager remaining`
            + `reset issuance`
            + `send`
            + `sweep`
            + `wins`
    + cursor (str, optional) - The last index of the credits to return
        + Default: `None`
    + limit: `5` (int, optional) - The maximum number of credits to return
        + Default: `100`
    + offset (int, optional) - The number of lines to skip before returning results (overrides the `cursor` parameter)
        + Default: `None`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": [
                {
                    "block_index": 221,
                    "address": "bcrt1qyyjgcgnjrxkznrdk8pc9dwp98twx5qesptttlg",
                    "asset": "BURNER",
                    "quantity": 20000000,
                    "calling_function": "fairmint commission",
                    "event": "f008cc467441d6088b240484737bc7c3a9665fca802126e7724a0e297fec8adc",
                    "tx_index": 97,
                    "utxo": null,
                    "utxo_address": null,
                    "block_time": 1740489996,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "let's burn it",
                        "issuer": "bcrt1qyyjgcgnjrxkznrdk8pc9dwp98twx5qesptttlg",
                        "divisible": true,
                        "locked": true,
                        "owner": "bcrt1qyyjgcgnjrxkznrdk8pc9dwp98twx5qesptttlg"
                    },
                    "quantity_normalized": "0.20000000"
                },
                {
                    "block_index": 221,
                    "address": "bcrt1qquwz9xkh3dv34l49v32lk3kc283utd58ung2cn",
                    "asset": "BURNER",
                    "quantity": 80000000,
                    "calling_function": "fairmint",
                    "event": "f008cc467441d6088b240484737bc7c3a9665fca802126e7724a0e297fec8adc",
                    "tx_index": 97,
                    "utxo": null,
                    "utxo_address": null,
                    "block_time": 1740489996,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "let's burn it",
                        "issuer": "bcrt1qyyjgcgnjrxkznrdk8pc9dwp98twx5qesptttlg",
                        "divisible": true,
                        "locked": true,
                        "owner": "bcrt1qyyjgcgnjrxkznrdk8pc9dwp98twx5qesptttlg"
                    },
                    "quantity_normalized": "0.80000000"
                }
            ],
            "next_cursor": null,
            "result_count": 2
        }
    ```

### Get Debits By Asset [GET /v2/assets/{asset}/debits{?action}{&cursor}{&limit}{&offset}{&verbose}]

Returns the debits of an asset

+ Parameters
    + asset: `XCP` (str, required) - The asset to return
    + action (enum[str], optional) - The action to filter by
        + Default: `None`
        + Members
            + `None`
            + `bet`
            + `destroy`
            + `dividend`
            + `dividend fee`
            + `issuance fee`
            + `mpma send`
            + `open RPS`
            + `open dispenser`
            + `open dispenser empty addr`
            + `open order`
            + `refill dispenser`
            + `reopen RPS after matching expiration`
            + `reset destroy`
            + `send`
            + `sweep`
            + `sweep fee`
    + cursor (str, optional) - The last index of the debits to return
        + Default: `None`
    + limit: `5` (int, optional) - The maximum number of debits to return
        + Default: `100`
    + offset (int, optional) - The number of lines to skip before returning results (overrides the `cursor` parameter)
        + Default: `None`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": [
                {
                    "block_index": 245,
                    "address": null,
                    "asset": "XCP",
                    "quantity": 2000000000,
                    "action": "utxo move",
                    "event": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3",
                    "tx_index": 121,
                    "utxo": "e1da70a78196a01b1d83828ad454578cd9ccd3a37215d0732042f9cd20028b65:1",
                    "utxo_address": "bcrt1qwats7crkdl4z6ac6tz2fn6pz6a5dt7hxzjustu",
                    "block_time": 1740490111,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "The Counterparty protocol native currency",
                        "issuer": null,
                        "divisible": true,
                        "locked": true,
                        "owner": null
                    },
                    "quantity_normalized": "20.00000000"
                },
                {
                    "block_index": 243,
                    "address": "bcrt1qquwz9xkh3dv34l49v32lk3kc283utd58ung2cn",
                    "asset": "XCP",
                    "quantity": 50000000,
                    "action": "fairminter fee",
                    "event": "c6043e9ceafa1ced581e48b9bb273a6b703ad6717ff27494f1a137dfcd039321",
                    "tx_index": 120,
                    "utxo": null,
                    "utxo_address": null,
                    "block_time": 1740490102,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "The Counterparty protocol native currency",
                        "issuer": null,
                        "divisible": true,
                        "locked": true,
                        "owner": null
                    },
                    "quantity_normalized": "0.50000000"
                },
                {
                    "block_index": 239,
                    "address": "bcrt1qyyjgcgnjrxkznrdk8pc9dwp98twx5qesptttlg",
                    "asset": "XCP",
                    "quantity": 50000000,
                    "action": "issuance fee",
                    "event": "4e73e3d64b9f20843a1339df83985705ba5e13062d943520c4beb21487693a5c",
                    "tx_index": 116,
                    "utxo": null,
                    "utxo_address": null,
                    "block_time": 1740490088,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "The Counterparty protocol native currency",
                        "issuer": null,
                        "divisible": true,
                        "locked": true,
                        "owner": null
                    },
                    "quantity_normalized": "0.50000000"
                },
                {
                    "block_index": 236,
                    "address": "bcrt1qv82qg4jp6nn6wahdnx2d2u6cdfxyc2zuw7u9mv",
                    "asset": "XCP",
                    "quantity": 5000,
                    "action": "open dispenser",
                    "event": "c54957b9cbb662e2cc9eee1c09950f7365365a09abad1bdf1afb3cca05d63705",
                    "tx_index": 114,
                    "utxo": null,
                    "utxo_address": null,
                    "block_time": 1740490077,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "The Counterparty protocol native currency",
                        "issuer": null,
                        "divisible": true,
                        "locked": true,
                        "owner": null
                    },
                    "quantity_normalized": "0.00005000"
                },
                {
                    "block_index": 232,
                    "address": "bcrt1qyyjgcgnjrxkznrdk8pc9dwp98twx5qesptttlg",
                    "asset": "XCP",
                    "quantity": 50000000,
                    "action": "issuance fee",
                    "event": "22a6319c274859eae4662370ad52fa17e1660057dfd1753f32460921d442293c",
                    "tx_index": 108,
                    "utxo": null,
                    "utxo_address": null,
                    "block_time": 1740490055,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "The Counterparty protocol native currency",
                        "issuer": null,
                        "divisible": true,
                        "locked": true,
                        "owner": null
                    },
                    "quantity_normalized": "0.50000000"
                }
            ],
            "next_cursor": 91,
            "result_count": 60
        }
    ```

### Get Valid Destructions By Asset [GET /v2/assets/{asset}/destructions{?cursor}{&limit}{&offset}{&verbose}]

Returns the destructions of a block

+ Parameters
    + asset: `XCP` (str, required) - The asset to return
    + cursor (str, optional) - The last index of the destructions to return
        + Default: `None`
    + limit: `5` (int, optional) - The maximum number of destructions to return
        + Default: `100`
    + offset (int, optional) - The number of lines to skip before returning results (overrides the `cursor` parameter)
        + Default: `None`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": [
                {
                    "tx_index": 97,
                    "tx_hash": "f008cc467441d6088b240484737bc7c3a9665fca802126e7724a0e297fec8adc",
                    "block_index": 221,
                    "source": "bcrt1qquwz9xkh3dv34l49v32lk3kc283utd58ung2cn",
                    "asset": "XCP",
                    "quantity": 100000000,
                    "tag": "burn fairmint payment",
                    "status": "valid",
                    "block_time": 1740489996,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "The Counterparty protocol native currency",
                        "issuer": null,
                        "divisible": true,
                        "locked": true,
                        "owner": null
                    },
                    "quantity_normalized": "1.00000000"
                },
                {
                    "tx_index": 66,
                    "tx_hash": "361c12f0621cfb9d6fdc1bff4647705909256ce8ae74028af623e8a68328917b",
                    "block_index": 191,
                    "source": "bcrt1qndrj8uy6the35p3gpjuuss7l29hwe0npylexmz",
                    "asset": "XCP",
                    "quantity": 1,
                    "tag": "64657374726f79",
                    "status": "valid",
                    "block_time": 1740489880,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "The Counterparty protocol native currency",
                        "issuer": null,
                        "divisible": true,
                        "locked": true,
                        "owner": null
                    },
                    "quantity_normalized": "0.00000001"
                }
            ],
            "next_cursor": null,
            "result_count": 2
        }
    ```

### Get Dividends By Asset [GET /v2/assets/{asset}/dividends{?cursor}{&limit}{&offset}{&verbose}]

Returns the dividends of an asset

+ Parameters
    + asset: `EXPANSIVE` (str, required) - The asset to return
    + cursor (str, optional) - The last index of the dividend to return
        + Default: `None`
    + limit: `5` (int, optional) - The maximum number of dividend to return
        + Default: `100`
    + offset (int, optional) - The number of lines to skip before returning results (overrides the `cursor` parameter)
        + Default: `None`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": [],
            "next_cursor": null,
            "result_count": 0
        }
    ```

### Get Issuances By Asset [GET /v2/assets/{asset}/issuances{?asset_events}{&cursor}{&limit}{&offset}{&verbose}]

Returns the issuances of an asset

+ Parameters
    + asset: `BURNER` (str, required) - The asset to return
    + asset_events (enum[str], optional) - Filter result by one or several comma separated asset events
        + Default: `all`
        + Members
            + `all`
            + `creation`
            + `reissuance`
            + `lock_quantity`
            + `reset`
            + `change_description`
            + `transfer`
            + `open_fairminter`
            + `fairmint`
            + `lock_description`
    + cursor (str, optional) - The last index of the issuances to return
        + Default: `None`
    + limit: `5` (int, optional) - The maximum number of issuances to return
        + Default: `100`
    + offset (int, optional) - The number of lines to skip before returning results (overrides the `cursor` parameter)
        + Default: `None`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": [
                {
                    "tx_index": 97,
                    "tx_hash": "f008cc467441d6088b240484737bc7c3a9665fca802126e7724a0e297fec8adc",
                    "msg_index": 0,
                    "block_index": 221,
                    "asset": "BURNER",
                    "quantity": 100000000,
                    "divisible": true,
                    "source": "bcrt1qquwz9xkh3dv34l49v32lk3kc283utd58ung2cn",
                    "issuer": "bcrt1qyyjgcgnjrxkznrdk8pc9dwp98twx5qesptttlg",
                    "transfer": false,
                    "callable": false,
                    "call_date": 0,
                    "call_price": 0.0,
                    "description": "let's burn it",
                    "fee_paid": 0,
                    "status": "valid",
                    "asset_longname": null,
                    "description_locked": true,
                    "fair_minting": false,
                    "asset_events": "fairmint",
                    "locked": true,
                    "reset": false,
                    "block_time": 1740489996,
                    "quantity_normalized": "1.00000000",
                    "fee_paid_normalized": "0.00000000"
                },
                {
                    "tx_index": 96,
                    "tx_hash": "2efa348123c9d59037cd1352f1074a77e6c56630f04c6a742623c0d403824cb8",
                    "msg_index": 0,
                    "block_index": 220,
                    "asset": "BURNER",
                    "quantity": 0,
                    "divisible": true,
                    "source": "bcrt1qyyjgcgnjrxkznrdk8pc9dwp98twx5qesptttlg",
                    "issuer": "bcrt1qyyjgcgnjrxkznrdk8pc9dwp98twx5qesptttlg",
                    "transfer": false,
                    "callable": false,
                    "call_date": 0,
                    "call_price": 0.0,
                    "description": "let's burn it",
                    "fee_paid": 50000000,
                    "status": "valid",
                    "asset_longname": null,
                    "description_locked": false,
                    "fair_minting": true,
                    "asset_events": "open_fairminter",
                    "locked": false,
                    "reset": false,
                    "block_time": 1740489993,
                    "quantity_normalized": "0.00000000",
                    "fee_paid_normalized": "0.50000000"
                }
            ],
            "next_cursor": null,
            "result_count": 2
        }
    ```

### Get Sends By Asset [GET /v2/assets/{asset}/sends{?send_type}{&cursor}{&limit}{&offset}{&verbose}]

Returns the sends, include Enhanced and MPMA sends, of an asset

+ Parameters
    + asset: `XCP` (str, required) - The asset to return
    + send_type (enum[str], optional) - The type of the send to return
        + Default: `all`
        + Members
            + `all`
            + `send`
            + `attach`
            + `move`
            + `detach`
    + cursor (str, optional) - The last index of the debits to return
        + Default: `None`
    + limit: `5` (int, optional) - The maximum number of debits to return
        + Default: `100`
    + offset (int, optional) - The number of lines to skip before returning results (overrides the `cursor` parameter)
        + Default: `None`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": [
                {
                    "tx_index": 121,
                    "tx_hash": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3",
                    "block_index": 245,
                    "source": "e1da70a78196a01b1d83828ad454578cd9ccd3a37215d0732042f9cd20028b65:1",
                    "destination": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3:0",
                    "asset": "XCP",
                    "quantity": 2000000000,
                    "status": "valid",
                    "msg_index": 1,
                    "memo": null,
                    "fee_paid": 0,
                    "send_type": "move",
                    "source_address": "bcrt1qwats7crkdl4z6ac6tz2fn6pz6a5dt7hxzjustu",
                    "destination_address": "bcrt1qquwz9xkh3dv34l49v32lk3kc283utd58ung2cn",
                    "block_time": 1740490111,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "The Counterparty protocol native currency",
                        "issuer": null,
                        "divisible": true,
                        "locked": true,
                        "owner": null
                    },
                    "quantity_normalized": "20.00000000",
                    "fee_paid_normalized": "0.00000000"
                },
                {
                    "tx_index": 81,
                    "tx_hash": "10823d6a8b3b44da8361e887a02942fa28973b782e59ec26ece5a7c88b8d974d",
                    "block_index": 205,
                    "source": "bcrt1qdj4ckly3lwmjqld7pu60qu9myggm6pnd58ntz6",
                    "destination": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "asset": "XCP",
                    "quantity": 10,
                    "status": "valid",
                    "msg_index": 2,
                    "memo": "memo1",
                    "fee_paid": 0,
                    "send_type": "send",
                    "source_address": null,
                    "destination_address": null,
                    "block_time": 1740489939,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "The Counterparty protocol native currency",
                        "issuer": null,
                        "divisible": true,
                        "locked": true,
                        "owner": null
                    },
                    "quantity_normalized": "0.00000010",
                    "fee_paid_normalized": "0.00000000"
                },
                {
                    "tx_index": 80,
                    "tx_hash": "683501e1389d756a4e8cbf76052729d941f18d450f94fe7c85f5decd64162ce7",
                    "block_index": 204,
                    "source": "bcrt1qdj4ckly3lwmjqld7pu60qu9myggm6pnd58ntz6",
                    "destination": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "asset": "XCP",
                    "quantity": 10,
                    "status": "valid",
                    "msg_index": 2,
                    "memo": "746865206d656d6f",
                    "fee_paid": 0,
                    "send_type": "send",
                    "source_address": null,
                    "destination_address": null,
                    "block_time": 1740489935,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "The Counterparty protocol native currency",
                        "issuer": null,
                        "divisible": true,
                        "locked": true,
                        "owner": null
                    },
                    "quantity_normalized": "0.00000010",
                    "fee_paid_normalized": "0.00000000"
                },
                {
                    "tx_index": 79,
                    "tx_hash": "a664e79129ea014f2afd994abca856dfb7a93d3e5e5a9ce076c150ddbacd6bd9",
                    "block_index": 203,
                    "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "destination": "bcrt1qdj4ckly3lwmjqld7pu60qu9myggm6pnd58ntz6",
                    "asset": "XCP",
                    "quantity": 10,
                    "status": "valid",
                    "msg_index": 2,
                    "memo": "memo1",
                    "fee_paid": 0,
                    "send_type": "send",
                    "source_address": null,
                    "destination_address": null,
                    "block_time": 1740489930,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "The Counterparty protocol native currency",
                        "issuer": null,
                        "divisible": true,
                        "locked": true,
                        "owner": null
                    },
                    "quantity_normalized": "0.00000010",
                    "fee_paid_normalized": "0.00000000"
                },
                {
                    "tx_index": 78,
                    "tx_hash": "61f1aee9ee7e879bd011800762de578a06213aa9fdff95ecb7a03585542bd78d",
                    "block_index": 202,
                    "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "destination": "bcrt1qdj4ckly3lwmjqld7pu60qu9myggm6pnd58ntz6",
                    "asset": "XCP",
                    "quantity": 10,
                    "status": "valid",
                    "msg_index": 2,
                    "memo": "the memo",
                    "fee_paid": 0,
                    "send_type": "send",
                    "source_address": null,
                    "destination_address": null,
                    "block_time": 1740489926,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "The Counterparty protocol native currency",
                        "issuer": null,
                        "divisible": true,
                        "locked": true,
                        "owner": null
                    },
                    "quantity_normalized": "0.00000010",
                    "fee_paid_normalized": "0.00000000"
                }
            ],
            "next_cursor": 16,
            "result_count": 10
        }
    ```

### Get Dispensers By Asset [GET /v2/assets/{asset}/dispensers{?status}{&exclude_with_oracle}{&cursor}{&limit}{&offset}{&sort}{&verbose}]

Returns the dispensers of an asset

+ Parameters
    + asset: `XCP` (str, required) - The asset to return
    + status (enum[str], optional) - The status of the dispensers to return
        + Default: `all`
        + Members
            + `all`
            + `open`
            + `closed`
            + `closing`
            + `open_empty_address`
    + exclude_with_oracle (bool, optional) - Whether to exclude dispensers with an oracle
        + Default: `False`
    + cursor (str, optional) - The last index of the dispensers to return
        + Default: `None`
    + limit: `5` (int, optional) - The maximum number of dispensers to return
        + Default: `100`
    + offset (int, optional) - The number of lines to skip before returning results (overrides the `cursor` parameter)
        + Default: `None`
    + sort: `give_quantity:desc` (str, optional) - The sort order of the dispensers to return (overrides the `cursor` parameter)
        + Default: `None`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": [
                {
                    "tx_index": 26,
                    "tx_hash": "41cd4920db670aef82765d2f2af44e4e44ef7d9d3efb638be176676e865bf3ae",
                    "block_index": 132,
                    "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "asset": "XCP",
                    "give_quantity": 1,
                    "escrow_quantity": 10000,
                    "satoshirate": 1,
                    "status": 10,
                    "give_remaining": 0,
                    "oracle_address": null,
                    "last_status_tx_hash": null,
                    "origin": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "dispense_count": 2,
                    "last_status_tx_source": null,
                    "close_block_index": null,
                    "price": 1.0,
                    "fiat_price": null,
                    "oracle_price": null,
                    "fiat_unit": null,
                    "oracle_price_last_updated": null,
                    "satoshi_price": 1,
                    "block_time": 1740489677,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "The Counterparty protocol native currency",
                        "issuer": null,
                        "divisible": true,
                        "locked": true,
                        "owner": null
                    },
                    "give_quantity_normalized": "0.00000001",
                    "give_remaining_normalized": "0.00000000",
                    "escrow_quantity_normalized": "0.00010000",
                    "satoshirate_normalized": "0.00000001",
                    "satoshi_price_normalized": "0.00000001",
                    "price_normalized": "1.0000000000000000"
                },
                {
                    "tx_index": 29,
                    "tx_hash": "c2596f2a7e20ba0d206e86dd330c0facac65dc75a69befef012d3048c9dafd50",
                    "block_index": 133,
                    "source": "bcrt1qndrj8uy6the35p3gpjuuss7l29hwe0npylexmz",
                    "asset": "XCP",
                    "give_quantity": 1,
                    "escrow_quantity": 10000,
                    "satoshirate": 1,
                    "status": 0,
                    "give_remaining": 10000,
                    "oracle_address": null,
                    "last_status_tx_hash": null,
                    "origin": "bcrt1qndrj8uy6the35p3gpjuuss7l29hwe0npylexmz",
                    "dispense_count": 0,
                    "last_status_tx_source": null,
                    "close_block_index": null,
                    "price": 1.0,
                    "fiat_price": null,
                    "oracle_price": null,
                    "fiat_unit": null,
                    "oracle_price_last_updated": null,
                    "satoshi_price": 1,
                    "block_time": 1740489681,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "The Counterparty protocol native currency",
                        "issuer": null,
                        "divisible": true,
                        "locked": true,
                        "owner": null
                    },
                    "give_quantity_normalized": "0.00000001",
                    "give_remaining_normalized": "0.00010000",
                    "escrow_quantity_normalized": "0.00010000",
                    "satoshirate_normalized": "0.00000001",
                    "satoshi_price_normalized": "0.00000001",
                    "price_normalized": "1.0000000000000000"
                },
                {
                    "tx_index": 30,
                    "tx_hash": "d1c103ac8f76875e2c7f2ff452e9c73ec80534fd6513ae02abc9ca5bca4bcdb4",
                    "block_index": 141,
                    "source": "mzKzGcYgawRDhSwKMs48ivyc7kq6eDFnxX",
                    "asset": "XCP",
                    "give_quantity": 1,
                    "escrow_quantity": 10,
                    "satoshirate": 1,
                    "status": 10,
                    "give_remaining": 0,
                    "oracle_address": null,
                    "last_status_tx_hash": "a4c44498f7b9aeece3a4c01fc67471775a89cf1e8ac0c313fd93592e06287b05",
                    "origin": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "dispense_count": 0,
                    "last_status_tx_source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "close_block_index": 141,
                    "price": 1.0,
                    "fiat_price": null,
                    "oracle_price": null,
                    "fiat_unit": null,
                    "oracle_price_last_updated": null,
                    "satoshi_price": 1,
                    "block_time": 1740489711,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "The Counterparty protocol native currency",
                        "issuer": null,
                        "divisible": true,
                        "locked": true,
                        "owner": null
                    },
                    "give_quantity_normalized": "0.00000001",
                    "give_remaining_normalized": "0.00000000",
                    "escrow_quantity_normalized": "0.00000010",
                    "satoshirate_normalized": "0.00000001",
                    "satoshi_price_normalized": "0.00000001",
                    "price_normalized": "1.0000000000000000"
                },
                {
                    "tx_index": 33,
                    "tx_hash": "1e6f693fe2759c736df4febc587f45124e79e5d8d1ce2b79f8c0bbf0f18fd87d",
                    "block_index": 245,
                    "source": "bcrt1qquwz9xkh3dv34l49v32lk3kc283utd58ung2cn",
                    "asset": "XCP",
                    "give_quantity": 1,
                    "escrow_quantity": 10000,
                    "satoshirate": 1,
                    "status": 0,
                    "give_remaining": 9268,
                    "oracle_address": "bcrt1qquwz9xkh3dv34l49v32lk3kc283utd58ung2cn",
                    "last_status_tx_hash": null,
                    "origin": "bcrt1qquwz9xkh3dv34l49v32lk3kc283utd58ung2cn",
                    "dispense_count": 2,
                    "last_status_tx_source": null,
                    "close_block_index": null,
                    "price": 1.0,
                    "fiat_price": 0.01,
                    "oracle_price": 66600.0,
                    "fiat_unit": "USD",
                    "oracle_price_last_updated": 129,
                    "satoshi_price": 16,
                    "block_time": 1740490111,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "The Counterparty protocol native currency",
                        "issuer": null,
                        "divisible": true,
                        "locked": true,
                        "owner": null
                    },
                    "give_quantity_normalized": "0.00000001",
                    "give_remaining_normalized": "0.00009268",
                    "escrow_quantity_normalized": "0.00010000",
                    "satoshirate_normalized": "0.00000001",
                    "satoshi_price_normalized": "0.00000016",
                    "price_normalized": "1.0000000000000000"
                },
                {
                    "tx_index": 114,
                    "tx_hash": "c54957b9cbb662e2cc9eee1c09950f7365365a09abad1bdf1afb3cca05d63705",
                    "block_index": 237,
                    "source": "bcrt1qv82qg4jp6nn6wahdnx2d2u6cdfxyc2zuw7u9mv",
                    "asset": "XCP",
                    "give_quantity": 1,
                    "escrow_quantity": 5000,
                    "satoshirate": 1,
                    "status": 0,
                    "give_remaining": 2000,
                    "oracle_address": null,
                    "last_status_tx_hash": null,
                    "origin": "bcrt1qv82qg4jp6nn6wahdnx2d2u6cdfxyc2zuw7u9mv",
                    "dispense_count": 1,
                    "last_status_tx_source": null,
                    "close_block_index": null,
                    "price": 1.0,
                    "fiat_price": null,
                    "oracle_price": null,
                    "fiat_unit": null,
                    "oracle_price_last_updated": null,
                    "satoshi_price": 1,
                    "block_time": 1740490081,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "The Counterparty protocol native currency",
                        "issuer": null,
                        "divisible": true,
                        "locked": true,
                        "owner": null
                    },
                    "give_quantity_normalized": "0.00000001",
                    "give_remaining_normalized": "0.00002000",
                    "escrow_quantity_normalized": "0.00005000",
                    "satoshirate_normalized": "0.00000001",
                    "satoshi_price_normalized": "0.00000001",
                    "price_normalized": "1.0000000000000000"
                }
            ],
            "next_cursor": null,
            "result_count": 5
        }
    ```

### Get Dispenser By Address And Asset [GET /v2/assets/{asset}/dispensers/{address}{?verbose}]

Returns the dispenser of an address and an asset

+ Parameters
    + address: `bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n` (str, required) - The address to return
    + asset: `XCP` (str, required) - The asset to return
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": {
                "tx_index": 26,
                "tx_hash": "41cd4920db670aef82765d2f2af44e4e44ef7d9d3efb638be176676e865bf3ae",
                "block_index": 132,
                "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                "asset": "XCP",
                "give_quantity": 1,
                "escrow_quantity": 10000,
                "satoshirate": 1,
                "status": 10,
                "give_remaining": 0,
                "oracle_address": null,
                "last_status_tx_hash": null,
                "origin": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                "dispense_count": 2,
                "last_status_tx_source": null,
                "close_block_index": null,
                "price": 1.0,
                "fiat_price": null,
                "oracle_price": null,
                "fiat_unit": null,
                "oracle_price_last_updated": null,
                "satoshi_price": 1,
                "block_time": 1740489677,
                "asset_info": {
                    "asset_longname": null,
                    "description": "The Counterparty protocol native currency",
                    "issuer": null,
                    "divisible": true,
                    "locked": true,
                    "owner": null
                },
                "give_quantity_normalized": "0.00000001",
                "give_remaining_normalized": "0.00000000",
                "escrow_quantity_normalized": "0.00010000",
                "satoshirate_normalized": "0.00000001",
                "satoshi_price_normalized": "0.00000001",
                "price_normalized": "1.0000000000000000"
            }
        }
    ```

### Get Asset Holders [GET /v2/assets/{asset}/holders{?cursor}{&limit}{&offset}{&sort}{&verbose}]

Returns the holders of an asset

+ Parameters
    + asset: `BURNER` (str, required) - The asset to return
    + cursor (str, optional) - The last index of the holder to return
        + Default: `None`
    + limit: `5` (int, optional) - The maximum number of holders to return
        + Default: `100`
    + offset (int, optional) - The number of lines to skip before returning results (overrides the `cursor` parameter)
        + Default: `None`
    + sort: `quantity:desc` (str, optional) - The sort order of the holders to return (overrides the `cursor` parameter)
        + Default: `None`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": [
                {
                    "asset": "BURNER",
                    "address": "bcrt1qquwz9xkh3dv34l49v32lk3kc283utd58ung2cn",
                    "quantity": 80000000,
                    "escrow": null,
                    "cursor_id": "balances_55",
                    "holding_type": "balances",
                    "status": null,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "let's burn it",
                        "issuer": "bcrt1qyyjgcgnjrxkznrdk8pc9dwp98twx5qesptttlg",
                        "divisible": true,
                        "locked": true,
                        "owner": "bcrt1qyyjgcgnjrxkznrdk8pc9dwp98twx5qesptttlg"
                    },
                    "quantity_normalized": "0.80000000"
                },
                {
                    "asset": "BURNER",
                    "address": "bcrt1qyyjgcgnjrxkznrdk8pc9dwp98twx5qesptttlg",
                    "quantity": 20000000,
                    "escrow": null,
                    "cursor_id": "balances_56",
                    "holding_type": "balances",
                    "status": null,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "let's burn it",
                        "issuer": "bcrt1qyyjgcgnjrxkznrdk8pc9dwp98twx5qesptttlg",
                        "divisible": true,
                        "locked": true,
                        "owner": "bcrt1qyyjgcgnjrxkznrdk8pc9dwp98twx5qesptttlg"
                    },
                    "quantity_normalized": "0.20000000"
                }
            ],
            "next_cursor": null,
            "result_count": 2
        }
    ```

### Get Dispenses By Asset [GET /v2/assets/{asset}/dispenses{?block_index}{&cursor}{&limit}{&offset}{&verbose}]

Returns the dispenses of an asset

+ Parameters
    + asset: `XCP` (str, required) - The asset to return
    + block_index (int, optional) - The index of the block to return
        + Default: `None`
    + cursor (str, optional) - The last index of the dispenses to return
        + Default: `None`
    + limit: `5` (int, optional) - The maximum number of dispenses to return
        + Default: `100`
    + offset (int, optional) - The number of lines to skip before returning results (overrides the `cursor` parameter)
        + Default: `None`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": [
                {
                    "tx_index": 121,
                    "dispense_index": 0,
                    "tx_hash": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3",
                    "block_index": 245,
                    "source": "bcrt1qquwz9xkh3dv34l49v32lk3kc283utd58ung2cn",
                    "destination": "bcrt1qwats7crkdl4z6ac6tz2fn6pz6a5dt7hxzjustu",
                    "asset": "XCP",
                    "dispense_quantity": 66,
                    "dispenser_tx_hash": "1e6f693fe2759c736df4febc587f45124e79e5d8d1ce2b79f8c0bbf0f18fd87d",
                    "btc_amount": 1000,
                    "dispenser": {
                        "tx_index": 33,
                        "block_index": 245,
                        "source": "bcrt1qquwz9xkh3dv34l49v32lk3kc283utd58ung2cn",
                        "give_quantity": 1,
                        "escrow_quantity": 10000,
                        "satoshirate": 1,
                        "status": 0,
                        "give_remaining": 9268,
                        "oracle_address": "bcrt1qquwz9xkh3dv34l49v32lk3kc283utd58ung2cn",
                        "last_status_tx_hash": null,
                        "origin": "bcrt1qquwz9xkh3dv34l49v32lk3kc283utd58ung2cn",
                        "dispense_count": 2,
                        "last_status_tx_source": null,
                        "close_block_index": null,
                        "fiat_price": 0.01,
                        "oracle_price": 66600.0,
                        "fiat_unit": "USD",
                        "oracle_price_last_updated": 129,
                        "satoshi_price": 16,
                        "give_quantity_normalized": "0.00000001",
                        "give_remaining_normalized": "0.00009268",
                        "escrow_quantity_normalized": "0.00010000",
                        "satoshirate_normalized": "0.00000001",
                        "satoshi_price_normalized": "0.00000016"
                    },
                    "block_time": 1740490111,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "The Counterparty protocol native currency",
                        "issuer": null,
                        "divisible": true,
                        "locked": true,
                        "owner": null
                    },
                    "dispense_quantity_normalized": "0.00000066",
                    "btc_amount_normalized": "0.00001000"
                },
                {
                    "tx_index": 115,
                    "dispense_index": 0,
                    "tx_hash": "fef95527acddc38cf41b44de40d85e7f67dc5b51531997c0483c5c3b321f16c9",
                    "block_index": 237,
                    "source": "bcrt1qv82qg4jp6nn6wahdnx2d2u6cdfxyc2zuw7u9mv",
                    "destination": "bcrt1qdj4ckly3lwmjqld7pu60qu9myggm6pnd58ntz6",
                    "asset": "XCP",
                    "dispense_quantity": 3000,
                    "dispenser_tx_hash": "c54957b9cbb662e2cc9eee1c09950f7365365a09abad1bdf1afb3cca05d63705",
                    "btc_amount": 3000,
                    "dispenser": {
                        "tx_index": 114,
                        "block_index": 237,
                        "source": "bcrt1qv82qg4jp6nn6wahdnx2d2u6cdfxyc2zuw7u9mv",
                        "give_quantity": 1,
                        "escrow_quantity": 5000,
                        "satoshirate": 1,
                        "status": 0,
                        "give_remaining": 2000,
                        "oracle_address": null,
                        "last_status_tx_hash": null,
                        "origin": "bcrt1qv82qg4jp6nn6wahdnx2d2u6cdfxyc2zuw7u9mv",
                        "dispense_count": 1,
                        "last_status_tx_source": null,
                        "close_block_index": null,
                        "fiat_price": null,
                        "oracle_price": null,
                        "fiat_unit": null,
                        "oracle_price_last_updated": null,
                        "satoshi_price": 1,
                        "give_quantity_normalized": "0.00000001",
                        "give_remaining_normalized": "0.00002000",
                        "escrow_quantity_normalized": "0.00005000",
                        "satoshirate_normalized": "0.00000001",
                        "satoshi_price_normalized": "0.00000001"
                    },
                    "block_time": 1740490081,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "The Counterparty protocol native currency",
                        "issuer": null,
                        "divisible": true,
                        "locked": true,
                        "owner": null
                    },
                    "dispense_quantity_normalized": "0.00003000",
                    "btc_amount_normalized": "0.00003000"
                },
                {
                    "tx_index": 34,
                    "dispense_index": 0,
                    "tx_hash": "ad1c543d2cf46dc6a3314050c2d506dc1155d4e3896989e074bc765ef1aee102",
                    "block_index": 138,
                    "source": "bcrt1qquwz9xkh3dv34l49v32lk3kc283utd58ung2cn",
                    "destination": "bcrt1qs8qhqqz7us7w5kt08wqmxmqsl8h6jknlejhyru",
                    "asset": "XCP",
                    "dispense_quantity": 666,
                    "dispenser_tx_hash": "1e6f693fe2759c736df4febc587f45124e79e5d8d1ce2b79f8c0bbf0f18fd87d",
                    "btc_amount": 10000,
                    "dispenser": {
                        "tx_index": 33,
                        "block_index": 245,
                        "source": "bcrt1qquwz9xkh3dv34l49v32lk3kc283utd58ung2cn",
                        "give_quantity": 1,
                        "escrow_quantity": 10000,
                        "satoshirate": 1,
                        "status": 0,
                        "give_remaining": 9268,
                        "oracle_address": "bcrt1qquwz9xkh3dv34l49v32lk3kc283utd58ung2cn",
                        "last_status_tx_hash": null,
                        "origin": "bcrt1qquwz9xkh3dv34l49v32lk3kc283utd58ung2cn",
                        "dispense_count": 2,
                        "last_status_tx_source": null,
                        "close_block_index": null,
                        "fiat_price": 0.01,
                        "oracle_price": 66600.0,
                        "fiat_unit": "USD",
                        "oracle_price_last_updated": 129,
                        "satoshi_price": 16,
                        "give_quantity_normalized": "0.00000001",
                        "give_remaining_normalized": "0.00009268",
                        "escrow_quantity_normalized": "0.00010000",
                        "satoshirate_normalized": "0.00000001",
                        "satoshi_price_normalized": "0.00000016"
                    },
                    "block_time": 1740489700,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "The Counterparty protocol native currency",
                        "issuer": null,
                        "divisible": true,
                        "locked": true,
                        "owner": null
                    },
                    "dispense_quantity_normalized": "0.00000666",
                    "btc_amount_normalized": "0.00010000"
                },
                {
                    "tx_index": 28,
                    "dispense_index": 0,
                    "tx_hash": "6b57de313e045291168bd742555b44a9695a3640f691ee2d9732739e5f285f67",
                    "block_index": 132,
                    "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "destination": "bcrt1qdj4ckly3lwmjqld7pu60qu9myggm6pnd58ntz6",
                    "asset": "XCP",
                    "dispense_quantity": 4000,
                    "dispenser_tx_hash": "41cd4920db670aef82765d2f2af44e4e44ef7d9d3efb638be176676e865bf3ae",
                    "btc_amount": 4000,
                    "dispenser": {
                        "tx_index": 26,
                        "block_index": 132,
                        "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                        "give_quantity": 1,
                        "escrow_quantity": 10000,
                        "satoshirate": 1,
                        "status": 10,
                        "give_remaining": 0,
                        "oracle_address": null,
                        "last_status_tx_hash": null,
                        "origin": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                        "dispense_count": 2,
                        "last_status_tx_source": null,
                        "close_block_index": null,
                        "fiat_price": null,
                        "oracle_price": null,
                        "fiat_unit": null,
                        "oracle_price_last_updated": null,
                        "satoshi_price": 1,
                        "give_quantity_normalized": "0.00000001",
                        "give_remaining_normalized": "0.00000000",
                        "escrow_quantity_normalized": "0.00010000",
                        "satoshirate_normalized": "0.00000001",
                        "satoshi_price_normalized": "0.00000001"
                    },
                    "block_time": 1740489677,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "The Counterparty protocol native currency",
                        "issuer": null,
                        "divisible": true,
                        "locked": true,
                        "owner": null
                    },
                    "dispense_quantity_normalized": "0.00004000",
                    "btc_amount_normalized": "0.00004000"
                },
                {
                    "tx_index": 27,
                    "dispense_index": 0,
                    "tx_hash": "26bfec7d8335b6222db947c7a42b6c61459f92527a3724a2ec6f1102ff146dac",
                    "block_index": 131,
                    "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "destination": "bcrt1qdj4ckly3lwmjqld7pu60qu9myggm6pnd58ntz6",
                    "asset": "XCP",
                    "dispense_quantity": 6000,
                    "dispenser_tx_hash": "41cd4920db670aef82765d2f2af44e4e44ef7d9d3efb638be176676e865bf3ae",
                    "btc_amount": 6000,
                    "dispenser": {
                        "tx_index": 26,
                        "block_index": 132,
                        "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                        "give_quantity": 1,
                        "escrow_quantity": 10000,
                        "satoshirate": 1,
                        "status": 10,
                        "give_remaining": 0,
                        "oracle_address": null,
                        "last_status_tx_hash": null,
                        "origin": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                        "dispense_count": 2,
                        "last_status_tx_source": null,
                        "close_block_index": null,
                        "fiat_price": null,
                        "oracle_price": null,
                        "fiat_unit": null,
                        "oracle_price_last_updated": null,
                        "satoshi_price": 1,
                        "give_quantity_normalized": "0.00000001",
                        "give_remaining_normalized": "0.00000000",
                        "escrow_quantity_normalized": "0.00010000",
                        "satoshirate_normalized": "0.00000001",
                        "satoshi_price_normalized": "0.00000001"
                    },
                    "block_time": 1740489673,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "The Counterparty protocol native currency",
                        "issuer": null,
                        "divisible": true,
                        "locked": true,
                        "owner": null
                    },
                    "dispense_quantity_normalized": "0.00006000",
                    "btc_amount_normalized": "0.00006000"
                }
            ],
            "next_cursor": null,
            "result_count": 5
        }
    ```

### Get Subassets By Asset [GET /v2/assets/{asset}/subassets{?cursor}{&limit}{&offset}{&verbose}]

Returns asset subassets

+ Parameters
    + asset: `FAIRMINTB` (str, required) - The name of the asset to return
    + cursor (str, optional) - The last index of the assets to return
        + Default: `None`
    + limit: `5` (int, optional) - The maximum number of assets to return
        + Default: `100`
    + offset (int, optional) - The number of lines to skip before returning results (overrides the `cursor` parameter)
        + Default: `None`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": [],
            "next_cursor": null,
            "result_count": 0
        }
    ```

### Get Fairminters By Asset [GET /v2/assets/{asset}/fairminters{?status}{&cursor}{&limit}{&offset}{&verbose}]

Returns the fairminter by its asset

+ Parameters
    + asset: `BURNER` (str, required) - The asset of the fairminter to return
    + status (enum[str], optional) - The status of the fairminters to return
        + Default: `all`
        + Members
            + `all`
            + `open`
            + `closed`
            + `pending`
    + cursor (str, optional) - 
        + Default: `None`
    + limit (int, optional) - 
        + Default: `100`
    + offset (int, optional) - 
        + Default: `None`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": [
                {
                    "tx_hash": "2efa348123c9d59037cd1352f1074a77e6c56630f04c6a742623c0d403824cb8",
                    "tx_index": 96,
                    "block_index": 221,
                    "source": "bcrt1qyyjgcgnjrxkznrdk8pc9dwp98twx5qesptttlg",
                    "asset": "BURNER",
                    "asset_parent": null,
                    "asset_longname": null,
                    "description": "let's burn it",
                    "price": 1,
                    "quantity_by_price": 1,
                    "hard_cap": 100000000,
                    "burn_payment": true,
                    "max_mint_per_tx": 0,
                    "premint_quantity": 0,
                    "start_block": 0,
                    "end_block": 0,
                    "minted_asset_commission_int": 20000000,
                    "soft_cap": 0,
                    "soft_cap_deadline_block": 0,
                    "lock_description": true,
                    "lock_quantity": true,
                    "divisible": true,
                    "pre_minted": false,
                    "status": "closed",
                    "earned_quantity": 80000000,
                    "paid_quantity": 100000000,
                    "commission": 20000000,
                    "block_time": 1740489996,
                    "price_normalized": "1.0000000000000000",
                    "hard_cap_normalized": "1.00000000",
                    "soft_cap_normalized": "0.00000000",
                    "quantity_by_price_normalized": "0.00000001",
                    "max_mint_per_tx_normalized": "0.00000000",
                    "premint_quantity_normalized": "0.00000000",
                    "earned_quantity_normalized": "0.80000000",
                    "commission_normalized": "0.20000000",
                    "paid_quantity_normalized": "1.00000000"
                }
            ],
            "next_cursor": null,
            "result_count": 1
        }
    ```

### Get Fairmints By Asset [GET /v2/assets/{asset}/fairmints{?cursor}{&limit}{&offset}{&verbose}]

Returns the mints by asset

+ Parameters
    + asset: `BURNER` (str, required) - The asset of the mints to return
    + cursor (str, optional) - 
        + Default: `None`
    + limit (int, optional) - 
        + Default: `100`
    + offset (int, optional) - 
        + Default: `None`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": [
                {
                    "tx_hash": "f008cc467441d6088b240484737bc7c3a9665fca802126e7724a0e297fec8adc",
                    "tx_index": 97,
                    "block_index": 221,
                    "source": "bcrt1qquwz9xkh3dv34l49v32lk3kc283utd58ung2cn",
                    "fairminter_tx_hash": "2efa348123c9d59037cd1352f1074a77e6c56630f04c6a742623c0d403824cb8",
                    "asset": "BURNER",
                    "earn_quantity": 80000000,
                    "paid_quantity": 100000000,
                    "commission": 20000000,
                    "status": "valid",
                    "block_time": 1740489996,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "let's burn it",
                        "issuer": "bcrt1qyyjgcgnjrxkznrdk8pc9dwp98twx5qesptttlg",
                        "divisible": true,
                        "locked": true,
                        "owner": "bcrt1qyyjgcgnjrxkznrdk8pc9dwp98twx5qesptttlg"
                    },
                    "earn_quantity_normalized": "0.80000000",
                    "commission_normalized": "0.20000000",
                    "paid_quantity_normalized": "1.00000000"
                }
            ],
            "next_cursor": null,
            "result_count": 1
        }
    ```

### Get Fairmints By Address And Asset [GET /v2/assets/{asset}/fairmints/{address}{?cursor}{&limit}{&offset}{&verbose}]

Returns the mints by address and asset

+ Parameters
    + address: `bcrt1qdj4ckly3lwmjqld7pu60qu9myggm6pnd58ntz6` (str, required) - The address of the mints to return
    + asset: `BURNER` (str, required) - The asset of the mints to return
    + cursor (str, optional) - 
        + Default: `None`
    + limit (int, optional) - 
        + Default: `100`
    + offset (int, optional) - 
        + Default: `None`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": [],
            "next_cursor": null,
            "result_count": 0
        }
    ```

## Group Orders

### Get Orders [GET /v2/orders{?status}{&get_asset}{&give_asset}{&cursor}{&limit}{&offset}{&sort}{&verbose}]

Returns all the orders

+ Parameters
    + status (enum[str], optional) - The status of the orders to return
        + Default: `all`
        + Members
            + `all`
            + `open`
            + `expired`
            + `filled`
            + `cancelled`
    + get_asset (str, optional) - The get asset to return
        + Default: `None`
    + give_asset (str, optional) - The give asset to return
        + Default: `None`
    + cursor (str, optional) - The last index of the orders to return
        + Default: `None`
    + limit: `5` (int, optional) - The maximum number of orders to return
        + Default: `100`
    + offset (int, optional) - The number of lines to skip before returning results (overrides the `cursor` parameter)
        + Default: `None`
    + sort: `expiration:desc` (str, optional) - The sort order of the orders to return (overrides the `cursor` parameter)
        + Default: `None`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": [
                {
                    "tx_index": 53,
                    "tx_hash": "2064dd5294807ea46ffdb9f82780a89424b75ec45715ea0fbc6f440b31133b66",
                    "block_index": 179,
                    "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "give_asset": "XCP",
                    "give_quantity": 1000,
                    "give_remaining": 1000,
                    "get_asset": "BTC",
                    "get_quantity": 1000,
                    "get_remaining": 1000,
                    "expiration": 21,
                    "expire_index": 178,
                    "fee_required": 0,
                    "fee_required_remaining": 0,
                    "fee_provided": 10000,
                    "fee_provided_remaining": 10000,
                    "status": "expired",
                    "give_price": 1.0,
                    "get_price": 1.0,
                    "block_time": 1740489778,
                    "give_asset_info": {
                        "asset_longname": null,
                        "description": "The Counterparty protocol native currency",
                        "issuer": null,
                        "divisible": true,
                        "locked": true,
                        "owner": null
                    },
                    "get_asset_info": {
                        "divisible": true,
                        "asset_longname": null,
                        "description": "The Bitcoin cryptocurrency",
                        "locked": false,
                        "issuer": null
                    },
                    "give_quantity_normalized": "0.00001000",
                    "get_quantity_normalized": "0.00001000",
                    "get_remaining_normalized": "0.00001000",
                    "give_remaining_normalized": "0.00001000",
                    "fee_provided_normalized": "0.00010000",
                    "fee_required_normalized": "0.00000000",
                    "fee_required_remaining_normalized": "0.00000000",
                    "fee_provided_remaining_normalized": "0.00010000",
                    "give_price_normalized": "1.0000000000000000",
                    "get_price_normalized": "1.0000000000000000"
                },
                {
                    "tx_index": 55,
                    "tx_hash": "6a8b04722b5121498713e9ca34b3a634f0ef5f0cf3ee9a0753bd79b8c3f0cc10",
                    "block_index": 202,
                    "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "give_asset": "XCP",
                    "give_quantity": 10000,
                    "give_remaining": 5000,
                    "get_asset": "BTC",
                    "get_quantity": 10000,
                    "get_remaining": 5000,
                    "expiration": 21,
                    "expire_index": 201,
                    "fee_required": 0,
                    "fee_required_remaining": 0,
                    "fee_provided": 10000,
                    "fee_provided_remaining": 10000,
                    "status": "expired",
                    "give_price": 1.0,
                    "get_price": 1.0,
                    "block_time": 1740489926,
                    "give_asset_info": {
                        "asset_longname": null,
                        "description": "The Counterparty protocol native currency",
                        "issuer": null,
                        "divisible": true,
                        "locked": true,
                        "owner": null
                    },
                    "get_asset_info": {
                        "divisible": true,
                        "asset_longname": null,
                        "description": "The Bitcoin cryptocurrency",
                        "locked": false,
                        "issuer": null
                    },
                    "give_quantity_normalized": "0.00010000",
                    "get_quantity_normalized": "0.00010000",
                    "get_remaining_normalized": "0.00005000",
                    "give_remaining_normalized": "0.00005000",
                    "fee_provided_normalized": "0.00010000",
                    "fee_required_normalized": "0.00000000",
                    "fee_required_remaining_normalized": "0.00000000",
                    "fee_provided_remaining_normalized": "0.00010000",
                    "give_price_normalized": "1.0000000000000000",
                    "get_price_normalized": "1.0000000000000000"
                },
                {
                    "tx_index": 56,
                    "tx_hash": "16693d3e8624b05db62587be692a301eba7dc962293096694f84142bc3bfc5fd",
                    "block_index": 182,
                    "source": "bcrt1qdj4ckly3lwmjqld7pu60qu9myggm6pnd58ntz6",
                    "give_asset": "BTC",
                    "give_quantity": 2000,
                    "give_remaining": 0,
                    "get_asset": "XCP",
                    "get_quantity": 2000,
                    "get_remaining": 0,
                    "expiration": 21,
                    "expire_index": 202,
                    "fee_required": 0,
                    "fee_required_remaining": 0,
                    "fee_provided": 10000,
                    "fee_provided_remaining": 10000,
                    "status": "filled",
                    "give_price": 1.0,
                    "get_price": 1.0,
                    "block_time": 1740489847,
                    "give_asset_info": {
                        "divisible": true,
                        "asset_longname": null,
                        "description": "The Bitcoin cryptocurrency",
                        "locked": false,
                        "issuer": null
                    },
                    "get_asset_info": {
                        "asset_longname": null,
                        "description": "The Counterparty protocol native currency",
                        "issuer": null,
                        "divisible": true,
                        "locked": true,
                        "owner": null
                    },
                    "give_quantity_normalized": "0.00002000",
                    "get_quantity_normalized": "0.00002000",
                    "get_remaining_normalized": "0.00000000",
                    "give_remaining_normalized": "0.00000000",
                    "fee_provided_normalized": "0.00010000",
                    "fee_required_normalized": "0.00000000",
                    "fee_required_remaining_normalized": "0.00000000",
                    "fee_provided_remaining_normalized": "0.00010000",
                    "give_price_normalized": "1.0000000000000000",
                    "get_price_normalized": "1.0000000000000000"
                },
                {
                    "tx_index": 58,
                    "tx_hash": "c0b993f438e82940a24a6f2e74bca15b60d197c7afa93aea4d0f82b02cc89f96",
                    "block_index": 205,
                    "source": "bcrt1qj7zsv3gv750c8mr02eytgp5xen2ke6fpak6ztc",
                    "give_asset": "BTC",
                    "give_quantity": 3000,
                    "give_remaining": 2000,
                    "get_asset": "XCP",
                    "get_quantity": 3000,
                    "get_remaining": 2000,
                    "expiration": 21,
                    "expire_index": 204,
                    "fee_required": 0,
                    "fee_required_remaining": 0,
                    "fee_provided": 10000,
                    "fee_provided_remaining": 10000,
                    "status": "expired",
                    "give_price": 1.0,
                    "get_price": 1.0,
                    "block_time": 1740489939,
                    "give_asset_info": {
                        "divisible": true,
                        "asset_longname": null,
                        "description": "The Bitcoin cryptocurrency",
                        "locked": false,
                        "issuer": null
                    },
                    "get_asset_info": {
                        "asset_longname": null,
                        "description": "The Counterparty protocol native currency",
                        "issuer": null,
                        "divisible": true,
                        "locked": true,
                        "owner": null
                    },
                    "give_quantity_normalized": "0.00003000",
                    "get_quantity_normalized": "0.00003000",
                    "get_remaining_normalized": "0.00002000",
                    "give_remaining_normalized": "0.00002000",
                    "fee_provided_normalized": "0.00010000",
                    "fee_required_normalized": "0.00000000",
                    "fee_required_remaining_normalized": "0.00000000",
                    "fee_provided_remaining_normalized": "0.00010000",
                    "give_price_normalized": "1.0000000000000000",
                    "get_price_normalized": "1.0000000000000000"
                },
                {
                    "tx_index": 62,
                    "tx_hash": "6514dc909d289a00f85ba5b8db7b7198c6fafe5ed2e140773835a3fe73615f94",
                    "block_index": 188,
                    "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "give_asset": "XCP",
                    "give_quantity": 1000,
                    "give_remaining": 1000,
                    "get_asset": "BTC",
                    "get_quantity": 1000,
                    "get_remaining": 1000,
                    "expiration": 21,
                    "expire_index": 208,
                    "fee_required": 0,
                    "fee_required_remaining": 0,
                    "fee_provided": 10000,
                    "fee_provided_remaining": 10000,
                    "status": "cancelled",
                    "give_price": 1.0,
                    "get_price": 1.0,
                    "block_time": 1740489870,
                    "give_asset_info": {
                        "asset_longname": null,
                        "description": "The Counterparty protocol native currency",
                        "issuer": null,
                        "divisible": true,
                        "locked": true,
                        "owner": null
                    },
                    "get_asset_info": {
                        "divisible": true,
                        "asset_longname": null,
                        "description": "The Bitcoin cryptocurrency",
                        "locked": false,
                        "issuer": null
                    },
                    "give_quantity_normalized": "0.00001000",
                    "get_quantity_normalized": "0.00001000",
                    "get_remaining_normalized": "0.00001000",
                    "give_remaining_normalized": "0.00001000",
                    "fee_provided_normalized": "0.00010000",
                    "fee_required_normalized": "0.00000000",
                    "fee_required_remaining_normalized": "0.00000000",
                    "fee_provided_remaining_normalized": "0.00010000",
                    "give_price_normalized": "1.0000000000000000",
                    "get_price_normalized": "1.0000000000000000"
                }
            ],
            "next_cursor": 64,
            "result_count": 9
        }
    ```

### Get Order [GET /v2/orders/{order_hash}{?verbose}]

Returns the information of an order

+ Parameters
    + order_hash: `896df8fca70776cb0b38bd40c0f30d6cf657a8e5a62fb5542597d23bca4cbcd2` (str, required) - The hash of the transaction that created the order
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": {
                "tx_index": 119,
                "tx_hash": "896df8fca70776cb0b38bd40c0f30d6cf657a8e5a62fb5542597d23bca4cbcd2",
                "block_index": 242,
                "source": "bcrt1qquwz9xkh3dv34l49v32lk3kc283utd58ung2cn",
                "give_asset": "BTC",
                "give_quantity": 1000,
                "give_remaining": 0,
                "get_asset": "UTXOASSET",
                "get_quantity": 1000,
                "get_remaining": 0,
                "expiration": 21,
                "expire_index": 263,
                "fee_required": 0,
                "fee_required_remaining": 0,
                "fee_provided": 10000,
                "fee_provided_remaining": 10000,
                "status": "open",
                "give_price": 1.0,
                "get_price": 1.0,
                "block_time": 1740490099,
                "give_asset_info": {
                    "divisible": true,
                    "asset_longname": null,
                    "description": "The Bitcoin cryptocurrency",
                    "locked": false,
                    "issuer": null
                },
                "get_asset_info": {
                    "asset_longname": null,
                    "description": "My super asset",
                    "issuer": "bcrt1qs8qhqqz7us7w5kt08wqmxmqsl8h6jknlejhyru",
                    "divisible": true,
                    "locked": false,
                    "owner": "bcrt1qs8qhqqz7us7w5kt08wqmxmqsl8h6jknlejhyru"
                },
                "give_quantity_normalized": "0.00001000",
                "get_quantity_normalized": "0.00001000",
                "get_remaining_normalized": "0.00000000",
                "give_remaining_normalized": "0.00000000",
                "fee_provided_normalized": "0.00010000",
                "fee_required_normalized": "0.00000000",
                "fee_required_remaining_normalized": "0.00000000",
                "fee_provided_remaining_normalized": "0.00010000",
                "give_price_normalized": "1.0000000000000000",
                "get_price_normalized": "1.0000000000000000"
            }
        }
    ```

### Get Order Matches By Order [GET /v2/orders/{order_hash}/matches{?status}{&block_index}{&cursor}{&limit}{&offset}{&sort}{&verbose}]

Returns the order matches of an order

+ Parameters
    + order_hash: `a420cfa1fd7462a7c3ed97e8f1ce5784e74a29c16ef5e371c51591c325999106` (str, required) - The hash of the transaction that created the order
    + status (enum[str], optional) - The status of the order matches to return
        + Default: `all`
        + Members
            + `all`
            + `pending`
            + `completed`
            + `expired`
    + block_index (int, optional) - The block index of the order matches to return
        + Default: `None`
    + cursor (str, optional) - The last index of the order matches to return
        + Default: `None`
    + limit: `5` (int, optional) - The maximum number of order matches to return
        + Default: `100`
    + offset (int, optional) - The number of lines to skip before returning results (overrides the `cursor` parameter)
        + Default: `None`
    + sort: `forward_quantity:desc` (str, optional) - The sort order of the order matches to return (overrides the `cursor` parameter)
        + Default: `None`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": [
                {
                    "id": "a420cfa1fd7462a7c3ed97e8f1ce5784e74a29c16ef5e371c51591c325999106_896df8fca70776cb0b38bd40c0f30d6cf657a8e5a62fb5542597d23bca4cbcd2",
                    "tx0_index": 118,
                    "tx0_hash": "a420cfa1fd7462a7c3ed97e8f1ce5784e74a29c16ef5e371c51591c325999106",
                    "tx0_address": "bcrt1qs8qhqqz7us7w5kt08wqmxmqsl8h6jknlejhyru",
                    "tx1_index": 119,
                    "tx1_hash": "896df8fca70776cb0b38bd40c0f30d6cf657a8e5a62fb5542597d23bca4cbcd2",
                    "tx1_address": "bcrt1qquwz9xkh3dv34l49v32lk3kc283utd58ung2cn",
                    "forward_asset": "UTXOASSET",
                    "forward_quantity": 1000,
                    "backward_asset": "BTC",
                    "backward_quantity": 1000,
                    "tx0_block_index": 241,
                    "tx1_block_index": 242,
                    "block_index": 242,
                    "tx0_expiration": 21,
                    "tx1_expiration": 21,
                    "match_expire_index": 262,
                    "fee_paid": 0,
                    "status": "pending",
                    "backward_price": 1.0,
                    "forward_price": 1.0,
                    "block_time": 1740490099,
                    "forward_asset_info": {
                        "asset_longname": null,
                        "description": "My super asset",
                        "issuer": "bcrt1qs8qhqqz7us7w5kt08wqmxmqsl8h6jknlejhyru",
                        "divisible": true,
                        "locked": false,
                        "owner": "bcrt1qs8qhqqz7us7w5kt08wqmxmqsl8h6jknlejhyru"
                    },
                    "backward_asset_info": {
                        "divisible": true,
                        "asset_longname": null,
                        "description": "The Bitcoin cryptocurrency",
                        "locked": false,
                        "issuer": null
                    },
                    "forward_quantity_normalized": "0.00001000",
                    "backward_quantity_normalized": "0.00001000",
                    "fee_paid_normalized": "0.00000000",
                    "forward_price_normalized": "1.0000000000000000",
                    "backward_price_normalized": "1.0000000000000000"
                }
            ],
            "next_cursor": null,
            "result_count": 1
        }
    ```

### Get BTCPays By Order [GET /v2/orders/{order_hash}/btcpays{?cursor}{&limit}{&offset}{&verbose}]

Returns the BTC pays of an order

+ Parameters
    + order_hash: `6a8b04722b5121498713e9ca34b3a634f0ef5f0cf3ee9a0753bd79b8c3f0cc10` (str, required) - The hash of the transaction that created the order
    + cursor (str, optional) - The last index of the resolutions to return
        + Default: `None`
    + limit: `5` (int, optional) - The maximum number of resolutions to return
        + Default: `100`
    + offset (int, optional) - The number of lines to skip before returning results (overrides the `cursor` parameter)
        + Default: `None`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": [
                {
                    "tx_index": 57,
                    "tx_hash": "5752b590a88afde0a2481b5ca3de5c7cc18ccb4d6ebcfc87e4c59512324d399e",
                    "block_index": 182,
                    "source": "bcrt1qdj4ckly3lwmjqld7pu60qu9myggm6pnd58ntz6",
                    "destination": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "btc_amount": 2000,
                    "order_match_id": "6a8b04722b5121498713e9ca34b3a634f0ef5f0cf3ee9a0753bd79b8c3f0cc10_16693d3e8624b05db62587be692a301eba7dc962293096694f84142bc3bfc5fd",
                    "status": "valid",
                    "block_time": 1740489847,
                    "btc_amount_normalized": "0.00002000"
                }
            ],
            "next_cursor": null,
            "result_count": 1
        }
    ```

### Get Orders By Two Assets [GET /v2/orders/{asset1}/{asset2}{?status}{&cursor}{&limit}{&offset}{&sort}{&verbose}]

Returns the orders to exchange two assets

+ Parameters
    + asset1: `BTC` (str, required) - The first asset to return
    + asset2: `XCP` (str, required) - The second asset to return
    + status (enum[str], optional) - The status of the orders to return
        + Default: `all`
        + Members
            + `all`
            + `open`
            + `expired`
            + `filled`
            + `cancelled`
    + cursor (str, optional) - The last index of the orders to return
        + Default: `None`
    + limit: `5` (int, optional) - The maximum number of orders to return
        + Default: `100`
    + offset (int, optional) - The number of lines to skip before returning results (overrides the `cursor` parameter)
        + Default: `None`
    + sort: `expiration:desc` (str, optional) - The sort order of the orders to return (overrides the `cursor` parameter)
        + Default: `None`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": [
                {
                    "tx_index": 56,
                    "tx_hash": "16693d3e8624b05db62587be692a301eba7dc962293096694f84142bc3bfc5fd",
                    "block_index": 182,
                    "source": "bcrt1qdj4ckly3lwmjqld7pu60qu9myggm6pnd58ntz6",
                    "give_asset": "BTC",
                    "give_quantity": 2000,
                    "give_remaining": 0,
                    "get_asset": "XCP",
                    "get_quantity": 2000,
                    "get_remaining": 0,
                    "expiration": 21,
                    "expire_index": 202,
                    "fee_required": 0,
                    "fee_required_remaining": 0,
                    "fee_provided": 10000,
                    "fee_provided_remaining": 10000,
                    "status": "filled",
                    "market_pair": "BTC/XCP",
                    "market_dir": "SELL",
                    "market_price": "1.00000000",
                    "block_time": 1740489847,
                    "give_asset_info": {
                        "divisible": true,
                        "asset_longname": null,
                        "description": "The Bitcoin cryptocurrency",
                        "locked": false,
                        "issuer": null
                    },
                    "get_asset_info": {
                        "asset_longname": null,
                        "description": "The Counterparty protocol native currency",
                        "issuer": null,
                        "divisible": true,
                        "locked": true,
                        "owner": null
                    },
                    "give_quantity_normalized": "0.00002000",
                    "get_quantity_normalized": "0.00002000",
                    "get_remaining_normalized": "0.00000000",
                    "give_remaining_normalized": "0.00000000",
                    "fee_provided_normalized": "0.00010000",
                    "fee_required_normalized": "0.00000000",
                    "fee_required_remaining_normalized": "0.00000000",
                    "fee_provided_remaining_normalized": "0.00010000"
                },
                {
                    "tx_index": 58,
                    "tx_hash": "c0b993f438e82940a24a6f2e74bca15b60d197c7afa93aea4d0f82b02cc89f96",
                    "block_index": 205,
                    "source": "bcrt1qj7zsv3gv750c8mr02eytgp5xen2ke6fpak6ztc",
                    "give_asset": "BTC",
                    "give_quantity": 3000,
                    "give_remaining": 2000,
                    "get_asset": "XCP",
                    "get_quantity": 3000,
                    "get_remaining": 2000,
                    "expiration": 21,
                    "expire_index": 204,
                    "fee_required": 0,
                    "fee_required_remaining": 0,
                    "fee_provided": 10000,
                    "fee_provided_remaining": 10000,
                    "status": "expired",
                    "market_pair": "BTC/XCP",
                    "market_dir": "SELL",
                    "market_price": "1.00000000",
                    "block_time": 1740489939,
                    "give_asset_info": {
                        "divisible": true,
                        "asset_longname": null,
                        "description": "The Bitcoin cryptocurrency",
                        "locked": false,
                        "issuer": null
                    },
                    "get_asset_info": {
                        "asset_longname": null,
                        "description": "The Counterparty protocol native currency",
                        "issuer": null,
                        "divisible": true,
                        "locked": true,
                        "owner": null
                    },
                    "give_quantity_normalized": "0.00003000",
                    "get_quantity_normalized": "0.00003000",
                    "get_remaining_normalized": "0.00002000",
                    "give_remaining_normalized": "0.00002000",
                    "fee_provided_normalized": "0.00010000",
                    "fee_required_normalized": "0.00000000",
                    "fee_required_remaining_normalized": "0.00000000",
                    "fee_provided_remaining_normalized": "0.00010000"
                },
                {
                    "tx_index": 53,
                    "tx_hash": "2064dd5294807ea46ffdb9f82780a89424b75ec45715ea0fbc6f440b31133b66",
                    "block_index": 179,
                    "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "give_asset": "XCP",
                    "give_quantity": 1000,
                    "give_remaining": 1000,
                    "get_asset": "BTC",
                    "get_quantity": 1000,
                    "get_remaining": 1000,
                    "expiration": 21,
                    "expire_index": 178,
                    "fee_required": 0,
                    "fee_required_remaining": 0,
                    "fee_provided": 10000,
                    "fee_provided_remaining": 10000,
                    "status": "expired",
                    "market_pair": "BTC/XCP",
                    "market_dir": "BUY",
                    "market_price": "1.00000000",
                    "block_time": 1740489778,
                    "give_asset_info": {
                        "asset_longname": null,
                        "description": "The Counterparty protocol native currency",
                        "issuer": null,
                        "divisible": true,
                        "locked": true,
                        "owner": null
                    },
                    "get_asset_info": {
                        "divisible": true,
                        "asset_longname": null,
                        "description": "The Bitcoin cryptocurrency",
                        "locked": false,
                        "issuer": null
                    },
                    "give_quantity_normalized": "0.00001000",
                    "get_quantity_normalized": "0.00001000",
                    "get_remaining_normalized": "0.00001000",
                    "give_remaining_normalized": "0.00001000",
                    "fee_provided_normalized": "0.00010000",
                    "fee_required_normalized": "0.00000000",
                    "fee_required_remaining_normalized": "0.00000000",
                    "fee_provided_remaining_normalized": "0.00010000"
                },
                {
                    "tx_index": 55,
                    "tx_hash": "6a8b04722b5121498713e9ca34b3a634f0ef5f0cf3ee9a0753bd79b8c3f0cc10",
                    "block_index": 202,
                    "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "give_asset": "XCP",
                    "give_quantity": 10000,
                    "give_remaining": 5000,
                    "get_asset": "BTC",
                    "get_quantity": 10000,
                    "get_remaining": 5000,
                    "expiration": 21,
                    "expire_index": 201,
                    "fee_required": 0,
                    "fee_required_remaining": 0,
                    "fee_provided": 10000,
                    "fee_provided_remaining": 10000,
                    "status": "expired",
                    "market_pair": "BTC/XCP",
                    "market_dir": "BUY",
                    "market_price": "1.00000000",
                    "block_time": 1740489926,
                    "give_asset_info": {
                        "asset_longname": null,
                        "description": "The Counterparty protocol native currency",
                        "issuer": null,
                        "divisible": true,
                        "locked": true,
                        "owner": null
                    },
                    "get_asset_info": {
                        "divisible": true,
                        "asset_longname": null,
                        "description": "The Bitcoin cryptocurrency",
                        "locked": false,
                        "issuer": null
                    },
                    "give_quantity_normalized": "0.00010000",
                    "get_quantity_normalized": "0.00010000",
                    "get_remaining_normalized": "0.00005000",
                    "give_remaining_normalized": "0.00005000",
                    "fee_provided_normalized": "0.00010000",
                    "fee_required_normalized": "0.00000000",
                    "fee_required_remaining_normalized": "0.00000000",
                    "fee_provided_remaining_normalized": "0.00010000"
                },
                {
                    "tx_index": 62,
                    "tx_hash": "6514dc909d289a00f85ba5b8db7b7198c6fafe5ed2e140773835a3fe73615f94",
                    "block_index": 188,
                    "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "give_asset": "XCP",
                    "give_quantity": 1000,
                    "give_remaining": 1000,
                    "get_asset": "BTC",
                    "get_quantity": 1000,
                    "get_remaining": 1000,
                    "expiration": 21,
                    "expire_index": 208,
                    "fee_required": 0,
                    "fee_required_remaining": 0,
                    "fee_provided": 10000,
                    "fee_provided_remaining": 10000,
                    "status": "cancelled",
                    "market_pair": "BTC/XCP",
                    "market_dir": "BUY",
                    "market_price": "1.00000000",
                    "block_time": 1740489870,
                    "give_asset_info": {
                        "asset_longname": null,
                        "description": "The Counterparty protocol native currency",
                        "issuer": null,
                        "divisible": true,
                        "locked": true,
                        "owner": null
                    },
                    "get_asset_info": {
                        "divisible": true,
                        "asset_longname": null,
                        "description": "The Bitcoin cryptocurrency",
                        "locked": false,
                        "issuer": null
                    },
                    "give_quantity_normalized": "0.00001000",
                    "get_quantity_normalized": "0.00001000",
                    "get_remaining_normalized": "0.00001000",
                    "give_remaining_normalized": "0.00001000",
                    "fee_provided_normalized": "0.00010000",
                    "fee_required_normalized": "0.00000000",
                    "fee_required_remaining_normalized": "0.00000000",
                    "fee_provided_remaining_normalized": "0.00010000"
                }
            ],
            "next_cursor": 64,
            "result_count": 7
        }
    ```

### Get Order Matches By Two Assets [GET /v2/orders/{asset1}/{asset2}/matches{?status}{&block_index}{&cursor}{&limit}{&offset}{&sort}{&verbose}]

Returns the orders to exchange two assets

+ Parameters
    + asset1: `BTC` (str, required) - The first asset to return
    + asset2: `XCP` (str, required) - The second asset to return
    + status (enum[str], optional) - The status of the order matches to return
        + Default: `all`
        + Members
            + `all`
            + `pending`
            + `completed`
            + `expired`
    + block_index (int, optional) - The block index of the order matches to return
        + Default: `None`
    + cursor (str, optional) - The last index of the order matches to return
        + Default: `None`
    + limit: `5` (int, optional) - The maximum number of order matches to return
        + Default: `100`
    + offset (int, optional) - The number of lines to skip before returning results (overrides the `cursor` parameter)
        + Default: `None`
    + sort: `forward_quantity:desc` (str, optional) - The sort order of the order matches to return (overrides the `cursor` parameter)
        + Default: `None`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": [
                {
                    "id": "6a8b04722b5121498713e9ca34b3a634f0ef5f0cf3ee9a0753bd79b8c3f0cc10_c0b993f438e82940a24a6f2e74bca15b60d197c7afa93aea4d0f82b02cc89f96",
                    "tx0_index": 55,
                    "tx0_hash": "6a8b04722b5121498713e9ca34b3a634f0ef5f0cf3ee9a0753bd79b8c3f0cc10",
                    "tx0_address": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "tx1_index": 58,
                    "tx1_hash": "c0b993f438e82940a24a6f2e74bca15b60d197c7afa93aea4d0f82b02cc89f96",
                    "tx1_address": "bcrt1qj7zsv3gv750c8mr02eytgp5xen2ke6fpak6ztc",
                    "forward_asset": "XCP",
                    "forward_quantity": 3000,
                    "backward_asset": "BTC",
                    "backward_quantity": 3000,
                    "tx0_block_index": 181,
                    "tx1_block_index": 183,
                    "block_index": 204,
                    "tx0_expiration": 21,
                    "tx1_expiration": 21,
                    "match_expire_index": 203,
                    "fee_paid": 0,
                    "status": "expired",
                    "market_pair": "BTC/XCP",
                    "market_dir": "BUY",
                    "market_price": "1.00000000",
                    "block_time": 1740489935,
                    "forward_asset_info": {
                        "asset_longname": null,
                        "description": "The Counterparty protocol native currency",
                        "issuer": null,
                        "divisible": true,
                        "locked": true,
                        "owner": null
                    },
                    "backward_asset_info": {
                        "divisible": true,
                        "asset_longname": null,
                        "description": "The Bitcoin cryptocurrency",
                        "locked": false,
                        "issuer": null
                    },
                    "forward_quantity_normalized": "0.00003000",
                    "backward_quantity_normalized": "0.00003000",
                    "fee_paid_normalized": "0.00000000"
                },
                {
                    "id": "6a8b04722b5121498713e9ca34b3a634f0ef5f0cf3ee9a0753bd79b8c3f0cc10_16693d3e8624b05db62587be692a301eba7dc962293096694f84142bc3bfc5fd",
                    "tx0_index": 55,
                    "tx0_hash": "6a8b04722b5121498713e9ca34b3a634f0ef5f0cf3ee9a0753bd79b8c3f0cc10",
                    "tx0_address": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "tx1_index": 56,
                    "tx1_hash": "16693d3e8624b05db62587be692a301eba7dc962293096694f84142bc3bfc5fd",
                    "tx1_address": "bcrt1qdj4ckly3lwmjqld7pu60qu9myggm6pnd58ntz6",
                    "forward_asset": "XCP",
                    "forward_quantity": 2000,
                    "backward_asset": "BTC",
                    "backward_quantity": 2000,
                    "tx0_block_index": 180,
                    "tx1_block_index": 181,
                    "block_index": 182,
                    "tx0_expiration": 21,
                    "tx1_expiration": 21,
                    "match_expire_index": 201,
                    "fee_paid": 0,
                    "status": "completed",
                    "market_pair": "BTC/XCP",
                    "market_dir": "BUY",
                    "market_price": "1.00000000",
                    "block_time": 1740489847,
                    "forward_asset_info": {
                        "asset_longname": null,
                        "description": "The Counterparty protocol native currency",
                        "issuer": null,
                        "divisible": true,
                        "locked": true,
                        "owner": null
                    },
                    "backward_asset_info": {
                        "divisible": true,
                        "asset_longname": null,
                        "description": "The Bitcoin cryptocurrency",
                        "locked": false,
                        "issuer": null
                    },
                    "forward_quantity_normalized": "0.00002000",
                    "backward_quantity_normalized": "0.00002000",
                    "fee_paid_normalized": "0.00000000"
                },
                {
                    "id": "2064dd5294807ea46ffdb9f82780a89424b75ec45715ea0fbc6f440b31133b66_1018e9622091c61deb0a374f7a8898b56ca433be915fe9a732ae5d0c8c7a4482",
                    "tx0_index": 53,
                    "tx0_hash": "2064dd5294807ea46ffdb9f82780a89424b75ec45715ea0fbc6f440b31133b66",
                    "tx0_address": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "tx1_index": 54,
                    "tx1_hash": "1018e9622091c61deb0a374f7a8898b56ca433be915fe9a732ae5d0c8c7a4482",
                    "tx1_address": "bcrt1qdj4ckly3lwmjqld7pu60qu9myggm6pnd58ntz6",
                    "forward_asset": "XCP",
                    "forward_quantity": 1000,
                    "backward_asset": "BTC",
                    "backward_quantity": 1000,
                    "tx0_block_index": 157,
                    "tx1_block_index": 158,
                    "block_index": 179,
                    "tx0_expiration": 21,
                    "tx1_expiration": 20,
                    "match_expire_index": 178,
                    "fee_paid": 0,
                    "status": "expired",
                    "market_pair": "BTC/XCP",
                    "market_dir": "BUY",
                    "market_price": "1.00000000",
                    "block_time": 1740489778,
                    "forward_asset_info": {
                        "asset_longname": null,
                        "description": "The Counterparty protocol native currency",
                        "issuer": null,
                        "divisible": true,
                        "locked": true,
                        "owner": null
                    },
                    "backward_asset_info": {
                        "divisible": true,
                        "asset_longname": null,
                        "description": "The Bitcoin cryptocurrency",
                        "locked": false,
                        "issuer": null
                    },
                    "forward_quantity_normalized": "0.00001000",
                    "backward_quantity_normalized": "0.00001000",
                    "fee_paid_normalized": "0.00000000"
                },
                {
                    "id": "9198a9256ee36ffaa1c68b2098d9920bf461858924c70baa1e2e616814a81c54_c0b993f438e82940a24a6f2e74bca15b60d197c7afa93aea4d0f82b02cc89f96",
                    "tx0_index": 64,
                    "tx0_hash": "9198a9256ee36ffaa1c68b2098d9920bf461858924c70baa1e2e616814a81c54",
                    "tx0_address": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "tx1_index": 58,
                    "tx1_hash": "c0b993f438e82940a24a6f2e74bca15b60d197c7afa93aea4d0f82b02cc89f96",
                    "tx1_address": "bcrt1qj7zsv3gv750c8mr02eytgp5xen2ke6fpak6ztc",
                    "forward_asset": "XCP",
                    "forward_quantity": 1000,
                    "backward_asset": "BTC",
                    "backward_quantity": 1000,
                    "tx0_block_index": 189,
                    "tx1_block_index": 204,
                    "block_index": 225,
                    "tx0_expiration": 21,
                    "tx1_expiration": 21,
                    "match_expire_index": 224,
                    "fee_paid": 0,
                    "status": "expired",
                    "market_pair": "BTC/XCP",
                    "market_dir": "BUY",
                    "market_price": "1.00000000",
                    "block_time": 1740490010,
                    "forward_asset_info": {
                        "asset_longname": null,
                        "description": "The Counterparty protocol native currency",
                        "issuer": null,
                        "divisible": true,
                        "locked": true,
                        "owner": null
                    },
                    "backward_asset_info": {
                        "divisible": true,
                        "asset_longname": null,
                        "description": "The Bitcoin cryptocurrency",
                        "locked": false,
                        "issuer": null
                    },
                    "forward_quantity_normalized": "0.00001000",
                    "backward_quantity_normalized": "0.00001000",
                    "fee_paid_normalized": "0.00000000"
                }
            ],
            "next_cursor": null,
            "result_count": 4
        }
    ```

## Group Order_matches

### Get All Order Matches [GET /v2/order_matches{?status}{&block_index}{&cursor}{&limit}{&offset}{&sort}{&verbose}]

Returns all the order matches

+ Parameters
    + status (enum[str], optional) - The status of the order matches to return
        + Default: `all`
        + Members
            + `all`
            + `pending`
            + `completed`
            + `expired`
    + block_index (int, optional) - The block index of the order matches to return
        + Default: `None`
    + cursor (str, optional) - The last index of the order matches to return
        + Default: `None`
    + limit: `5` (int, optional) - The maximum number of order matches to return
        + Default: `100`
    + offset (int, optional) - The number of lines to skip before returning results (overrides the `cursor` parameter)
        + Default: `None`
    + sort: `forward_quantity:desc` (str, optional) - The sort order of the order matches to return (overrides the `cursor` parameter)
        + Default: `None`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": [
                {
                    "id": "6a8b04722b5121498713e9ca34b3a634f0ef5f0cf3ee9a0753bd79b8c3f0cc10_c0b993f438e82940a24a6f2e74bca15b60d197c7afa93aea4d0f82b02cc89f96",
                    "tx0_index": 55,
                    "tx0_hash": "6a8b04722b5121498713e9ca34b3a634f0ef5f0cf3ee9a0753bd79b8c3f0cc10",
                    "tx0_address": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "tx1_index": 58,
                    "tx1_hash": "c0b993f438e82940a24a6f2e74bca15b60d197c7afa93aea4d0f82b02cc89f96",
                    "tx1_address": "bcrt1qj7zsv3gv750c8mr02eytgp5xen2ke6fpak6ztc",
                    "forward_asset": "XCP",
                    "forward_quantity": 3000,
                    "backward_asset": "BTC",
                    "backward_quantity": 3000,
                    "tx0_block_index": 181,
                    "tx1_block_index": 183,
                    "block_index": 204,
                    "tx0_expiration": 21,
                    "tx1_expiration": 21,
                    "match_expire_index": 203,
                    "fee_paid": 0,
                    "status": "expired",
                    "backward_price": 1.0,
                    "forward_price": 1.0,
                    "block_time": 1740489935,
                    "forward_asset_info": {
                        "asset_longname": null,
                        "description": "The Counterparty protocol native currency",
                        "issuer": null,
                        "divisible": true,
                        "locked": true,
                        "owner": null
                    },
                    "backward_asset_info": {
                        "divisible": true,
                        "asset_longname": null,
                        "description": "The Bitcoin cryptocurrency",
                        "locked": false,
                        "issuer": null
                    },
                    "forward_quantity_normalized": "0.00003000",
                    "backward_quantity_normalized": "0.00003000",
                    "fee_paid_normalized": "0.00000000",
                    "forward_price_normalized": "1.0000000000000000",
                    "backward_price_normalized": "1.0000000000000000"
                },
                {
                    "id": "6a8b04722b5121498713e9ca34b3a634f0ef5f0cf3ee9a0753bd79b8c3f0cc10_16693d3e8624b05db62587be692a301eba7dc962293096694f84142bc3bfc5fd",
                    "tx0_index": 55,
                    "tx0_hash": "6a8b04722b5121498713e9ca34b3a634f0ef5f0cf3ee9a0753bd79b8c3f0cc10",
                    "tx0_address": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "tx1_index": 56,
                    "tx1_hash": "16693d3e8624b05db62587be692a301eba7dc962293096694f84142bc3bfc5fd",
                    "tx1_address": "bcrt1qdj4ckly3lwmjqld7pu60qu9myggm6pnd58ntz6",
                    "forward_asset": "XCP",
                    "forward_quantity": 2000,
                    "backward_asset": "BTC",
                    "backward_quantity": 2000,
                    "tx0_block_index": 180,
                    "tx1_block_index": 181,
                    "block_index": 182,
                    "tx0_expiration": 21,
                    "tx1_expiration": 21,
                    "match_expire_index": 201,
                    "fee_paid": 0,
                    "status": "completed",
                    "backward_price": 1.0,
                    "forward_price": 1.0,
                    "block_time": 1740489847,
                    "forward_asset_info": {
                        "asset_longname": null,
                        "description": "The Counterparty protocol native currency",
                        "issuer": null,
                        "divisible": true,
                        "locked": true,
                        "owner": null
                    },
                    "backward_asset_info": {
                        "divisible": true,
                        "asset_longname": null,
                        "description": "The Bitcoin cryptocurrency",
                        "locked": false,
                        "issuer": null
                    },
                    "forward_quantity_normalized": "0.00002000",
                    "backward_quantity_normalized": "0.00002000",
                    "fee_paid_normalized": "0.00000000",
                    "forward_price_normalized": "1.0000000000000000",
                    "backward_price_normalized": "1.0000000000000000"
                },
                {
                    "id": "2064dd5294807ea46ffdb9f82780a89424b75ec45715ea0fbc6f440b31133b66_1018e9622091c61deb0a374f7a8898b56ca433be915fe9a732ae5d0c8c7a4482",
                    "tx0_index": 53,
                    "tx0_hash": "2064dd5294807ea46ffdb9f82780a89424b75ec45715ea0fbc6f440b31133b66",
                    "tx0_address": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "tx1_index": 54,
                    "tx1_hash": "1018e9622091c61deb0a374f7a8898b56ca433be915fe9a732ae5d0c8c7a4482",
                    "tx1_address": "bcrt1qdj4ckly3lwmjqld7pu60qu9myggm6pnd58ntz6",
                    "forward_asset": "XCP",
                    "forward_quantity": 1000,
                    "backward_asset": "BTC",
                    "backward_quantity": 1000,
                    "tx0_block_index": 157,
                    "tx1_block_index": 158,
                    "block_index": 179,
                    "tx0_expiration": 21,
                    "tx1_expiration": 20,
                    "match_expire_index": 178,
                    "fee_paid": 0,
                    "status": "expired",
                    "backward_price": 1.0,
                    "forward_price": 1.0,
                    "block_time": 1740489778,
                    "forward_asset_info": {
                        "asset_longname": null,
                        "description": "The Counterparty protocol native currency",
                        "issuer": null,
                        "divisible": true,
                        "locked": true,
                        "owner": null
                    },
                    "backward_asset_info": {
                        "divisible": true,
                        "asset_longname": null,
                        "description": "The Bitcoin cryptocurrency",
                        "locked": false,
                        "issuer": null
                    },
                    "forward_quantity_normalized": "0.00001000",
                    "backward_quantity_normalized": "0.00001000",
                    "fee_paid_normalized": "0.00000000",
                    "forward_price_normalized": "1.0000000000000000",
                    "backward_price_normalized": "1.0000000000000000"
                },
                {
                    "id": "9198a9256ee36ffaa1c68b2098d9920bf461858924c70baa1e2e616814a81c54_c0b993f438e82940a24a6f2e74bca15b60d197c7afa93aea4d0f82b02cc89f96",
                    "tx0_index": 64,
                    "tx0_hash": "9198a9256ee36ffaa1c68b2098d9920bf461858924c70baa1e2e616814a81c54",
                    "tx0_address": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "tx1_index": 58,
                    "tx1_hash": "c0b993f438e82940a24a6f2e74bca15b60d197c7afa93aea4d0f82b02cc89f96",
                    "tx1_address": "bcrt1qj7zsv3gv750c8mr02eytgp5xen2ke6fpak6ztc",
                    "forward_asset": "XCP",
                    "forward_quantity": 1000,
                    "backward_asset": "BTC",
                    "backward_quantity": 1000,
                    "tx0_block_index": 189,
                    "tx1_block_index": 204,
                    "block_index": 225,
                    "tx0_expiration": 21,
                    "tx1_expiration": 21,
                    "match_expire_index": 224,
                    "fee_paid": 0,
                    "status": "expired",
                    "backward_price": 1.0,
                    "forward_price": 1.0,
                    "block_time": 1740490010,
                    "forward_asset_info": {
                        "asset_longname": null,
                        "description": "The Counterparty protocol native currency",
                        "issuer": null,
                        "divisible": true,
                        "locked": true,
                        "owner": null
                    },
                    "backward_asset_info": {
                        "divisible": true,
                        "asset_longname": null,
                        "description": "The Bitcoin cryptocurrency",
                        "locked": false,
                        "issuer": null
                    },
                    "forward_quantity_normalized": "0.00001000",
                    "backward_quantity_normalized": "0.00001000",
                    "fee_paid_normalized": "0.00000000",
                    "forward_price_normalized": "1.0000000000000000",
                    "backward_price_normalized": "1.0000000000000000"
                },
                {
                    "id": "a420cfa1fd7462a7c3ed97e8f1ce5784e74a29c16ef5e371c51591c325999106_896df8fca70776cb0b38bd40c0f30d6cf657a8e5a62fb5542597d23bca4cbcd2",
                    "tx0_index": 118,
                    "tx0_hash": "a420cfa1fd7462a7c3ed97e8f1ce5784e74a29c16ef5e371c51591c325999106",
                    "tx0_address": "bcrt1qs8qhqqz7us7w5kt08wqmxmqsl8h6jknlejhyru",
                    "tx1_index": 119,
                    "tx1_hash": "896df8fca70776cb0b38bd40c0f30d6cf657a8e5a62fb5542597d23bca4cbcd2",
                    "tx1_address": "bcrt1qquwz9xkh3dv34l49v32lk3kc283utd58ung2cn",
                    "forward_asset": "UTXOASSET",
                    "forward_quantity": 1000,
                    "backward_asset": "BTC",
                    "backward_quantity": 1000,
                    "tx0_block_index": 241,
                    "tx1_block_index": 242,
                    "block_index": 242,
                    "tx0_expiration": 21,
                    "tx1_expiration": 21,
                    "match_expire_index": 262,
                    "fee_paid": 0,
                    "status": "pending",
                    "backward_price": 1.0,
                    "forward_price": 1.0,
                    "block_time": 1740490099,
                    "forward_asset_info": {
                        "asset_longname": null,
                        "description": "My super asset",
                        "issuer": "bcrt1qs8qhqqz7us7w5kt08wqmxmqsl8h6jknlejhyru",
                        "divisible": true,
                        "locked": false,
                        "owner": "bcrt1qs8qhqqz7us7w5kt08wqmxmqsl8h6jknlejhyru"
                    },
                    "backward_asset_info": {
                        "divisible": true,
                        "asset_longname": null,
                        "description": "The Bitcoin cryptocurrency",
                        "locked": false,
                        "issuer": null
                    },
                    "forward_quantity_normalized": "0.00001000",
                    "backward_quantity_normalized": "0.00001000",
                    "fee_paid_normalized": "0.00000000",
                    "forward_price_normalized": "1.0000000000000000",
                    "backward_price_normalized": "1.0000000000000000"
                }
            ],
            "next_cursor": null,
            "result_count": 5
        }
    ```

## Group Bets

### Get Bets [GET /v2/bets{?status}{&cursor}{&limit}{&offset}{&verbose}]

Returns the bets of a feed

+ Parameters
    + status: `filled` (enum[str], optional) - The status of the bet
        + Default: `open`
        + Members
            + `cancelled`
            + `dropped`
            + `expired`
            + `filled`
            + `open`
    + cursor (str, optional) - The last index of the bets to return
        + Default: `None`
    + limit: `5` (int, optional) - The maximum number of bets to return
        + Default: `100`
    + offset (int, optional) - The number of lines to skip before returning results (overrides the `cursor` parameter)
        + Default: `None`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": [],
            "next_cursor": null,
            "result_count": 0
        }
    ```

### Get Bet [GET /v2/bets/{bet_hash}{?verbose}]

Returns the information of a bet

+ Parameters
    + bet_hash: `5d097b4729cb74d927b4458d365beb811a26fcee7f8712f049ecbe780eb496ed` (str, required) - The hash of the transaction that created the bet
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "error": "Not found"
        }
    ```

### Get Bet Matches By Bet [GET /v2/bets/{bet_hash}/matches{?status}{&cursor}{&limit}{&offset}{&verbose}]

Returns the bet matches of a bet

+ Parameters
    + bet_hash: `5d097b4729cb74d927b4458d365beb811a26fcee7f8712f049ecbe780eb496ed` (str, required) - The hash of the transaction that created the bet
    + status: `expired` (enum[str], optional) - The status of the bet matches
        + Default: `pending`
        + Members
            + `dropped`
            + `expired`
            + `pending`
            + `settled: for equal`
            + `settled: for notequal`
            + `settled: liquidated for bear`
    + cursor (str, optional) - The last index of the bet matches to return
        + Default: `None`
    + limit: `5` (int, optional) - The maximum number of bet matches to return
        + Default: `100`
    + offset (int, optional) - The number of lines to skip before returning results (overrides the `cursor` parameter)
        + Default: `None`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": [],
            "next_cursor": null,
            "result_count": 0
        }
    ```

### Get Resolutions By Bet [GET /v2/bets/{bet_hash}/resolutions{?cursor}{&limit}{&offset}{&verbose}]

Returns the resolutions of a bet

+ Parameters
    + bet_hash: `36bbbb7dbd85054dac140a8ad8204eda2ee859545528bd2a9da69ad77c277ace` (str, required) - The hash of the transaction that created the bet
    + cursor (str, optional) - The last index of the resolutions to return
        + Default: `None`
    + limit: `5` (int, optional) - The maximum number of resolutions to return
        + Default: `100`
    + offset (int, optional) - The number of lines to skip before returning results (overrides the `cursor` parameter)
        + Default: `None`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": [],
            "next_cursor": null,
            "result_count": 0
        }
    ```

## Group Burns

### Get All Burns [GET /v2/burns{?cursor}{&limit}{&offset}{&verbose}]

Returns the burns

+ Parameters
    + cursor (str, optional) - The last index of the burns to return
        + Default: `None`
    + limit: `5` (int, optional) - The maximum number of burns to return
        + Default: `100`
    + offset (int, optional) - The number of lines to skip before returning results (overrides the `cursor` parameter)
        + Default: `None`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": [
                {
                    "tx_index": 9,
                    "tx_hash": "beda70b3db805311a89d8cd707eac784473ce3a6d7e7b6230b6533a7a242c0db",
                    "block_index": 112,
                    "source": "bcrt1qqus708ucy6kecks0w8pykqmghard6kqf8tus06",
                    "burned": 50000000,
                    "earned": 74999998167,
                    "status": "valid",
                    "block_time": 1740489603,
                    "burned_normalized": "0.50000000",
                    "earned_normalized": "749.99998167"
                },
                {
                    "tx_index": 8,
                    "tx_hash": "1a7703de19911995c072fdc8c3f6d7a80a162a19ab1a82f5cb66dfbea1c6ecd5",
                    "block_index": 112,
                    "source": "bcrt1qquwz9xkh3dv34l49v32lk3kc283utd58ung2cn",
                    "burned": 50000000,
                    "earned": 74999998167,
                    "status": "valid",
                    "block_time": 1740489603,
                    "burned_normalized": "0.50000000",
                    "earned_normalized": "749.99998167"
                },
                {
                    "tx_index": 7,
                    "tx_hash": "708d14f99f04b9b6762c2583fa8fbd34f49ccf6d12db4f1e4bcf7374dab123c8",
                    "block_index": 112,
                    "source": "bcrt1qv82qg4jp6nn6wahdnx2d2u6cdfxyc2zuw7u9mv",
                    "burned": 50000000,
                    "earned": 74999998167,
                    "status": "valid",
                    "block_time": 1740489603,
                    "burned_normalized": "0.50000000",
                    "earned_normalized": "749.99998167"
                },
                {
                    "tx_index": 6,
                    "tx_hash": "941d4b64e401987ea35a2aba14b68356311a81db0373e3a1758044db0a1400a8",
                    "block_index": 112,
                    "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "burned": 50000000,
                    "earned": 74999998167,
                    "status": "valid",
                    "block_time": 1740489603,
                    "burned_normalized": "0.50000000",
                    "earned_normalized": "749.99998167"
                },
                {
                    "tx_index": 5,
                    "tx_hash": "91ba82625007684a2c815834fec18d42ad4bde6f61abeeef2d0c2d51f6e1df95",
                    "block_index": 112,
                    "source": "bcrt1qwats7crkdl4z6ac6tz2fn6pz6a5dt7hxzjustu",
                    "burned": 50000000,
                    "earned": 74999998167,
                    "status": "valid",
                    "block_time": 1740489603,
                    "burned_normalized": "0.50000000",
                    "earned_normalized": "749.99998167"
                }
            ],
            "next_cursor": 4,
            "result_count": 10
        }
    ```

## Group Dispensers

### Get Dispensers [GET /v2/dispensers{?status}{&exclude_with_oracle}{&cursor}{&limit}{&offset}{&sort}{&verbose}]

Returns all dispensers

+ Parameters
    + status (enum[str], optional) - The status of the dispensers to return
        + Default: `all`
        + Members
            + `all`
            + `open`
            + `closed`
            + `closing`
            + `open_empty_address`
    + exclude_with_oracle (bool, optional) - Whether to exclude dispensers with an oracle
        + Default: `False`
    + cursor (str, optional) - The last index of the dispensers to return
        + Default: `None`
    + limit: `5` (int, optional) - The maximum number of dispensers to return
        + Default: `100`
    + offset (int, optional) - The number of lines to skip before returning results (overrides the `cursor` parameter)
        + Default: `None`
    + sort: `block_index:asc` (str, optional) - The sort order of the dispensers to return (overrides the `cursor` parameter)
        + Default: `None`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": [
                {
                    "tx_index": 26,
                    "tx_hash": "41cd4920db670aef82765d2f2af44e4e44ef7d9d3efb638be176676e865bf3ae",
                    "block_index": 132,
                    "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "asset": "XCP",
                    "give_quantity": 1,
                    "escrow_quantity": 10000,
                    "satoshirate": 1,
                    "status": 10,
                    "give_remaining": 0,
                    "oracle_address": null,
                    "last_status_tx_hash": null,
                    "origin": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "dispense_count": 2,
                    "last_status_tx_source": null,
                    "close_block_index": null,
                    "price": 1.0,
                    "fiat_price": null,
                    "oracle_price": null,
                    "fiat_unit": null,
                    "oracle_price_last_updated": null,
                    "satoshi_price": 1,
                    "block_time": 1740489677,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "The Counterparty protocol native currency",
                        "issuer": null,
                        "divisible": true,
                        "locked": true,
                        "owner": null
                    },
                    "give_quantity_normalized": "0.00000001",
                    "give_remaining_normalized": "0.00000000",
                    "escrow_quantity_normalized": "0.00010000",
                    "satoshirate_normalized": "0.00000001",
                    "satoshi_price_normalized": "0.00000001",
                    "price_normalized": "1.0000000000000000"
                },
                {
                    "tx_index": 29,
                    "tx_hash": "c2596f2a7e20ba0d206e86dd330c0facac65dc75a69befef012d3048c9dafd50",
                    "block_index": 133,
                    "source": "bcrt1qndrj8uy6the35p3gpjuuss7l29hwe0npylexmz",
                    "asset": "XCP",
                    "give_quantity": 1,
                    "escrow_quantity": 10000,
                    "satoshirate": 1,
                    "status": 0,
                    "give_remaining": 10000,
                    "oracle_address": null,
                    "last_status_tx_hash": null,
                    "origin": "bcrt1qndrj8uy6the35p3gpjuuss7l29hwe0npylexmz",
                    "dispense_count": 0,
                    "last_status_tx_source": null,
                    "close_block_index": null,
                    "price": 1.0,
                    "fiat_price": null,
                    "oracle_price": null,
                    "fiat_unit": null,
                    "oracle_price_last_updated": null,
                    "satoshi_price": 1,
                    "block_time": 1740489681,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "The Counterparty protocol native currency",
                        "issuer": null,
                        "divisible": true,
                        "locked": true,
                        "owner": null
                    },
                    "give_quantity_normalized": "0.00000001",
                    "give_remaining_normalized": "0.00010000",
                    "escrow_quantity_normalized": "0.00010000",
                    "satoshirate_normalized": "0.00000001",
                    "satoshi_price_normalized": "0.00000001",
                    "price_normalized": "1.0000000000000000"
                },
                {
                    "tx_index": 30,
                    "tx_hash": "d1c103ac8f76875e2c7f2ff452e9c73ec80534fd6513ae02abc9ca5bca4bcdb4",
                    "block_index": 141,
                    "source": "mzKzGcYgawRDhSwKMs48ivyc7kq6eDFnxX",
                    "asset": "XCP",
                    "give_quantity": 1,
                    "escrow_quantity": 10,
                    "satoshirate": 1,
                    "status": 10,
                    "give_remaining": 0,
                    "oracle_address": null,
                    "last_status_tx_hash": "a4c44498f7b9aeece3a4c01fc67471775a89cf1e8ac0c313fd93592e06287b05",
                    "origin": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "dispense_count": 0,
                    "last_status_tx_source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "close_block_index": 141,
                    "price": 1.0,
                    "fiat_price": null,
                    "oracle_price": null,
                    "fiat_unit": null,
                    "oracle_price_last_updated": null,
                    "satoshi_price": 1,
                    "block_time": 1740489711,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "The Counterparty protocol native currency",
                        "issuer": null,
                        "divisible": true,
                        "locked": true,
                        "owner": null
                    },
                    "give_quantity_normalized": "0.00000001",
                    "give_remaining_normalized": "0.00000000",
                    "escrow_quantity_normalized": "0.00000010",
                    "satoshirate_normalized": "0.00000001",
                    "satoshi_price_normalized": "0.00000001",
                    "price_normalized": "1.0000000000000000"
                },
                {
                    "tx_index": 68,
                    "tx_hash": "d41f2c39d9b1d48cc1eb69ad013d77ab81c8298971503c6f6414291a955ae4c2",
                    "block_index": 194,
                    "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "asset": "TESTLOCKDESC",
                    "give_quantity": 1,
                    "escrow_quantity": 10000,
                    "satoshirate": 1,
                    "status": 0,
                    "give_remaining": 6000,
                    "oracle_address": null,
                    "last_status_tx_hash": null,
                    "origin": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "dispense_count": 1,
                    "last_status_tx_source": null,
                    "close_block_index": null,
                    "price": 1.0,
                    "fiat_price": null,
                    "oracle_price": null,
                    "fiat_unit": null,
                    "oracle_price_last_updated": null,
                    "satoshi_price": 1,
                    "block_time": 1740489890,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "Test Locking Description",
                        "issuer": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                        "divisible": true,
                        "locked": false,
                        "owner": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n"
                    },
                    "give_quantity_normalized": "0.00000001",
                    "give_remaining_normalized": "0.00006000",
                    "escrow_quantity_normalized": "0.00010000",
                    "satoshirate_normalized": "0.00000001",
                    "satoshi_price_normalized": "0.00000001",
                    "price_normalized": "1.0000000000000000"
                },
                {
                    "tx_index": 114,
                    "tx_hash": "c54957b9cbb662e2cc9eee1c09950f7365365a09abad1bdf1afb3cca05d63705",
                    "block_index": 237,
                    "source": "bcrt1qv82qg4jp6nn6wahdnx2d2u6cdfxyc2zuw7u9mv",
                    "asset": "XCP",
                    "give_quantity": 1,
                    "escrow_quantity": 5000,
                    "satoshirate": 1,
                    "status": 0,
                    "give_remaining": 2000,
                    "oracle_address": null,
                    "last_status_tx_hash": null,
                    "origin": "bcrt1qv82qg4jp6nn6wahdnx2d2u6cdfxyc2zuw7u9mv",
                    "dispense_count": 1,
                    "last_status_tx_source": null,
                    "close_block_index": null,
                    "price": 1.0,
                    "fiat_price": null,
                    "oracle_price": null,
                    "fiat_unit": null,
                    "oracle_price_last_updated": null,
                    "satoshi_price": 1,
                    "block_time": 1740490081,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "The Counterparty protocol native currency",
                        "issuer": null,
                        "divisible": true,
                        "locked": true,
                        "owner": null
                    },
                    "give_quantity_normalized": "0.00000001",
                    "give_remaining_normalized": "0.00002000",
                    "escrow_quantity_normalized": "0.00005000",
                    "satoshirate_normalized": "0.00000001",
                    "satoshi_price_normalized": "0.00000001",
                    "price_normalized": "1.0000000000000000"
                }
            ],
            "next_cursor": 4,
            "result_count": 6
        }
    ```

### Get Dispenser Info By Hash [GET /v2/dispensers/{dispenser_hash}{?verbose}]

Returns the dispenser information by tx_hash

+ Parameters
    + dispenser_hash: `41cd4920db670aef82765d2f2af44e4e44ef7d9d3efb638be176676e865bf3ae` (str, required) - The hash of the dispenser to return
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": {
                "tx_index": 26,
                "tx_hash": "41cd4920db670aef82765d2f2af44e4e44ef7d9d3efb638be176676e865bf3ae",
                "block_index": 132,
                "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                "asset": "XCP",
                "give_quantity": 1,
                "escrow_quantity": 10000,
                "satoshirate": 1,
                "status": 10,
                "give_remaining": 0,
                "oracle_address": null,
                "last_status_tx_hash": null,
                "origin": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                "dispense_count": 2,
                "last_status_tx_source": null,
                "close_block_index": null,
                "price": 1.0,
                "fiat_price": null,
                "oracle_price": null,
                "fiat_unit": null,
                "oracle_price_last_updated": null,
                "satoshi_price": 1,
                "block_time": 1740489677,
                "asset_info": {
                    "asset_longname": null,
                    "description": "The Counterparty protocol native currency",
                    "issuer": null,
                    "divisible": true,
                    "locked": true,
                    "owner": null
                },
                "give_quantity_normalized": "0.00000001",
                "give_remaining_normalized": "0.00000000",
                "escrow_quantity_normalized": "0.00010000",
                "satoshirate_normalized": "0.00000001",
                "satoshi_price_normalized": "0.00000001",
                "price_normalized": "1.0000000000000000"
            }
        }
    ```

### Get Dispenses By Dispenser [GET /v2/dispensers/{dispenser_hash}/dispenses{?cursor}{&limit}{&offset}{&verbose}]

Returns the dispenses of a dispenser

+ Parameters
    + dispenser_hash: `41cd4920db670aef82765d2f2af44e4e44ef7d9d3efb638be176676e865bf3ae` (str, required) - The hash of the dispenser to return
    + cursor (str, optional) - The last index of the dispenses to return
        + Default: `None`
    + limit: `5` (int, optional) - The maximum number of dispenses to return
        + Default: `100`
    + offset (int, optional) - The number of lines to skip before returning results (overrides the `cursor` parameter)
        + Default: `None`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": [
                {
                    "tx_index": 28,
                    "dispense_index": 0,
                    "tx_hash": "6b57de313e045291168bd742555b44a9695a3640f691ee2d9732739e5f285f67",
                    "block_index": 132,
                    "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "destination": "bcrt1qdj4ckly3lwmjqld7pu60qu9myggm6pnd58ntz6",
                    "asset": "XCP",
                    "dispense_quantity": 4000,
                    "dispenser_tx_hash": "41cd4920db670aef82765d2f2af44e4e44ef7d9d3efb638be176676e865bf3ae",
                    "btc_amount": 4000,
                    "dispenser": {
                        "tx_index": 26,
                        "block_index": 132,
                        "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                        "give_quantity": 1,
                        "escrow_quantity": 10000,
                        "satoshirate": 1,
                        "status": 10,
                        "give_remaining": 0,
                        "oracle_address": null,
                        "last_status_tx_hash": null,
                        "origin": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                        "dispense_count": 2,
                        "last_status_tx_source": null,
                        "close_block_index": null,
                        "fiat_price": null,
                        "oracle_price": null,
                        "fiat_unit": null,
                        "oracle_price_last_updated": null,
                        "satoshi_price": 1,
                        "give_quantity_normalized": "0.00000001",
                        "give_remaining_normalized": "0.00000000",
                        "escrow_quantity_normalized": "0.00010000",
                        "satoshirate_normalized": "0.00000001",
                        "satoshi_price_normalized": "0.00000001"
                    },
                    "block_time": 1740489677,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "The Counterparty protocol native currency",
                        "issuer": null,
                        "divisible": true,
                        "locked": true,
                        "owner": null
                    },
                    "dispense_quantity_normalized": "0.00004000",
                    "btc_amount_normalized": "0.00004000"
                },
                {
                    "tx_index": 27,
                    "dispense_index": 0,
                    "tx_hash": "26bfec7d8335b6222db947c7a42b6c61459f92527a3724a2ec6f1102ff146dac",
                    "block_index": 131,
                    "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "destination": "bcrt1qdj4ckly3lwmjqld7pu60qu9myggm6pnd58ntz6",
                    "asset": "XCP",
                    "dispense_quantity": 6000,
                    "dispenser_tx_hash": "41cd4920db670aef82765d2f2af44e4e44ef7d9d3efb638be176676e865bf3ae",
                    "btc_amount": 6000,
                    "dispenser": {
                        "tx_index": 26,
                        "block_index": 132,
                        "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                        "give_quantity": 1,
                        "escrow_quantity": 10000,
                        "satoshirate": 1,
                        "status": 10,
                        "give_remaining": 0,
                        "oracle_address": null,
                        "last_status_tx_hash": null,
                        "origin": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                        "dispense_count": 2,
                        "last_status_tx_source": null,
                        "close_block_index": null,
                        "fiat_price": null,
                        "oracle_price": null,
                        "fiat_unit": null,
                        "oracle_price_last_updated": null,
                        "satoshi_price": 1,
                        "give_quantity_normalized": "0.00000001",
                        "give_remaining_normalized": "0.00000000",
                        "escrow_quantity_normalized": "0.00010000",
                        "satoshirate_normalized": "0.00000001",
                        "satoshi_price_normalized": "0.00000001"
                    },
                    "block_time": 1740489673,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "The Counterparty protocol native currency",
                        "issuer": null,
                        "divisible": true,
                        "locked": true,
                        "owner": null
                    },
                    "dispense_quantity_normalized": "0.00006000",
                    "btc_amount_normalized": "0.00006000"
                }
            ],
            "next_cursor": null,
            "result_count": 2
        }
    ```

## Group Dividends

### Get Dividends [GET /v2/dividends{?cursor}{&limit}{&offset}{&verbose}]

Returns all the dividends

+ Parameters
    + cursor (str, optional) - The last index of the dividend to return
        + Default: `None`
    + limit: `5` (int, optional) - The maximum number of dividend to return
        + Default: `100`
    + offset (int, optional) - The number of lines to skip before returning results (overrides the `cursor` parameter)
        + Default: `None`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": [
                {
                    "tx_index": 42,
                    "tx_hash": "6404a2478fe98ef828070b2da13ef824ea7cebae41e377cfdee911728b8c926a",
                    "block_index": 146,
                    "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "asset": "MYASSETA",
                    "dividend_asset": "XCP",
                    "quantity_per_unit": 100000000,
                    "fee_paid": 20000,
                    "status": "valid",
                    "block_time": 1740489729,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "My super asset A",
                        "issuer": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                        "divisible": true,
                        "locked": false,
                        "owner": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n"
                    },
                    "dividend_asset_info": {
                        "asset_longname": null,
                        "description": "The Counterparty protocol native currency",
                        "issuer": null,
                        "divisible": true,
                        "locked": true,
                        "owner": null
                    },
                    "quantity_per_unit_normalized": "1.00000000",
                    "fee_paid_normalized": "0.00020000"
                }
            ],
            "next_cursor": null,
            "result_count": 1
        }
    ```

### Get Dividend [GET /v2/dividends/{dividend_hash}{?verbose}]

Returns a dividend by its hash

+ Parameters
    + dividend_hash: `6404a2478fe98ef828070b2da13ef824ea7cebae41e377cfdee911728b8c926a` (str, required) - The hash of the dividend to return
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": {
                "tx_index": 42,
                "tx_hash": "6404a2478fe98ef828070b2da13ef824ea7cebae41e377cfdee911728b8c926a",
                "block_index": 146,
                "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                "asset": "MYASSETA",
                "dividend_asset": "XCP",
                "quantity_per_unit": 100000000,
                "fee_paid": 20000,
                "status": "valid",
                "block_time": 1740489729,
                "asset_info": {
                    "asset_longname": null,
                    "description": "My super asset A",
                    "issuer": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "divisible": true,
                    "locked": false,
                    "owner": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n"
                },
                "dividend_asset_info": {
                    "asset_longname": null,
                    "description": "The Counterparty protocol native currency",
                    "issuer": null,
                    "divisible": true,
                    "locked": true,
                    "owner": null
                },
                "quantity_per_unit_normalized": "1.00000000",
                "fee_paid_normalized": "0.00020000"
            }
        }
    ```

### Get Dividend Disribution [GET /v2/dividends/{dividend_hash}/credits{?cursor}{&limit}{&offset}{&verbose}]

Returns a dividend distribution by its hash

+ Parameters
    + dividend_hash: `6404a2478fe98ef828070b2da13ef824ea7cebae41e377cfdee911728b8c926a` (str, required) - The hash of the dividend distribution to return
    + cursor (str, optional) - The last index of the credit to return
        + Default: `None`
    + limit: `5` (int, optional) - The maximum number of credit to return
        + Default: `100`
    + offset (int, optional) - The number of lines to skip before returning results (overrides the `cursor` parameter)
        + Default: `None`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": [
                {
                    "block_index": 146,
                    "address": null,
                    "asset": "XCP",
                    "quantity": 2000000000,
                    "calling_function": "dividend",
                    "event": "6404a2478fe98ef828070b2da13ef824ea7cebae41e377cfdee911728b8c926a",
                    "tx_index": 42,
                    "utxo": "81eeac99e0ab4b9100abea470c3167c444273834195165c50695ac01666a6dfd:0",
                    "utxo_address": "bcrt1qquwz9xkh3dv34l49v32lk3kc283utd58ung2cn",
                    "block_time": 1740489729,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "The Counterparty protocol native currency",
                        "issuer": null,
                        "divisible": true,
                        "locked": true,
                        "owner": null
                    },
                    "quantity_normalized": "20.00000000"
                }
            ],
            "next_cursor": null,
            "result_count": 1
        }
    ```

## Group Events

### Get All Events [GET /v2/events{?event_name}{&cursor}{&limit}{&offset}{&verbose}]

Returns all events

+ Parameters
    + event_name (str, optional) - Comma separated list of events to return
        + Default: `None`
    + cursor: `1042` (str, optional) - The last event index to return
        + Default: `None`
    + limit: `5` (int, optional) - The maximum number of events to return
        + Default: `100`
    + offset (int, optional) - The number of lines to skip before returning results (overrides the `cursor` parameter)
        + Default: `None`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": [
                {
                    "event_index": 1042,
                    "event": "BLOCK_PARSED",
                    "params": {
                        "block_index": 245,
                        "ledger_hash": "b9137879674322b25ee447b5c225d662c1acf3be0757f8b5e365950c1478ed55",
                        "messages_hash": "a49feef7ed0848b13a8640617cd2f1339afe84eca2fa74e11a09d16cfe074612",
                        "transaction_count": 1,
                        "txlist_hash": "54253e0fb81873afdb56f96b0951b0600ee982e8ad70c7e45270dcc9ed2f1bbb",
                        "block_time": 1740490111
                    },
                    "tx_hash": null,
                    "block_index": 245,
                    "block_time": 1740490111
                },
                {
                    "event_index": 1041,
                    "event": "TRANSACTION_PARSED",
                    "params": {
                        "supported": true,
                        "tx_hash": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3",
                        "tx_index": 121
                    },
                    "tx_hash": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3",
                    "block_index": 245,
                    "block_time": 1740490111
                },
                {
                    "event_index": 1040,
                    "event": "DISPENSE",
                    "params": {
                        "asset": "XCP",
                        "block_index": 245,
                        "btc_amount": 1000,
                        "destination": "bcrt1qwats7crkdl4z6ac6tz2fn6pz6a5dt7hxzjustu",
                        "dispense_index": 0,
                        "dispense_quantity": 66,
                        "dispenser_tx_hash": "1e6f693fe2759c736df4febc587f45124e79e5d8d1ce2b79f8c0bbf0f18fd87d",
                        "source": "bcrt1qquwz9xkh3dv34l49v32lk3kc283utd58ung2cn",
                        "tx_hash": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3",
                        "tx_index": 121,
                        "block_time": 1740490111,
                        "asset_info": {
                            "asset_longname": null,
                            "description": "The Counterparty protocol native currency",
                            "issuer": null,
                            "divisible": true,
                            "locked": true,
                            "owner": null
                        },
                        "dispense_quantity_normalized": "0.00000066",
                        "btc_amount_normalized": "0.00001000"
                    },
                    "tx_hash": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3",
                    "block_index": 245,
                    "block_time": 1740490111
                },
                {
                    "event_index": 1039,
                    "event": "DISPENSER_UPDATE",
                    "params": {
                        "asset": "XCP",
                        "dispense_count": 2,
                        "give_remaining": 9268,
                        "source": "bcrt1qquwz9xkh3dv34l49v32lk3kc283utd58ung2cn",
                        "status": 0,
                        "tx_hash": "1e6f693fe2759c736df4febc587f45124e79e5d8d1ce2b79f8c0bbf0f18fd87d",
                        "asset_info": {
                            "asset_longname": null,
                            "description": "The Counterparty protocol native currency",
                            "issuer": null,
                            "divisible": true,
                            "locked": true,
                            "owner": null
                        },
                        "give_remaining_normalized": "0.00009268"
                    },
                    "tx_hash": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3",
                    "block_index": 245,
                    "block_time": 1740490111
                },
                {
                    "event_index": 1038,
                    "event": "CREDIT",
                    "params": {
                        "address": "bcrt1qwats7crkdl4z6ac6tz2fn6pz6a5dt7hxzjustu",
                        "asset": "XCP",
                        "block_index": 245,
                        "calling_function": "dispense",
                        "event": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3",
                        "quantity": 66,
                        "tx_index": 121,
                        "utxo": null,
                        "utxo_address": null,
                        "block_time": 1740490111,
                        "asset_info": {
                            "asset_longname": null,
                            "description": "The Counterparty protocol native currency",
                            "issuer": null,
                            "divisible": true,
                            "locked": true,
                            "owner": null
                        },
                        "quantity_normalized": "0.00000066"
                    },
                    "tx_hash": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3",
                    "block_index": 245,
                    "block_time": 1740490111
                }
            ],
            "next_cursor": 1037,
            "result_count": 1043
        }
    ```

### Get Event By Index [GET /v2/events/{event_index}{?verbose}]

Returns the event of an index

+ Parameters
    + event_index: `1042` (int, required) - The index of the event to return
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": {
                "event_index": 1042,
                "event": "BLOCK_PARSED",
                "params": {
                    "block_index": 245,
                    "ledger_hash": "b9137879674322b25ee447b5c225d662c1acf3be0757f8b5e365950c1478ed55",
                    "messages_hash": "a49feef7ed0848b13a8640617cd2f1339afe84eca2fa74e11a09d16cfe074612",
                    "transaction_count": 1,
                    "txlist_hash": "54253e0fb81873afdb56f96b0951b0600ee982e8ad70c7e45270dcc9ed2f1bbb",
                    "block_time": 1740490111
                },
                "tx_hash": null,
                "block_index": 245,
                "block_time": 1740490111
            }
        }
    ```

### Get All Events Counts [GET /v2/events/counts{?cursor}{&limit}{&offset}{&verbose}]

Returns the event counts of all blocks

+ Parameters
    + cursor (str, optional) - The last event index to return
        + Default: `None`
    + limit: `5` (int, optional) - The maximum number of events to return
        + Default: `100`
    + offset (int, optional) - The number of lines to skip before returning results (overrides the `cursor` parameter)
        + Default: `None`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": [
                {
                    "event": "RESET_ISSUANCE",
                    "count": 1
                },
                {
                    "event": "SWEEP",
                    "count": 1
                },
                {
                    "event": "CANCEL_ORDER",
                    "count": 1
                },
                {
                    "event": "MPMA_SEND",
                    "count": 15
                },
                {
                    "event": "ENHANCED_SEND",
                    "count": 3
                }
            ],
            "next_cursor": 32,
            "result_count": 37
        }
    ```

### Get Events By Name [GET /v2/events/{event}{?cursor}{&limit}{&offset}{&verbose}]

Returns the events filtered by event name

+ Parameters
    + event: `CREDIT` (str, required) - The event to return
    + cursor: `1042` (str, optional) - The last event index to return
        + Default: `None`
    + limit: `5` (int, optional) - The maximum number of events to return
        + Default: `100`
    + offset (int, optional) - The number of lines to skip before returning results (overrides the `cursor` parameter)
        + Default: `None`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": [
                {
                    "event_index": 1038,
                    "event": "CREDIT",
                    "params": {
                        "address": "bcrt1qwats7crkdl4z6ac6tz2fn6pz6a5dt7hxzjustu",
                        "asset": "XCP",
                        "block_index": 245,
                        "calling_function": "dispense",
                        "event": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3",
                        "quantity": 66,
                        "tx_index": 121,
                        "utxo": null,
                        "utxo_address": null,
                        "block_time": 1740490111,
                        "asset_info": {
                            "asset_longname": null,
                            "description": "The Counterparty protocol native currency",
                            "issuer": null,
                            "divisible": true,
                            "locked": true,
                            "owner": null
                        },
                        "quantity_normalized": "0.00000066"
                    },
                    "tx_hash": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3",
                    "block_index": 245,
                    "block_time": 1740490111
                },
                {
                    "event_index": 1036,
                    "event": "CREDIT",
                    "params": {
                        "address": null,
                        "asset": "XCP",
                        "block_index": 245,
                        "calling_function": "utxo move",
                        "event": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3",
                        "quantity": 2000000000,
                        "tx_index": 121,
                        "utxo": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3:0",
                        "utxo_address": "bcrt1qquwz9xkh3dv34l49v32lk3kc283utd58ung2cn",
                        "block_time": 1740490111,
                        "asset_info": {
                            "asset_longname": null,
                            "description": "The Counterparty protocol native currency",
                            "issuer": null,
                            "divisible": true,
                            "locked": true,
                            "owner": null
                        },
                        "quantity_normalized": "20.00000000"
                    },
                    "tx_hash": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3",
                    "block_index": 245,
                    "block_time": 1740490111
                },
                {
                    "event_index": 1033,
                    "event": "CREDIT",
                    "params": {
                        "address": null,
                        "asset": "MYASSETA",
                        "block_index": 245,
                        "calling_function": "utxo move",
                        "event": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3",
                        "quantity": 2000000000,
                        "tx_index": 121,
                        "utxo": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3:0",
                        "utxo_address": "bcrt1qquwz9xkh3dv34l49v32lk3kc283utd58ung2cn",
                        "block_time": 1740490111,
                        "asset_info": {
                            "asset_longname": null,
                            "description": "My super asset A",
                            "issuer": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                            "divisible": true,
                            "locked": false,
                            "owner": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n"
                        },
                        "quantity_normalized": "20.00000000"
                    },
                    "tx_hash": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3",
                    "block_index": 245,
                    "block_time": 1740490111
                },
                {
                    "event_index": 1002,
                    "event": "CREDIT",
                    "params": {
                        "address": "bcrt1qyyjgcgnjrxkznrdk8pc9dwp98twx5qesptttlg",
                        "asset": "RESET",
                        "block_index": 240,
                        "calling_function": "reset issuance",
                        "event": "49aaaa4a39e9fd16889036cae02cf2fdb65f96d4447a92dce1c811b959105a85",
                        "quantity": 1200000000,
                        "tx_index": 117,
                        "utxo": null,
                        "utxo_address": null,
                        "block_time": 1740490091,
                        "asset_info": {
                            "asset_longname": null,
                            "description": "",
                            "issuer": "bcrt1qyyjgcgnjrxkznrdk8pc9dwp98twx5qesptttlg",
                            "divisible": true,
                            "locked": false,
                            "owner": "bcrt1qyyjgcgnjrxkznrdk8pc9dwp98twx5qesptttlg"
                        },
                        "quantity_normalized": "12.00000000"
                    },
                    "tx_hash": "49aaaa4a39e9fd16889036cae02cf2fdb65f96d4447a92dce1c811b959105a85",
                    "block_index": 240,
                    "block_time": 1740490091
                },
                {
                    "event_index": 994,
                    "event": "CREDIT",
                    "params": {
                        "address": "bcrt1qyyjgcgnjrxkznrdk8pc9dwp98twx5qesptttlg",
                        "asset": "RESET",
                        "block_index": 239,
                        "calling_function": "issuance",
                        "event": "4e73e3d64b9f20843a1339df83985705ba5e13062d943520c4beb21487693a5c",
                        "quantity": 12,
                        "tx_index": 116,
                        "utxo": null,
                        "utxo_address": null,
                        "block_time": 1740490088,
                        "asset_info": {
                            "asset_longname": null,
                            "description": "",
                            "issuer": "bcrt1qyyjgcgnjrxkznrdk8pc9dwp98twx5qesptttlg",
                            "divisible": true,
                            "locked": false,
                            "owner": "bcrt1qyyjgcgnjrxkznrdk8pc9dwp98twx5qesptttlg"
                        },
                        "quantity_normalized": "0.00000012"
                    },
                    "tx_hash": "4e73e3d64b9f20843a1339df83985705ba5e13062d943520c4beb21487693a5c",
                    "block_index": 239,
                    "block_time": 1740490088
                }
            ],
            "next_cursor": 982,
            "result_count": 126
        }
    ```

### Get Event Count [GET /v2/events/{event}/count{?verbose}]

Returns the number of events

+ Parameters
    + event: `CREDIT` (str, required) - The name of the event to return
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": {
                "event": "CREDIT",
                "count": 126
            }
        }
    ```

## Group Destructions

### Get All Valid Destructions [GET /v2/destructions{?cursor}{&limit}{&offset}{&verbose}]

Returns the destructions of a block

+ Parameters
    + cursor (str, optional) - The last index of the destructions to return
        + Default: `None`
    + limit: `5` (int, optional) - The maximum number of destructions to return
        + Default: `100`
    + offset (int, optional) - The number of lines to skip before returning results (overrides the `cursor` parameter)
        + Default: `None`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": [
                {
                    "tx_index": 117,
                    "tx_hash": "49aaaa4a39e9fd16889036cae02cf2fdb65f96d4447a92dce1c811b959105a85",
                    "block_index": 240,
                    "source": "bcrt1qyyjgcgnjrxkznrdk8pc9dwp98twx5qesptttlg",
                    "asset": "RESET",
                    "quantity": 12,
                    "tag": "reset",
                    "status": "valid",
                    "block_time": 1740490091,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "",
                        "issuer": "bcrt1qyyjgcgnjrxkznrdk8pc9dwp98twx5qesptttlg",
                        "divisible": true,
                        "locked": false,
                        "owner": "bcrt1qyyjgcgnjrxkznrdk8pc9dwp98twx5qesptttlg"
                    },
                    "quantity_normalized": "0.00000012"
                },
                {
                    "tx_index": 101,
                    "tx_hash": "0b85ece9496719a0822cb5b2d262896ad04c7ba9da111b4a240e1f9f5b5630d6",
                    "block_index": 228,
                    "source": "bcrt1qyyjgcgnjrxkznrdk8pc9dwp98twx5qesptttlg",
                    "asset": "PREMINT",
                    "quantity": 50,
                    "tag": "soft cap not reached",
                    "status": "valid",
                    "block_time": 1740490019,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "My super description",
                        "issuer": "bcrt1qyyjgcgnjrxkznrdk8pc9dwp98twx5qesptttlg",
                        "divisible": true,
                        "locked": false,
                        "owner": "bcrt1qyyjgcgnjrxkznrdk8pc9dwp98twx5qesptttlg"
                    },
                    "quantity_normalized": "0.00000050"
                },
                {
                    "tx_index": 97,
                    "tx_hash": "f008cc467441d6088b240484737bc7c3a9665fca802126e7724a0e297fec8adc",
                    "block_index": 221,
                    "source": "bcrt1qquwz9xkh3dv34l49v32lk3kc283utd58ung2cn",
                    "asset": "XCP",
                    "quantity": 100000000,
                    "tag": "burn fairmint payment",
                    "status": "valid",
                    "block_time": 1740489996,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "The Counterparty protocol native currency",
                        "issuer": null,
                        "divisible": true,
                        "locked": true,
                        "owner": null
                    },
                    "quantity_normalized": "1.00000000"
                },
                {
                    "tx_index": 66,
                    "tx_hash": "361c12f0621cfb9d6fdc1bff4647705909256ce8ae74028af623e8a68328917b",
                    "block_index": 191,
                    "source": "bcrt1qndrj8uy6the35p3gpjuuss7l29hwe0npylexmz",
                    "asset": "XCP",
                    "quantity": 1,
                    "tag": "64657374726f79",
                    "status": "valid",
                    "block_time": 1740489880,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "The Counterparty protocol native currency",
                        "issuer": null,
                        "divisible": true,
                        "locked": true,
                        "owner": null
                    },
                    "quantity_normalized": "0.00000001"
                },
                {
                    "tx_index": 14,
                    "tx_hash": "54da50dc04fe18ff5822c81f0f4dbf0a908912f00e788a5a9cbe2a6c0900fca9",
                    "block_index": 121,
                    "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "asset": "FAIRMINTB",
                    "quantity": 300000000,
                    "tag": "soft cap not reached",
                    "status": "valid",
                    "block_time": 1740489636,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "",
                        "issuer": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                        "divisible": true,
                        "locked": false,
                        "owner": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n"
                    },
                    "quantity_normalized": "3.00000000"
                }
            ],
            "next_cursor": null,
            "result_count": 5
        }
    ```

## Group Dispenses

### Get Dispenses [GET /v2/dispenses{?cursor}{&limit}{&offset}{&verbose}]

Returns all the dispenses

+ Parameters
    + cursor (str, optional) - The last index of the dispenses to return
        + Default: `None`
    + limit: `5` (int, optional) - The maximum number of dispenses to return
        + Default: `100`
    + offset (int, optional) - The number of lines to skip before returning results (overrides the `cursor` parameter)
        + Default: `None`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": [
                {
                    "tx_index": 121,
                    "dispense_index": 0,
                    "tx_hash": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3",
                    "block_index": 245,
                    "source": "bcrt1qquwz9xkh3dv34l49v32lk3kc283utd58ung2cn",
                    "destination": "bcrt1qwats7crkdl4z6ac6tz2fn6pz6a5dt7hxzjustu",
                    "asset": "XCP",
                    "dispense_quantity": 66,
                    "dispenser_tx_hash": "1e6f693fe2759c736df4febc587f45124e79e5d8d1ce2b79f8c0bbf0f18fd87d",
                    "btc_amount": 1000,
                    "dispenser": {
                        "tx_index": 33,
                        "block_index": 245,
                        "source": "bcrt1qquwz9xkh3dv34l49v32lk3kc283utd58ung2cn",
                        "give_quantity": 1,
                        "escrow_quantity": 10000,
                        "satoshirate": 1,
                        "status": 0,
                        "give_remaining": 9268,
                        "oracle_address": "bcrt1qquwz9xkh3dv34l49v32lk3kc283utd58ung2cn",
                        "last_status_tx_hash": null,
                        "origin": "bcrt1qquwz9xkh3dv34l49v32lk3kc283utd58ung2cn",
                        "dispense_count": 2,
                        "last_status_tx_source": null,
                        "close_block_index": null,
                        "fiat_price": 0.01,
                        "oracle_price": 66600.0,
                        "fiat_unit": "USD",
                        "oracle_price_last_updated": 129,
                        "satoshi_price": 16,
                        "give_quantity_normalized": "0.00000001",
                        "give_remaining_normalized": "0.00009268",
                        "escrow_quantity_normalized": "0.00010000",
                        "satoshirate_normalized": "0.00000001",
                        "satoshi_price_normalized": "0.00000016"
                    },
                    "block_time": 1740490111,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "The Counterparty protocol native currency",
                        "issuer": null,
                        "divisible": true,
                        "locked": true,
                        "owner": null
                    },
                    "dispense_quantity_normalized": "0.00000066",
                    "btc_amount_normalized": "0.00001000"
                },
                {
                    "tx_index": 115,
                    "dispense_index": 0,
                    "tx_hash": "fef95527acddc38cf41b44de40d85e7f67dc5b51531997c0483c5c3b321f16c9",
                    "block_index": 237,
                    "source": "bcrt1qv82qg4jp6nn6wahdnx2d2u6cdfxyc2zuw7u9mv",
                    "destination": "bcrt1qdj4ckly3lwmjqld7pu60qu9myggm6pnd58ntz6",
                    "asset": "XCP",
                    "dispense_quantity": 3000,
                    "dispenser_tx_hash": "c54957b9cbb662e2cc9eee1c09950f7365365a09abad1bdf1afb3cca05d63705",
                    "btc_amount": 3000,
                    "dispenser": {
                        "tx_index": 114,
                        "block_index": 237,
                        "source": "bcrt1qv82qg4jp6nn6wahdnx2d2u6cdfxyc2zuw7u9mv",
                        "give_quantity": 1,
                        "escrow_quantity": 5000,
                        "satoshirate": 1,
                        "status": 0,
                        "give_remaining": 2000,
                        "oracle_address": null,
                        "last_status_tx_hash": null,
                        "origin": "bcrt1qv82qg4jp6nn6wahdnx2d2u6cdfxyc2zuw7u9mv",
                        "dispense_count": 1,
                        "last_status_tx_source": null,
                        "close_block_index": null,
                        "fiat_price": null,
                        "oracle_price": null,
                        "fiat_unit": null,
                        "oracle_price_last_updated": null,
                        "satoshi_price": 1,
                        "give_quantity_normalized": "0.00000001",
                        "give_remaining_normalized": "0.00002000",
                        "escrow_quantity_normalized": "0.00005000",
                        "satoshirate_normalized": "0.00000001",
                        "satoshi_price_normalized": "0.00000001"
                    },
                    "block_time": 1740490081,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "The Counterparty protocol native currency",
                        "issuer": null,
                        "divisible": true,
                        "locked": true,
                        "owner": null
                    },
                    "dispense_quantity_normalized": "0.00003000",
                    "btc_amount_normalized": "0.00003000"
                },
                {
                    "tx_index": 69,
                    "dispense_index": 0,
                    "tx_hash": "832f8a1eb60d96708f9123043e4f1926310d7209651c18bfa27cec0739d82574",
                    "block_index": 194,
                    "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "destination": "bcrt1qdj4ckly3lwmjqld7pu60qu9myggm6pnd58ntz6",
                    "asset": "TESTLOCKDESC",
                    "dispense_quantity": 4000,
                    "dispenser_tx_hash": "d41f2c39d9b1d48cc1eb69ad013d77ab81c8298971503c6f6414291a955ae4c2",
                    "btc_amount": 4000,
                    "dispenser": {
                        "tx_index": 68,
                        "block_index": 194,
                        "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                        "give_quantity": 1,
                        "escrow_quantity": 10000,
                        "satoshirate": 1,
                        "status": 0,
                        "give_remaining": 6000,
                        "oracle_address": null,
                        "last_status_tx_hash": null,
                        "origin": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                        "dispense_count": 1,
                        "last_status_tx_source": null,
                        "close_block_index": null,
                        "fiat_price": null,
                        "oracle_price": null,
                        "fiat_unit": null,
                        "oracle_price_last_updated": null,
                        "satoshi_price": 1,
                        "give_quantity_normalized": "0.00000001",
                        "give_remaining_normalized": "0.00006000",
                        "escrow_quantity_normalized": "0.00010000",
                        "satoshirate_normalized": "0.00000001",
                        "satoshi_price_normalized": "0.00000001"
                    },
                    "block_time": 1740489890,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "Test Locking Description",
                        "issuer": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                        "divisible": true,
                        "locked": false,
                        "owner": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n"
                    },
                    "dispense_quantity_normalized": "0.00004000",
                    "btc_amount_normalized": "0.00004000"
                },
                {
                    "tx_index": 34,
                    "dispense_index": 0,
                    "tx_hash": "ad1c543d2cf46dc6a3314050c2d506dc1155d4e3896989e074bc765ef1aee102",
                    "block_index": 138,
                    "source": "bcrt1qquwz9xkh3dv34l49v32lk3kc283utd58ung2cn",
                    "destination": "bcrt1qs8qhqqz7us7w5kt08wqmxmqsl8h6jknlejhyru",
                    "asset": "XCP",
                    "dispense_quantity": 666,
                    "dispenser_tx_hash": "1e6f693fe2759c736df4febc587f45124e79e5d8d1ce2b79f8c0bbf0f18fd87d",
                    "btc_amount": 10000,
                    "dispenser": {
                        "tx_index": 33,
                        "block_index": 245,
                        "source": "bcrt1qquwz9xkh3dv34l49v32lk3kc283utd58ung2cn",
                        "give_quantity": 1,
                        "escrow_quantity": 10000,
                        "satoshirate": 1,
                        "status": 0,
                        "give_remaining": 9268,
                        "oracle_address": "bcrt1qquwz9xkh3dv34l49v32lk3kc283utd58ung2cn",
                        "last_status_tx_hash": null,
                        "origin": "bcrt1qquwz9xkh3dv34l49v32lk3kc283utd58ung2cn",
                        "dispense_count": 2,
                        "last_status_tx_source": null,
                        "close_block_index": null,
                        "fiat_price": 0.01,
                        "oracle_price": 66600.0,
                        "fiat_unit": "USD",
                        "oracle_price_last_updated": 129,
                        "satoshi_price": 16,
                        "give_quantity_normalized": "0.00000001",
                        "give_remaining_normalized": "0.00009268",
                        "escrow_quantity_normalized": "0.00010000",
                        "satoshirate_normalized": "0.00000001",
                        "satoshi_price_normalized": "0.00000016"
                    },
                    "block_time": 1740489700,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "The Counterparty protocol native currency",
                        "issuer": null,
                        "divisible": true,
                        "locked": true,
                        "owner": null
                    },
                    "dispense_quantity_normalized": "0.00000666",
                    "btc_amount_normalized": "0.00010000"
                },
                {
                    "tx_index": 28,
                    "dispense_index": 0,
                    "tx_hash": "6b57de313e045291168bd742555b44a9695a3640f691ee2d9732739e5f285f67",
                    "block_index": 132,
                    "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "destination": "bcrt1qdj4ckly3lwmjqld7pu60qu9myggm6pnd58ntz6",
                    "asset": "XCP",
                    "dispense_quantity": 4000,
                    "dispenser_tx_hash": "41cd4920db670aef82765d2f2af44e4e44ef7d9d3efb638be176676e865bf3ae",
                    "btc_amount": 4000,
                    "dispenser": {
                        "tx_index": 26,
                        "block_index": 132,
                        "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                        "give_quantity": 1,
                        "escrow_quantity": 10000,
                        "satoshirate": 1,
                        "status": 10,
                        "give_remaining": 0,
                        "oracle_address": null,
                        "last_status_tx_hash": null,
                        "origin": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                        "dispense_count": 2,
                        "last_status_tx_source": null,
                        "close_block_index": null,
                        "fiat_price": null,
                        "oracle_price": null,
                        "fiat_unit": null,
                        "oracle_price_last_updated": null,
                        "satoshi_price": 1,
                        "give_quantity_normalized": "0.00000001",
                        "give_remaining_normalized": "0.00000000",
                        "escrow_quantity_normalized": "0.00010000",
                        "satoshirate_normalized": "0.00000001",
                        "satoshi_price_normalized": "0.00000001"
                    },
                    "block_time": 1740489677,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "The Counterparty protocol native currency",
                        "issuer": null,
                        "divisible": true,
                        "locked": true,
                        "owner": null
                    },
                    "dispense_quantity_normalized": "0.00004000",
                    "btc_amount_normalized": "0.00004000"
                }
            ],
            "next_cursor": 1,
            "result_count": 6
        }
    ```

### Get Dispense [GET /v2/dispenses/{tx_hash}{?verbose}]

Returns all the dispenses

+ Parameters
    + tx_hash (str, required) - The hash of the transaction to return
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

## Group Sends

### Get Sends [GET /v2/sends{?send_type}{&cursor}{&limit}{&offset}{&verbose}]

Returns all the sends include Enhanced and MPMA sends

+ Parameters
    + send_type (enum[str], optional) - The type of the send to return
        + Default: `all`
        + Members
            + `all`
            + `send`
            + `attach`
            + `move`
            + `detach`
    + cursor (str, optional) - The last index of the debits to return
        + Default: `None`
    + limit: `5` (int, optional) - The maximum number of debits to return
        + Default: `100`
    + offset (int, optional) - The number of lines to skip before returning results (overrides the `cursor` parameter)
        + Default: `None`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": [
                {
                    "tx_index": 121,
                    "tx_hash": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3",
                    "block_index": 245,
                    "source": "e1da70a78196a01b1d83828ad454578cd9ccd3a37215d0732042f9cd20028b65:1",
                    "destination": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3:0",
                    "asset": "XCP",
                    "quantity": 2000000000,
                    "status": "valid",
                    "msg_index": 1,
                    "memo": null,
                    "fee_paid": 0,
                    "send_type": "move",
                    "source_address": "bcrt1qwats7crkdl4z6ac6tz2fn6pz6a5dt7hxzjustu",
                    "destination_address": "bcrt1qquwz9xkh3dv34l49v32lk3kc283utd58ung2cn",
                    "block_time": 1740490111,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "The Counterparty protocol native currency",
                        "issuer": null,
                        "divisible": true,
                        "locked": true,
                        "owner": null
                    },
                    "quantity_normalized": "20.00000000",
                    "fee_paid_normalized": "0.00000000"
                },
                {
                    "tx_index": 121,
                    "tx_hash": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3",
                    "block_index": 245,
                    "source": "e1da70a78196a01b1d83828ad454578cd9ccd3a37215d0732042f9cd20028b65:1",
                    "destination": "d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3:0",
                    "asset": "MYASSETA",
                    "quantity": 2000000000,
                    "status": "valid",
                    "msg_index": 0,
                    "memo": null,
                    "fee_paid": 0,
                    "send_type": "move",
                    "source_address": "bcrt1qwats7crkdl4z6ac6tz2fn6pz6a5dt7hxzjustu",
                    "destination_address": "bcrt1qquwz9xkh3dv34l49v32lk3kc283utd58ung2cn",
                    "block_time": 1740490111,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "My super asset A",
                        "issuer": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                        "divisible": true,
                        "locked": false,
                        "owner": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n"
                    },
                    "quantity_normalized": "20.00000000",
                    "fee_paid_normalized": "0.00000000"
                },
                {
                    "tx_index": 113,
                    "tx_hash": "fb093be7dffae9fc83930b6672e04c85adfad2976f2fcdcd02c16ea05600dc80",
                    "block_index": 236,
                    "source": "a702c044a28ed7855dac07e2dd7b9c5925db98cae259cfb2ca1c29158149b5d6:0",
                    "destination": "fb093be7dffae9fc83930b6672e04c85adfad2976f2fcdcd02c16ea05600dc80:0",
                    "asset": "DETACHA",
                    "quantity": 100000000,
                    "status": "valid",
                    "msg_index": 0,
                    "memo": null,
                    "fee_paid": 0,
                    "send_type": "move",
                    "source_address": "bcrt1qyyjgcgnjrxkznrdk8pc9dwp98twx5qesptttlg",
                    "destination_address": "bcrt1qwats7crkdl4z6ac6tz2fn6pz6a5dt7hxzjustu",
                    "block_time": 1740490077,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "",
                        "issuer": "bcrt1qyyjgcgnjrxkznrdk8pc9dwp98twx5qesptttlg",
                        "divisible": true,
                        "locked": false,
                        "owner": "bcrt1qyyjgcgnjrxkznrdk8pc9dwp98twx5qesptttlg"
                    },
                    "quantity_normalized": "1.00000000",
                    "fee_paid_normalized": "0.00000000"
                },
                {
                    "tx_index": 112,
                    "tx_hash": "a702c044a28ed7855dac07e2dd7b9c5925db98cae259cfb2ca1c29158149b5d6",
                    "block_index": 235,
                    "source": "bcrt1qyyjgcgnjrxkznrdk8pc9dwp98twx5qesptttlg",
                    "destination": "a702c044a28ed7855dac07e2dd7b9c5925db98cae259cfb2ca1c29158149b5d6:0",
                    "asset": "DETACHA",
                    "quantity": 100000000,
                    "status": "valid",
                    "msg_index": 0,
                    "memo": null,
                    "fee_paid": 0,
                    "send_type": "attach",
                    "source_address": null,
                    "destination_address": "bcrt1qyyjgcgnjrxkznrdk8pc9dwp98twx5qesptttlg",
                    "block_time": 1740490071,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "",
                        "issuer": "bcrt1qyyjgcgnjrxkznrdk8pc9dwp98twx5qesptttlg",
                        "divisible": true,
                        "locked": false,
                        "owner": "bcrt1qyyjgcgnjrxkznrdk8pc9dwp98twx5qesptttlg"
                    },
                    "quantity_normalized": "1.00000000",
                    "fee_paid_normalized": "0.00000000"
                },
                {
                    "tx_index": 111,
                    "tx_hash": "0d1319c529b7c96f1df0c028a6b1fcb99341b7ecb0dbd8f5626ad9afad76b1c8",
                    "block_index": 234,
                    "source": "20c0fc221da530e6e260f1ee566d166e62abc63cb109a4b309b1a76a06aaa7a5:0",
                    "destination": "bcrt1qyyjgcgnjrxkznrdk8pc9dwp98twx5qesptttlg",
                    "asset": "DETACHB",
                    "quantity": 100000000,
                    "status": "valid",
                    "msg_index": 1,
                    "memo": null,
                    "fee_paid": 0,
                    "send_type": "detach",
                    "source_address": "bcrt1qyyjgcgnjrxkznrdk8pc9dwp98twx5qesptttlg",
                    "destination_address": null,
                    "block_time": 1740490068,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "",
                        "issuer": "bcrt1qyyjgcgnjrxkznrdk8pc9dwp98twx5qesptttlg",
                        "divisible": true,
                        "locked": false,
                        "owner": "bcrt1qyyjgcgnjrxkznrdk8pc9dwp98twx5qesptttlg"
                    },
                    "quantity_normalized": "1.00000000",
                    "fee_paid_normalized": "0.00000000"
                }
            ],
            "next_cursor": 41,
            "result_count": 46
        }
    ```

## Group Issuances

### Get Issuances [GET /v2/issuances{?asset_events}{&cursor}{&limit}{&offset}{&verbose}]

Returns all the issuances

+ Parameters
    + asset_events (enum[str], optional) - Filter result by one or several comma separated asset events
        + Default: `all`
        + Members
            + `all`
            + `creation`
            + `reissuance`
            + `lock_quantity`
            + `reset`
            + `change_description`
            + `transfer`
            + `open_fairminter`
            + `fairmint`
            + `lock_description`
    + cursor (str, optional) - The last index of the issuances to return
        + Default: `None`
    + limit: `5` (int, optional) - The maximum number of issuances to return
        + Default: `100`
    + offset (int, optional) - The number of lines to skip before returning results (overrides the `cursor` parameter)
        + Default: `None`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": [
                {
                    "tx_index": 120,
                    "tx_hash": "c6043e9ceafa1ced581e48b9bb273a6b703ad6717ff27494f1a137dfcd039321",
                    "msg_index": 0,
                    "block_index": 243,
                    "asset": "OPENFAIR",
                    "quantity": 0,
                    "divisible": true,
                    "source": "bcrt1qquwz9xkh3dv34l49v32lk3kc283utd58ung2cn",
                    "issuer": "bcrt1qquwz9xkh3dv34l49v32lk3kc283utd58ung2cn",
                    "transfer": false,
                    "callable": false,
                    "call_date": 0,
                    "call_price": 0.0,
                    "description": "",
                    "fee_paid": 50000000,
                    "status": "valid",
                    "asset_longname": null,
                    "description_locked": false,
                    "fair_minting": true,
                    "asset_events": "open_fairminter",
                    "locked": false,
                    "reset": false,
                    "block_time": 1740490102,
                    "quantity_normalized": "0.00000000",
                    "fee_paid_normalized": "0.50000000"
                },
                {
                    "tx_index": 117,
                    "tx_hash": "49aaaa4a39e9fd16889036cae02cf2fdb65f96d4447a92dce1c811b959105a85",
                    "msg_index": 0,
                    "block_index": 240,
                    "asset": "RESET",
                    "quantity": 1200000000,
                    "divisible": true,
                    "source": "bcrt1qyyjgcgnjrxkznrdk8pc9dwp98twx5qesptttlg",
                    "issuer": "bcrt1qyyjgcgnjrxkznrdk8pc9dwp98twx5qesptttlg",
                    "transfer": false,
                    "callable": false,
                    "call_date": 0,
                    "call_price": 0.0,
                    "description": "",
                    "fee_paid": 0,
                    "status": "valid",
                    "asset_longname": null,
                    "description_locked": false,
                    "fair_minting": false,
                    "asset_events": "reset",
                    "locked": false,
                    "reset": true,
                    "block_time": 1740490091,
                    "quantity_normalized": "12.00000000",
                    "fee_paid_normalized": "0.00000000"
                },
                {
                    "tx_index": 116,
                    "tx_hash": "4e73e3d64b9f20843a1339df83985705ba5e13062d943520c4beb21487693a5c",
                    "msg_index": 0,
                    "block_index": 239,
                    "asset": "RESET",
                    "quantity": 12,
                    "divisible": false,
                    "source": "bcrt1qyyjgcgnjrxkznrdk8pc9dwp98twx5qesptttlg",
                    "issuer": "bcrt1qyyjgcgnjrxkznrdk8pc9dwp98twx5qesptttlg",
                    "transfer": false,
                    "callable": false,
                    "call_date": 0,
                    "call_price": 0.0,
                    "description": "",
                    "fee_paid": 50000000,
                    "status": "valid",
                    "asset_longname": null,
                    "description_locked": false,
                    "fair_minting": false,
                    "asset_events": "creation",
                    "locked": false,
                    "reset": false,
                    "block_time": 1740490088,
                    "quantity_normalized": "12",
                    "fee_paid_normalized": "0.50000000"
                },
                {
                    "tx_index": 108,
                    "tx_hash": "22a6319c274859eae4662370ad52fa17e1660057dfd1753f32460921d442293c",
                    "msg_index": 0,
                    "block_index": 232,
                    "asset": "DETACHB",
                    "quantity": 1000000000,
                    "divisible": true,
                    "source": "bcrt1qyyjgcgnjrxkznrdk8pc9dwp98twx5qesptttlg",
                    "issuer": "bcrt1qyyjgcgnjrxkznrdk8pc9dwp98twx5qesptttlg",
                    "transfer": false,
                    "callable": false,
                    "call_date": 0,
                    "call_price": 0.0,
                    "description": "",
                    "fee_paid": 50000000,
                    "status": "valid",
                    "asset_longname": null,
                    "description_locked": false,
                    "fair_minting": false,
                    "asset_events": "creation",
                    "locked": false,
                    "reset": false,
                    "block_time": 1740490055,
                    "quantity_normalized": "10.00000000",
                    "fee_paid_normalized": "0.50000000"
                },
                {
                    "tx_index": 107,
                    "tx_hash": "49a1a917b409b23ad9fc2a8e858fa7bad863648e2a52ec9cf577bf40caca8be3",
                    "msg_index": 0,
                    "block_index": 231,
                    "asset": "DETACHA",
                    "quantity": 1000000000,
                    "divisible": true,
                    "source": "bcrt1qyyjgcgnjrxkznrdk8pc9dwp98twx5qesptttlg",
                    "issuer": "bcrt1qyyjgcgnjrxkznrdk8pc9dwp98twx5qesptttlg",
                    "transfer": false,
                    "callable": false,
                    "call_date": 0,
                    "call_price": 0.0,
                    "description": "",
                    "fee_paid": 50000000,
                    "status": "valid",
                    "asset_longname": null,
                    "description_locked": false,
                    "fair_minting": false,
                    "asset_events": "creation",
                    "locked": false,
                    "reset": false,
                    "block_time": 1740490051,
                    "quantity_normalized": "10.00000000",
                    "fee_paid_normalized": "0.50000000"
                }
            ],
            "next_cursor": 51,
            "result_count": 56
        }
    ```

### Get Issuance By Transaction Hash [GET /v2/issuances/{tx_hash}{?verbose}]

Returns the issuances of a block

+ Parameters
    + tx_hash: `c6043e9ceafa1ced581e48b9bb273a6b703ad6717ff27494f1a137dfcd039321` (str, required) - The hash of the transaction to return
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": {
                "tx_index": 120,
                "tx_hash": "c6043e9ceafa1ced581e48b9bb273a6b703ad6717ff27494f1a137dfcd039321",
                "msg_index": 0,
                "block_index": 243,
                "asset": "OPENFAIR",
                "quantity": 0,
                "divisible": true,
                "source": "bcrt1qquwz9xkh3dv34l49v32lk3kc283utd58ung2cn",
                "issuer": "bcrt1qquwz9xkh3dv34l49v32lk3kc283utd58ung2cn",
                "transfer": false,
                "callable": false,
                "call_date": 0,
                "call_price": 0.0,
                "description": "",
                "fee_paid": 50000000,
                "status": "valid",
                "asset_longname": null,
                "description_locked": false,
                "fair_minting": true,
                "asset_events": "open_fairminter",
                "locked": false,
                "reset": false,
                "block_time": 1740490102,
                "quantity_normalized": "0.00000000",
                "fee_paid_normalized": "0.50000000"
            }
        }
    ```

## Group Sweeps

### Get Sweeps [GET /v2/sweeps{?cursor}{&limit}{&offset}{&verbose}]

Returns all sweeps

+ Parameters
    + cursor (str, optional) - The last index of the sweeps to return
        + Default: `None`
    + limit: `5` (int, optional) - The maximum number of sweeps to return
        + Default: `100`
    + offset (int, optional) - The number of lines to skip before returning results (overrides the `cursor` parameter)
        + Default: `None`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": [
                {
                    "tx_index": 65,
                    "tx_hash": "e0043724de46115717f26d5126665cd592e152dc397d4ecbcd7e41809a575b49",
                    "block_index": 190,
                    "source": "bcrt1qj7zsv3gv750c8mr02eytgp5xen2ke6fpak6ztc",
                    "destination": "bcrt1qndrj8uy6the35p3gpjuuss7l29hwe0npylexmz",
                    "flags": 1,
                    "status": "valid",
                    "memo": "sweep my assets",
                    "fee_paid": 600000,
                    "block_time": 1740489877,
                    "fee_paid_normalized": "0.00600000"
                }
            ],
            "next_cursor": null,
            "result_count": 1
        }
    ```

### Get Sweep By Transaction Hash [GET /v2/sweeps/{tx_hash}{?verbose}]

Returns the sweeps of a transaction

+ Parameters
    + tx_hash: `e0043724de46115717f26d5126665cd592e152dc397d4ecbcd7e41809a575b49` (str, required) - The hash of the transaction to return
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": [
                {
                    "tx_index": 65,
                    "tx_hash": "e0043724de46115717f26d5126665cd592e152dc397d4ecbcd7e41809a575b49",
                    "block_index": 190,
                    "source": "bcrt1qj7zsv3gv750c8mr02eytgp5xen2ke6fpak6ztc",
                    "destination": "bcrt1qndrj8uy6the35p3gpjuuss7l29hwe0npylexmz",
                    "flags": 1,
                    "status": "valid",
                    "memo": "sweep my assets",
                    "fee_paid": 600000,
                    "block_time": 1740489877,
                    "fee_paid_normalized": "0.00600000"
                }
            ],
            "next_cursor": null,
            "result_count": 1
        }
    ```

## Group Broadcasts

### Get Valid Broadcasts [GET /v2/broadcasts{?cursor}{&limit}{&offset}{&verbose}]

Returns all valid broadcasts

+ Parameters
    + cursor (str, optional) - The last index of the broadcasts to return
        + Default: `None`
    + limit: `5` (int, optional) - The maximum number of broadcasts to return
        + Default: `100`
    + offset (int, optional) - The number of lines to skip before returning results (overrides the `cursor` parameter)
        + Default: `None`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": [
                {
                    "tx_index": 25,
                    "tx_hash": "e730b05d65034f972ffd6833c069ea0b65aaf6edf2cd4a4388b21d2889a3280f",
                    "block_index": 129,
                    "source": "bcrt1qquwz9xkh3dv34l49v32lk3kc283utd58ung2cn",
                    "timestamp": 4003903983,
                    "value": 66600.0,
                    "fee_fraction_int": 0,
                    "text": "price-USD",
                    "locked": false,
                    "status": "valid",
                    "block_time": 1740489665,
                    "fee_fraction_int_normalized": "0.00000000"
                },
                {
                    "tx_index": 24,
                    "tx_hash": "bc83ab07e663168df3e35fd609b4cf82ac8729bee2abe936939a9a60a5f1e17f",
                    "block_index": 128,
                    "source": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                    "timestamp": 4003903983,
                    "value": 999.0,
                    "fee_fraction_int": 0,
                    "text": "Hello, world!",
                    "locked": false,
                    "status": "valid",
                    "block_time": 1740489662,
                    "fee_fraction_int_normalized": "0.00000000"
                }
            ],
            "next_cursor": null,
            "result_count": 2
        }
    ```

### Get Broadcast By Transaction Hash [GET /v2/broadcasts/{tx_hash}{?verbose}]

Returns the broadcast of a transaction

+ Parameters
    + tx_hash: `e730b05d65034f972ffd6833c069ea0b65aaf6edf2cd4a4388b21d2889a3280f` (str, required) - The hash of the transaction to return
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": {
                "tx_index": 25,
                "tx_hash": "e730b05d65034f972ffd6833c069ea0b65aaf6edf2cd4a4388b21d2889a3280f",
                "block_index": 129,
                "source": "bcrt1qquwz9xkh3dv34l49v32lk3kc283utd58ung2cn",
                "timestamp": 4003903983,
                "value": 66600.0,
                "fee_fraction_int": 0,
                "text": "price-USD",
                "locked": false,
                "status": "valid",
                "block_time": 1740489665,
                "fee_fraction_int_normalized": "0.00000000"
            }
        }
    ```

## Group Fairminters

### Get All Fairminters [GET /v2/fairminters{?status}{&cursor}{&limit}{&offset}{&verbose}]

Returns all fairminters

+ Parameters
    + status (enum[str], optional) - The status of the fairminters to return
        + Default: `all`
        + Members
            + `all`
            + `open`
            + `closed`
            + `pending`
    + cursor (str, optional) - The last index of the fairminter to return
        + Default: `None`
    + limit: `5` (int, optional) - The maximum number of fairminter to return
        + Default: `100`
    + offset (int, optional) - The number of lines to skip before returning results (overrides the `cursor` parameter)
        + Default: `None`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": [
                {
                    "tx_hash": "c6043e9ceafa1ced581e48b9bb273a6b703ad6717ff27494f1a137dfcd039321",
                    "tx_index": 120,
                    "block_index": 243,
                    "source": "bcrt1qquwz9xkh3dv34l49v32lk3kc283utd58ung2cn",
                    "asset": "OPENFAIR",
                    "asset_parent": null,
                    "asset_longname": null,
                    "description": "",
                    "price": 0,
                    "quantity_by_price": 1,
                    "hard_cap": 0,
                    "burn_payment": false,
                    "max_mint_per_tx": 10,
                    "premint_quantity": 0,
                    "start_block": 0,
                    "end_block": 0,
                    "minted_asset_commission_int": 0,
                    "soft_cap": 0,
                    "soft_cap_deadline_block": 0,
                    "lock_description": false,
                    "lock_quantity": false,
                    "divisible": true,
                    "pre_minted": false,
                    "status": "open",
                    "earned_quantity": null,
                    "paid_quantity": null,
                    "commission": null,
                    "block_time": 1740490102,
                    "price_normalized": "0.0000000000000000",
                    "hard_cap_normalized": "0.00000000",
                    "soft_cap_normalized": "0.00000000",
                    "quantity_by_price_normalized": "0.00000001",
                    "max_mint_per_tx_normalized": "0.00000010",
                    "premint_quantity_normalized": "0.00000000"
                },
                {
                    "tx_hash": "0b85ece9496719a0822cb5b2d262896ad04c7ba9da111b4a240e1f9f5b5630d6",
                    "tx_index": 101,
                    "block_index": 228,
                    "source": "bcrt1qyyjgcgnjrxkznrdk8pc9dwp98twx5qesptttlg",
                    "asset": "PREMINT",
                    "asset_parent": null,
                    "asset_longname": null,
                    "description": "",
                    "price": 1,
                    "quantity_by_price": 1,
                    "hard_cap": 0,
                    "burn_payment": false,
                    "max_mint_per_tx": 0,
                    "premint_quantity": 50,
                    "start_block": 0,
                    "end_block": 0,
                    "minted_asset_commission_int": 0,
                    "soft_cap": 100,
                    "soft_cap_deadline_block": 228,
                    "lock_description": false,
                    "lock_quantity": false,
                    "divisible": true,
                    "pre_minted": false,
                    "status": "closed",
                    "earned_quantity": null,
                    "paid_quantity": null,
                    "commission": null,
                    "block_time": 1740490019,
                    "price_normalized": "1.0000000000000000",
                    "hard_cap_normalized": "0.00000000",
                    "soft_cap_normalized": "0.00000100",
                    "quantity_by_price_normalized": "0.00000001",
                    "max_mint_per_tx_normalized": "0.00000000",
                    "premint_quantity_normalized": "0.00000050"
                },
                {
                    "tx_hash": "3672a9093ed26f6be9b0f343040f560e1986e2ad87d26b05fc56b45061b87010",
                    "tx_index": 100,
                    "block_index": 226,
                    "source": "bcrt1qyyjgcgnjrxkznrdk8pc9dwp98twx5qesptttlg",
                    "asset": "STARTNOW",
                    "asset_parent": null,
                    "asset_longname": null,
                    "description": "let's start now",
                    "price": 1,
                    "quantity_by_price": 1,
                    "hard_cap": 0,
                    "burn_payment": false,
                    "max_mint_per_tx": 0,
                    "premint_quantity": 0,
                    "start_block": 0,
                    "end_block": 0,
                    "minted_asset_commission_int": 0,
                    "soft_cap": 100,
                    "soft_cap_deadline_block": 226,
                    "lock_description": false,
                    "lock_quantity": false,
                    "divisible": true,
                    "pre_minted": false,
                    "status": "closed",
                    "earned_quantity": null,
                    "paid_quantity": null,
                    "commission": null,
                    "block_time": 1740490013,
                    "price_normalized": "1.0000000000000000",
                    "hard_cap_normalized": "0.00000000",
                    "soft_cap_normalized": "0.00000100",
                    "quantity_by_price_normalized": "0.00000001",
                    "max_mint_per_tx_normalized": "0.00000000",
                    "premint_quantity_normalized": "0.00000000"
                },
                {
                    "tx_hash": "e74a35a9372aaefa13521b416ef90622489e09bf4b18d217888616efe08d8420",
                    "tx_index": 99,
                    "block_index": 224,
                    "source": "bcrt1qyyjgcgnjrxkznrdk8pc9dwp98twx5qesptttlg",
                    "asset": null,
                    "asset_parent": null,
                    "asset_longname": null,
                    "description": null,
                    "price": null,
                    "quantity_by_price": null,
                    "hard_cap": null,
                    "burn_payment": false,
                    "max_mint_per_tx": null,
                    "premint_quantity": null,
                    "start_block": null,
                    "end_block": null,
                    "minted_asset_commission_int": null,
                    "soft_cap": null,
                    "soft_cap_deadline_block": null,
                    "lock_description": false,
                    "lock_quantity": false,
                    "divisible": false,
                    "pre_minted": false,
                    "status": "invalid: Soft cap deadline block must be > start block.",
                    "earned_quantity": null,
                    "paid_quantity": null,
                    "commission": null,
                    "block_time": 1740490006
                },
                {
                    "tx_hash": "694457e6a10c196f758588693aae086f6e8618f60ff3a6f4f6ed12a1b50617b1",
                    "tx_index": 98,
                    "block_index": 223,
                    "source": "bcrt1qyyjgcgnjrxkznrdk8pc9dwp98twx5qesptttlg",
                    "asset": "EXPANSIVE",
                    "asset_parent": null,
                    "asset_longname": null,
                    "description": "too expensive for you",
                    "price": 99900000000,
                    "quantity_by_price": 1,
                    "hard_cap": 0,
                    "burn_payment": false,
                    "max_mint_per_tx": 0,
                    "premint_quantity": 0,
                    "start_block": 0,
                    "end_block": 223,
                    "minted_asset_commission_int": 0,
                    "soft_cap": 0,
                    "soft_cap_deadline_block": 0,
                    "lock_description": false,
                    "lock_quantity": false,
                    "divisible": true,
                    "pre_minted": false,
                    "status": "closed",
                    "earned_quantity": null,
                    "paid_quantity": null,
                    "commission": null,
                    "block_time": 1740490003,
                    "price_normalized": "99900000000.0000000000000000",
                    "hard_cap_normalized": "0.00000000",
                    "soft_cap_normalized": "0.00000000",
                    "quantity_by_price_normalized": "0.00000001",
                    "max_mint_per_tx_normalized": "0.00000000",
                    "premint_quantity_normalized": "0.00000000"
                }
            ],
            "next_cursor": 13,
            "result_count": 18
        }
    ```

### Get Fairminter [GET /v2/fairminters/{tx_hash}{?verbose}]

Returns the fairminter by its hash

+ Parameters
    + tx_hash (str, required) - 
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

### Get Fairmints By Fairminter [GET /v2/fairminters/{tx_hash}/fairmints{?cursor}{&limit}{&offset}{&verbose}]

Returns the mints by fairminter

+ Parameters
    + tx_hash (str, required) - 
    + cursor (str, optional) - 
        + Default: `None`
    + limit (int, optional) - 
        + Default: `100`
    + offset (int, optional) - 
        + Default: `None`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

## Group Fairmints

### Get All Fairmints [GET /v2/fairmints{?cursor}{&limit}{&offset}{&verbose}]

Returns all fairmints

+ Parameters
    + cursor (str, optional) - The last index of the fairmint to return
        + Default: `None`
    + limit: `5` (int, optional) - The maximum number of fairmint to return
        + Default: `100`
    + offset (int, optional) - The number of lines to skip before returning results (overrides the `cursor` parameter)
        + Default: `None`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": [
                {
                    "tx_hash": "f008cc467441d6088b240484737bc7c3a9665fca802126e7724a0e297fec8adc",
                    "tx_index": 97,
                    "block_index": 221,
                    "source": "bcrt1qquwz9xkh3dv34l49v32lk3kc283utd58ung2cn",
                    "fairminter_tx_hash": "2efa348123c9d59037cd1352f1074a77e6c56630f04c6a742623c0d403824cb8",
                    "asset": "BURNER",
                    "earn_quantity": 80000000,
                    "paid_quantity": 100000000,
                    "commission": 20000000,
                    "status": "valid",
                    "block_time": 1740489996,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "let's burn it",
                        "issuer": "bcrt1qyyjgcgnjrxkznrdk8pc9dwp98twx5qesptttlg",
                        "divisible": true,
                        "locked": true,
                        "owner": "bcrt1qyyjgcgnjrxkznrdk8pc9dwp98twx5qesptttlg"
                    },
                    "earn_quantity_normalized": "0.80000000",
                    "commission_normalized": "0.20000000",
                    "paid_quantity_normalized": "1.00000000"
                },
                {
                    "tx_hash": "a236cef859182d1ae06f35fca5ce4b9ff41bb029839ef0e66868faeef6e06025",
                    "tx_index": 95,
                    "block_index": 219,
                    "source": "bcrt1qquwz9xkh3dv34l49v32lk3kc283utd58ung2cn",
                    "fairminter_tx_hash": "1b458ea5cae22adad6b2bdf7068707d4d7ab839790682f7e19dcc3b9235f231f",
                    "asset": "LOCKDESC",
                    "earn_quantity": 800000000,
                    "paid_quantity": 0,
                    "commission": 200000000,
                    "status": "valid",
                    "block_time": 1740489990,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "My super asset LOCKDESC",
                        "issuer": "bcrt1qyyjgcgnjrxkznrdk8pc9dwp98twx5qesptttlg",
                        "divisible": true,
                        "locked": true,
                        "owner": "bcrt1qyyjgcgnjrxkznrdk8pc9dwp98twx5qesptttlg"
                    },
                    "earn_quantity_normalized": "8.00000000",
                    "commission_normalized": "2.00000000",
                    "paid_quantity_normalized": "0.00000000"
                },
                {
                    "tx_hash": "f0477be14630c46d3d922faa66e478f1a6dc4b72e7538dd73377bea64cb96b14",
                    "tx_index": 91,
                    "block_index": 215,
                    "source": "bcrt1qv82qg4jp6nn6wahdnx2d2u6cdfxyc2zuw7u9mv",
                    "fairminter_tx_hash": "22696baa1503e9f0087a1fca7e685732674cad646304dd97ccc9d53014e34e98",
                    "asset": "A95428959531084712",
                    "earn_quantity": 100,
                    "paid_quantity": 0,
                    "commission": 0,
                    "status": "valid",
                    "block_time": 1740489975,
                    "asset_info": {
                        "asset_longname": "PARENTA.SUBASSETC",
                        "description": "",
                        "issuer": "bcrt1qv82qg4jp6nn6wahdnx2d2u6cdfxyc2zuw7u9mv",
                        "divisible": true,
                        "locked": false,
                        "owner": "bcrt1qv82qg4jp6nn6wahdnx2d2u6cdfxyc2zuw7u9mv"
                    },
                    "earn_quantity_normalized": "0.00000100",
                    "commission_normalized": "0.00000000",
                    "paid_quantity_normalized": "0.00000000"
                },
                {
                    "tx_hash": "860c65fa9ca38d56cd7c7632b7e272c419871035b7bf9b39c4ea113091c138d6",
                    "tx_index": 46,
                    "block_index": 150,
                    "source": "bcrt1qdj4ckly3lwmjqld7pu60qu9myggm6pnd58ntz6",
                    "fairminter_tx_hash": "90cd0970da6991e63976a4bf990b252867c94d4946fa288e4fac6a8c821fcf89",
                    "asset": "FREEFAIRMINT",
                    "earn_quantity": 80,
                    "paid_quantity": 0,
                    "commission": 0,
                    "status": "valid",
                    "block_time": 1740489742,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "",
                        "issuer": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                        "divisible": true,
                        "locked": false,
                        "owner": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n"
                    },
                    "earn_quantity_normalized": "0.00000080",
                    "commission_normalized": "0.00000000",
                    "paid_quantity_normalized": "0.00000000"
                },
                {
                    "tx_hash": "d9a9c7f0a9d0e9f477ff1ffe84146ff9dedfdc96d138876393b5b589dec038ef",
                    "tx_index": 45,
                    "block_index": 149,
                    "source": "bcrt1qdj4ckly3lwmjqld7pu60qu9myggm6pnd58ntz6",
                    "fairminter_tx_hash": "90cd0970da6991e63976a4bf990b252867c94d4946fa288e4fac6a8c821fcf89",
                    "asset": "FREEFAIRMINT",
                    "earn_quantity": 100,
                    "paid_quantity": 0,
                    "commission": 0,
                    "status": "valid",
                    "block_time": 1740489739,
                    "asset_info": {
                        "asset_longname": null,
                        "description": "",
                        "issuer": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n",
                        "divisible": true,
                        "locked": false,
                        "owner": "bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n"
                    },
                    "earn_quantity_normalized": "0.00000100",
                    "commission_normalized": "0.00000000",
                    "paid_quantity_normalized": "0.00000000"
                }
            ],
            "next_cursor": 10,
            "result_count": 15
        }
    ```

### Get Fairmint [GET /v2/fairmints/{tx_hash}{?verbose}]

Returns the fairmint by its hash

+ Parameters
    + tx_hash: `f008cc467441d6088b240484737bc7c3a9665fca802126e7724a0e297fec8adc` (str, required) - The hash of the fairmint to return
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": {
                "tx_hash": "f008cc467441d6088b240484737bc7c3a9665fca802126e7724a0e297fec8adc",
                "tx_index": 97,
                "block_index": 221,
                "source": "bcrt1qquwz9xkh3dv34l49v32lk3kc283utd58ung2cn",
                "fairminter_tx_hash": "2efa348123c9d59037cd1352f1074a77e6c56630f04c6a742623c0d403824cb8",
                "asset": "BURNER",
                "earn_quantity": 80000000,
                "paid_quantity": 100000000,
                "commission": 20000000,
                "status": "valid",
                "block_time": 1740489996,
                "asset_info": {
                    "asset_longname": null,
                    "description": "let's burn it",
                    "issuer": "bcrt1qyyjgcgnjrxkznrdk8pc9dwp98twx5qesptttlg",
                    "divisible": true,
                    "locked": true,
                    "owner": "bcrt1qyyjgcgnjrxkznrdk8pc9dwp98twx5qesptttlg"
                },
                "earn_quantity_normalized": "0.80000000",
                "commission_normalized": "0.20000000",
                "paid_quantity_normalized": "1.00000000"
            }
        }
    ```

## Group Bitcoin

### Get Utxos By Addresses [GET /v2/bitcoin/addresses/utxos{?addresses}{&unconfirmed}{&unspent_tx_hash}{&verbose}]

Returns a list of unspent outputs for a list of addresses

+ Parameters
    + addresses: `bcrt1qs8qhqqz7us7w5kt08wqmxmqsl8h6jknlejhyru,bcrt1qv82qg4jp6nn6wahdnx2d2u6cdfxyc2zuw7u9mv` (str, required) - The addresses to search for
    + unconfirmed (bool, optional) - Include unconfirmed transactions
        + Default: `False`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "error": "Electrs error: HTTPConnectionPool(host='localhost', port=3002): Max retries exceeded with url: /address/bcrt1qs8qhqqz7us7w5kt08wqmxmqsl8h6jknlejhyru/utxo (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f0ce80c0f10>: Failed to establish a new connection: [Errno 111] Connection refused'))"
        }
    ```

### Get History [GET /v2/bitcoin/addresses/{address}/transactions{?unconfirmed}{&verbose}]

Returns all transactions involving a given address

+ Parameters
    + address: `bcrt1qj7zsv3gv750c8mr02eytgp5xen2ke6fpak6ztc` (str, required) - The address to search for
    + unconfirmed (bool, optional) - 
        + Default: `False`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "error": "Electrs error: HTTPConnectionPool(host='localhost', port=3002): Max retries exceeded with url: /address/bcrt1qj7zsv3gv750c8mr02eytgp5xen2ke6fpak6ztc/txs (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f0cd04973d0>: Failed to establish a new connection: [Errno 111] Connection refused'))"
        }
    ```

### Get Utxos [GET /v2/bitcoin/addresses/{address}/utxos{?unconfirmed}{&unspent_tx_hash}{&verbose}]

Returns a list of unspent outputs for a specific address

+ Parameters
    + unconfirmed (bool, optional) - Include unconfirmed transactions
        + Default: `False`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

### PubKeyHash To Pubkey [GET /v2/bitcoin/addresses/{address}/pubkey{?verbose}]

Get pubkey for an address.

+ Parameters
    + address: `bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n` (str, required) - Address to get pubkey for.
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "error": "Electrs error: HTTPConnectionPool(host='localhost', port=3002): Max retries exceeded with url: /address/bcrt1q9ya6f4flznjaqud9999zzcnfc324r8c3cqml2n/txs (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f0cd0496410>: Failed to establish a new connection: [Errno 111] Connection refused'))"
        }
    ```

### Get Transaction [GET /v2/bitcoin/transactions/{tx_hash}{?format}{&verbose}]

Get a transaction from the blockchain

+ Parameters
    + tx_hash: `d66c519e0f46c35c747dcf363d3f31bf77b283c0537bd1392c3fb707b3a43ad3` (str, required) - The transaction hash
    + format: `hex` (str, optional) - Whether to return JSON output or raw hex
        + Default: `json`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": "02000000000101658b0220cdf9422073d01572a3d3ccd98c5754d48a82831d1ba09681a770dae10100000000ffffffff03e803000000000000160014071c229ad78b591afea56455fb46d851e3c5b68700000000000000000c6a0aec384304ffb6327bf16b871409270100000016001477570f60766fea2d771a589499e822d768d5fae602473044022065809c24d7f29974af7f8eff1f20a42120cc34239fd0cd86918ba6b5efbf411d022066dad6c113ae00074ae9f0b64747af3c2373bfca1470faeeac4d748269e06b93012103ea2bc172e06f0c6487aebcac9ee7e03ba48aee7e55e9aff202f88732036c8f9000000000"
        }
    ```

### Fee Per Kb [GET /v2/bitcoin/estimatesmartfee{?conf_target}{&mode}{&verbose}]

Get the fee per kilobyte for a transaction to be confirmed in `conf_target` blocks.

+ Parameters
    + conf_target: `2` (int, optional) - Confirmation target in blocks (1 - 1008)
        + Default: `3`
    + mode: `CONSERVATIVE` (str, optional) - The fee estimate mode.
        + Default: `CONSERVATIVE`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": 58551
        }
    ```

### Sendrawtransaction [GET /v2/bitcoin/transactions{?signedhex}{&verbose}]

Proxy to `sendrawtransaction` RPC call.

+ Parameters
    + signedhex (str, required) - The signed transaction hex.
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

### Decoderawtransaction [GET /v2/bitcoin/transactions/decode{?rawtx}{&verbose}]

Proxy to `decoderawtransaction` RPC call.

+ Parameters
    + rawtx: `0200000000010199c94580cbea44aead18f429be20552e640804dc3b4808e39115197f1312954d000000001600147c6b1112ed7bc76fd03af8b91d02fd6942c5a8d0ffffffff0280f0fa02000000001976a914a11b66a67b3ff69671c8f82254099faf374b800e88ac70da0a27010000001600147c6b1112ed7bc76fd03af8b91d02fd6942c5a8d002000000000000` (str, required) - The raw transaction hex.
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": {
                "txid": "0af935874d4d8c588f4c30a68c39d96906bf20ba20accd4337b8fcfc0196299b",
                "hash": "b265ef6af958f89b1c835f0956c5c374761e5f5d3b7910ee0e79e0e08900affd",
                "version": 2,
                "size": 143,
                "vsize": 140,
                "weight": 557,
                "locktime": 0,
                "vin": [
                    {
                        "txid": "4d9512137f191591e308483bdc0408642e5520be29f418adae44eacb8045c999",
                        "vout": 0,
                        "scriptSig": {
                            "asm": "0 7c6b1112ed7bc76fd03af8b91d02fd6942c5a8d0",
                            "hex": "00147c6b1112ed7bc76fd03af8b91d02fd6942c5a8d0"
                        },
                        "txinwitness": [
                            "",
                            ""
                        ],
                        "sequence": 4294967295
                    }
                ],
                "vout": [
                    {
                        "value": 0.5,
                        "n": 0,
                        "scriptPubKey": {
                            "asm": "OP_DUP OP_HASH160 a11b66a67b3ff69671c8f82254099faf374b800e OP_EQUALVERIFY OP_CHECKSIG",
                            "desc": "addr(mvCounterpartyXXXXXXXXXXXXXXW24Hef)#3dsuzcep",
                            "hex": "76a914a11b66a67b3ff69671c8f82254099faf374b800e88ac",
                            "address": "mvCounterpartyXXXXXXXXXXXXXXW24Hef",
                            "type": "pubkeyhash"
                        }
                    },
                    {
                        "value": 49.4999,
                        "n": 1,
                        "scriptPubKey": {
                            "asm": "0 7c6b1112ed7bc76fd03af8b91d02fd6942c5a8d0",
                            "desc": "addr(bcrt1q0343zyhd00rkl5p6lzu36qhad9pvt2xsad2aut)#arywlyjk",
                            "hex": "00147c6b1112ed7bc76fd03af8b91d02fd6942c5a8d0",
                            "address": "bcrt1q0343zyhd00rkl5p6lzu36qhad9pvt2xsad2aut",
                            "type": "witness_v0_keyhash"
                        }
                    }
                ]
            }
        }
    ```

### Get Mempool Info [GET /v2/bitcoin/getmempoolinfo{?verbose}]

Get the current mempool info.

+ Parameters
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": {
                "loaded": true,
                "size": 1,
                "bytes": 167,
                "usage": 1232,
                "total_fee": 0.0001,
                "maxmempool": 300000000,
                "mempoolminfee": 0.0,
                "minrelaytxfee": 0.0,
                "incrementalrelayfee": 1e-05,
                "unbroadcastcount": 1,
                "fullrbf": true
            }
        }
    ```

## Group Mempool

### Get All Mempool Events [GET /v2/mempool/events{?event_name}{&addresses}{&cursor}{&limit}{&offset}{&verbose}]

Returns all mempool events

+ Parameters
    + event_name (str, optional) - Comma separated list of events to return
        + Default: `None`
    + addresses (str, optional) - Comma separated list of addresses to return
        + Default: `None`
    + cursor (str, optional) - The last event index to return
        + Default: `None`
    + limit: `5` (int, optional) - The maximum number of events to return
        + Default: `100`
    + offset (int, optional) - The number of lines to skip before returning results (overrides the `cursor` parameter)
        + Default: `None`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": [
                {
                    "tx_hash": "0ab945476155bacbb733e71fe0fe435cdb13c4954a1231bfcabc678c0ec790eb",
                    "event": "TRANSACTION_PARSED",
                    "params": {
                        "supported": true,
                        "tx_hash": "0ab945476155bacbb733e71fe0fe435cdb13c4954a1231bfcabc678c0ec790eb",
                        "tx_index": 122
                    },
                    "timestamp": 1740490115.3338332
                },
                {
                    "tx_hash": "0ab945476155bacbb733e71fe0fe435cdb13c4954a1231bfcabc678c0ec790eb",
                    "event": "ENHANCED_SEND",
                    "params": {
                        "asset": "XCP",
                        "block_index": 9999999,
                        "destination": "bcrt1qj7zsv3gv750c8mr02eytgp5xen2ke6fpak6ztc",
                        "memo": null,
                        "msg_index": 0,
                        "quantity": 10000,
                        "send_type": "send",
                        "source": "bcrt1qndrj8uy6the35p3gpjuuss7l29hwe0npylexmz",
                        "status": "valid",
                        "tx_hash": "0ab945476155bacbb733e71fe0fe435cdb13c4954a1231bfcabc678c0ec790eb",
                        "tx_index": 122,
                        "asset_info": {
                            "asset_longname": null,
                            "description": "The Counterparty protocol native currency",
                            "issuer": null,
                            "divisible": true,
                            "locked": true,
                            "owner": null
                        },
                        "quantity_normalized": "0.00010000"
                    },
                    "timestamp": 1740490115.3338332
                },
                {
                    "tx_hash": "0ab945476155bacbb733e71fe0fe435cdb13c4954a1231bfcabc678c0ec790eb",
                    "event": "CREDIT",
                    "params": {
                        "address": "bcrt1qj7zsv3gv750c8mr02eytgp5xen2ke6fpak6ztc",
                        "asset": "XCP",
                        "block_index": 245,
                        "calling_function": "send",
                        "event": "0ab945476155bacbb733e71fe0fe435cdb13c4954a1231bfcabc678c0ec790eb",
                        "quantity": 10000,
                        "tx_index": 122,
                        "utxo": null,
                        "utxo_address": null,
                        "block_time": 1740490111,
                        "asset_info": {
                            "asset_longname": null,
                            "description": "The Counterparty protocol native currency",
                            "issuer": null,
                            "divisible": true,
                            "locked": true,
                            "owner": null
                        },
                        "quantity_normalized": "0.00010000"
                    },
                    "timestamp": 1740490115.3338332
                },
                {
                    "tx_hash": "0ab945476155bacbb733e71fe0fe435cdb13c4954a1231bfcabc678c0ec790eb",
                    "event": "DEBIT",
                    "params": {
                        "action": "send",
                        "address": "bcrt1qndrj8uy6the35p3gpjuuss7l29hwe0npylexmz",
                        "asset": "XCP",
                        "block_index": 245,
                        "event": "0ab945476155bacbb733e71fe0fe435cdb13c4954a1231bfcabc678c0ec790eb",
                        "quantity": 10000,
                        "tx_index": 122,
                        "utxo": null,
                        "utxo_address": null,
                        "block_time": 1740490111,
                        "asset_info": {
                            "asset_longname": null,
                            "description": "The Counterparty protocol native currency",
                            "issuer": null,
                            "divisible": true,
                            "locked": true,
                            "owner": null
                        },
                        "quantity_normalized": "0.00010000"
                    },
                    "timestamp": 1740490115.3338332
                },
                {
                    "tx_hash": "0ab945476155bacbb733e71fe0fe435cdb13c4954a1231bfcabc678c0ec790eb",
                    "event": "NEW_TRANSACTION",
                    "params": {
                        "block_hash": "mempool",
                        "block_index": 9999999,
                        "block_time": 1740490115.3338332,
                        "btc_amount": 0,
                        "data": "020000000000000001000000000000271080978506450cf51f83ec6f5648b40686ccd56ce921",
                        "destination": "",
                        "fee": 10000,
                        "source": "bcrt1qndrj8uy6the35p3gpjuuss7l29hwe0npylexmz",
                        "transaction_type": "enhanced_send",
                        "tx_hash": "0ab945476155bacbb733e71fe0fe435cdb13c4954a1231bfcabc678c0ec790eb",
                        "tx_index": 122,
                        "utxos_info": " 0ab945476155bacbb733e71fe0fe435cdb13c4954a1231bfcabc678c0ec790eb:1 2 0",
                        "btc_amount_normalized": "0.00000000"
                    },
                    "timestamp": 1740490115.3338332
                }
            ],
            "next_cursor": null,
            "result_count": 5
        }
    ```

### Get Mempool Events By Name [GET /v2/mempool/events/{event}{?cursor}{&limit}{&offset}{&verbose}]

Returns the mempool events filtered by event name

+ Parameters
    + event: `CREDIT` (str, required) - The event to return
    + cursor (str, optional) - The last event index to return
        + Default: `None`
    + limit: `5` (int, optional) - The maximum number of events to return
        + Default: `100`
    + offset (int, optional) - The number of lines to skip before returning results (overrides the `cursor` parameter)
        + Default: `None`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": [
                {
                    "tx_hash": "0ab945476155bacbb733e71fe0fe435cdb13c4954a1231bfcabc678c0ec790eb",
                    "event": "CREDIT",
                    "params": {
                        "address": "bcrt1qj7zsv3gv750c8mr02eytgp5xen2ke6fpak6ztc",
                        "asset": "XCP",
                        "block_index": 245,
                        "calling_function": "send",
                        "event": "0ab945476155bacbb733e71fe0fe435cdb13c4954a1231bfcabc678c0ec790eb",
                        "quantity": 10000,
                        "tx_index": 122,
                        "utxo": null,
                        "utxo_address": null,
                        "block_time": 1740490111,
                        "asset_info": {
                            "asset_longname": null,
                            "description": "The Counterparty protocol native currency",
                            "issuer": null,
                            "divisible": true,
                            "locked": true,
                            "owner": null
                        },
                        "quantity_normalized": "0.00010000"
                    },
                    "timestamp": 1740490115.3338332
                }
            ],
            "next_cursor": null,
            "result_count": 1
        }
    ```

### Get Mempool Events By Tx Hash [GET /v2/mempool/transactions/{tx_hash}/events{?event_name}{&cursor}{&limit}{&offset}{&verbose}]

Returns the mempool events filtered by transaction hash

+ Parameters
    + tx_hash: `0ab945476155bacbb733e71fe0fe435cdb13c4954a1231bfcabc678c0ec790eb` (str, required) - The hash of the transaction to return
    + event_name (str, optional) - Comma separated list of events to return
        + Default: `None`
    + cursor (str, optional) - The last event index to return
        + Default: `None`
    + limit: `5` (int, optional) - The maximum number of events to return
        + Default: `100`
    + offset (int, optional) - The number of lines to skip before returning results (overrides the `cursor` parameter)
        + Default: `None`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": [
                {
                    "tx_hash": "0ab945476155bacbb733e71fe0fe435cdb13c4954a1231bfcabc678c0ec790eb",
                    "event": "TRANSACTION_PARSED",
                    "params": {
                        "supported": true,
                        "tx_hash": "0ab945476155bacbb733e71fe0fe435cdb13c4954a1231bfcabc678c0ec790eb",
                        "tx_index": 122
                    },
                    "timestamp": 1740490115.3338332
                },
                {
                    "tx_hash": "0ab945476155bacbb733e71fe0fe435cdb13c4954a1231bfcabc678c0ec790eb",
                    "event": "ENHANCED_SEND",
                    "params": {
                        "asset": "XCP",
                        "block_index": 9999999,
                        "destination": "bcrt1qj7zsv3gv750c8mr02eytgp5xen2ke6fpak6ztc",
                        "memo": null,
                        "msg_index": 0,
                        "quantity": 10000,
                        "send_type": "send",
                        "source": "bcrt1qndrj8uy6the35p3gpjuuss7l29hwe0npylexmz",
                        "status": "valid",
                        "tx_hash": "0ab945476155bacbb733e71fe0fe435cdb13c4954a1231bfcabc678c0ec790eb",
                        "tx_index": 122,
                        "asset_info": {
                            "asset_longname": null,
                            "description": "The Counterparty protocol native currency",
                            "issuer": null,
                            "divisible": true,
                            "locked": true,
                            "owner": null
                        },
                        "quantity_normalized": "0.00010000"
                    },
                    "timestamp": 1740490115.3338332
                },
                {
                    "tx_hash": "0ab945476155bacbb733e71fe0fe435cdb13c4954a1231bfcabc678c0ec790eb",
                    "event": "CREDIT",
                    "params": {
                        "address": "bcrt1qj7zsv3gv750c8mr02eytgp5xen2ke6fpak6ztc",
                        "asset": "XCP",
                        "block_index": 245,
                        "calling_function": "send",
                        "event": "0ab945476155bacbb733e71fe0fe435cdb13c4954a1231bfcabc678c0ec790eb",
                        "quantity": 10000,
                        "tx_index": 122,
                        "utxo": null,
                        "utxo_address": null,
                        "block_time": 1740490111,
                        "asset_info": {
                            "asset_longname": null,
                            "description": "The Counterparty protocol native currency",
                            "issuer": null,
                            "divisible": true,
                            "locked": true,
                            "owner": null
                        },
                        "quantity_normalized": "0.00010000"
                    },
                    "timestamp": 1740490115.3338332
                },
                {
                    "tx_hash": "0ab945476155bacbb733e71fe0fe435cdb13c4954a1231bfcabc678c0ec790eb",
                    "event": "DEBIT",
                    "params": {
                        "action": "send",
                        "address": "bcrt1qndrj8uy6the35p3gpjuuss7l29hwe0npylexmz",
                        "asset": "XCP",
                        "block_index": 245,
                        "event": "0ab945476155bacbb733e71fe0fe435cdb13c4954a1231bfcabc678c0ec790eb",
                        "quantity": 10000,
                        "tx_index": 122,
                        "utxo": null,
                        "utxo_address": null,
                        "block_time": 1740490111,
                        "asset_info": {
                            "asset_longname": null,
                            "description": "The Counterparty protocol native currency",
                            "issuer": null,
                            "divisible": true,
                            "locked": true,
                            "owner": null
                        },
                        "quantity_normalized": "0.00010000"
                    },
                    "timestamp": 1740490115.3338332
                },
                {
                    "tx_hash": "0ab945476155bacbb733e71fe0fe435cdb13c4954a1231bfcabc678c0ec790eb",
                    "event": "NEW_TRANSACTION",
                    "params": {
                        "block_hash": "mempool",
                        "block_index": 9999999,
                        "block_time": 1740490115.3338332,
                        "btc_amount": 0,
                        "data": "020000000000000001000000000000271080978506450cf51f83ec6f5648b40686ccd56ce921",
                        "destination": "",
                        "fee": 10000,
                        "source": "bcrt1qndrj8uy6the35p3gpjuuss7l29hwe0npylexmz",
                        "transaction_type": "enhanced_send",
                        "tx_hash": "0ab945476155bacbb733e71fe0fe435cdb13c4954a1231bfcabc678c0ec790eb",
                        "tx_index": 122,
                        "utxos_info": " 0ab945476155bacbb733e71fe0fe435cdb13c4954a1231bfcabc678c0ec790eb:1 2 0",
                        "btc_amount_normalized": "0.00000000"
                    },
                    "timestamp": 1740490115.3338332
                }
            ],
            "next_cursor": null,
            "result_count": 5
        }
    ```

## Group Routes

### Get Routes [GET /v2/routes{?verbose}]

Return the API routes.

+ Parameters
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": {
                "/v2/blocks": {
                    "function": "get_blocks",
                    "description": "Returns the list of the last ten blocks",
                    "args": [
                        {
                            "name": "cursor",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The index of the most recent block to return (e.g. $LAST_BLOCK_INDEX)"
                        },
                        {
                            "name": "limit",
                            "default": 10,
                            "required": false,
                            "type": "int",
                            "description": "The number of blocks to return (e.g. 5)"
                        },
                        {
                            "name": "offset",
                            "default": null,
                            "required": false,
                            "type": "int",
                            "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/blocks/last": {
                    "function": "get_last_block",
                    "description": "Return the information of the last block",
                    "args": [
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/blocks/<int:block_index>": {
                    "function": "get_block_by_height",
                    "description": "Return the information of a block",
                    "args": [
                        {
                            "name": "block_index",
                            "required": true,
                            "type": "int",
                            "description": "The index of the block to return (e.g. $LAST_BLOCK_INDEX)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/blocks/<block_hash>": {
                    "function": "get_block_by_hash",
                    "description": "Return the information of a block",
                    "args": [
                        {
                            "name": "block_hash",
                            "required": true,
                            "type": "str",
                            "description": "The index of the block to return (e.g. $LAST_BLOCK_HASH)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/blocks/<int:block_index>/transactions": {
                    "function": "get_transactions_by_block",
                    "description": "Returns the transactions of a block",
                    "args": [
                        {
                            "name": "block_index",
                            "required": true,
                            "type": "int",
                            "description": "The index of the block to return (e.g. $LAST_BLOCK_INDEX)"
                        },
                        {
                            "name": "type",
                            "default": "all",
                            "required": false,
                            "type": "enum[str]",
                            "members": [
                                "all",
                                "bet",
                                "broadcast",
                                "btcpay",
                                "cancel",
                                "destroy",
                                "dispenser",
                                "dispense",
                                "dividend",
                                "issuance",
                                "order",
                                "send",
                                "enhanced_send",
                                "mpma",
                                "rps",
                                "rpsresolve",
                                "sweep",
                                "fairminter",
                                "fairmint",
                                "attach",
                                "detach",
                                "utxomove",
                                "unknown"
                            ],
                            "description": "The type of the transaction to return"
                        },
                        {
                            "name": "show_unconfirmed",
                            "default": false,
                            "required": false,
                            "type": "bool",
                            "description": "Show unconfirmed transactions"
                        },
                        {
                            "name": "cursor",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The last transaction index to return (e.g. $LAST_TX_INDEX)"
                        },
                        {
                            "name": "limit",
                            "default": 10,
                            "required": false,
                            "type": "int",
                            "description": "The maximum number of transactions to return (e.g. 5)"
                        },
                        {
                            "name": "offset",
                            "default": null,
                            "required": false,
                            "type": "int",
                            "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/blocks/<int:block_index>/transactions/counts": {
                    "function": "get_transaction_types_count_by_block",
                    "description": "Returns the count of each transaction type",
                    "args": [
                        {
                            "name": "block_index",
                            "required": true,
                            "type": "int",
                            "description": "The index of the block to return (e.g. $LAST_TX_INDEX)"
                        },
                        {
                            "name": "count_unconfirmed",
                            "default": false,
                            "required": false,
                            "type": "bool",
                            "description": "Count unconfirmed transactions"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/blocks/<int:block_index>/events": {
                    "function": "get_events_by_block",
                    "description": "Returns the events of a block",
                    "args": [
                        {
                            "name": "block_index",
                            "required": true,
                            "type": "int",
                            "description": "The index of the block to return (e.g. $LAST_EVENT_BLOCK)"
                        },
                        {
                            "name": "event_name",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "Comma separated list of events to return"
                        },
                        {
                            "name": "cursor",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The last event index to return (e.g. $LAST_EVENT_INDEX)"
                        },
                        {
                            "name": "limit",
                            "default": 100,
                            "required": false,
                            "type": "int",
                            "description": "The maximum number of events to return (e.g. 5)"
                        },
                        {
                            "name": "offset",
                            "default": null,
                            "required": false,
                            "type": "int",
                            "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/blocks/<int:block_index>/events/counts": {
                    "function": "get_event_counts_by_block",
                    "description": "Returns the event counts of a block",
                    "args": [
                        {
                            "name": "block_index",
                            "required": true,
                            "type": "int",
                            "description": "The index of the block to return (e.g. $LAST_BLOCK_INDEX)"
                        },
                        {
                            "name": "cursor",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The last event index to return"
                        },
                        {
                            "name": "limit",
                            "default": 100,
                            "required": false,
                            "type": "int",
                            "description": "The maximum number of events to return (e.g. 5)"
                        },
                        {
                            "name": "offset",
                            "default": null,
                            "required": false,
                            "type": "int",
                            "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/blocks/<int:block_index>/events/<event>": {
                    "function": "get_events_by_block_and_event",
                    "description": "Returns the events of a block filtered by event",
                    "args": [
                        {
                            "name": "block_index",
                            "required": true,
                            "type": "int",
                            "description": "The index of the block to return (e.g. $LAST_EVENT_BLOCK)"
                        },
                        {
                            "name": "event",
                            "required": true,
                            "type": "str",
                            "description": "The event to filter by (e.g. CREDIT)"
                        },
                        {
                            "name": "cursor",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The last event index to return"
                        },
                        {
                            "name": "limit",
                            "default": 100,
                            "required": false,
                            "type": "int",
                            "description": "The maximum number of events to return (e.g. 5)"
                        },
                        {
                            "name": "offset",
                            "default": null,
                            "required": false,
                            "type": "int",
                            "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/blocks/<int:block_index>/credits": {
                    "function": "get_credits_by_block",
                    "description": "Returns the credits of a block",
                    "args": [
                        {
                            "name": "block_index",
                            "required": true,
                            "type": "int",
                            "description": "The index of the block to return (e.g. $LAST_CREDIT_BLOCK)"
                        },
                        {
                            "name": "action",
                            "default": null,
                            "required": false,
                            "type": "enum[str]",
                            "members": [
                                null,
                                "Closed: Max dispenses reached",
                                "bet settled: for equal",
                                "bet settled: for notequal",
                                "bet settled: liquidated for bear",
                                "btcpay",
                                "burn",
                                "cancel order",
                                "close dispenser",
                                "dispense",
                                "dispenser close",
                                "dividend",
                                "feed fee",
                                "filled",
                                "issuance",
                                "mpma send",
                                "open dispenser empty addr",
                                "order cancelled",
                                "order expired",
                                "order match",
                                "recredit backward quantity",
                                "recredit forward quantity",
                                "recredit wager",
                                "recredit wager remaining",
                                "reset issuance",
                                "send",
                                "sweep",
                                "wins"
                            ],
                            "description": "The action to filter by"
                        },
                        {
                            "name": "cursor",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The last credit index to return"
                        },
                        {
                            "name": "limit",
                            "default": 100,
                            "required": false,
                            "type": "int",
                            "description": "The maximum number of credits to return (e.g. 5)"
                        },
                        {
                            "name": "offset",
                            "default": null,
                            "required": false,
                            "type": "int",
                            "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/blocks/<int:block_index>/debits": {
                    "function": "get_debits_by_block",
                    "description": "Returns the debits of a block",
                    "args": [
                        {
                            "name": "block_index",
                            "required": true,
                            "type": "int",
                            "description": "The index of the block to return (e.g. $LAST_DEBIT_BLOCK)"
                        },
                        {
                            "name": "action",
                            "default": null,
                            "required": false,
                            "type": "enum[str]",
                            "members": [
                                null,
                                "bet",
                                "destroy",
                                "dividend",
                                "dividend fee",
                                "issuance fee",
                                "mpma send",
                                "open RPS",
                                "open dispenser",
                                "open dispenser empty addr",
                                "open order",
                                "refill dispenser",
                                "reopen RPS after matching expiration",
                                "reset destroy",
                                "send",
                                "sweep",
                                "sweep fee"
                            ],
                            "description": "The action to filter by"
                        },
                        {
                            "name": "cursor",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The last index of the debits to return"
                        },
                        {
                            "name": "limit",
                            "default": 100,
                            "required": false,
                            "type": "int",
                            "description": "The maximum number of debits to return (e.g. 5)"
                        },
                        {
                            "name": "offset",
                            "default": null,
                            "required": false,
                            "type": "int",
                            "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/blocks/<int:block_index>/expirations": {
                    "function": "get_expirations",
                    "description": "Returns the expirations of a block",
                    "args": [
                        {
                            "name": "block_index",
                            "required": true,
                            "type": "int",
                            "description": "The index of the block to return (e.g. $LAST_ORDER_EXPIRATION_BLOCK)"
                        },
                        {
                            "name": "cursor",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The last index of the expirations to return"
                        },
                        {
                            "name": "limit",
                            "default": 100,
                            "required": false,
                            "type": "int",
                            "description": "The maximum number of expirations to return (e.g. 5)"
                        },
                        {
                            "name": "offset",
                            "default": null,
                            "required": false,
                            "type": "int",
                            "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/blocks/<int:block_index>/cancels": {
                    "function": "get_cancels",
                    "description": "Returns the cancels of a block",
                    "args": [
                        {
                            "name": "block_index",
                            "required": true,
                            "type": "int",
                            "description": "The index of the block to return (e.g. $LAST_CANCEL_BLOCK)"
                        },
                        {
                            "name": "cursor",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The last index of the cancels to return"
                        },
                        {
                            "name": "limit",
                            "default": 100,
                            "required": false,
                            "type": "int",
                            "description": "The maximum number of cancels to return (e.g. 5)"
                        },
                        {
                            "name": "offset",
                            "default": null,
                            "required": false,
                            "type": "int",
                            "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/blocks/<int:block_index>/destructions": {
                    "function": "get_valid_destructions_by_block",
                    "description": "Returns the destructions of a block",
                    "args": [
                        {
                            "name": "block_index",
                            "required": true,
                            "type": "int",
                            "description": "The index of the block to return (e.g. $LAST_DESTRUCTION_BLOCK)"
                        },
                        {
                            "name": "cursor",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The last index of the destructions to return"
                        },
                        {
                            "name": "limit",
                            "default": 100,
                            "required": false,
                            "type": "int",
                            "description": "The maximum number of destructions to return (e.g. 5)"
                        },
                        {
                            "name": "offset",
                            "default": null,
                            "required": false,
                            "type": "int",
                            "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/blocks/<int:block_index>/issuances": {
                    "function": "get_issuances_by_block",
                    "description": "Returns the issuances of a block",
                    "args": [
                        {
                            "name": "block_index",
                            "required": true,
                            "type": "int",
                            "description": "The index of the block to return (e.g. $LAST_ISSUANCE_BLOCK)"
                        },
                        {
                            "name": "asset_events",
                            "default": "all",
                            "required": false,
                            "type": "enum[str]",
                            "members": [
                                "all",
                                "creation",
                                "reissuance",
                                "lock_quantity",
                                "reset",
                                "change_description",
                                "transfer",
                                "open_fairminter",
                                "fairmint",
                                "lock_description"
                            ],
                            "description": "Filter result by one or several comma separated asset events"
                        },
                        {
                            "name": "cursor",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The last index of the issuances to return"
                        },
                        {
                            "name": "limit",
                            "default": 100,
                            "required": false,
                            "type": "int",
                            "description": "The maximum number of issuances to return (e.g. 5)"
                        },
                        {
                            "name": "offset",
                            "default": null,
                            "required": false,
                            "type": "int",
                            "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/blocks/<int:block_index>/sends": {
                    "function": "get_sends_by_block",
                    "description": "Returns the sends, include Enhanced and MPMA sends, of a block",
                    "args": [
                        {
                            "name": "block_index",
                            "required": true,
                            "type": "int",
                            "description": "The index of the block to return (e.g. $LAST_SEND_BLOCK)"
                        },
                        {
                            "name": "send_type",
                            "default": "all",
                            "required": false,
                            "type": "enum[str]",
                            "members": [
                                "all",
                                "send",
                                "attach",
                                "move",
                                "detach"
                            ],
                            "description": "The type of the send to return"
                        },
                        {
                            "name": "cursor",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The last index of the debits to return"
                        },
                        {
                            "name": "limit",
                            "default": 100,
                            "required": false,
                            "type": "int",
                            "description": "The maximum number of debits to return (e.g. 5)"
                        },
                        {
                            "name": "offset",
                            "default": null,
                            "required": false,
                            "type": "int",
                            "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/blocks/<int:block_index>/dispenses": {
                    "function": "get_dispenses_by_block",
                    "description": "Returns the dispenses of a block",
                    "args": [
                        {
                            "name": "block_index",
                            "required": true,
                            "type": "int",
                            "description": "The index of the block to return (e.g. $LAST_DISPENSE_BLOCK)"
                        },
                        {
                            "name": "cursor",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The last index of the dispenses to return"
                        },
                        {
                            "name": "limit",
                            "default": 100,
                            "required": false,
                            "type": "int",
                            "description": "The maximum number of dispenses to return (e.g. 5)"
                        },
                        {
                            "name": "offset",
                            "default": null,
                            "required": false,
                            "type": "int",
                            "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/blocks/<int:block_index>/sweeps": {
                    "function": "get_sweeps_by_block",
                    "description": "Returns the sweeps of a block",
                    "args": [
                        {
                            "name": "block_index",
                            "required": true,
                            "type": "int",
                            "description": "The index of the block to return (e.g. $LAST_SWEEP_BLOCK)"
                        },
                        {
                            "name": "cursor",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The last index of the sweeps to return"
                        },
                        {
                            "name": "limit",
                            "default": 100,
                            "required": false,
                            "type": "int",
                            "description": "The maximum number of sweeps to return (e.g. 5)"
                        },
                        {
                            "name": "offset",
                            "default": null,
                            "required": false,
                            "type": "int",
                            "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/blocks/<int:block_index>/fairminters": {
                    "function": "get_fairminters_by_block",
                    "description": "Returns the fairminters by its block index",
                    "args": [
                        {
                            "name": "block_index",
                            "required": true,
                            "type": "int",
                            "description": "The block index of the fairminter to return (e.g. $LAST_FAIRMINTER_BLOCK)"
                        },
                        {
                            "name": "status",
                            "default": "all",
                            "required": false,
                            "type": "enum[str]",
                            "members": [
                                "all",
                                "open",
                                "closed",
                                "pending"
                            ],
                            "description": "The status of the fairminters to return"
                        },
                        {
                            "name": "cursor",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The last index of the fairminter to return"
                        },
                        {
                            "name": "limit",
                            "default": 100,
                            "required": false,
                            "type": "int",
                            "description": "The maximum number of fairminter to return (e.g. 5)"
                        },
                        {
                            "name": "offset",
                            "default": null,
                            "required": false,
                            "type": "int",
                            "description": "The number of lines to skip before"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/blocks/<int:block_index>/fairmints": {
                    "function": "get_fairmints_by_block",
                    "description": "Returns the fairmints by its block index",
                    "args": [
                        {
                            "name": "block_index",
                            "required": true,
                            "type": "int",
                            "description": "The block index of the fairmint to return (e.g. $LAST_FAIRMINT_BLOCK)"
                        },
                        {
                            "name": "cursor",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The last index of the fairmint to return"
                        },
                        {
                            "name": "limit",
                            "default": 100,
                            "required": false,
                            "type": "int",
                            "description": "The maximum number of fairmint to return (e.g. 5)"
                        },
                        {
                            "name": "offset",
                            "default": null,
                            "required": false,
                            "type": "int",
                            "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/transactions": {
                    "function": "get_transactions",
                    "description": "Returns the list of the last ten transactions",
                    "args": [
                        {
                            "name": "type",
                            "default": "all",
                            "required": false,
                            "type": "enum[str]",
                            "members": [
                                "all",
                                "bet",
                                "broadcast",
                                "btcpay",
                                "cancel",
                                "destroy",
                                "dispenser",
                                "dispense",
                                "dividend",
                                "issuance",
                                "order",
                                "send",
                                "enhanced_send",
                                "mpma",
                                "rps",
                                "rpsresolve",
                                "sweep",
                                "fairminter",
                                "fairmint",
                                "attach",
                                "detach",
                                "utxomove",
                                "unknown"
                            ],
                            "description": "The type of the transaction to return"
                        },
                        {
                            "name": "show_unconfirmed",
                            "default": false,
                            "required": false,
                            "type": "bool",
                            "description": "Show unconfirmed transactions"
                        },
                        {
                            "name": "cursor",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The index of the most recent transactions to return (e.g. $LAST_TX_INDEX)"
                        },
                        {
                            "name": "limit",
                            "default": 10,
                            "required": false,
                            "type": "int",
                            "description": "The number of transactions to return (e.g. 2)"
                        },
                        {
                            "name": "offset",
                            "default": null,
                            "required": false,
                            "type": "int",
                            "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/transactions/counts": {
                    "function": "get_transaction_types_count",
                    "description": "Returns the count of each transaction type",
                    "args": [
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/transactions/info": {
                    "function": "info",
                    "description": "Returns Counterparty information from a raw transaction in hex format.",
                    "args": [
                        {
                            "name": "rawtransaction",
                            "required": true,
                            "type": "str",
                            "description": "Raw transaction in hex format (e.g. $RAW_TRANSACTION_1)"
                        },
                        {
                            "name": "block_index",
                            "default": null,
                            "required": false,
                            "type": "int",
                            "description": "Block index mandatory for transactions before block 335000"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/transactions/<tx_hash>/info": {
                    "function": "info_by_tx_hash",
                    "description": "Returns Counterparty information from a transaction hash.",
                    "args": [
                        {
                            "name": "tx_hash",
                            "required": true,
                            "type": "str",
                            "description": "Transaction hash (e.g. $LAST_MEMPOOL_TX_HASH)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/transactions/unpack": {
                    "function": "unpack",
                    "description": "Unpacks Counterparty data in hex format and returns the message type and data.",
                    "args": [
                        {
                            "name": "datahex",
                            "required": true,
                            "type": "str",
                            "description": "Data in hex format (e.g. 020000000001016a65c1624e53f4d33ce02e726a6606faed60cc014d5b1a578ba3e09b4b3f8f890100000000ffffffff020000000000000000176a150d55e8b6118808b7b663b365473f142274028b8af60245092701000000160014a3df8a5a83d4e2827b59b43f5ce6ce5d2e52093f0247304402204b7a2859cbce34e725a1132fec2dd4b075503dadff0a0c407ae7c22a7712fe4d0220563ceb2ceebdf649343bb24819fc808639cce7781305b4588ffbe4a20390d2780121020ace9adf60fe4ec05dab922ccdc5727cbf664cafc7cdb845de534855266314c800000000)"
                        },
                        {
                            "name": "block_index",
                            "default": null,
                            "required": false,
                            "type": "int",
                            "description": "Block index of the transaction containing this data"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/transactions/<int:tx_index>": {
                    "function": "get_transaction_by_tx_index",
                    "description": "Returns a transaction by its index.",
                    "args": [
                        {
                            "name": "tx_index",
                            "required": true,
                            "type": "int",
                            "description": "The index of the transaction (e.g. $LAST_TX_INDEX)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/transactions/<tx_hash>": {
                    "function": "get_transaction_by_hash",
                    "description": "Returns a transaction by its hash.",
                    "args": [
                        {
                            "name": "tx_hash",
                            "required": true,
                            "type": "str",
                            "description": "The hash of the transaction (e.g. $LAST_TX_HASH)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/transactions/<int:tx_index>/events": {
                    "function": "get_events_by_transaction_index",
                    "description": "Returns the events of a transaction",
                    "args": [
                        {
                            "name": "tx_index",
                            "required": true,
                            "type": "int",
                            "description": "The index of the transaction to return (e.g. $LAST_EVENT_TX_INDEX)"
                        },
                        {
                            "name": "event_name",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "Comma separated list of events to return"
                        },
                        {
                            "name": "cursor",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The last event index to return"
                        },
                        {
                            "name": "limit",
                            "default": 100,
                            "required": false,
                            "type": "int",
                            "description": "The maximum number of events to return (e.g. 5)"
                        },
                        {
                            "name": "offset",
                            "default": null,
                            "required": false,
                            "type": "int",
                            "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/transactions/<tx_hash>/events": {
                    "function": "get_events_by_transaction_hash",
                    "description": "Returns the events of a transaction",
                    "args": [
                        {
                            "name": "tx_hash",
                            "required": true,
                            "type": "str",
                            "description": "The hash of the transaction to return (e.g. $LAST_EVENT_TX_HASH)"
                        },
                        {
                            "name": "event_name",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "Comma separated list of events to return"
                        },
                        {
                            "name": "cursor",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The last event index to return (e.g. $LAST_EVENT_INDEX)"
                        },
                        {
                            "name": "limit",
                            "default": 100,
                            "required": false,
                            "type": "int",
                            "description": "The maximum number of events to return (e.g. 5)"
                        },
                        {
                            "name": "offset",
                            "default": null,
                            "required": false,
                            "type": "int",
                            "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/transactions/<tx_hash>/sends": {
                    "function": "get_sends_by_transaction_hash",
                    "description": "Returns the sends, include Enhanced and MPMA sends, of a block",
                    "args": [
                        {
                            "name": "tx_hash",
                            "required": true,
                            "type": "str",
                            "description": "The hash of the transaction to return (e.g. $LAST_SEND_TX_HASH)"
                        },
                        {
                            "name": "send_type",
                            "default": "all",
                            "required": false,
                            "type": "enum[str]",
                            "members": [
                                "all",
                                "send",
                                "attach",
                                "move",
                                "detach"
                            ],
                            "description": "The type of the send to return"
                        },
                        {
                            "name": "cursor",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The last index of the debits to return"
                        },
                        {
                            "name": "limit",
                            "default": 100,
                            "required": false,
                            "type": "int",
                            "description": "The maximum number of debits to return (e.g. 5)"
                        },
                        {
                            "name": "offset",
                            "default": null,
                            "required": false,
                            "type": "int",
                            "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/transactions/<tx_hash>/dispenses": {
                    "function": "get_dispenses_by_transaction_hash",
                    "description": "Returns the dispenses of a block",
                    "args": [
                        {
                            "name": "tx_hash",
                            "required": true,
                            "type": "str",
                            "description": "The hash of the transaction to return (e.g. $LAST_DISPENSE_TX_HASH)"
                        },
                        {
                            "name": "cursor",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The last index of the dispenses to return"
                        },
                        {
                            "name": "limit",
                            "default": 100,
                            "required": false,
                            "type": "int",
                            "description": "The maximum number of dispenses to return (e.g. 5)"
                        },
                        {
                            "name": "offset",
                            "default": null,
                            "required": false,
                            "type": "int",
                            "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/transactions/<int:tx_index>/events/<event>": {
                    "function": "get_events_by_transaction_index_and_event",
                    "description": "Returns the events of a transaction",
                    "args": [
                        {
                            "name": "tx_index",
                            "required": true,
                            "type": "int",
                            "description": "The index of the transaction to return (e.g. $LAST_EVENT_TX_INDEX)"
                        },
                        {
                            "name": "event",
                            "required": true,
                            "type": "str",
                            "description": "The event to filter by (e.g. CREDIT)"
                        },
                        {
                            "name": "cursor",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The last event index to return (e.g. $LAST_EVENT_INDEX)"
                        },
                        {
                            "name": "limit",
                            "default": 100,
                            "required": false,
                            "type": "int",
                            "description": "The maximum number of events to return (e.g. 5)"
                        },
                        {
                            "name": "offset",
                            "default": null,
                            "required": false,
                            "type": "int",
                            "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/transactions/<tx_hash>/events/<event>": {
                    "function": "get_events_by_transaction_hash_and_event",
                    "description": "Returns the events of a transaction",
                    "args": [
                        {
                            "name": "tx_hash",
                            "required": true,
                            "type": "str",
                            "description": "The hash of the transaction to return (e.g. $LAST_EVENT_TX_HASH)"
                        },
                        {
                            "name": "event",
                            "required": true,
                            "type": "str",
                            "description": "The event to filter by (e.g. CREDIT)"
                        },
                        {
                            "name": "cursor",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The last event index to return (e.g. $LAST_EVENT_INDEX)"
                        },
                        {
                            "name": "limit",
                            "default": 100,
                            "required": false,
                            "type": "int",
                            "description": "The maximum number of events to return (e.g. 5)"
                        },
                        {
                            "name": "offset",
                            "default": null,
                            "required": false,
                            "type": "int",
                            "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/addresses/balances": {
                    "function": "get_balances_by_addresses",
                    "description": "Returns the balances of several addresses",
                    "args": [
                        {
                            "name": "addresses",
                            "required": true,
                            "type": "str",
                            "description": "Comma separated list of addresses (e.g. $ADDRESS_1,$ADDRESS_2)"
                        },
                        {
                            "name": "type",
                            "default": "all",
                            "required": false,
                            "type": "enum[str]",
                            "members": [
                                "all",
                                "utxo",
                                "address"
                            ],
                            "description": "The type of balances to return"
                        },
                        {
                            "name": "cursor",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The last index of the balances to return"
                        },
                        {
                            "name": "limit",
                            "default": 100,
                            "required": false,
                            "type": "int",
                            "description": "The maximum number of balances to return (e.g. 5)"
                        },
                        {
                            "name": "offset",
                            "default": null,
                            "required": false,
                            "type": "int",
                            "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                        },
                        {
                            "name": "sort",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The sort order of the balances to return (overrides the `cursor` parameter) (e.g. quantity:desc)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/addresses/transactions": {
                    "function": "get_transactions_by_addresses",
                    "description": "Returns the transactions of a list of addresses",
                    "args": [
                        {
                            "name": "addresses",
                            "required": true,
                            "type": "str",
                            "description": "Comma separated list of addresses to return (e.g. $ADDRESS_1,$ADDRESS_2)"
                        },
                        {
                            "name": "type",
                            "default": "all",
                            "required": false,
                            "type": "enum[str]",
                            "members": [
                                "all",
                                "bet",
                                "broadcast",
                                "btcpay",
                                "cancel",
                                "destroy",
                                "dispenser",
                                "dispense",
                                "dividend",
                                "issuance",
                                "order",
                                "send",
                                "enhanced_send",
                                "mpma",
                                "rps",
                                "rpsresolve",
                                "sweep",
                                "fairminter",
                                "fairmint",
                                "attach",
                                "detach",
                                "utxomove",
                                "unknown"
                            ],
                            "description": "The type of the transaction to return"
                        },
                        {
                            "name": "show_unconfirmed",
                            "default": false,
                            "required": false,
                            "type": "bool",
                            "description": "Show unconfirmed transactions"
                        },
                        {
                            "name": "cursor",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The last transaction index to return (e.g. $LAST_TX_INDEX)"
                        },
                        {
                            "name": "limit",
                            "default": 100,
                            "required": false,
                            "type": "int",
                            "description": "The maximum number of transactions to return (e.g. 5)"
                        },
                        {
                            "name": "offset",
                            "default": null,
                            "required": false,
                            "type": "int",
                            "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/addresses/events": {
                    "function": "get_events_by_addresses",
                    "description": "Returns the events of a list of addresses",
                    "args": [
                        {
                            "name": "addresses",
                            "required": true,
                            "type": "str",
                            "description": "Comma separated list of addresses to return (e.g. $ADDRESS_1,$ADDRESS_2)"
                        },
                        {
                            "name": "event_name",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "Comma separated list of events to return"
                        },
                        {
                            "name": "cursor",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The last event index to return (e.g. $LAST_EVENT_INDEX)"
                        },
                        {
                            "name": "limit",
                            "default": 100,
                            "required": false,
                            "type": "int",
                            "description": "The maximum number of events to return (e.g. 5)"
                        },
                        {
                            "name": "offset",
                            "default": null,
                            "required": false,
                            "type": "int",
                            "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/addresses/mempool": {
                    "function": "get_mempool_events_by_addresses",
                    "description": "Returns the mempool events of a list of addresses",
                    "args": [
                        {
                            "name": "addresses",
                            "required": true,
                            "type": "str",
                            "description": "Comma separated list of addresses to return (e.g. $ADDRESS_3,$ADDRESS_4)"
                        },
                        {
                            "name": "event_name",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "Comma separated list of events to return"
                        },
                        {
                            "name": "cursor",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The last event index to return"
                        },
                        {
                            "name": "limit",
                            "default": 100,
                            "required": false,
                            "type": "int",
                            "description": "The maximum number of events to return (e.g. 5)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/addresses/<address>/balances": {
                    "function": "get_address_balances",
                    "description": "Returns the balances of an address",
                    "args": [
                        {
                            "name": "address",
                            "required": true,
                            "type": "str",
                            "description": "The address to return (e.g. $ADDRESS_1)"
                        },
                        {
                            "name": "type",
                            "default": "all",
                            "required": false,
                            "type": "enum[str]",
                            "members": [
                                "all",
                                "utxo",
                                "address"
                            ],
                            "description": "The type of balances to return"
                        },
                        {
                            "name": "cursor",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The last index of the balances to return"
                        },
                        {
                            "name": "limit",
                            "default": 100,
                            "required": false,
                            "type": "int",
                            "description": "The maximum number of balances to return (e.g. 5)"
                        },
                        {
                            "name": "offset",
                            "default": null,
                            "required": false,
                            "type": "int",
                            "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                        },
                        {
                            "name": "sort",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The sort order of the balances to return (overrides the `cursor` parameter) (e.g. quantity:desc)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/addresses/<address>/balances/<asset>": {
                    "function": "get_balances_by_address_and_asset",
                    "description": "Returns the balances of an address and asset",
                    "args": [
                        {
                            "name": "address",
                            "required": true,
                            "type": "str",
                            "description": "The address to return (e.g. $ADDRESS_1)"
                        },
                        {
                            "name": "asset",
                            "required": true,
                            "type": "str",
                            "description": "The asset to return (e.g. XCP)"
                        },
                        {
                            "name": "type",
                            "default": "all",
                            "required": false,
                            "type": "enum[str]",
                            "members": [
                                "all",
                                "utxo",
                                "address"
                            ],
                            "description": "The type of balances to return"
                        },
                        {
                            "name": "cursor",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The last index of the balances to return"
                        },
                        {
                            "name": "limit",
                            "default": 100,
                            "required": false,
                            "type": "int",
                            "description": "The maximum number of balances to return (e.g. 5)"
                        },
                        {
                            "name": "offset",
                            "default": null,
                            "required": false,
                            "type": "int",
                            "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/addresses/<address>/credits": {
                    "function": "get_credits_by_address",
                    "description": "Returns the credits of an address",
                    "args": [
                        {
                            "name": "address",
                            "required": true,
                            "type": "str",
                            "description": "The address to return (e.g. $ADDRESS_1)"
                        },
                        {
                            "name": "action",
                            "default": null,
                            "required": false,
                            "type": "enum[str]",
                            "members": [
                                null,
                                "Closed: Max dispenses reached",
                                "bet settled: for equal",
                                "bet settled: for notequal",
                                "bet settled: liquidated for bear",
                                "btcpay",
                                "burn",
                                "cancel order",
                                "close dispenser",
                                "dispense",
                                "dispenser close",
                                "dividend",
                                "feed fee",
                                "filled",
                                "issuance",
                                "mpma send",
                                "open dispenser empty addr",
                                "order cancelled",
                                "order expired",
                                "order match",
                                "recredit backward quantity",
                                "recredit forward quantity",
                                "recredit wager",
                                "recredit wager remaining",
                                "reset issuance",
                                "send",
                                "sweep",
                                "wins"
                            ],
                            "description": "The action to filter by"
                        },
                        {
                            "name": "cursor",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The last index of the credits to return"
                        },
                        {
                            "name": "limit",
                            "default": 100,
                            "required": false,
                            "type": "int",
                            "description": "The maximum number of credits to return (e.g. 5)"
                        },
                        {
                            "name": "offset",
                            "default": null,
                            "required": false,
                            "type": "int",
                            "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/addresses/<address>/debits": {
                    "function": "get_debits_by_address",
                    "description": "Returns the debits of an address",
                    "args": [
                        {
                            "name": "address",
                            "required": true,
                            "type": "str",
                            "description": "The address to return (e.g. $ADDRESS_1)"
                        },
                        {
                            "name": "action",
                            "default": null,
                            "required": false,
                            "type": "enum[str]",
                            "members": [
                                null,
                                "bet",
                                "destroy",
                                "dividend",
                                "dividend fee",
                                "issuance fee",
                                "mpma send",
                                "open RPS",
                                "open dispenser",
                                "open dispenser empty addr",
                                "open order",
                                "refill dispenser",
                                "reopen RPS after matching expiration",
                                "reset destroy",
                                "send",
                                "sweep",
                                "sweep fee"
                            ],
                            "description": "The action to filter by"
                        },
                        {
                            "name": "cursor",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The last index of the debits to return"
                        },
                        {
                            "name": "limit",
                            "default": 100,
                            "required": false,
                            "type": "int",
                            "description": "The maximum number of debits to return (e.g. 5)"
                        },
                        {
                            "name": "offset",
                            "default": null,
                            "required": false,
                            "type": "int",
                            "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/addresses/<address>/bets": {
                    "function": "get_bet_by_feed",
                    "description": "Returns the bets of a feed",
                    "args": [
                        {
                            "name": "address",
                            "required": true,
                            "type": "str",
                            "description": "The address of the feed (e.g. $ADDRESS_1)"
                        },
                        {
                            "name": "status",
                            "default": "open",
                            "required": false,
                            "type": "enum[str]",
                            "members": [
                                "cancelled",
                                "dropped",
                                "expired",
                                "filled",
                                "open"
                            ],
                            "description": "The status of the bet (e.g. filled)"
                        },
                        {
                            "name": "cursor",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The last index of the bets to return"
                        },
                        {
                            "name": "limit",
                            "default": 100,
                            "required": false,
                            "type": "int",
                            "description": "The maximum number of bets to return (e.g. 5)"
                        },
                        {
                            "name": "offset",
                            "default": null,
                            "required": false,
                            "type": "int",
                            "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/addresses/<address>/broadcasts": {
                    "function": "get_broadcasts_by_source",
                    "description": "Returns the broadcasts of a source",
                    "args": [
                        {
                            "name": "address",
                            "required": true,
                            "type": "str",
                            "description": "The address to return (e.g. $ADDRESS_1)"
                        },
                        {
                            "name": "cursor",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The last index of the broadcasts to return"
                        },
                        {
                            "name": "limit",
                            "default": 100,
                            "required": false,
                            "type": "int",
                            "description": "The maximum number of broadcasts to return (e.g. 5)"
                        },
                        {
                            "name": "offset",
                            "default": null,
                            "required": false,
                            "type": "int",
                            "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/addresses/<address>/burns": {
                    "function": "get_burns_by_address",
                    "description": "Returns the burns of an address",
                    "args": [
                        {
                            "name": "address",
                            "required": true,
                            "type": "str",
                            "description": "The address to return (e.g. $ADDRESS_1)"
                        },
                        {
                            "name": "cursor",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The last index of the burns to return"
                        },
                        {
                            "name": "limit",
                            "default": 100,
                            "required": false,
                            "type": "int",
                            "description": "The maximum number of burns to return (e.g. 5)"
                        },
                        {
                            "name": "offset",
                            "default": null,
                            "required": false,
                            "type": "int",
                            "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/addresses/<address>/sends": {
                    "function": "get_sends_by_address",
                    "description": "Returns the sends, include Enhanced and MPMA sends, of an address",
                    "args": [
                        {
                            "name": "address",
                            "required": true,
                            "type": "str",
                            "description": "The address to return (e.g. $ADDRESS_1)"
                        },
                        {
                            "name": "send_type",
                            "default": "all",
                            "required": false,
                            "type": "enum[str]",
                            "members": [
                                "all",
                                "send",
                                "attach",
                                "move",
                                "detach"
                            ],
                            "description": "The type of sends to return"
                        },
                        {
                            "name": "cursor",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The last index of the sends to return"
                        },
                        {
                            "name": "limit",
                            "default": 100,
                            "required": false,
                            "type": "int",
                            "description": "The maximum number of sends to return (e.g. 5)"
                        },
                        {
                            "name": "offset",
                            "default": null,
                            "required": false,
                            "type": "int",
                            "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/addresses/<address>/receives": {
                    "function": "get_receive_by_address",
                    "description": "Returns the receives of an address",
                    "args": [
                        {
                            "name": "address",
                            "required": true,
                            "type": "str",
                            "description": "The address to return (e.g. $ADDRESS_5)"
                        },
                        {
                            "name": "send_type",
                            "default": "all",
                            "required": false,
                            "type": "enum[str]",
                            "members": [
                                "all",
                                "send",
                                "attach",
                                "move",
                                "detach"
                            ],
                            "description": "The type of sends to return"
                        },
                        {
                            "name": "cursor",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The last index of the sends to return"
                        },
                        {
                            "name": "limit",
                            "default": 100,
                            "required": false,
                            "type": "int",
                            "description": "The maximum number of sends to return (e.g. 5)"
                        },
                        {
                            "name": "offset",
                            "default": null,
                            "required": false,
                            "type": "int",
                            "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/addresses/<address>/sends/<asset>": {
                    "function": "get_sends_by_address_and_asset",
                    "description": "Returns the sends, include Enhanced and MPMA sends, of an address and asset",
                    "args": [
                        {
                            "name": "address",
                            "required": true,
                            "type": "str",
                            "description": "The address to return (e.g. $ADDRESS_1)"
                        },
                        {
                            "name": "asset",
                            "required": true,
                            "type": "str",
                            "description": "The asset to return (e.g. $ASSET_5)"
                        },
                        {
                            "name": "send_type",
                            "default": "all",
                            "required": false,
                            "type": "enum[str]",
                            "members": [
                                "all",
                                "send",
                                "attach",
                                "move",
                                "detach"
                            ],
                            "description": "The type of sends to return"
                        },
                        {
                            "name": "cursor",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The last index of the sends to return"
                        },
                        {
                            "name": "limit",
                            "default": 100,
                            "required": false,
                            "type": "int",
                            "description": "The maximum number of sends to return (e.g. 5)"
                        },
                        {
                            "name": "offset",
                            "default": null,
                            "required": false,
                            "type": "int",
                            "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/addresses/<address>/receives/<asset>": {
                    "function": "get_receive_by_address_and_asset",
                    "description": "Returns the receives of an address and asset",
                    "args": [
                        {
                            "name": "address",
                            "required": true,
                            "type": "str",
                            "description": "The address to return (e.g. $ADDRESS_5)"
                        },
                        {
                            "name": "asset",
                            "required": true,
                            "type": "str",
                            "description": "The asset to return (e.g. $ASSET_5)"
                        },
                        {
                            "name": "send_type",
                            "default": "all",
                            "required": false,
                            "type": "enum[str]",
                            "members": [
                                "all",
                                "send",
                                "attach",
                                "move",
                                "detach"
                            ],
                            "description": "The type of sends to return"
                        },
                        {
                            "name": "cursor",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The last index of the sends to return"
                        },
                        {
                            "name": "limit",
                            "default": 100,
                            "required": false,
                            "type": "int",
                            "description": "The maximum number of sends to return (e.g. 5)"
                        },
                        {
                            "name": "offset",
                            "default": null,
                            "required": false,
                            "type": "int",
                            "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/addresses/<address>/destructions": {
                    "function": "get_valid_destructions_by_address",
                    "description": "Returns the destructions of a block",
                    "args": [
                        {
                            "name": "address",
                            "required": true,
                            "type": "str",
                            "description": "The address to return (e.g. $ADDRESS_1)"
                        },
                        {
                            "name": "cursor",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The last index of the destructions to return"
                        },
                        {
                            "name": "limit",
                            "default": 100,
                            "required": false,
                            "type": "int",
                            "description": "The maximum number of destructions to return (e.g. 5)"
                        },
                        {
                            "name": "offset",
                            "default": null,
                            "required": false,
                            "type": "int",
                            "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/addresses/<address>/dispensers": {
                    "function": "get_dispensers_by_address",
                    "description": "Returns the dispensers of an address",
                    "args": [
                        {
                            "name": "address",
                            "required": true,
                            "type": "str",
                            "description": "The address to return (e.g. $ADDRESS_1)"
                        },
                        {
                            "name": "status",
                            "default": "all",
                            "required": false,
                            "type": "enum[str]",
                            "members": [
                                "all",
                                "open",
                                "closed",
                                "closing",
                                "open_empty_address"
                            ],
                            "description": "The status of the dispensers to return"
                        },
                        {
                            "name": "exclude_with_oracle",
                            "default": false,
                            "required": false,
                            "type": "bool",
                            "description": "Whether to exclude dispensers with an oracle"
                        },
                        {
                            "name": "cursor",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The last index of the dispensers to return"
                        },
                        {
                            "name": "limit",
                            "default": 100,
                            "required": false,
                            "type": "int",
                            "description": "The maximum number of dispensers to return (e.g. 5)"
                        },
                        {
                            "name": "offset",
                            "default": null,
                            "required": false,
                            "type": "int",
                            "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                        },
                        {
                            "name": "sort",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The sort order of the dispensers to return (overrides the `cursor` parameter) (e.g. give_quantity:desc)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/addresses/<address>/dispensers/<asset>": {
                    "function": "get_dispenser_by_address_and_asset",
                    "description": "Returns the dispenser of an address and an asset",
                    "args": [
                        {
                            "name": "address",
                            "required": true,
                            "type": "str",
                            "description": "The address to return (e.g. $ADDRESS_1)"
                        },
                        {
                            "name": "asset",
                            "required": true,
                            "type": "str",
                            "description": "The asset to return (e.g. XCP)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/addresses/<address>/dispenses/sends": {
                    "function": "get_dispenses_by_source",
                    "description": "Returns the dispenses of a source",
                    "args": [
                        {
                            "name": "address",
                            "required": true,
                            "type": "str",
                            "description": "The address to return (e.g. $ADDRESS_1)"
                        },
                        {
                            "name": "cursor",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The last index of the dispenses to return"
                        },
                        {
                            "name": "limit",
                            "default": 100,
                            "required": false,
                            "type": "int",
                            "description": "The maximum number of dispenses to return (e.g. 5)"
                        },
                        {
                            "name": "offset",
                            "default": null,
                            "required": false,
                            "type": "int",
                            "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/addresses/<address>/dispenses/receives": {
                    "function": "get_dispenses_by_destination",
                    "description": "Returns the dispenses of a destination",
                    "args": [
                        {
                            "name": "address",
                            "required": true,
                            "type": "str",
                            "description": "The address to return (e.g. $ADDRESS_2)"
                        },
                        {
                            "name": "cursor",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The last index of the dispenses to return"
                        },
                        {
                            "name": "limit",
                            "default": 100,
                            "required": false,
                            "type": "int",
                            "description": "The maximum number of dispenses to return (e.g. 5)"
                        },
                        {
                            "name": "offset",
                            "default": null,
                            "required": false,
                            "type": "int",
                            "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/addresses/<address>/dispenses/sends/<asset>": {
                    "function": "get_dispenses_by_source_and_asset",
                    "description": "Returns the dispenses of an address and an asset",
                    "args": [
                        {
                            "name": "address",
                            "required": true,
                            "type": "str",
                            "description": "The address to return (e.g. $ADDRESS_1)"
                        },
                        {
                            "name": "asset",
                            "required": true,
                            "type": "str",
                            "description": "The asset to return (e.g. XCP)"
                        },
                        {
                            "name": "cursor",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The last index of the dispenses to return"
                        },
                        {
                            "name": "limit",
                            "default": 100,
                            "required": false,
                            "type": "int",
                            "description": "The maximum number of dispenses to return (e.g. 5)"
                        },
                        {
                            "name": "offset",
                            "default": null,
                            "required": false,
                            "type": "int",
                            "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/addresses/<address>/dispenses/receives/<asset>": {
                    "function": "get_dispenses_by_destination_and_asset",
                    "description": "Returns the dispenses of an address and an asset",
                    "args": [
                        {
                            "name": "address",
                            "required": true,
                            "type": "str",
                            "description": "The address to return (e.g. $ADDRESS_2)"
                        },
                        {
                            "name": "asset",
                            "required": true,
                            "type": "str",
                            "description": "The asset to return (e.g. XCP)"
                        },
                        {
                            "name": "cursor",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The last index of the dispenses to return"
                        },
                        {
                            "name": "limit",
                            "default": 100,
                            "required": false,
                            "type": "int",
                            "description": "The maximum number of dispenses to return (e.g. 5)"
                        },
                        {
                            "name": "offset",
                            "default": null,
                            "required": false,
                            "type": "int",
                            "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/addresses/<address>/sweeps": {
                    "function": "get_sweeps_by_address",
                    "description": "Returns the sweeps of an address",
                    "args": [
                        {
                            "name": "address",
                            "required": true,
                            "type": "str",
                            "description": "The address to return (e.g. $ADDRESS_3)"
                        },
                        {
                            "name": "cursor",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The last index of the sweeps to return"
                        },
                        {
                            "name": "limit",
                            "default": 100,
                            "required": false,
                            "type": "int",
                            "description": "The maximum number of sweeps to return (e.g. 5)"
                        },
                        {
                            "name": "offset",
                            "default": null,
                            "required": false,
                            "type": "int",
                            "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/addresses/<address>/issuances": {
                    "function": "get_issuances_by_address",
                    "description": "Returns the issuances of an address",
                    "args": [
                        {
                            "name": "address",
                            "required": true,
                            "type": "str",
                            "description": "The address to return (e.g. $ADDRESS_1)"
                        },
                        {
                            "name": "asset_events",
                            "default": "all",
                            "required": false,
                            "type": "enum[str]",
                            "members": [
                                "all",
                                "creation",
                                "reissuance",
                                "lock_quantity",
                                "reset",
                                "change_description",
                                "transfer",
                                "open_fairminter",
                                "fairmint",
                                "lock_description"
                            ],
                            "description": "Filter result by one or several comma separated asset events"
                        },
                        {
                            "name": "cursor",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The last index of the issuances to return"
                        },
                        {
                            "name": "limit",
                            "default": 100,
                            "required": false,
                            "type": "int",
                            "description": "The maximum number of issuances to return (e.g. 5)"
                        },
                        {
                            "name": "offset",
                            "default": null,
                            "required": false,
                            "type": "int",
                            "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/addresses/<address>/assets": {
                    "function": "get_valid_assets_by_issuer_or_owner",
                    "description": "Returns the valid assets issued or owned by an address",
                    "args": [
                        {
                            "name": "address",
                            "required": true,
                            "type": "str",
                            "description": "The issuer or owner to return (e.g. $ADDRESS_1)"
                        },
                        {
                            "name": "named",
                            "default": null,
                            "required": false,
                            "type": "bool",
                            "description": "Whether to return only named assets (e.g. true)"
                        },
                        {
                            "name": "cursor",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The last index of the assets to return"
                        },
                        {
                            "name": "limit",
                            "default": 100,
                            "required": false,
                            "type": "int",
                            "description": "The maximum number of assets to return (e.g. 5)"
                        },
                        {
                            "name": "offset",
                            "default": null,
                            "required": false,
                            "type": "int",
                            "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/addresses/<address>/assets/issued": {
                    "function": "get_valid_assets_by_issuer",
                    "description": "Returns the valid assets issued by an address",
                    "args": [
                        {
                            "name": "address",
                            "required": true,
                            "type": "str",
                            "description": "The issuer to return (e.g. $ADDRESS_1)"
                        },
                        {
                            "name": "named",
                            "default": null,
                            "required": false,
                            "type": "bool",
                            "description": "Whether to return only named assets (e.g. true)"
                        },
                        {
                            "name": "cursor",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The last index of the assets to return"
                        },
                        {
                            "name": "limit",
                            "default": 100,
                            "required": false,
                            "type": "int",
                            "description": "The maximum number of assets to return (e.g. 5)"
                        },
                        {
                            "name": "offset",
                            "default": null,
                            "required": false,
                            "type": "int",
                            "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/addresses/<address>/assets/owned": {
                    "function": "get_valid_assets_by_owner",
                    "description": "Returns the valid assets owned by an address",
                    "args": [
                        {
                            "name": "address",
                            "required": true,
                            "type": "str",
                            "description": "The owner to return (e.g. $ADDRESS_1)"
                        },
                        {
                            "name": "named",
                            "default": null,
                            "required": false,
                            "type": "bool",
                            "description": "Whether to return only named assets (e.g. true)"
                        },
                        {
                            "name": "cursor",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The last index of the assets to return"
                        },
                        {
                            "name": "limit",
                            "default": 100,
                            "required": false,
                            "type": "int",
                            "description": "The maximum number of assets to return (e.g. 5)"
                        },
                        {
                            "name": "offset",
                            "default": null,
                            "required": false,
                            "type": "int",
                            "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/addresses/<address>/transactions": {
                    "function": "get_transactions_by_address",
                    "description": "Returns the transactions of an address",
                    "args": [
                        {
                            "name": "address",
                            "required": true,
                            "type": "str",
                            "description": "The address to return (e.g. $ADDRESS_1)"
                        },
                        {
                            "name": "type",
                            "default": "all",
                            "required": false,
                            "type": "enum[str]",
                            "members": [
                                "all",
                                "bet",
                                "broadcast",
                                "btcpay",
                                "cancel",
                                "destroy",
                                "dispenser",
                                "dispense",
                                "dividend",
                                "issuance",
                                "order",
                                "send",
                                "enhanced_send",
                                "mpma",
                                "rps",
                                "rpsresolve",
                                "sweep",
                                "fairminter",
                                "fairmint",
                                "attach",
                                "detach",
                                "utxomove",
                                "unknown"
                            ],
                            "description": "The type of the transaction to return"
                        },
                        {
                            "name": "show_unconfirmed",
                            "default": false,
                            "required": false,
                            "type": "bool",
                            "description": "Show unconfirmed transactions"
                        },
                        {
                            "name": "cursor",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The last transaction index to return (e.g. $LAST_TX_INDEX)"
                        },
                        {
                            "name": "limit",
                            "default": 10,
                            "required": false,
                            "type": "int",
                            "description": "The maximum number of transactions to return (e.g. 5)"
                        },
                        {
                            "name": "offset",
                            "default": null,
                            "required": false,
                            "type": "int",
                            "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/addresses/<address>/transactions/counts": {
                    "function": "get_transaction_types_count_by_address",
                    "description": "Returns the count of each transaction type",
                    "args": [
                        {
                            "name": "address",
                            "required": true,
                            "type": "str",
                            "description": "The address to return (e.g. $ADDRESS_1)"
                        },
                        {
                            "name": "count_unconfirmed",
                            "default": false,
                            "required": false,
                            "type": "bool",
                            "description": "Count unconfirmed transactions"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/addresses/<address>/dividends": {
                    "function": "get_dividends_distributed_by_address",
                    "description": "Returns the dividends distributed by an address",
                    "args": [
                        {
                            "name": "address",
                            "required": true,
                            "type": "str",
                            "description": "The address to return (e.g. $ADDRESS_1)"
                        },
                        {
                            "name": "cursor",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The last index of the assets to return"
                        },
                        {
                            "name": "limit",
                            "default": 100,
                            "required": false,
                            "type": "int",
                            "description": "The maximum number of assets to return (e.g. 5)"
                        },
                        {
                            "name": "offset",
                            "default": null,
                            "required": false,
                            "type": "int",
                            "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/addresses/<address>/orders": {
                    "function": "get_orders_by_address",
                    "description": "Returns the orders of an address",
                    "args": [
                        {
                            "name": "address",
                            "required": true,
                            "type": "str",
                            "description": "The address to return (e.g. $ADDRESS_1)"
                        },
                        {
                            "name": "status",
                            "default": "all",
                            "required": false,
                            "type": "enum[str]",
                            "members": [
                                "all",
                                "open",
                                "expired",
                                "filled",
                                "cancelled"
                            ],
                            "description": "The status of the orders to return"
                        },
                        {
                            "name": "cursor",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The last index of the orders to return"
                        },
                        {
                            "name": "limit",
                            "default": 100,
                            "required": false,
                            "type": "int",
                            "description": "The maximum number of orders to return (e.g. 5)"
                        },
                        {
                            "name": "offset",
                            "default": null,
                            "required": false,
                            "type": "int",
                            "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                        },
                        {
                            "name": "sort",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The sort order of the orders to return (overrides the `cursor` parameter) (e.g. expiration:desc)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/addresses/<address>/fairminters": {
                    "function": "get_fairminters_by_address",
                    "description": "Returns the fairminter by its source",
                    "args": [
                        {
                            "name": "address",
                            "required": true,
                            "type": "str",
                            "description": "The source of the fairminter to return (e.g. $ADDRESS_1)"
                        },
                        {
                            "name": "status",
                            "default": "all",
                            "required": false,
                            "type": "enum[str]",
                            "members": [
                                "all",
                                "open",
                                "closed",
                                "pending"
                            ],
                            "description": "The status of the fairminters to return"
                        },
                        {
                            "name": "cursor",
                            "default": null,
                            "required": false,
                            "type": "str"
                        },
                        {
                            "name": "limit",
                            "default": 100,
                            "required": false,
                            "type": "int"
                        },
                        {
                            "name": "offset",
                            "default": null,
                            "required": false,
                            "type": "int"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/addresses/<address>/fairmints": {
                    "function": "get_fairmints_by_address",
                    "description": "Returns the mints by address",
                    "args": [
                        {
                            "name": "address",
                            "required": true,
                            "type": "str",
                            "description": "The address of the mints to return (e.g. $ADDRESS_2)"
                        },
                        {
                            "name": "cursor",
                            "default": null,
                            "required": false,
                            "type": "str"
                        },
                        {
                            "name": "limit",
                            "default": 100,
                            "required": false,
                            "type": "int"
                        },
                        {
                            "name": "offset",
                            "default": null,
                            "required": false,
                            "type": "int"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/addresses/<address>/fairmints/<asset>": {
                    "function": "get_fairmints_by_address_and_asset",
                    "description": "Returns the mints by address and asset",
                    "args": [
                        {
                            "name": "address",
                            "required": true,
                            "type": "str",
                            "description": "The address of the mints to return (e.g. $ADDRESS_2)"
                        },
                        {
                            "name": "asset",
                            "required": true,
                            "type": "str",
                            "description": "The asset of the mints to return (e.g. $ASSET_1)"
                        },
                        {
                            "name": "cursor",
                            "default": null,
                            "required": false,
                            "type": "str"
                        },
                        {
                            "name": "limit",
                            "default": 100,
                            "required": false,
                            "type": "int"
                        },
                        {
                            "name": "offset",
                            "default": null,
                            "required": false,
                            "type": "int"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/utxos/<utxo>/balances": {
                    "function": "get_utxo_balances",
                    "description": "Returns the balances of an utxo",
                    "args": [
                        {
                            "name": "utxo",
                            "required": true,
                            "type": "str",
                            "description": "The utxo to return (e.g. $UTXO_WITH_BALANCE)"
                        },
                        {
                            "name": "cursor",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The last index of the balances to return"
                        },
                        {
                            "name": "limit",
                            "default": 100,
                            "required": false,
                            "type": "int",
                            "description": "The maximum number of balances to return (e.g. 5)"
                        },
                        {
                            "name": "offset",
                            "default": null,
                            "required": false,
                            "type": "int",
                            "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/utxos/withbalances": {
                    "function": "utxos_with_balances",
                    "description": "Check if the utxos have balances",
                    "args": [
                        {
                            "name": "utxos",
                            "required": true,
                            "type": "str",
                            "description": "Comma separated list of utxos (e.g. $UTXO_1,$UTXO_2)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/addresses/<address>/compose/bet": {
                    "function": "compose_bet",
                    "description": "Composes a transaction to issue a bet against a feed.",
                    "args": [
                        {
                            "name": "address",
                            "required": true,
                            "type": "str",
                            "description": "The address that will make the bet (e.g. $ADDRESS_1)"
                        },
                        {
                            "name": "feed_address",
                            "required": true,
                            "type": "str",
                            "description": "The address that hosts the feed to be bet on (e.g. $ADDRESS_2)"
                        },
                        {
                            "name": "bet_type",
                            "required": true,
                            "type": "int",
                            "description": "Bet 0 for Bullish CFD (deprecated), 1 for Bearish CFD (deprecated), 2 for Equal, 3 for NotEqual (e.g. 2)"
                        },
                        {
                            "name": "deadline",
                            "required": true,
                            "type": "int",
                            "description": "The time at which the bet should be decided/settled, in Unix time (seconds since epoch) (e.g. 3000000000)"
                        },
                        {
                            "name": "wager_quantity",
                            "required": true,
                            "type": "int",
                            "description": "The quantities of XCP to wager (in satoshis, hence integer) (e.g. 1000)"
                        },
                        {
                            "name": "counterwager_quantity",
                            "required": true,
                            "type": "int",
                            "description": "The minimum quantities of XCP to be wagered against, for the bets to match (in satoshis, hence integer) (e.g. 1000)"
                        },
                        {
                            "name": "expiration",
                            "required": true,
                            "type": "int",
                            "description": "The number of blocks after which the bet expires if it remains unmatched (e.g. 100)"
                        },
                        {
                            "name": "leverage",
                            "default": 5040,
                            "required": false,
                            "type": "int",
                            "description": "Leverage, as a fraction of 5040"
                        },
                        {
                            "name": "target_value",
                            "default": null,
                            "required": false,
                            "type": "int",
                            "description": "Target value for Equal/NotEqual bet (e.g. 1000)"
                        },
                        {
                            "name": "encoding",
                            "type": "str",
                            "default": "auto",
                            "description": "The encoding method to use",
                            "required": false
                        },
                        {
                            "name": "validate",
                            "type": "bool",
                            "default": true,
                            "description": "Validate the transaction",
                            "required": false
                        },
                        {
                            "name": "sat_per_vbyte",
                            "type": "float",
                            "default": null,
                            "description": "The fee per vbyte in satoshis",
                            "required": false
                        },
                        {
                            "name": "confirmation_target",
                            "type": "int",
                            "default": 3,
                            "description": "The number of blocks to target for confirmation",
                            "required": false
                        },
                        {
                            "name": "exact_fee",
                            "type": "int",
                            "default": null,
                            "description": "The exact fee to use in satoshis",
                            "required": false
                        },
                        {
                            "name": "max_fee",
                            "type": "int",
                            "default": null,
                            "description": "The maximum fee to use in satoshis",
                            "required": false
                        },
                        {
                            "name": "inputs_set",
                            "type": "str",
                            "default": null,
                            "description": "A comma-separated list of UTXOs (`<txid>:<vout>`) to use as inputs for the transaction being created. To speed up the composition you can also use the following format for utxos: `<txid>:<vout>:<value>:<script_pub_key>`.",
                            "required": false
                        },
                        {
                            "name": "allow_unconfirmed_inputs",
                            "type": "bool",
                            "default": false,
                            "description": "Set to true to allow this transaction to utilize unconfirmed UTXOs as inputs",
                            "required": false
                        },
                        {
                            "name": "exclude_utxos",
                            "type": "str",
                            "default": null,
                            "description": "A comma-separated list of UTXO txids to exclude when selecting UTXOs to use as inputs for the transaction being created",
                            "required": false
                        },
                        {
                            "name": "use_utxos_with_balances",
                            "type": "bool",
                            "default": false,
                            "description": "Use UTXO with balances",
                            "required": false
                        },
                        {
                            "name": "exclude_utxos_with_balances",
                            "type": "bool",
                            "default": false,
                            "description": "Exclude silently UTXO with balances instead of raising an exception. Important: the `exclude_utxos_with_balances` will not exclude unconfirmed `attach` and `utxomove`. You need to explicitly exclude them with the `exclude_utxos` parameter",
                            "required": false
                        },
                        {
                            "name": "disable_utxo_locks",
                            "type": "bool",
                            "default": false,
                            "description": "By default, UTXOs utilized when creating a transaction are 'locked' for a few seconds, to prevent a case where rapidly generating create_ calls reuse UTXOs due to their spent status not being updated in bitcoind yet. Specify true for this parameter to disable this behavior, and not temporarily lock UTXOs",
                            "required": false
                        },
                        {
                            "name": "use_all_inputs_set",
                            "type": "bool",
                            "default": false,
                            "description": "Use all UTXOs provide with `inputs_set` parameter",
                            "required": false
                        },
                        {
                            "name": "mutlisig_pubkey",
                            "type": "str",
                            "default": null,
                            "description": "The reedem public key to use for multisig encoding, by default it is searched for the source address",
                            "required": false
                        },
                        {
                            "name": "change_address",
                            "type": "str",
                            "default": null,
                            "description": "The address to send the change to",
                            "required": false
                        },
                        {
                            "name": "more_outputs",
                            "type": "str",
                            "default": null,
                            "description": "Additional outputs to include in the transaction in the format `<value>:<address>` or `<value>:<script>`",
                            "required": false
                        },
                        {
                            "name": "pubkeys",
                            "type": "str",
                            "default": null,
                            "description": "Pubkeys needed in case one or more destinations are multisig addresses",
                            "required": false
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": false,
                            "description": "Include additional information in the result including data and psbt",
                            "required": false
                        },
                        {
                            "name": "return_only_data",
                            "type": "bool",
                            "default": false,
                            "description": "Return only the data part of the transaction",
                            "required": false
                        },
                        {
                            "name": "fee_per_kb",
                            "type": "int",
                            "default": null,
                            "description": "Deprecated, use `sat_per_vbyte` instead",
                            "required": false
                        },
                        {
                            "name": "fee_provided",
                            "type": "int",
                            "default": null,
                            "description": "Deprecated, use `max_fee` instead",
                            "required": false
                        },
                        {
                            "name": "unspent_tx_hash",
                            "type": "str",
                            "default": null,
                            "description": "Deprecated, use `inputs_set` instead",
                            "required": false
                        },
                        {
                            "name": "dust_return_pubkey",
                            "type": "str",
                            "default": null,
                            "description": "Deprecated, use `mutlisig_pubkey` instead",
                            "required": false
                        },
                        {
                            "name": "return_psbt",
                            "type": "bool",
                            "default": false,
                            "description": "Deprecated, use `verbose` instead",
                            "required": false
                        },
                        {
                            "name": "regular_dust_size",
                            "type": "int",
                            "default": null,
                            "description": "Deprecated, automatically calculated",
                            "required": false
                        },
                        {
                            "name": "multisig_dust_size",
                            "type": "int",
                            "default": null,
                            "description": "Deprecated, automatically calculated",
                            "required": false
                        },
                        {
                            "name": "extended_tx_info",
                            "type": "bool",
                            "default": false,
                            "description": "Deprecated (API v1 only), use API v2 instead",
                            "required": false
                        },
                        {
                            "name": "old_style_api",
                            "type": "bool",
                            "default": false,
                            "description": "Deprecated (API v1 only), use API v2 instead",
                            "required": false
                        },
                        {
                            "name": "p2sh_pretx_txid",
                            "type": "str",
                            "default": null,
                            "description": "Ignored, P2SH disabled",
                            "required": false
                        },
                        {
                            "name": "segwit",
                            "type": "bool",
                            "default": false,
                            "description": "Ignored, Segwit automatically detected",
                            "required": false
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/addresses/<address>/compose/broadcast": {
                    "function": "compose_broadcast",
                    "description": "Composes a transaction to broadcast textual and numerical information to the network.",
                    "args": [
                        {
                            "name": "address",
                            "required": true,
                            "type": "str",
                            "description": "The address that will be sending (must have the necessary quantity of the specified asset) (e.g. $ADDRESS_1)"
                        },
                        {
                            "name": "timestamp",
                            "required": true,
                            "type": "int",
                            "description": "The timestamp of the broadcast, in Unix time (e.g. 4003903985)"
                        },
                        {
                            "name": "value",
                            "required": true,
                            "type": "float",
                            "description": "Numerical value of the broadcast (e.g. 100)"
                        },
                        {
                            "name": "fee_fraction",
                            "required": true,
                            "type": "float",
                            "description": "How much of every bet on this feed should go to its operator; a fraction of 1, (i.e. 0.05 is five percent) (e.g. 0.05)"
                        },
                        {
                            "name": "text",
                            "required": true,
                            "type": "str",
                            "description": "The textual part of the broadcast (e.g. \"Hello, world!\")"
                        },
                        {
                            "name": "encoding",
                            "type": "str",
                            "default": "auto",
                            "description": "The encoding method to use",
                            "required": false
                        },
                        {
                            "name": "validate",
                            "type": "bool",
                            "default": true,
                            "description": "Validate the transaction",
                            "required": false
                        },
                        {
                            "name": "sat_per_vbyte",
                            "type": "float",
                            "default": null,
                            "description": "The fee per vbyte in satoshis",
                            "required": false
                        },
                        {
                            "name": "confirmation_target",
                            "type": "int",
                            "default": 3,
                            "description": "The number of blocks to target for confirmation",
                            "required": false
                        },
                        {
                            "name": "exact_fee",
                            "type": "int",
                            "default": null,
                            "description": "The exact fee to use in satoshis",
                            "required": false
                        },
                        {
                            "name": "max_fee",
                            "type": "int",
                            "default": null,
                            "description": "The maximum fee to use in satoshis",
                            "required": false
                        },
                        {
                            "name": "inputs_set",
                            "type": "str",
                            "default": null,
                            "description": "A comma-separated list of UTXOs (`<txid>:<vout>`) to use as inputs for the transaction being created. To speed up the composition you can also use the following format for utxos: `<txid>:<vout>:<value>:<script_pub_key>`.",
                            "required": false
                        },
                        {
                            "name": "allow_unconfirmed_inputs",
                            "type": "bool",
                            "default": false,
                            "description": "Set to true to allow this transaction to utilize unconfirmed UTXOs as inputs",
                            "required": false
                        },
                        {
                            "name": "exclude_utxos",
                            "type": "str",
                            "default": null,
                            "description": "A comma-separated list of UTXO txids to exclude when selecting UTXOs to use as inputs for the transaction being created",
                            "required": false
                        },
                        {
                            "name": "use_utxos_with_balances",
                            "type": "bool",
                            "default": false,
                            "description": "Use UTXO with balances",
                            "required": false
                        },
                        {
                            "name": "exclude_utxos_with_balances",
                            "type": "bool",
                            "default": false,
                            "description": "Exclude silently UTXO with balances instead of raising an exception. Important: the `exclude_utxos_with_balances` will not exclude unconfirmed `attach` and `utxomove`. You need to explicitly exclude them with the `exclude_utxos` parameter",
                            "required": false
                        },
                        {
                            "name": "disable_utxo_locks",
                            "type": "bool",
                            "default": false,
                            "description": "By default, UTXOs utilized when creating a transaction are 'locked' for a few seconds, to prevent a case where rapidly generating create_ calls reuse UTXOs due to their spent status not being updated in bitcoind yet. Specify true for this parameter to disable this behavior, and not temporarily lock UTXOs",
                            "required": false
                        },
                        {
                            "name": "use_all_inputs_set",
                            "type": "bool",
                            "default": false,
                            "description": "Use all UTXOs provide with `inputs_set` parameter",
                            "required": false
                        },
                        {
                            "name": "mutlisig_pubkey",
                            "type": "str",
                            "default": null,
                            "description": "The reedem public key to use for multisig encoding, by default it is searched for the source address",
                            "required": false
                        },
                        {
                            "name": "change_address",
                            "type": "str",
                            "default": null,
                            "description": "The address to send the change to",
                            "required": false
                        },
                        {
                            "name": "more_outputs",
                            "type": "str",
                            "default": null,
                            "description": "Additional outputs to include in the transaction in the format `<value>:<address>` or `<value>:<script>`",
                            "required": false
                        },
                        {
                            "name": "pubkeys",
                            "type": "str",
                            "default": null,
                            "description": "Pubkeys needed in case one or more destinations are multisig addresses",
                            "required": false
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": false,
                            "description": "Include additional information in the result including data and psbt",
                            "required": false
                        },
                        {
                            "name": "return_only_data",
                            "type": "bool",
                            "default": false,
                            "description": "Return only the data part of the transaction",
                            "required": false
                        },
                        {
                            "name": "fee_per_kb",
                            "type": "int",
                            "default": null,
                            "description": "Deprecated, use `sat_per_vbyte` instead",
                            "required": false
                        },
                        {
                            "name": "fee_provided",
                            "type": "int",
                            "default": null,
                            "description": "Deprecated, use `max_fee` instead",
                            "required": false
                        },
                        {
                            "name": "unspent_tx_hash",
                            "type": "str",
                            "default": null,
                            "description": "Deprecated, use `inputs_set` instead",
                            "required": false
                        },
                        {
                            "name": "dust_return_pubkey",
                            "type": "str",
                            "default": null,
                            "description": "Deprecated, use `mutlisig_pubkey` instead",
                            "required": false
                        },
                        {
                            "name": "return_psbt",
                            "type": "bool",
                            "default": false,
                            "description": "Deprecated, use `verbose` instead",
                            "required": false
                        },
                        {
                            "name": "regular_dust_size",
                            "type": "int",
                            "default": null,
                            "description": "Deprecated, automatically calculated",
                            "required": false
                        },
                        {
                            "name": "multisig_dust_size",
                            "type": "int",
                            "default": null,
                            "description": "Deprecated, automatically calculated",
                            "required": false
                        },
                        {
                            "name": "extended_tx_info",
                            "type": "bool",
                            "default": false,
                            "description": "Deprecated (API v1 only), use API v2 instead",
                            "required": false
                        },
                        {
                            "name": "old_style_api",
                            "type": "bool",
                            "default": false,
                            "description": "Deprecated (API v1 only), use API v2 instead",
                            "required": false
                        },
                        {
                            "name": "p2sh_pretx_txid",
                            "type": "str",
                            "default": null,
                            "description": "Ignored, P2SH disabled",
                            "required": false
                        },
                        {
                            "name": "segwit",
                            "type": "bool",
                            "default": false,
                            "description": "Ignored, Segwit automatically detected",
                            "required": false
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/addresses/<address>/compose/btcpay": {
                    "function": "compose_btcpay",
                    "description": "Composes a transaction to pay for a BTC order match.",
                    "args": [
                        {
                            "name": "address",
                            "required": true,
                            "type": "str",
                            "description": "The address that will be sending the payment (e.g. $ADDRESS_1)"
                        },
                        {
                            "name": "order_match_id",
                            "required": true,
                            "type": "str",
                            "description": "The ID of the order match to pay for (e.g. $LAST_ORDER_MATCH_ID)"
                        },
                        {
                            "name": "encoding",
                            "type": "str",
                            "default": "auto",
                            "description": "The encoding method to use",
                            "required": false
                        },
                        {
                            "name": "validate",
                            "type": "bool",
                            "default": true,
                            "description": "Validate the transaction",
                            "required": false
                        },
                        {
                            "name": "sat_per_vbyte",
                            "type": "float",
                            "default": null,
                            "description": "The fee per vbyte in satoshis",
                            "required": false
                        },
                        {
                            "name": "confirmation_target",
                            "type": "int",
                            "default": 3,
                            "description": "The number of blocks to target for confirmation",
                            "required": false
                        },
                        {
                            "name": "exact_fee",
                            "type": "int",
                            "default": null,
                            "description": "The exact fee to use in satoshis",
                            "required": false
                        },
                        {
                            "name": "max_fee",
                            "type": "int",
                            "default": null,
                            "description": "The maximum fee to use in satoshis",
                            "required": false
                        },
                        {
                            "name": "inputs_set",
                            "type": "str",
                            "default": null,
                            "description": "A comma-separated list of UTXOs (`<txid>:<vout>`) to use as inputs for the transaction being created. To speed up the composition you can also use the following format for utxos: `<txid>:<vout>:<value>:<script_pub_key>`.",
                            "required": false
                        },
                        {
                            "name": "allow_unconfirmed_inputs",
                            "type": "bool",
                            "default": false,
                            "description": "Set to true to allow this transaction to utilize unconfirmed UTXOs as inputs",
                            "required": false
                        },
                        {
                            "name": "exclude_utxos",
                            "type": "str",
                            "default": null,
                            "description": "A comma-separated list of UTXO txids to exclude when selecting UTXOs to use as inputs for the transaction being created",
                            "required": false
                        },
                        {
                            "name": "use_utxos_with_balances",
                            "type": "bool",
                            "default": false,
                            "description": "Use UTXO with balances",
                            "required": false
                        },
                        {
                            "name": "exclude_utxos_with_balances",
                            "type": "bool",
                            "default": false,
                            "description": "Exclude silently UTXO with balances instead of raising an exception. Important: the `exclude_utxos_with_balances` will not exclude unconfirmed `attach` and `utxomove`. You need to explicitly exclude them with the `exclude_utxos` parameter",
                            "required": false
                        },
                        {
                            "name": "disable_utxo_locks",
                            "type": "bool",
                            "default": false,
                            "description": "By default, UTXOs utilized when creating a transaction are 'locked' for a few seconds, to prevent a case where rapidly generating create_ calls reuse UTXOs due to their spent status not being updated in bitcoind yet. Specify true for this parameter to disable this behavior, and not temporarily lock UTXOs",
                            "required": false
                        },
                        {
                            "name": "use_all_inputs_set",
                            "type": "bool",
                            "default": false,
                            "description": "Use all UTXOs provide with `inputs_set` parameter",
                            "required": false
                        },
                        {
                            "name": "mutlisig_pubkey",
                            "type": "str",
                            "default": null,
                            "description": "The reedem public key to use for multisig encoding, by default it is searched for the source address",
                            "required": false
                        },
                        {
                            "name": "change_address",
                            "type": "str",
                            "default": null,
                            "description": "The address to send the change to",
                            "required": false
                        },
                        {
                            "name": "more_outputs",
                            "type": "str",
                            "default": null,
                            "description": "Additional outputs to include in the transaction in the format `<value>:<address>` or `<value>:<script>`",
                            "required": false
                        },
                        {
                            "name": "pubkeys",
                            "type": "str",
                            "default": null,
                            "description": "Pubkeys needed in case one or more destinations are multisig addresses",
                            "required": false
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": false,
                            "description": "Include additional information in the result including data and psbt",
                            "required": false
                        },
                        {
                            "name": "return_only_data",
                            "type": "bool",
                            "default": false,
                            "description": "Return only the data part of the transaction",
                            "required": false
                        },
                        {
                            "name": "fee_per_kb",
                            "type": "int",
                            "default": null,
                            "description": "Deprecated, use `sat_per_vbyte` instead",
                            "required": false
                        },
                        {
                            "name": "fee_provided",
                            "type": "int",
                            "default": null,
                            "description": "Deprecated, use `max_fee` instead",
                            "required": false
                        },
                        {
                            "name": "unspent_tx_hash",
                            "type": "str",
                            "default": null,
                            "description": "Deprecated, use `inputs_set` instead",
                            "required": false
                        },
                        {
                            "name": "dust_return_pubkey",
                            "type": "str",
                            "default": null,
                            "description": "Deprecated, use `mutlisig_pubkey` instead",
                            "required": false
                        },
                        {
                            "name": "return_psbt",
                            "type": "bool",
                            "default": false,
                            "description": "Deprecated, use `verbose` instead",
                            "required": false
                        },
                        {
                            "name": "regular_dust_size",
                            "type": "int",
                            "default": null,
                            "description": "Deprecated, automatically calculated",
                            "required": false
                        },
                        {
                            "name": "multisig_dust_size",
                            "type": "int",
                            "default": null,
                            "description": "Deprecated, automatically calculated",
                            "required": false
                        },
                        {
                            "name": "extended_tx_info",
                            "type": "bool",
                            "default": false,
                            "description": "Deprecated (API v1 only), use API v2 instead",
                            "required": false
                        },
                        {
                            "name": "old_style_api",
                            "type": "bool",
                            "default": false,
                            "description": "Deprecated (API v1 only), use API v2 instead",
                            "required": false
                        },
                        {
                            "name": "p2sh_pretx_txid",
                            "type": "str",
                            "default": null,
                            "description": "Ignored, P2SH disabled",
                            "required": false
                        },
                        {
                            "name": "segwit",
                            "type": "bool",
                            "default": false,
                            "description": "Ignored, Segwit automatically detected",
                            "required": false
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/addresses/<address>/compose/burn": {
                    "function": "compose_burn",
                    "description": "Composes a transaction to burn a given quantity of BTC for XCP (on mainnet, possible between blocks 278310 and 283810; on testnet it is still available).",
                    "args": [
                        {
                            "name": "address",
                            "required": true,
                            "type": "str",
                            "description": "The address with the BTC to burn (e.g. $ADDRESS_1)"
                        },
                        {
                            "name": "quantity",
                            "required": true,
                            "type": "int",
                            "description": "The quantities of BTC to burn (in satoshis, hence integer) (1 BTC maximum burn per address) (e.g. 1000)"
                        },
                        {
                            "name": "overburn",
                            "default": false,
                            "required": false,
                            "type": "bool",
                            "description": "Whether to allow the burn to exceed 1 BTC for the address"
                        },
                        {
                            "name": "encoding",
                            "type": "str",
                            "default": "auto",
                            "description": "The encoding method to use",
                            "required": false
                        },
                        {
                            "name": "validate",
                            "type": "bool",
                            "default": true,
                            "description": "Validate the transaction",
                            "required": false
                        },
                        {
                            "name": "sat_per_vbyte",
                            "type": "float",
                            "default": null,
                            "description": "The fee per vbyte in satoshis",
                            "required": false
                        },
                        {
                            "name": "confirmation_target",
                            "type": "int",
                            "default": 3,
                            "description": "The number of blocks to target for confirmation",
                            "required": false
                        },
                        {
                            "name": "exact_fee",
                            "type": "int",
                            "default": null,
                            "description": "The exact fee to use in satoshis",
                            "required": false
                        },
                        {
                            "name": "max_fee",
                            "type": "int",
                            "default": null,
                            "description": "The maximum fee to use in satoshis",
                            "required": false
                        },
                        {
                            "name": "inputs_set",
                            "type": "str",
                            "default": null,
                            "description": "A comma-separated list of UTXOs (`<txid>:<vout>`) to use as inputs for the transaction being created. To speed up the composition you can also use the following format for utxos: `<txid>:<vout>:<value>:<script_pub_key>`.",
                            "required": false
                        },
                        {
                            "name": "allow_unconfirmed_inputs",
                            "type": "bool",
                            "default": false,
                            "description": "Set to true to allow this transaction to utilize unconfirmed UTXOs as inputs",
                            "required": false
                        },
                        {
                            "name": "exclude_utxos",
                            "type": "str",
                            "default": null,
                            "description": "A comma-separated list of UTXO txids to exclude when selecting UTXOs to use as inputs for the transaction being created",
                            "required": false
                        },
                        {
                            "name": "use_utxos_with_balances",
                            "type": "bool",
                            "default": false,
                            "description": "Use UTXO with balances",
                            "required": false
                        },
                        {
                            "name": "exclude_utxos_with_balances",
                            "type": "bool",
                            "default": false,
                            "description": "Exclude silently UTXO with balances instead of raising an exception. Important: the `exclude_utxos_with_balances` will not exclude unconfirmed `attach` and `utxomove`. You need to explicitly exclude them with the `exclude_utxos` parameter",
                            "required": false
                        },
                        {
                            "name": "disable_utxo_locks",
                            "type": "bool",
                            "default": false,
                            "description": "By default, UTXOs utilized when creating a transaction are 'locked' for a few seconds, to prevent a case where rapidly generating create_ calls reuse UTXOs due to their spent status not being updated in bitcoind yet. Specify true for this parameter to disable this behavior, and not temporarily lock UTXOs",
                            "required": false
                        },
                        {
                            "name": "use_all_inputs_set",
                            "type": "bool",
                            "default": false,
                            "description": "Use all UTXOs provide with `inputs_set` parameter",
                            "required": false
                        },
                        {
                            "name": "mutlisig_pubkey",
                            "type": "str",
                            "default": null,
                            "description": "The reedem public key to use for multisig encoding, by default it is searched for the source address",
                            "required": false
                        },
                        {
                            "name": "change_address",
                            "type": "str",
                            "default": null,
                            "description": "The address to send the change to",
                            "required": false
                        },
                        {
                            "name": "more_outputs",
                            "type": "str",
                            "default": null,
                            "description": "Additional outputs to include in the transaction in the format `<value>:<address>` or `<value>:<script>`",
                            "required": false
                        },
                        {
                            "name": "pubkeys",
                            "type": "str",
                            "default": null,
                            "description": "Pubkeys needed in case one or more destinations are multisig addresses",
                            "required": false
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": false,
                            "description": "Include additional information in the result including data and psbt",
                            "required": false
                        },
                        {
                            "name": "return_only_data",
                            "type": "bool",
                            "default": false,
                            "description": "Return only the data part of the transaction",
                            "required": false
                        },
                        {
                            "name": "fee_per_kb",
                            "type": "int",
                            "default": null,
                            "description": "Deprecated, use `sat_per_vbyte` instead",
                            "required": false
                        },
                        {
                            "name": "fee_provided",
                            "type": "int",
                            "default": null,
                            "description": "Deprecated, use `max_fee` instead",
                            "required": false
                        },
                        {
                            "name": "unspent_tx_hash",
                            "type": "str",
                            "default": null,
                            "description": "Deprecated, use `inputs_set` instead",
                            "required": false
                        },
                        {
                            "name": "dust_return_pubkey",
                            "type": "str",
                            "default": null,
                            "description": "Deprecated, use `mutlisig_pubkey` instead",
                            "required": false
                        },
                        {
                            "name": "return_psbt",
                            "type": "bool",
                            "default": false,
                            "description": "Deprecated, use `verbose` instead",
                            "required": false
                        },
                        {
                            "name": "regular_dust_size",
                            "type": "int",
                            "default": null,
                            "description": "Deprecated, automatically calculated",
                            "required": false
                        },
                        {
                            "name": "multisig_dust_size",
                            "type": "int",
                            "default": null,
                            "description": "Deprecated, automatically calculated",
                            "required": false
                        },
                        {
                            "name": "extended_tx_info",
                            "type": "bool",
                            "default": false,
                            "description": "Deprecated (API v1 only), use API v2 instead",
                            "required": false
                        },
                        {
                            "name": "old_style_api",
                            "type": "bool",
                            "default": false,
                            "description": "Deprecated (API v1 only), use API v2 instead",
                            "required": false
                        },
                        {
                            "name": "p2sh_pretx_txid",
                            "type": "str",
                            "default": null,
                            "description": "Ignored, P2SH disabled",
                            "required": false
                        },
                        {
                            "name": "segwit",
                            "type": "bool",
                            "default": false,
                            "description": "Ignored, Segwit automatically detected",
                            "required": false
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/addresses/<address>/compose/cancel": {
                    "function": "compose_cancel",
                    "description": "Composes a transaction to cancel an open order or bet.",
                    "args": [
                        {
                            "name": "address",
                            "required": true,
                            "type": "str",
                            "description": "The address that placed the order/bet to be cancelled (e.g. $ADDRESS_6)"
                        },
                        {
                            "name": "offer_hash",
                            "required": true,
                            "type": "str",
                            "description": "The hash of the order/bet to be cancelled (e.g. $LAST_OPEN_ORDER_TX_HASH)"
                        },
                        {
                            "name": "encoding",
                            "type": "str",
                            "default": "auto",
                            "description": "The encoding method to use",
                            "required": false
                        },
                        {
                            "name": "validate",
                            "type": "bool",
                            "default": true,
                            "description": "Validate the transaction",
                            "required": false
                        },
                        {
                            "name": "sat_per_vbyte",
                            "type": "float",
                            "default": null,
                            "description": "The fee per vbyte in satoshis",
                            "required": false
                        },
                        {
                            "name": "confirmation_target",
                            "type": "int",
                            "default": 3,
                            "description": "The number of blocks to target for confirmation",
                            "required": false
                        },
                        {
                            "name": "exact_fee",
                            "type": "int",
                            "default": null,
                            "description": "The exact fee to use in satoshis",
                            "required": false
                        },
                        {
                            "name": "max_fee",
                            "type": "int",
                            "default": null,
                            "description": "The maximum fee to use in satoshis",
                            "required": false
                        },
                        {
                            "name": "inputs_set",
                            "type": "str",
                            "default": null,
                            "description": "A comma-separated list of UTXOs (`<txid>:<vout>`) to use as inputs for the transaction being created. To speed up the composition you can also use the following format for utxos: `<txid>:<vout>:<value>:<script_pub_key>`.",
                            "required": false
                        },
                        {
                            "name": "allow_unconfirmed_inputs",
                            "type": "bool",
                            "default": false,
                            "description": "Set to true to allow this transaction to utilize unconfirmed UTXOs as inputs",
                            "required": false
                        },
                        {
                            "name": "exclude_utxos",
                            "type": "str",
                            "default": null,
                            "description": "A comma-separated list of UTXO txids to exclude when selecting UTXOs to use as inputs for the transaction being created",
                            "required": false
                        },
                        {
                            "name": "use_utxos_with_balances",
                            "type": "bool",
                            "default": false,
                            "description": "Use UTXO with balances",
                            "required": false
                        },
                        {
                            "name": "exclude_utxos_with_balances",
                            "type": "bool",
                            "default": false,
                            "description": "Exclude silently UTXO with balances instead of raising an exception. Important: the `exclude_utxos_with_balances` will not exclude unconfirmed `attach` and `utxomove`. You need to explicitly exclude them with the `exclude_utxos` parameter",
                            "required": false
                        },
                        {
                            "name": "disable_utxo_locks",
                            "type": "bool",
                            "default": false,
                            "description": "By default, UTXOs utilized when creating a transaction are 'locked' for a few seconds, to prevent a case where rapidly generating create_ calls reuse UTXOs due to their spent status not being updated in bitcoind yet. Specify true for this parameter to disable this behavior, and not temporarily lock UTXOs",
                            "required": false
                        },
                        {
                            "name": "use_all_inputs_set",
                            "type": "bool",
                            "default": false,
                            "description": "Use all UTXOs provide with `inputs_set` parameter",
                            "required": false
                        },
                        {
                            "name": "mutlisig_pubkey",
                            "type": "str",
                            "default": null,
                            "description": "The reedem public key to use for multisig encoding, by default it is searched for the source address",
                            "required": false
                        },
                        {
                            "name": "change_address",
                            "type": "str",
                            "default": null,
                            "description": "The address to send the change to",
                            "required": false
                        },
                        {
                            "name": "more_outputs",
                            "type": "str",
                            "default": null,
                            "description": "Additional outputs to include in the transaction in the format `<value>:<address>` or `<value>:<script>`",
                            "required": false
                        },
                        {
                            "name": "pubkeys",
                            "type": "str",
                            "default": null,
                            "description": "Pubkeys needed in case one or more destinations are multisig addresses",
                            "required": false
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": false,
                            "description": "Include additional information in the result including data and psbt",
                            "required": false
                        },
                        {
                            "name": "return_only_data",
                            "type": "bool",
                            "default": false,
                            "description": "Return only the data part of the transaction",
                            "required": false
                        },
                        {
                            "name": "fee_per_kb",
                            "type": "int",
                            "default": null,
                            "description": "Deprecated, use `sat_per_vbyte` instead",
                            "required": false
                        },
                        {
                            "name": "fee_provided",
                            "type": "int",
                            "default": null,
                            "description": "Deprecated, use `max_fee` instead",
                            "required": false
                        },
                        {
                            "name": "unspent_tx_hash",
                            "type": "str",
                            "default": null,
                            "description": "Deprecated, use `inputs_set` instead",
                            "required": false
                        },
                        {
                            "name": "dust_return_pubkey",
                            "type": "str",
                            "default": null,
                            "description": "Deprecated, use `mutlisig_pubkey` instead",
                            "required": false
                        },
                        {
                            "name": "return_psbt",
                            "type": "bool",
                            "default": false,
                            "description": "Deprecated, use `verbose` instead",
                            "required": false
                        },
                        {
                            "name": "regular_dust_size",
                            "type": "int",
                            "default": null,
                            "description": "Deprecated, automatically calculated",
                            "required": false
                        },
                        {
                            "name": "multisig_dust_size",
                            "type": "int",
                            "default": null,
                            "description": "Deprecated, automatically calculated",
                            "required": false
                        },
                        {
                            "name": "extended_tx_info",
                            "type": "bool",
                            "default": false,
                            "description": "Deprecated (API v1 only), use API v2 instead",
                            "required": false
                        },
                        {
                            "name": "old_style_api",
                            "type": "bool",
                            "default": false,
                            "description": "Deprecated (API v1 only), use API v2 instead",
                            "required": false
                        },
                        {
                            "name": "p2sh_pretx_txid",
                            "type": "str",
                            "default": null,
                            "description": "Ignored, P2SH disabled",
                            "required": false
                        },
                        {
                            "name": "segwit",
                            "type": "bool",
                            "default": false,
                            "description": "Ignored, Segwit automatically detected",
                            "required": false
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/addresses/<address>/compose/destroy": {
                    "function": "compose_destroy",
                    "description": "Composes a transaction to destroy a quantity of an asset.",
                    "args": [
                        {
                            "name": "address",
                            "required": true,
                            "type": "str",
                            "description": "The address that will be sending the asset to be destroyed (e.g. $ADDRESS_1)"
                        },
                        {
                            "name": "asset",
                            "required": true,
                            "type": "str",
                            "description": "The asset to be destroyed (e.g. XCP)"
                        },
                        {
                            "name": "quantity",
                            "required": true,
                            "type": "int",
                            "description": "The quantity of the asset to be destroyed (in satoshis, hence integer) (e.g. 1000)"
                        },
                        {
                            "name": "tag",
                            "required": true,
                            "type": "str",
                            "description": "A tag for the destruction (e.g. \"bugs!\")"
                        },
                        {
                            "name": "encoding",
                            "type": "str",
                            "default": "auto",
                            "description": "The encoding method to use",
                            "required": false
                        },
                        {
                            "name": "validate",
                            "type": "bool",
                            "default": true,
                            "description": "Validate the transaction",
                            "required": false
                        },
                        {
                            "name": "sat_per_vbyte",
                            "type": "float",
                            "default": null,
                            "description": "The fee per vbyte in satoshis",
                            "required": false
                        },
                        {
                            "name": "confirmation_target",
                            "type": "int",
                            "default": 3,
                            "description": "The number of blocks to target for confirmation",
                            "required": false
                        },
                        {
                            "name": "exact_fee",
                            "type": "int",
                            "default": null,
                            "description": "The exact fee to use in satoshis",
                            "required": false
                        },
                        {
                            "name": "max_fee",
                            "type": "int",
                            "default": null,
                            "description": "The maximum fee to use in satoshis",
                            "required": false
                        },
                        {
                            "name": "inputs_set",
                            "type": "str",
                            "default": null,
                            "description": "A comma-separated list of UTXOs (`<txid>:<vout>`) to use as inputs for the transaction being created. To speed up the composition you can also use the following format for utxos: `<txid>:<vout>:<value>:<script_pub_key>`.",
                            "required": false
                        },
                        {
                            "name": "allow_unconfirmed_inputs",
                            "type": "bool",
                            "default": false,
                            "description": "Set to true to allow this transaction to utilize unconfirmed UTXOs as inputs",
                            "required": false
                        },
                        {
                            "name": "exclude_utxos",
                            "type": "str",
                            "default": null,
                            "description": "A comma-separated list of UTXO txids to exclude when selecting UTXOs to use as inputs for the transaction being created",
                            "required": false
                        },
                        {
                            "name": "use_utxos_with_balances",
                            "type": "bool",
                            "default": false,
                            "description": "Use UTXO with balances",
                            "required": false
                        },
                        {
                            "name": "exclude_utxos_with_balances",
                            "type": "bool",
                            "default": false,
                            "description": "Exclude silently UTXO with balances instead of raising an exception. Important: the `exclude_utxos_with_balances` will not exclude unconfirmed `attach` and `utxomove`. You need to explicitly exclude them with the `exclude_utxos` parameter",
                            "required": false
                        },
                        {
                            "name": "disable_utxo_locks",
                            "type": "bool",
                            "default": false,
                            "description": "By default, UTXOs utilized when creating a transaction are 'locked' for a few seconds, to prevent a case where rapidly generating create_ calls reuse UTXOs due to their spent status not being updated in bitcoind yet. Specify true for this parameter to disable this behavior, and not temporarily lock UTXOs",
                            "required": false
                        },
                        {
                            "name": "use_all_inputs_set",
                            "type": "bool",
                            "default": false,
                            "description": "Use all UTXOs provide with `inputs_set` parameter",
                            "required": false
                        },
                        {
                            "name": "mutlisig_pubkey",
                            "type": "str",
                            "default": null,
                            "description": "The reedem public key to use for multisig encoding, by default it is searched for the source address",
                            "required": false
                        },
                        {
                            "name": "change_address",
                            "type": "str",
                            "default": null,
                            "description": "The address to send the change to",
                            "required": false
                        },
                        {
                            "name": "more_outputs",
                            "type": "str",
                            "default": null,
                            "description": "Additional outputs to include in the transaction in the format `<value>:<address>` or `<value>:<script>`",
                            "required": false
                        },
                        {
                            "name": "pubkeys",
                            "type": "str",
                            "default": null,
                            "description": "Pubkeys needed in case one or more destinations are multisig addresses",
                            "required": false
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": false,
                            "description": "Include additional information in the result including data and psbt",
                            "required": false
                        },
                        {
                            "name": "return_only_data",
                            "type": "bool",
                            "default": false,
                            "description": "Return only the data part of the transaction",
                            "required": false
                        },
                        {
                            "name": "fee_per_kb",
                            "type": "int",
                            "default": null,
                            "description": "Deprecated, use `sat_per_vbyte` instead",
                            "required": false
                        },
                        {
                            "name": "fee_provided",
                            "type": "int",
                            "default": null,
                            "description": "Deprecated, use `max_fee` instead",
                            "required": false
                        },
                        {
                            "name": "unspent_tx_hash",
                            "type": "str",
                            "default": null,
                            "description": "Deprecated, use `inputs_set` instead",
                            "required": false
                        },
                        {
                            "name": "dust_return_pubkey",
                            "type": "str",
                            "default": null,
                            "description": "Deprecated, use `mutlisig_pubkey` instead",
                            "required": false
                        },
                        {
                            "name": "return_psbt",
                            "type": "bool",
                            "default": false,
                            "description": "Deprecated, use `verbose` instead",
                            "required": false
                        },
                        {
                            "name": "regular_dust_size",
                            "type": "int",
                            "default": null,
                            "description": "Deprecated, automatically calculated",
                            "required": false
                        },
                        {
                            "name": "multisig_dust_size",
                            "type": "int",
                            "default": null,
                            "description": "Deprecated, automatically calculated",
                            "required": false
                        },
                        {
                            "name": "extended_tx_info",
                            "type": "bool",
                            "default": false,
                            "description": "Deprecated (API v1 only), use API v2 instead",
                            "required": false
                        },
                        {
                            "name": "old_style_api",
                            "type": "bool",
                            "default": false,
                            "description": "Deprecated (API v1 only), use API v2 instead",
                            "required": false
                        },
                        {
                            "name": "p2sh_pretx_txid",
                            "type": "str",
                            "default": null,
                            "description": "Ignored, P2SH disabled",
                            "required": false
                        },
                        {
                            "name": "segwit",
                            "type": "bool",
                            "default": false,
                            "description": "Ignored, Segwit automatically detected",
                            "required": false
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/addresses/<address>/compose/dispenser": {
                    "function": "compose_dispenser",
                    "description": "Composes a transaction to opens or closes a dispenser for a given asset at a given rate of main chain asset (BTC). Escrowed quantity on open must be equal or greater than give_quantity. It is suggested that you escrow multiples of give_quantity to ease dispenser operation.",
                    "args": [
                        {
                            "name": "address",
                            "required": true,
                            "type": "str",
                            "description": "The address that will be dispensing (must have the necessary escrow_quantity of the specified asset) (e.g. $ADDRESS_9)"
                        },
                        {
                            "name": "asset",
                            "required": true,
                            "type": "str",
                            "description": "The asset or subasset to dispense (e.g. XCP)"
                        },
                        {
                            "name": "give_quantity",
                            "required": true,
                            "type": "int",
                            "description": "The quantity of the asset to dispense (in satoshis, hence integer) (e.g. 1000)"
                        },
                        {
                            "name": "escrow_quantity",
                            "required": true,
                            "type": "int",
                            "description": "The quantity of the asset to reserve for this dispenser (in satoshis, hence integer) (e.g. 1000)"
                        },
                        {
                            "name": "mainchainrate",
                            "required": true,
                            "type": "int",
                            "description": "The quantity of the main chain asset (BTC) per dispensed portion (in satoshis, hence integer) (e.g. 100)"
                        },
                        {
                            "name": "status",
                            "required": true,
                            "type": "int",
                            "description": "The state of the dispenser. 0 for open, 1 for open using open_address, 10 for closed (e.g. 0)"
                        },
                        {
                            "name": "open_address",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The address that you would like to open the dispenser on; MUST be equal to `address` from block 866000 onwards"
                        },
                        {
                            "name": "oracle_address",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The address that you would like to use as a price oracle for this dispenser"
                        },
                        {
                            "name": "encoding",
                            "type": "str",
                            "default": "auto",
                            "description": "The encoding method to use",
                            "required": false
                        },
                        {
                            "name": "validate",
                            "type": "bool",
                            "default": true,
                            "description": "Validate the transaction",
                            "required": false
                        },
                        {
                            "name": "sat_per_vbyte",
                            "type": "float",
                            "default": null,
                            "description": "The fee per vbyte in satoshis",
                            "required": false
                        },
                        {
                            "name": "confirmation_target",
                            "type": "int",
                            "default": 3,
                            "description": "The number of blocks to target for confirmation",
                            "required": false
                        },
                        {
                            "name": "exact_fee",
                            "type": "int",
                            "default": null,
                            "description": "The exact fee to use in satoshis",
                            "required": false
                        },
                        {
                            "name": "max_fee",
                            "type": "int",
                            "default": null,
                            "description": "The maximum fee to use in satoshis",
                            "required": false
                        },
                        {
                            "name": "inputs_set",
                            "type": "str",
                            "default": null,
                            "description": "A comma-separated list of UTXOs (`<txid>:<vout>`) to use as inputs for the transaction being created. To speed up the composition you can also use the following format for utxos: `<txid>:<vout>:<value>:<script_pub_key>`.",
                            "required": false
                        },
                        {
                            "name": "allow_unconfirmed_inputs",
                            "type": "bool",
                            "default": false,
                            "description": "Set to true to allow this transaction to utilize unconfirmed UTXOs as inputs",
                            "required": false
                        },
                        {
                            "name": "exclude_utxos",
                            "type": "str",
                            "default": null,
                            "description": "A comma-separated list of UTXO txids to exclude when selecting UTXOs to use as inputs for the transaction being created",
                            "required": false
                        },
                        {
                            "name": "use_utxos_with_balances",
                            "type": "bool",
                            "default": false,
                            "description": "Use UTXO with balances",
                            "required": false
                        },
                        {
                            "name": "exclude_utxos_with_balances",
                            "type": "bool",
                            "default": false,
                            "description": "Exclude silently UTXO with balances instead of raising an exception. Important: the `exclude_utxos_with_balances` will not exclude unconfirmed `attach` and `utxomove`. You need to explicitly exclude them with the `exclude_utxos` parameter",
                            "required": false
                        },
                        {
                            "name": "disable_utxo_locks",
                            "type": "bool",
                            "default": false,
                            "description": "By default, UTXOs utilized when creating a transaction are 'locked' for a few seconds, to prevent a case where rapidly generating create_ calls reuse UTXOs due to their spent status not being updated in bitcoind yet. Specify true for this parameter to disable this behavior, and not temporarily lock UTXOs",
                            "required": false
                        },
                        {
                            "name": "use_all_inputs_set",
                            "type": "bool",
                            "default": false,
                            "description": "Use all UTXOs provide with `inputs_set` parameter",
                            "required": false
                        },
                        {
                            "name": "mutlisig_pubkey",
                            "type": "str",
                            "default": null,
                            "description": "The reedem public key to use for multisig encoding, by default it is searched for the source address",
                            "required": false
                        },
                        {
                            "name": "change_address",
                            "type": "str",
                            "default": null,
                            "description": "The address to send the change to",
                            "required": false
                        },
                        {
                            "name": "more_outputs",
                            "type": "str",
                            "default": null,
                            "description": "Additional outputs to include in the transaction in the format `<value>:<address>` or `<value>:<script>`",
                            "required": false
                        },
                        {
                            "name": "pubkeys",
                            "type": "str",
                            "default": null,
                            "description": "Pubkeys needed in case one or more destinations are multisig addresses",
                            "required": false
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": false,
                            "description": "Include additional information in the result including data and psbt",
                            "required": false
                        },
                        {
                            "name": "return_only_data",
                            "type": "bool",
                            "default": false,
                            "description": "Return only the data part of the transaction",
                            "required": false
                        },
                        {
                            "name": "fee_per_kb",
                            "type": "int",
                            "default": null,
                            "description": "Deprecated, use `sat_per_vbyte` instead",
                            "required": false
                        },
                        {
                            "name": "fee_provided",
                            "type": "int",
                            "default": null,
                            "description": "Deprecated, use `max_fee` instead",
                            "required": false
                        },
                        {
                            "name": "unspent_tx_hash",
                            "type": "str",
                            "default": null,
                            "description": "Deprecated, use `inputs_set` instead",
                            "required": false
                        },
                        {
                            "name": "dust_return_pubkey",
                            "type": "str",
                            "default": null,
                            "description": "Deprecated, use `mutlisig_pubkey` instead",
                            "required": false
                        },
                        {
                            "name": "return_psbt",
                            "type": "bool",
                            "default": false,
                            "description": "Deprecated, use `verbose` instead",
                            "required": false
                        },
                        {
                            "name": "regular_dust_size",
                            "type": "int",
                            "default": null,
                            "description": "Deprecated, automatically calculated",
                            "required": false
                        },
                        {
                            "name": "multisig_dust_size",
                            "type": "int",
                            "default": null,
                            "description": "Deprecated, automatically calculated",
                            "required": false
                        },
                        {
                            "name": "extended_tx_info",
                            "type": "bool",
                            "default": false,
                            "description": "Deprecated (API v1 only), use API v2 instead",
                            "required": false
                        },
                        {
                            "name": "old_style_api",
                            "type": "bool",
                            "default": false,
                            "description": "Deprecated (API v1 only), use API v2 instead",
                            "required": false
                        },
                        {
                            "name": "p2sh_pretx_txid",
                            "type": "str",
                            "default": null,
                            "description": "Ignored, P2SH disabled",
                            "required": false
                        },
                        {
                            "name": "segwit",
                            "type": "bool",
                            "default": false,
                            "description": "Ignored, Segwit automatically detected",
                            "required": false
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/addresses/<address>/compose/dividend": {
                    "function": "compose_dividend",
                    "description": "Composes a transaction to issue a dividend to holders of a given asset.",
                    "args": [
                        {
                            "name": "address",
                            "required": true,
                            "type": "str",
                            "description": "The address that will be issuing the dividend (must have the ownership of the asset which the dividend is being issued on) (e.g. $ADDRESS_1)"
                        },
                        {
                            "name": "quantity_per_unit",
                            "required": true,
                            "type": "int",
                            "description": "The amount of dividend_asset rewarded (in satoshis, hence integer) (e.g. 1)"
                        },
                        {
                            "name": "asset",
                            "required": true,
                            "type": "str",
                            "description": "The asset or subasset that the dividends are being rewarded on (e.g. MYASSETA)"
                        },
                        {
                            "name": "dividend_asset",
                            "required": true,
                            "type": "str",
                            "description": "The asset or subasset that the dividends are paid in (e.g. XCP)"
                        },
                        {
                            "name": "encoding",
                            "type": "str",
                            "default": "auto",
                            "description": "The encoding method to use",
                            "required": false
                        },
                        {
                            "name": "validate",
                            "type": "bool",
                            "default": true,
                            "description": "Validate the transaction",
                            "required": false
                        },
                        {
                            "name": "sat_per_vbyte",
                            "type": "float",
                            "default": null,
                            "description": "The fee per vbyte in satoshis",
                            "required": false
                        },
                        {
                            "name": "confirmation_target",
                            "type": "int",
                            "default": 3,
                            "description": "The number of blocks to target for confirmation",
                            "required": false
                        },
                        {
                            "name": "exact_fee",
                            "type": "int",
                            "default": null,
                            "description": "The exact fee to use in satoshis",
                            "required": false
                        },
                        {
                            "name": "max_fee",
                            "type": "int",
                            "default": null,
                            "description": "The maximum fee to use in satoshis",
                            "required": false
                        },
                        {
                            "name": "inputs_set",
                            "type": "str",
                            "default": null,
                            "description": "A comma-separated list of UTXOs (`<txid>:<vout>`) to use as inputs for the transaction being created. To speed up the composition you can also use the following format for utxos: `<txid>:<vout>:<value>:<script_pub_key>`.",
                            "required": false
                        },
                        {
                            "name": "allow_unconfirmed_inputs",
                            "type": "bool",
                            "default": false,
                            "description": "Set to true to allow this transaction to utilize unconfirmed UTXOs as inputs",
                            "required": false
                        },
                        {
                            "name": "exclude_utxos",
                            "type": "str",
                            "default": null,
                            "description": "A comma-separated list of UTXO txids to exclude when selecting UTXOs to use as inputs for the transaction being created",
                            "required": false
                        },
                        {
                            "name": "use_utxos_with_balances",
                            "type": "bool",
                            "default": false,
                            "description": "Use UTXO with balances",
                            "required": false
                        },
                        {
                            "name": "exclude_utxos_with_balances",
                            "type": "bool",
                            "default": false,
                            "description": "Exclude silently UTXO with balances instead of raising an exception. Important: the `exclude_utxos_with_balances` will not exclude unconfirmed `attach` and `utxomove`. You need to explicitly exclude them with the `exclude_utxos` parameter",
                            "required": false
                        },
                        {
                            "name": "disable_utxo_locks",
                            "type": "bool",
                            "default": false,
                            "description": "By default, UTXOs utilized when creating a transaction are 'locked' for a few seconds, to prevent a case where rapidly generating create_ calls reuse UTXOs due to their spent status not being updated in bitcoind yet. Specify true for this parameter to disable this behavior, and not temporarily lock UTXOs",
                            "required": false
                        },
                        {
                            "name": "use_all_inputs_set",
                            "type": "bool",
                            "default": false,
                            "description": "Use all UTXOs provide with `inputs_set` parameter",
                            "required": false
                        },
                        {
                            "name": "mutlisig_pubkey",
                            "type": "str",
                            "default": null,
                            "description": "The reedem public key to use for multisig encoding, by default it is searched for the source address",
                            "required": false
                        },
                        {
                            "name": "change_address",
                            "type": "str",
                            "default": null,
                            "description": "The address to send the change to",
                            "required": false
                        },
                        {
                            "name": "more_outputs",
                            "type": "str",
                            "default": null,
                            "description": "Additional outputs to include in the transaction in the format `<value>:<address>` or `<value>:<script>`",
                            "required": false
                        },
                        {
                            "name": "pubkeys",
                            "type": "str",
                            "default": null,
                            "description": "Pubkeys needed in case one or more destinations are multisig addresses",
                            "required": false
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": false,
                            "description": "Include additional information in the result including data and psbt",
                            "required": false
                        },
                        {
                            "name": "return_only_data",
                            "type": "bool",
                            "default": false,
                            "description": "Return only the data part of the transaction",
                            "required": false
                        },
                        {
                            "name": "fee_per_kb",
                            "type": "int",
                            "default": null,
                            "description": "Deprecated, use `sat_per_vbyte` instead",
                            "required": false
                        },
                        {
                            "name": "fee_provided",
                            "type": "int",
                            "default": null,
                            "description": "Deprecated, use `max_fee` instead",
                            "required": false
                        },
                        {
                            "name": "unspent_tx_hash",
                            "type": "str",
                            "default": null,
                            "description": "Deprecated, use `inputs_set` instead",
                            "required": false
                        },
                        {
                            "name": "dust_return_pubkey",
                            "type": "str",
                            "default": null,
                            "description": "Deprecated, use `mutlisig_pubkey` instead",
                            "required": false
                        },
                        {
                            "name": "return_psbt",
                            "type": "bool",
                            "default": false,
                            "description": "Deprecated, use `verbose` instead",
                            "required": false
                        },
                        {
                            "name": "regular_dust_size",
                            "type": "int",
                            "default": null,
                            "description": "Deprecated, automatically calculated",
                            "required": false
                        },
                        {
                            "name": "multisig_dust_size",
                            "type": "int",
                            "default": null,
                            "description": "Deprecated, automatically calculated",
                            "required": false
                        },
                        {
                            "name": "extended_tx_info",
                            "type": "bool",
                            "default": false,
                            "description": "Deprecated (API v1 only), use API v2 instead",
                            "required": false
                        },
                        {
                            "name": "old_style_api",
                            "type": "bool",
                            "default": false,
                            "description": "Deprecated (API v1 only), use API v2 instead",
                            "required": false
                        },
                        {
                            "name": "p2sh_pretx_txid",
                            "type": "str",
                            "default": null,
                            "description": "Ignored, P2SH disabled",
                            "required": false
                        },
                        {
                            "name": "segwit",
                            "type": "bool",
                            "default": false,
                            "description": "Ignored, Segwit automatically detected",
                            "required": false
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/addresses/<address>/compose/dividend/estimatexcpfees": {
                    "function": "get_dividend_estimate_xcp_fee",
                    "description": "Returns the estimated fee for issuing a dividend.",
                    "args": [
                        {
                            "name": "address",
                            "required": true,
                            "type": "str",
                            "description": "The address that will be issuing the dividend (e.g. $ADDRESS_1)"
                        },
                        {
                            "name": "asset",
                            "required": true,
                            "type": "str",
                            "description": "The asset or subasset that the dividends are being rewarded on (e.g. MYASSETA)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/addresses/<address>/compose/issuance": {
                    "function": "compose_issuance",
                    "description": "Composes a transaction to Issue a new asset, issue more of an existing asset, lock an asset, reset existing supply, or transfer the ownership of an asset.",
                    "args": [
                        {
                            "name": "address",
                            "required": true,
                            "type": "str",
                            "description": "The address that will be issuing or transfering the asset (e.g. $ADDRESS_1)"
                        },
                        {
                            "name": "asset",
                            "required": true,
                            "type": "str",
                            "description": "The assets to issue or transfer. This can also be a subasset longname for new subasset issuances (e.g. XCPTEST)"
                        },
                        {
                            "name": "quantity",
                            "required": true,
                            "type": "int",
                            "description": "The quantity of the asset to issue (set to 0 if transferring an asset) (in satoshis, hence integer) (e.g. 1000)"
                        },
                        {
                            "name": "transfer_destination",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The address to receive the asset (e.g. $ADDRESS_1)"
                        },
                        {
                            "name": "divisible",
                            "default": true,
                            "required": false,
                            "type": "bool",
                            "description": "Whether this asset is divisible or not (if a transfer, this value must match the value specified when the asset was originally issued)"
                        },
                        {
                            "name": "lock",
                            "default": false,
                            "required": false,
                            "type": "bool",
                            "description": "Whether this issuance should lock supply of this asset forever"
                        },
                        {
                            "name": "reset",
                            "default": false,
                            "required": false,
                            "type": "bool",
                            "description": "Wether this issuance should reset any existing supply"
                        },
                        {
                            "name": "description",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "A textual description for the asset"
                        },
                        {
                            "name": "encoding",
                            "type": "str",
                            "default": "auto",
                            "description": "The encoding method to use",
                            "required": false
                        },
                        {
                            "name": "validate",
                            "type": "bool",
                            "default": true,
                            "description": "Validate the transaction",
                            "required": false
                        },
                        {
                            "name": "sat_per_vbyte",
                            "type": "float",
                            "default": null,
                            "description": "The fee per vbyte in satoshis",
                            "required": false
                        },
                        {
                            "name": "confirmation_target",
                            "type": "int",
                            "default": 3,
                            "description": "The number of blocks to target for confirmation",
                            "required": false
                        },
                        {
                            "name": "exact_fee",
                            "type": "int",
                            "default": null,
                            "description": "The exact fee to use in satoshis",
                            "required": false
                        },
                        {
                            "name": "max_fee",
                            "type": "int",
                            "default": null,
                            "description": "The maximum fee to use in satoshis",
                            "required": false
                        },
                        {
                            "name": "inputs_set",
                            "type": "str",
                            "default": null,
                            "description": "A comma-separated list of UTXOs (`<txid>:<vout>`) to use as inputs for the transaction being created. To speed up the composition you can also use the following format for utxos: `<txid>:<vout>:<value>:<script_pub_key>`.",
                            "required": false
                        },
                        {
                            "name": "allow_unconfirmed_inputs",
                            "type": "bool",
                            "default": false,
                            "description": "Set to true to allow this transaction to utilize unconfirmed UTXOs as inputs",
                            "required": false
                        },
                        {
                            "name": "exclude_utxos",
                            "type": "str",
                            "default": null,
                            "description": "A comma-separated list of UTXO txids to exclude when selecting UTXOs to use as inputs for the transaction being created",
                            "required": false
                        },
                        {
                            "name": "use_utxos_with_balances",
                            "type": "bool",
                            "default": false,
                            "description": "Use UTXO with balances",
                            "required": false
                        },
                        {
                            "name": "exclude_utxos_with_balances",
                            "type": "bool",
                            "default": false,
                            "description": "Exclude silently UTXO with balances instead of raising an exception. Important: the `exclude_utxos_with_balances` will not exclude unconfirmed `attach` and `utxomove`. You need to explicitly exclude them with the `exclude_utxos` parameter",
                            "required": false
                        },
                        {
                            "name": "disable_utxo_locks",
                            "type": "bool",
                            "default": false,
                            "description": "By default, UTXOs utilized when creating a transaction are 'locked' for a few seconds, to prevent a case where rapidly generating create_ calls reuse UTXOs due to their spent status not being updated in bitcoind yet. Specify true for this parameter to disable this behavior, and not temporarily lock UTXOs",
                            "required": false
                        },
                        {
                            "name": "use_all_inputs_set",
                            "type": "bool",
                            "default": false,
                            "description": "Use all UTXOs provide with `inputs_set` parameter",
                            "required": false
                        },
                        {
                            "name": "mutlisig_pubkey",
                            "type": "str",
                            "default": null,
                            "description": "The reedem public key to use for multisig encoding, by default it is searched for the source address",
                            "required": false
                        },
                        {
                            "name": "change_address",
                            "type": "str",
                            "default": null,
                            "description": "The address to send the change to",
                            "required": false
                        },
                        {
                            "name": "more_outputs",
                            "type": "str",
                            "default": null,
                            "description": "Additional outputs to include in the transaction in the format `<value>:<address>` or `<value>:<script>`",
                            "required": false
                        },
                        {
                            "name": "pubkeys",
                            "type": "str",
                            "default": null,
                            "description": "Pubkeys needed in case one or more destinations are multisig addresses",
                            "required": false
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": false,
                            "description": "Include additional information in the result including data and psbt",
                            "required": false
                        },
                        {
                            "name": "return_only_data",
                            "type": "bool",
                            "default": false,
                            "description": "Return only the data part of the transaction",
                            "required": false
                        },
                        {
                            "name": "fee_per_kb",
                            "type": "int",
                            "default": null,
                            "description": "Deprecated, use `sat_per_vbyte` instead",
                            "required": false
                        },
                        {
                            "name": "fee_provided",
                            "type": "int",
                            "default": null,
                            "description": "Deprecated, use `max_fee` instead",
                            "required": false
                        },
                        {
                            "name": "unspent_tx_hash",
                            "type": "str",
                            "default": null,
                            "description": "Deprecated, use `inputs_set` instead",
                            "required": false
                        },
                        {
                            "name": "dust_return_pubkey",
                            "type": "str",
                            "default": null,
                            "description": "Deprecated, use `mutlisig_pubkey` instead",
                            "required": false
                        },
                        {
                            "name": "return_psbt",
                            "type": "bool",
                            "default": false,
                            "description": "Deprecated, use `verbose` instead",
                            "required": false
                        },
                        {
                            "name": "regular_dust_size",
                            "type": "int",
                            "default": null,
                            "description": "Deprecated, automatically calculated",
                            "required": false
                        },
                        {
                            "name": "multisig_dust_size",
                            "type": "int",
                            "default": null,
                            "description": "Deprecated, automatically calculated",
                            "required": false
                        },
                        {
                            "name": "extended_tx_info",
                            "type": "bool",
                            "default": false,
                            "description": "Deprecated (API v1 only), use API v2 instead",
                            "required": false
                        },
                        {
                            "name": "old_style_api",
                            "type": "bool",
                            "default": false,
                            "description": "Deprecated (API v1 only), use API v2 instead",
                            "required": false
                        },
                        {
                            "name": "p2sh_pretx_txid",
                            "type": "str",
                            "default": null,
                            "description": "Ignored, P2SH disabled",
                            "required": false
                        },
                        {
                            "name": "segwit",
                            "type": "bool",
                            "default": false,
                            "description": "Ignored, Segwit automatically detected",
                            "required": false
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/addresses/<address>/compose/mpma": {
                    "function": "compose_mpma",
                    "description": "Composes a transaction to send multiple payments to multiple addresses.",
                    "args": [
                        {
                            "name": "address",
                            "required": true,
                            "type": "str",
                            "description": "The address that will be sending (must have the necessary quantity of the specified asset) (e.g. $ADDRESS_2)"
                        },
                        {
                            "name": "assets",
                            "required": true,
                            "type": "str",
                            "description": "comma-separated list of assets to send (e.g. XCP,FAIRMINTC)"
                        },
                        {
                            "name": "destinations",
                            "required": true,
                            "type": "str",
                            "description": "comma-separated list of addresses to send to (e.g. $ADDRESS_1,$ADDRESS_2)"
                        },
                        {
                            "name": "quantities",
                            "required": true,
                            "type": "str",
                            "description": "comma-separated list of quantities to send (in satoshis, hence integer) (e.g. 1,2)"
                        },
                        {
                            "name": "memos",
                            "default": null,
                            "required": false,
                            "type": "list",
                            "description": "One `memos` argument by send, if any"
                        },
                        {
                            "name": "memos_are_hex",
                            "default": null,
                            "required": false,
                            "type": "bool",
                            "description": "Whether the memos are in hexadecimal format"
                        },
                        {
                            "name": "memo",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The Memo associated with this transaction, used by default for all sends if no `memos` are specified"
                        },
                        {
                            "name": "memo_is_hex",
                            "default": false,
                            "required": false,
                            "type": "bool",
                            "description": "Whether the memo field is a hexadecimal string"
                        },
                        {
                            "name": "encoding",
                            "type": "str",
                            "default": "auto",
                            "description": "The encoding method to use",
                            "required": false
                        },
                        {
                            "name": "validate",
                            "type": "bool",
                            "default": true,
                            "description": "Validate the transaction",
                            "required": false
                        },
                        {
                            "name": "sat_per_vbyte",
                            "type": "float",
                            "default": null,
                            "description": "The fee per vbyte in satoshis",
                            "required": false
                        },
                        {
                            "name": "confirmation_target",
                            "type": "int",
                            "default": 3,
                            "description": "The number of blocks to target for confirmation",
                            "required": false
                        },
                        {
                            "name": "exact_fee",
                            "type": "int",
                            "default": null,
                            "description": "The exact fee to use in satoshis",
                            "required": false
                        },
                        {
                            "name": "max_fee",
                            "type": "int",
                            "default": null,
                            "description": "The maximum fee to use in satoshis",
                            "required": false
                        },
                        {
                            "name": "inputs_set",
                            "type": "str",
                            "default": null,
                            "description": "A comma-separated list of UTXOs (`<txid>:<vout>`) to use as inputs for the transaction being created. To speed up the composition you can also use the following format for utxos: `<txid>:<vout>:<value>:<script_pub_key>`.",
                            "required": false
                        },
                        {
                            "name": "allow_unconfirmed_inputs",
                            "type": "bool",
                            "default": false,
                            "description": "Set to true to allow this transaction to utilize unconfirmed UTXOs as inputs",
                            "required": false
                        },
                        {
                            "name": "exclude_utxos",
                            "type": "str",
                            "default": null,
                            "description": "A comma-separated list of UTXO txids to exclude when selecting UTXOs to use as inputs for the transaction being created",
                            "required": false
                        },
                        {
                            "name": "use_utxos_with_balances",
                            "type": "bool",
                            "default": false,
                            "description": "Use UTXO with balances",
                            "required": false
                        },
                        {
                            "name": "exclude_utxos_with_balances",
                            "type": "bool",
                            "default": false,
                            "description": "Exclude silently UTXO with balances instead of raising an exception. Important: the `exclude_utxos_with_balances` will not exclude unconfirmed `attach` and `utxomove`. You need to explicitly exclude them with the `exclude_utxos` parameter",
                            "required": false
                        },
                        {
                            "name": "disable_utxo_locks",
                            "type": "bool",
                            "default": false,
                            "description": "By default, UTXOs utilized when creating a transaction are 'locked' for a few seconds, to prevent a case where rapidly generating create_ calls reuse UTXOs due to their spent status not being updated in bitcoind yet. Specify true for this parameter to disable this behavior, and not temporarily lock UTXOs",
                            "required": false
                        },
                        {
                            "name": "use_all_inputs_set",
                            "type": "bool",
                            "default": false,
                            "description": "Use all UTXOs provide with `inputs_set` parameter",
                            "required": false
                        },
                        {
                            "name": "mutlisig_pubkey",
                            "type": "str",
                            "default": null,
                            "description": "The reedem public key to use for multisig encoding, by default it is searched for the source address",
                            "required": false
                        },
                        {
                            "name": "change_address",
                            "type": "str",
                            "default": null,
                            "description": "The address to send the change to",
                            "required": false
                        },
                        {
                            "name": "more_outputs",
                            "type": "str",
                            "default": null,
                            "description": "Additional outputs to include in the transaction in the format `<value>:<address>` or `<value>:<script>`",
                            "required": false
                        },
                        {
                            "name": "pubkeys",
                            "type": "str",
                            "default": null,
                            "description": "Pubkeys needed in case one or more destinations are multisig addresses",
                            "required": false
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": false,
                            "description": "Include additional information in the result including data and psbt",
                            "required": false
                        },
                        {
                            "name": "return_only_data",
                            "type": "bool",
                            "default": false,
                            "description": "Return only the data part of the transaction",
                            "required": false
                        },
                        {
                            "name": "fee_per_kb",
                            "type": "int",
                            "default": null,
                            "description": "Deprecated, use `sat_per_vbyte` instead",
                            "required": false
                        },
                        {
                            "name": "fee_provided",
                            "type": "int",
                            "default": null,
                            "description": "Deprecated, use `max_fee` instead",
                            "required": false
                        },
                        {
                            "name": "unspent_tx_hash",
                            "type": "str",
                            "default": null,
                            "description": "Deprecated, use `inputs_set` instead",
                            "required": false
                        },
                        {
                            "name": "dust_return_pubkey",
                            "type": "str",
                            "default": null,
                            "description": "Deprecated, use `mutlisig_pubkey` instead",
                            "required": false
                        },
                        {
                            "name": "return_psbt",
                            "type": "bool",
                            "default": false,
                            "description": "Deprecated, use `verbose` instead",
                            "required": false
                        },
                        {
                            "name": "regular_dust_size",
                            "type": "int",
                            "default": null,
                            "description": "Deprecated, automatically calculated",
                            "required": false
                        },
                        {
                            "name": "multisig_dust_size",
                            "type": "int",
                            "default": null,
                            "description": "Deprecated, automatically calculated",
                            "required": false
                        },
                        {
                            "name": "extended_tx_info",
                            "type": "bool",
                            "default": false,
                            "description": "Deprecated (API v1 only), use API v2 instead",
                            "required": false
                        },
                        {
                            "name": "old_style_api",
                            "type": "bool",
                            "default": false,
                            "description": "Deprecated (API v1 only), use API v2 instead",
                            "required": false
                        },
                        {
                            "name": "p2sh_pretx_txid",
                            "type": "str",
                            "default": null,
                            "description": "Ignored, P2SH disabled",
                            "required": false
                        },
                        {
                            "name": "segwit",
                            "type": "bool",
                            "default": false,
                            "description": "Ignored, Segwit automatically detected",
                            "required": false
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/addresses/<address>/compose/order": {
                    "function": "compose_order",
                    "description": "Composes a transaction to place an order on the distributed exchange.",
                    "args": [
                        {
                            "name": "address",
                            "required": true,
                            "type": "str",
                            "description": "The address that will be issuing the order request (must have the necessary quantity of the specified asset to give) (e.g. $ADDRESS_1)"
                        },
                        {
                            "name": "give_asset",
                            "required": true,
                            "type": "str",
                            "description": "The asset that will be given in the trade (e.g. XCP)"
                        },
                        {
                            "name": "give_quantity",
                            "required": true,
                            "type": "int",
                            "description": "The quantity of the asset that will be given (in satoshis, hence integer) (e.g. 1000)"
                        },
                        {
                            "name": "get_asset",
                            "required": true,
                            "type": "str",
                            "description": "The asset that will be received in the trade (e.g. $ASSET_1)"
                        },
                        {
                            "name": "get_quantity",
                            "required": true,
                            "type": "int",
                            "description": "The quantity of the asset that will be received (in satoshis, hence integer) (e.g. 1000)"
                        },
                        {
                            "name": "expiration",
                            "required": true,
                            "type": "int",
                            "description": "The number of blocks for which the order should be valid (e.g. 100)"
                        },
                        {
                            "name": "fee_required",
                            "required": true,
                            "type": "int",
                            "description": "The miners\u2019 fee required to be paid by orders for them to match this one; in BTC; required only if buying BTC (may be zero, though) (e.g. 100)"
                        },
                        {
                            "name": "encoding",
                            "type": "str",
                            "default": "auto",
                            "description": "The encoding method to use",
                            "required": false
                        },
                        {
                            "name": "validate",
                            "type": "bool",
                            "default": true,
                            "description": "Validate the transaction",
                            "required": false
                        },
                        {
                            "name": "sat_per_vbyte",
                            "type": "float",
                            "default": null,
                            "description": "The fee per vbyte in satoshis",
                            "required": false
                        },
                        {
                            "name": "confirmation_target",
                            "type": "int",
                            "default": 3,
                            "description": "The number of blocks to target for confirmation",
                            "required": false
                        },
                        {
                            "name": "exact_fee",
                            "type": "int",
                            "default": null,
                            "description": "The exact fee to use in satoshis",
                            "required": false
                        },
                        {
                            "name": "max_fee",
                            "type": "int",
                            "default": null,
                            "description": "The maximum fee to use in satoshis",
                            "required": false
                        },
                        {
                            "name": "inputs_set",
                            "type": "str",
                            "default": null,
                            "description": "A comma-separated list of UTXOs (`<txid>:<vout>`) to use as inputs for the transaction being created. To speed up the composition you can also use the following format for utxos: `<txid>:<vout>:<value>:<script_pub_key>`.",
                            "required": false
                        },
                        {
                            "name": "allow_unconfirmed_inputs",
                            "type": "bool",
                            "default": false,
                            "description": "Set to true to allow this transaction to utilize unconfirmed UTXOs as inputs",
                            "required": false
                        },
                        {
                            "name": "exclude_utxos",
                            "type": "str",
                            "default": null,
                            "description": "A comma-separated list of UTXO txids to exclude when selecting UTXOs to use as inputs for the transaction being created",
                            "required": false
                        },
                        {
                            "name": "use_utxos_with_balances",
                            "type": "bool",
                            "default": false,
                            "description": "Use UTXO with balances",
                            "required": false
                        },
                        {
                            "name": "exclude_utxos_with_balances",
                            "type": "bool",
                            "default": false,
                            "description": "Exclude silently UTXO with balances instead of raising an exception. Important: the `exclude_utxos_with_balances` will not exclude unconfirmed `attach` and `utxomove`. You need to explicitly exclude them with the `exclude_utxos` parameter",
                            "required": false
                        },
                        {
                            "name": "disable_utxo_locks",
                            "type": "bool",
                            "default": false,
                            "description": "By default, UTXOs utilized when creating a transaction are 'locked' for a few seconds, to prevent a case where rapidly generating create_ calls reuse UTXOs due to their spent status not being updated in bitcoind yet. Specify true for this parameter to disable this behavior, and not temporarily lock UTXOs",
                            "required": false
                        },
                        {
                            "name": "use_all_inputs_set",
                            "type": "bool",
                            "default": false,
                            "description": "Use all UTXOs provide with `inputs_set` parameter",
                            "required": false
                        },
                        {
                            "name": "mutlisig_pubkey",
                            "type": "str",
                            "default": null,
                            "description": "The reedem public key to use for multisig encoding, by default it is searched for the source address",
                            "required": false
                        },
                        {
                            "name": "change_address",
                            "type": "str",
                            "default": null,
                            "description": "The address to send the change to",
                            "required": false
                        },
                        {
                            "name": "more_outputs",
                            "type": "str",
                            "default": null,
                            "description": "Additional outputs to include in the transaction in the format `<value>:<address>` or `<value>:<script>`",
                            "required": false
                        },
                        {
                            "name": "pubkeys",
                            "type": "str",
                            "default": null,
                            "description": "Pubkeys needed in case one or more destinations are multisig addresses",
                            "required": false
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": false,
                            "description": "Include additional information in the result including data and psbt",
                            "required": false
                        },
                        {
                            "name": "return_only_data",
                            "type": "bool",
                            "default": false,
                            "description": "Return only the data part of the transaction",
                            "required": false
                        },
                        {
                            "name": "fee_per_kb",
                            "type": "int",
                            "default": null,
                            "description": "Deprecated, use `sat_per_vbyte` instead",
                            "required": false
                        },
                        {
                            "name": "fee_provided",
                            "type": "int",
                            "default": null,
                            "description": "Deprecated, use `max_fee` instead",
                            "required": false
                        },
                        {
                            "name": "unspent_tx_hash",
                            "type": "str",
                            "default": null,
                            "description": "Deprecated, use `inputs_set` instead",
                            "required": false
                        },
                        {
                            "name": "dust_return_pubkey",
                            "type": "str",
                            "default": null,
                            "description": "Deprecated, use `mutlisig_pubkey` instead",
                            "required": false
                        },
                        {
                            "name": "return_psbt",
                            "type": "bool",
                            "default": false,
                            "description": "Deprecated, use `verbose` instead",
                            "required": false
                        },
                        {
                            "name": "regular_dust_size",
                            "type": "int",
                            "default": null,
                            "description": "Deprecated, automatically calculated",
                            "required": false
                        },
                        {
                            "name": "multisig_dust_size",
                            "type": "int",
                            "default": null,
                            "description": "Deprecated, automatically calculated",
                            "required": false
                        },
                        {
                            "name": "extended_tx_info",
                            "type": "bool",
                            "default": false,
                            "description": "Deprecated (API v1 only), use API v2 instead",
                            "required": false
                        },
                        {
                            "name": "old_style_api",
                            "type": "bool",
                            "default": false,
                            "description": "Deprecated (API v1 only), use API v2 instead",
                            "required": false
                        },
                        {
                            "name": "p2sh_pretx_txid",
                            "type": "str",
                            "default": null,
                            "description": "Ignored, P2SH disabled",
                            "required": false
                        },
                        {
                            "name": "segwit",
                            "type": "bool",
                            "default": false,
                            "description": "Ignored, Segwit automatically detected",
                            "required": false
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/addresses/<address>/compose/send": {
                    "function": "compose_send",
                    "description": "Composes a transaction to send a quantity of an asset to another address.",
                    "args": [
                        {
                            "name": "address",
                            "required": true,
                            "type": "str",
                            "description": "The address that will be sending (must have the necessary quantity of the specified asset) (e.g. $ADDRESS_1)"
                        },
                        {
                            "name": "destination",
                            "required": true,
                            "type": "str",
                            "description": "The address that will be receiving the asset (e.g. $ADDRESS_2)"
                        },
                        {
                            "name": "asset",
                            "required": true,
                            "type": "str",
                            "description": "The asset or subasset to send (e.g. XCP)"
                        },
                        {
                            "name": "quantity",
                            "required": true,
                            "type": "int",
                            "description": "The quantity of the asset to send (in satoshis, hence integer) (e.g. 1000)"
                        },
                        {
                            "name": "memo",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The Memo associated with this transaction"
                        },
                        {
                            "name": "memo_is_hex",
                            "default": false,
                            "required": false,
                            "type": "bool",
                            "description": "Whether the memo field is a hexadecimal string"
                        },
                        {
                            "name": "use_enhanced_send",
                            "default": true,
                            "required": false,
                            "type": "bool",
                            "description": "If this is false, the construct a legacy transaction sending bitcoin dust"
                        },
                        {
                            "name": "no_dispense",
                            "default": false,
                            "required": false,
                            "type": "bool",
                            "description": "don't compose a dispense transaction even if the destination is a dispenser"
                        },
                        {
                            "name": "encoding",
                            "type": "str",
                            "default": "auto",
                            "description": "The encoding method to use",
                            "required": false
                        },
                        {
                            "name": "validate",
                            "type": "bool",
                            "default": true,
                            "description": "Validate the transaction",
                            "required": false
                        },
                        {
                            "name": "sat_per_vbyte",
                            "type": "float",
                            "default": null,
                            "description": "The fee per vbyte in satoshis",
                            "required": false
                        },
                        {
                            "name": "confirmation_target",
                            "type": "int",
                            "default": 3,
                            "description": "The number of blocks to target for confirmation",
                            "required": false
                        },
                        {
                            "name": "exact_fee",
                            "type": "int",
                            "default": null,
                            "description": "The exact fee to use in satoshis",
                            "required": false
                        },
                        {
                            "name": "max_fee",
                            "type": "int",
                            "default": null,
                            "description": "The maximum fee to use in satoshis",
                            "required": false
                        },
                        {
                            "name": "inputs_set",
                            "type": "str",
                            "default": null,
                            "description": "A comma-separated list of UTXOs (`<txid>:<vout>`) to use as inputs for the transaction being created. To speed up the composition you can also use the following format for utxos: `<txid>:<vout>:<value>:<script_pub_key>`.",
                            "required": false
                        },
                        {
                            "name": "allow_unconfirmed_inputs",
                            "type": "bool",
                            "default": false,
                            "description": "Set to true to allow this transaction to utilize unconfirmed UTXOs as inputs",
                            "required": false
                        },
                        {
                            "name": "exclude_utxos",
                            "type": "str",
                            "default": null,
                            "description": "A comma-separated list of UTXO txids to exclude when selecting UTXOs to use as inputs for the transaction being created",
                            "required": false
                        },
                        {
                            "name": "use_utxos_with_balances",
                            "type": "bool",
                            "default": false,
                            "description": "Use UTXO with balances",
                            "required": false
                        },
                        {
                            "name": "exclude_utxos_with_balances",
                            "type": "bool",
                            "default": false,
                            "description": "Exclude silently UTXO with balances instead of raising an exception. Important: the `exclude_utxos_with_balances` will not exclude unconfirmed `attach` and `utxomove`. You need to explicitly exclude them with the `exclude_utxos` parameter",
                            "required": false
                        },
                        {
                            "name": "disable_utxo_locks",
                            "type": "bool",
                            "default": false,
                            "description": "By default, UTXOs utilized when creating a transaction are 'locked' for a few seconds, to prevent a case where rapidly generating create_ calls reuse UTXOs due to their spent status not being updated in bitcoind yet. Specify true for this parameter to disable this behavior, and not temporarily lock UTXOs",
                            "required": false
                        },
                        {
                            "name": "use_all_inputs_set",
                            "type": "bool",
                            "default": false,
                            "description": "Use all UTXOs provide with `inputs_set` parameter",
                            "required": false
                        },
                        {
                            "name": "mutlisig_pubkey",
                            "type": "str",
                            "default": null,
                            "description": "The reedem public key to use for multisig encoding, by default it is searched for the source address",
                            "required": false
                        },
                        {
                            "name": "change_address",
                            "type": "str",
                            "default": null,
                            "description": "The address to send the change to",
                            "required": false
                        },
                        {
                            "name": "more_outputs",
                            "type": "str",
                            "default": null,
                            "description": "Additional outputs to include in the transaction in the format `<value>:<address>` or `<value>:<script>`",
                            "required": false
                        },
                        {
                            "name": "pubkeys",
                            "type": "str",
                            "default": null,
                            "description": "Pubkeys needed in case one or more destinations are multisig addresses",
                            "required": false
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": false,
                            "description": "Include additional information in the result including data and psbt",
                            "required": false
                        },
                        {
                            "name": "return_only_data",
                            "type": "bool",
                            "default": false,
                            "description": "Return only the data part of the transaction",
                            "required": false
                        },
                        {
                            "name": "fee_per_kb",
                            "type": "int",
                            "default": null,
                            "description": "Deprecated, use `sat_per_vbyte` instead",
                            "required": false
                        },
                        {
                            "name": "fee_provided",
                            "type": "int",
                            "default": null,
                            "description": "Deprecated, use `max_fee` instead",
                            "required": false
                        },
                        {
                            "name": "unspent_tx_hash",
                            "type": "str",
                            "default": null,
                            "description": "Deprecated, use `inputs_set` instead",
                            "required": false
                        },
                        {
                            "name": "dust_return_pubkey",
                            "type": "str",
                            "default": null,
                            "description": "Deprecated, use `mutlisig_pubkey` instead",
                            "required": false
                        },
                        {
                            "name": "return_psbt",
                            "type": "bool",
                            "default": false,
                            "description": "Deprecated, use `verbose` instead",
                            "required": false
                        },
                        {
                            "name": "regular_dust_size",
                            "type": "int",
                            "default": null,
                            "description": "Deprecated, automatically calculated",
                            "required": false
                        },
                        {
                            "name": "multisig_dust_size",
                            "type": "int",
                            "default": null,
                            "description": "Deprecated, automatically calculated",
                            "required": false
                        },
                        {
                            "name": "extended_tx_info",
                            "type": "bool",
                            "default": false,
                            "description": "Deprecated (API v1 only), use API v2 instead",
                            "required": false
                        },
                        {
                            "name": "old_style_api",
                            "type": "bool",
                            "default": false,
                            "description": "Deprecated (API v1 only), use API v2 instead",
                            "required": false
                        },
                        {
                            "name": "p2sh_pretx_txid",
                            "type": "str",
                            "default": null,
                            "description": "Ignored, P2SH disabled",
                            "required": false
                        },
                        {
                            "name": "segwit",
                            "type": "bool",
                            "default": false,
                            "description": "Ignored, Segwit automatically detected",
                            "required": false
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/addresses/<address>/compose/sweep": {
                    "function": "compose_sweep",
                    "description": "Composes a transaction to Sends all assets and/or transfer ownerships to a destination address.",
                    "args": [
                        {
                            "name": "address",
                            "required": true,
                            "type": "str",
                            "description": "The address that will be sending (e.g. $ADDRESS_1)"
                        },
                        {
                            "name": "destination",
                            "required": true,
                            "type": "str",
                            "description": "The address to receive the assets and/or ownerships (e.g. $ADDRESS_2)"
                        },
                        {
                            "name": "flags",
                            "required": true,
                            "type": "int",
                            "description": "An OR mask of flags indicating how the sweep should be processed. Possible flags are:\n- FLAG_BALANCES: (integer) 1, specifies that all balances should be transferred.\n- FLAG_OWNERSHIP: (integer) 2, specifies that all ownerships should be transferred.\n- FLAG_BINARY_MEMO: (integer) 4, specifies that the memo is in binary/hex form.\n(e.g. 7)"
                        },
                        {
                            "name": "memo",
                            "required": true,
                            "type": "str",
                            "description": "The Memo associated with this transaction in hex format (e.g. FFFF)"
                        },
                        {
                            "name": "encoding",
                            "type": "str",
                            "default": "auto",
                            "description": "The encoding method to use",
                            "required": false
                        },
                        {
                            "name": "validate",
                            "type": "bool",
                            "default": true,
                            "description": "Validate the transaction",
                            "required": false
                        },
                        {
                            "name": "sat_per_vbyte",
                            "type": "float",
                            "default": null,
                            "description": "The fee per vbyte in satoshis",
                            "required": false
                        },
                        {
                            "name": "confirmation_target",
                            "type": "int",
                            "default": 3,
                            "description": "The number of blocks to target for confirmation",
                            "required": false
                        },
                        {
                            "name": "exact_fee",
                            "type": "int",
                            "default": null,
                            "description": "The exact fee to use in satoshis",
                            "required": false
                        },
                        {
                            "name": "max_fee",
                            "type": "int",
                            "default": null,
                            "description": "The maximum fee to use in satoshis",
                            "required": false
                        },
                        {
                            "name": "inputs_set",
                            "type": "str",
                            "default": null,
                            "description": "A comma-separated list of UTXOs (`<txid>:<vout>`) to use as inputs for the transaction being created. To speed up the composition you can also use the following format for utxos: `<txid>:<vout>:<value>:<script_pub_key>`.",
                            "required": false
                        },
                        {
                            "name": "allow_unconfirmed_inputs",
                            "type": "bool",
                            "default": false,
                            "description": "Set to true to allow this transaction to utilize unconfirmed UTXOs as inputs",
                            "required": false
                        },
                        {
                            "name": "exclude_utxos",
                            "type": "str",
                            "default": null,
                            "description": "A comma-separated list of UTXO txids to exclude when selecting UTXOs to use as inputs for the transaction being created",
                            "required": false
                        },
                        {
                            "name": "use_utxos_with_balances",
                            "type": "bool",
                            "default": false,
                            "description": "Use UTXO with balances",
                            "required": false
                        },
                        {
                            "name": "exclude_utxos_with_balances",
                            "type": "bool",
                            "default": false,
                            "description": "Exclude silently UTXO with balances instead of raising an exception. Important: the `exclude_utxos_with_balances` will not exclude unconfirmed `attach` and `utxomove`. You need to explicitly exclude them with the `exclude_utxos` parameter",
                            "required": false
                        },
                        {
                            "name": "disable_utxo_locks",
                            "type": "bool",
                            "default": false,
                            "description": "By default, UTXOs utilized when creating a transaction are 'locked' for a few seconds, to prevent a case where rapidly generating create_ calls reuse UTXOs due to their spent status not being updated in bitcoind yet. Specify true for this parameter to disable this behavior, and not temporarily lock UTXOs",
                            "required": false
                        },
                        {
                            "name": "use_all_inputs_set",
                            "type": "bool",
                            "default": false,
                            "description": "Use all UTXOs provide with `inputs_set` parameter",
                            "required": false
                        },
                        {
                            "name": "mutlisig_pubkey",
                            "type": "str",
                            "default": null,
                            "description": "The reedem public key to use for multisig encoding, by default it is searched for the source address",
                            "required": false
                        },
                        {
                            "name": "change_address",
                            "type": "str",
                            "default": null,
                            "description": "The address to send the change to",
                            "required": false
                        },
                        {
                            "name": "more_outputs",
                            "type": "str",
                            "default": null,
                            "description": "Additional outputs to include in the transaction in the format `<value>:<address>` or `<value>:<script>`",
                            "required": false
                        },
                        {
                            "name": "pubkeys",
                            "type": "str",
                            "default": null,
                            "description": "Pubkeys needed in case one or more destinations are multisig addresses",
                            "required": false
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": false,
                            "description": "Include additional information in the result including data and psbt",
                            "required": false
                        },
                        {
                            "name": "return_only_data",
                            "type": "bool",
                            "default": false,
                            "description": "Return only the data part of the transaction",
                            "required": false
                        },
                        {
                            "name": "fee_per_kb",
                            "type": "int",
                            "default": null,
                            "description": "Deprecated, use `sat_per_vbyte` instead",
                            "required": false
                        },
                        {
                            "name": "fee_provided",
                            "type": "int",
                            "default": null,
                            "description": "Deprecated, use `max_fee` instead",
                            "required": false
                        },
                        {
                            "name": "unspent_tx_hash",
                            "type": "str",
                            "default": null,
                            "description": "Deprecated, use `inputs_set` instead",
                            "required": false
                        },
                        {
                            "name": "dust_return_pubkey",
                            "type": "str",
                            "default": null,
                            "description": "Deprecated, use `mutlisig_pubkey` instead",
                            "required": false
                        },
                        {
                            "name": "return_psbt",
                            "type": "bool",
                            "default": false,
                            "description": "Deprecated, use `verbose` instead",
                            "required": false
                        },
                        {
                            "name": "regular_dust_size",
                            "type": "int",
                            "default": null,
                            "description": "Deprecated, automatically calculated",
                            "required": false
                        },
                        {
                            "name": "multisig_dust_size",
                            "type": "int",
                            "default": null,
                            "description": "Deprecated, automatically calculated",
                            "required": false
                        },
                        {
                            "name": "extended_tx_info",
                            "type": "bool",
                            "default": false,
                            "description": "Deprecated (API v1 only), use API v2 instead",
                            "required": false
                        },
                        {
                            "name": "old_style_api",
                            "type": "bool",
                            "default": false,
                            "description": "Deprecated (API v1 only), use API v2 instead",
                            "required": false
                        },
                        {
                            "name": "p2sh_pretx_txid",
                            "type": "str",
                            "default": null,
                            "description": "Ignored, P2SH disabled",
                            "required": false
                        },
                        {
                            "name": "segwit",
                            "type": "bool",
                            "default": false,
                            "description": "Ignored, Segwit automatically detected",
                            "required": false
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/addresses/<address>/compose/sweep/estimatexcpfees": {
                    "function": "get_sweep_estimate_xcp_fee",
                    "description": "Returns the estimated fee for sweeping all assets and/or transfer ownerships to a destination address.",
                    "args": [
                        {
                            "name": "address",
                            "required": true,
                            "type": "str",
                            "description": "The address that will be sweeping (e.g. $ADDRESS_1)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/addresses/<address>/compose/dispense": {
                    "function": "compose_dispense",
                    "description": "Composes a transaction to send BTC to a dispenser.",
                    "args": [
                        {
                            "name": "address",
                            "required": true,
                            "type": "str",
                            "description": "The address that will be sending (must have the necessary quantity of BTC) (e.g. $ADDRESS_1)"
                        },
                        {
                            "name": "dispenser",
                            "required": true,
                            "type": "str",
                            "description": "The dispenser that will be receiving the asset (e.g. $ADDRESS_4)"
                        },
                        {
                            "name": "quantity",
                            "required": true,
                            "type": "int",
                            "description": "The quantity of BTC to send (in satoshis, hence integer) (e.g. 1000)"
                        },
                        {
                            "name": "encoding",
                            "type": "str",
                            "default": "auto",
                            "description": "The encoding method to use",
                            "required": false
                        },
                        {
                            "name": "validate",
                            "type": "bool",
                            "default": true,
                            "description": "Validate the transaction",
                            "required": false
                        },
                        {
                            "name": "sat_per_vbyte",
                            "type": "float",
                            "default": null,
                            "description": "The fee per vbyte in satoshis",
                            "required": false
                        },
                        {
                            "name": "confirmation_target",
                            "type": "int",
                            "default": 3,
                            "description": "The number of blocks to target for confirmation",
                            "required": false
                        },
                        {
                            "name": "exact_fee",
                            "type": "int",
                            "default": null,
                            "description": "The exact fee to use in satoshis",
                            "required": false
                        },
                        {
                            "name": "max_fee",
                            "type": "int",
                            "default": null,
                            "description": "The maximum fee to use in satoshis",
                            "required": false
                        },
                        {
                            "name": "inputs_set",
                            "type": "str",
                            "default": null,
                            "description": "A comma-separated list of UTXOs (`<txid>:<vout>`) to use as inputs for the transaction being created. To speed up the composition you can also use the following format for utxos: `<txid>:<vout>:<value>:<script_pub_key>`.",
                            "required": false
                        },
                        {
                            "name": "allow_unconfirmed_inputs",
                            "type": "bool",
                            "default": false,
                            "description": "Set to true to allow this transaction to utilize unconfirmed UTXOs as inputs",
                            "required": false
                        },
                        {
                            "name": "exclude_utxos",
                            "type": "str",
                            "default": null,
                            "description": "A comma-separated list of UTXO txids to exclude when selecting UTXOs to use as inputs for the transaction being created",
                            "required": false
                        },
                        {
                            "name": "use_utxos_with_balances",
                            "type": "bool",
                            "default": false,
                            "description": "Use UTXO with balances",
                            "required": false
                        },
                        {
                            "name": "exclude_utxos_with_balances",
                            "type": "bool",
                            "default": false,
                            "description": "Exclude silently UTXO with balances instead of raising an exception. Important: the `exclude_utxos_with_balances` will not exclude unconfirmed `attach` and `utxomove`. You need to explicitly exclude them with the `exclude_utxos` parameter",
                            "required": false
                        },
                        {
                            "name": "disable_utxo_locks",
                            "type": "bool",
                            "default": false,
                            "description": "By default, UTXOs utilized when creating a transaction are 'locked' for a few seconds, to prevent a case where rapidly generating create_ calls reuse UTXOs due to their spent status not being updated in bitcoind yet. Specify true for this parameter to disable this behavior, and not temporarily lock UTXOs",
                            "required": false
                        },
                        {
                            "name": "use_all_inputs_set",
                            "type": "bool",
                            "default": false,
                            "description": "Use all UTXOs provide with `inputs_set` parameter",
                            "required": false
                        },
                        {
                            "name": "mutlisig_pubkey",
                            "type": "str",
                            "default": null,
                            "description": "The reedem public key to use for multisig encoding, by default it is searched for the source address",
                            "required": false
                        },
                        {
                            "name": "change_address",
                            "type": "str",
                            "default": null,
                            "description": "The address to send the change to",
                            "required": false
                        },
                        {
                            "name": "more_outputs",
                            "type": "str",
                            "default": null,
                            "description": "Additional outputs to include in the transaction in the format `<value>:<address>` or `<value>:<script>`",
                            "required": false
                        },
                        {
                            "name": "pubkeys",
                            "type": "str",
                            "default": null,
                            "description": "Pubkeys needed in case one or more destinations are multisig addresses",
                            "required": false
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": false,
                            "description": "Include additional information in the result including data and psbt",
                            "required": false
                        },
                        {
                            "name": "return_only_data",
                            "type": "bool",
                            "default": false,
                            "description": "Return only the data part of the transaction",
                            "required": false
                        },
                        {
                            "name": "fee_per_kb",
                            "type": "int",
                            "default": null,
                            "description": "Deprecated, use `sat_per_vbyte` instead",
                            "required": false
                        },
                        {
                            "name": "fee_provided",
                            "type": "int",
                            "default": null,
                            "description": "Deprecated, use `max_fee` instead",
                            "required": false
                        },
                        {
                            "name": "unspent_tx_hash",
                            "type": "str",
                            "default": null,
                            "description": "Deprecated, use `inputs_set` instead",
                            "required": false
                        },
                        {
                            "name": "dust_return_pubkey",
                            "type": "str",
                            "default": null,
                            "description": "Deprecated, use `mutlisig_pubkey` instead",
                            "required": false
                        },
                        {
                            "name": "return_psbt",
                            "type": "bool",
                            "default": false,
                            "description": "Deprecated, use `verbose` instead",
                            "required": false
                        },
                        {
                            "name": "regular_dust_size",
                            "type": "int",
                            "default": null,
                            "description": "Deprecated, automatically calculated",
                            "required": false
                        },
                        {
                            "name": "multisig_dust_size",
                            "type": "int",
                            "default": null,
                            "description": "Deprecated, automatically calculated",
                            "required": false
                        },
                        {
                            "name": "extended_tx_info",
                            "type": "bool",
                            "default": false,
                            "description": "Deprecated (API v1 only), use API v2 instead",
                            "required": false
                        },
                        {
                            "name": "old_style_api",
                            "type": "bool",
                            "default": false,
                            "description": "Deprecated (API v1 only), use API v2 instead",
                            "required": false
                        },
                        {
                            "name": "p2sh_pretx_txid",
                            "type": "str",
                            "default": null,
                            "description": "Ignored, P2SH disabled",
                            "required": false
                        },
                        {
                            "name": "segwit",
                            "type": "bool",
                            "default": false,
                            "description": "Ignored, Segwit automatically detected",
                            "required": false
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/addresses/<address>/compose/fairminter": {
                    "function": "compose_fairminter",
                    "description": "Composes a transaction to issue a new asset using the FairMinter protocol.",
                    "args": [
                        {
                            "name": "address",
                            "required": true,
                            "type": "str",
                            "description": "The address that will be issuing the asset (e.g. $ADDRESS_1)"
                        },
                        {
                            "name": "asset",
                            "required": true,
                            "type": "str",
                            "description": "The asset to issue (e.g. MYASSET)"
                        },
                        {
                            "name": "asset_parent",
                            "default": "",
                            "required": false,
                            "type": "str",
                            "description": "The parent asset of the asset to issue"
                        },
                        {
                            "name": "price",
                            "default": 0,
                            "required": false,
                            "type": "int",
                            "description": "The price in XCP of the asset to issue (e.g. 10)"
                        },
                        {
                            "name": "quantity_by_price",
                            "default": 1,
                            "required": false,
                            "type": "int",
                            "description": "The quantity of asset to mint per `price` paid"
                        },
                        {
                            "name": "max_mint_per_tx",
                            "default": 0,
                            "required": false,
                            "type": "int",
                            "description": "Amount minted if price is equal to 0; otherwise, maximum amount of asset that can be minted in a single transaction; if 0, there is no limit"
                        },
                        {
                            "name": "hard_cap",
                            "default": 0,
                            "required": false,
                            "type": "int",
                            "description": "The maximum amount of asset that can be minted; if 0 there is no limit"
                        },
                        {
                            "name": "premint_quantity",
                            "default": 0,
                            "required": false,
                            "type": "int",
                            "description": "Amount of asset to be minted when the sale starts, if 0, no premint; preminted assets are sent to the source of the transaction"
                        },
                        {
                            "name": "start_block",
                            "default": 0,
                            "required": false,
                            "type": "int",
                            "description": "The block at which the sale starts"
                        },
                        {
                            "name": "end_block",
                            "default": 0,
                            "required": false,
                            "type": "int",
                            "description": "The block at which the sale ends"
                        },
                        {
                            "name": "soft_cap",
                            "default": 0,
                            "required": false,
                            "type": "int",
                            "description": "Minimum amount of asset to be minted, if None, no minimum; if the soft cap is not reached by the soft_cap_deadline_block, the sale is canceled, asset is revoked from all minters and all payments are refunded"
                        },
                        {
                            "name": "soft_cap_deadline_block",
                            "default": 0,
                            "required": false,
                            "type": "int",
                            "description": "The block at which the soft cap must be reached"
                        },
                        {
                            "name": "minted_asset_commission",
                            "default": 0.0,
                            "required": false,
                            "type": "float",
                            "description": "Commission to be paid in minted asset, a fraction of 1 (i.e., 0.05 is five percent); the commission is deducted from the asset received by the minter and sent to the Fair Minter owner"
                        },
                        {
                            "name": "burn_payment",
                            "default": false,
                            "required": false,
                            "type": "bool",
                            "description": "If True, the payment asset is burned, otherwise it is sent to the source"
                        },
                        {
                            "name": "lock_description",
                            "default": false,
                            "required": false,
                            "type": "bool",
                            "description": "If True, the description of the asset is locked"
                        },
                        {
                            "name": "lock_quantity",
                            "default": false,
                            "required": false,
                            "type": "bool",
                            "description": "If True, the quantity of the asset cannot be changed after the minting"
                        },
                        {
                            "name": "divisible",
                            "default": true,
                            "required": false,
                            "type": "bool",
                            "description": "If True, the asset is divisible"
                        },
                        {
                            "name": "description",
                            "default": "",
                            "required": false,
                            "type": "str",
                            "description": "The description of the asset. Overrides the current description if the asset already exists."
                        },
                        {
                            "name": "encoding",
                            "type": "str",
                            "default": "auto",
                            "description": "The encoding method to use",
                            "required": false
                        },
                        {
                            "name": "validate",
                            "type": "bool",
                            "default": true,
                            "description": "Validate the transaction",
                            "required": false
                        },
                        {
                            "name": "sat_per_vbyte",
                            "type": "float",
                            "default": null,
                            "description": "The fee per vbyte in satoshis",
                            "required": false
                        },
                        {
                            "name": "confirmation_target",
                            "type": "int",
                            "default": 3,
                            "description": "The number of blocks to target for confirmation",
                            "required": false
                        },
                        {
                            "name": "exact_fee",
                            "type": "int",
                            "default": null,
                            "description": "The exact fee to use in satoshis",
                            "required": false
                        },
                        {
                            "name": "max_fee",
                            "type": "int",
                            "default": null,
                            "description": "The maximum fee to use in satoshis",
                            "required": false
                        },
                        {
                            "name": "inputs_set",
                            "type": "str",
                            "default": null,
                            "description": "A comma-separated list of UTXOs (`<txid>:<vout>`) to use as inputs for the transaction being created. To speed up the composition you can also use the following format for utxos: `<txid>:<vout>:<value>:<script_pub_key>`.",
                            "required": false
                        },
                        {
                            "name": "allow_unconfirmed_inputs",
                            "type": "bool",
                            "default": false,
                            "description": "Set to true to allow this transaction to utilize unconfirmed UTXOs as inputs",
                            "required": false
                        },
                        {
                            "name": "exclude_utxos",
                            "type": "str",
                            "default": null,
                            "description": "A comma-separated list of UTXO txids to exclude when selecting UTXOs to use as inputs for the transaction being created",
                            "required": false
                        },
                        {
                            "name": "use_utxos_with_balances",
                            "type": "bool",
                            "default": false,
                            "description": "Use UTXO with balances",
                            "required": false
                        },
                        {
                            "name": "exclude_utxos_with_balances",
                            "type": "bool",
                            "default": false,
                            "description": "Exclude silently UTXO with balances instead of raising an exception. Important: the `exclude_utxos_with_balances` will not exclude unconfirmed `attach` and `utxomove`. You need to explicitly exclude them with the `exclude_utxos` parameter",
                            "required": false
                        },
                        {
                            "name": "disable_utxo_locks",
                            "type": "bool",
                            "default": false,
                            "description": "By default, UTXOs utilized when creating a transaction are 'locked' for a few seconds, to prevent a case where rapidly generating create_ calls reuse UTXOs due to their spent status not being updated in bitcoind yet. Specify true for this parameter to disable this behavior, and not temporarily lock UTXOs",
                            "required": false
                        },
                        {
                            "name": "use_all_inputs_set",
                            "type": "bool",
                            "default": false,
                            "description": "Use all UTXOs provide with `inputs_set` parameter",
                            "required": false
                        },
                        {
                            "name": "mutlisig_pubkey",
                            "type": "str",
                            "default": null,
                            "description": "The reedem public key to use for multisig encoding, by default it is searched for the source address",
                            "required": false
                        },
                        {
                            "name": "change_address",
                            "type": "str",
                            "default": null,
                            "description": "The address to send the change to",
                            "required": false
                        },
                        {
                            "name": "more_outputs",
                            "type": "str",
                            "default": null,
                            "description": "Additional outputs to include in the transaction in the format `<value>:<address>` or `<value>:<script>`",
                            "required": false
                        },
                        {
                            "name": "pubkeys",
                            "type": "str",
                            "default": null,
                            "description": "Pubkeys needed in case one or more destinations are multisig addresses",
                            "required": false
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": false,
                            "description": "Include additional information in the result including data and psbt",
                            "required": false
                        },
                        {
                            "name": "return_only_data",
                            "type": "bool",
                            "default": false,
                            "description": "Return only the data part of the transaction",
                            "required": false
                        },
                        {
                            "name": "fee_per_kb",
                            "type": "int",
                            "default": null,
                            "description": "Deprecated, use `sat_per_vbyte` instead",
                            "required": false
                        },
                        {
                            "name": "fee_provided",
                            "type": "int",
                            "default": null,
                            "description": "Deprecated, use `max_fee` instead",
                            "required": false
                        },
                        {
                            "name": "unspent_tx_hash",
                            "type": "str",
                            "default": null,
                            "description": "Deprecated, use `inputs_set` instead",
                            "required": false
                        },
                        {
                            "name": "dust_return_pubkey",
                            "type": "str",
                            "default": null,
                            "description": "Deprecated, use `mutlisig_pubkey` instead",
                            "required": false
                        },
                        {
                            "name": "return_psbt",
                            "type": "bool",
                            "default": false,
                            "description": "Deprecated, use `verbose` instead",
                            "required": false
                        },
                        {
                            "name": "regular_dust_size",
                            "type": "int",
                            "default": null,
                            "description": "Deprecated, automatically calculated",
                            "required": false
                        },
                        {
                            "name": "multisig_dust_size",
                            "type": "int",
                            "default": null,
                            "description": "Deprecated, automatically calculated",
                            "required": false
                        },
                        {
                            "name": "extended_tx_info",
                            "type": "bool",
                            "default": false,
                            "description": "Deprecated (API v1 only), use API v2 instead",
                            "required": false
                        },
                        {
                            "name": "old_style_api",
                            "type": "bool",
                            "default": false,
                            "description": "Deprecated (API v1 only), use API v2 instead",
                            "required": false
                        },
                        {
                            "name": "p2sh_pretx_txid",
                            "type": "str",
                            "default": null,
                            "description": "Ignored, P2SH disabled",
                            "required": false
                        },
                        {
                            "name": "segwit",
                            "type": "bool",
                            "default": false,
                            "description": "Ignored, Segwit automatically detected",
                            "required": false
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/addresses/<address>/compose/fairmint": {
                    "function": "compose_fairmint",
                    "description": "Composes a transaction to mint a quantity of an asset using the FairMinter protocol.",
                    "args": [
                        {
                            "name": "address",
                            "required": true,
                            "type": "str",
                            "description": "The address that will be minting the asset (e.g. $ADDRESS_1)"
                        },
                        {
                            "name": "asset",
                            "required": true,
                            "type": "str",
                            "description": "The asset to mint (e.g. OPENFAIR)"
                        },
                        {
                            "name": "quantity",
                            "default": 0,
                            "required": false,
                            "type": "int",
                            "description": "The quantity of the asset to mint (in satoshis, hence integer)"
                        },
                        {
                            "name": "encoding",
                            "type": "str",
                            "default": "auto",
                            "description": "The encoding method to use",
                            "required": false
                        },
                        {
                            "name": "validate",
                            "type": "bool",
                            "default": true,
                            "description": "Validate the transaction",
                            "required": false
                        },
                        {
                            "name": "sat_per_vbyte",
                            "type": "float",
                            "default": null,
                            "description": "The fee per vbyte in satoshis",
                            "required": false
                        },
                        {
                            "name": "confirmation_target",
                            "type": "int",
                            "default": 3,
                            "description": "The number of blocks to target for confirmation",
                            "required": false
                        },
                        {
                            "name": "exact_fee",
                            "type": "int",
                            "default": null,
                            "description": "The exact fee to use in satoshis",
                            "required": false
                        },
                        {
                            "name": "max_fee",
                            "type": "int",
                            "default": null,
                            "description": "The maximum fee to use in satoshis",
                            "required": false
                        },
                        {
                            "name": "inputs_set",
                            "type": "str",
                            "default": null,
                            "description": "A comma-separated list of UTXOs (`<txid>:<vout>`) to use as inputs for the transaction being created. To speed up the composition you can also use the following format for utxos: `<txid>:<vout>:<value>:<script_pub_key>`.",
                            "required": false
                        },
                        {
                            "name": "allow_unconfirmed_inputs",
                            "type": "bool",
                            "default": false,
                            "description": "Set to true to allow this transaction to utilize unconfirmed UTXOs as inputs",
                            "required": false
                        },
                        {
                            "name": "exclude_utxos",
                            "type": "str",
                            "default": null,
                            "description": "A comma-separated list of UTXO txids to exclude when selecting UTXOs to use as inputs for the transaction being created",
                            "required": false
                        },
                        {
                            "name": "use_utxos_with_balances",
                            "type": "bool",
                            "default": false,
                            "description": "Use UTXO with balances",
                            "required": false
                        },
                        {
                            "name": "exclude_utxos_with_balances",
                            "type": "bool",
                            "default": false,
                            "description": "Exclude silently UTXO with balances instead of raising an exception. Important: the `exclude_utxos_with_balances` will not exclude unconfirmed `attach` and `utxomove`. You need to explicitly exclude them with the `exclude_utxos` parameter",
                            "required": false
                        },
                        {
                            "name": "disable_utxo_locks",
                            "type": "bool",
                            "default": false,
                            "description": "By default, UTXOs utilized when creating a transaction are 'locked' for a few seconds, to prevent a case where rapidly generating create_ calls reuse UTXOs due to their spent status not being updated in bitcoind yet. Specify true for this parameter to disable this behavior, and not temporarily lock UTXOs",
                            "required": false
                        },
                        {
                            "name": "use_all_inputs_set",
                            "type": "bool",
                            "default": false,
                            "description": "Use all UTXOs provide with `inputs_set` parameter",
                            "required": false
                        },
                        {
                            "name": "mutlisig_pubkey",
                            "type": "str",
                            "default": null,
                            "description": "The reedem public key to use for multisig encoding, by default it is searched for the source address",
                            "required": false
                        },
                        {
                            "name": "change_address",
                            "type": "str",
                            "default": null,
                            "description": "The address to send the change to",
                            "required": false
                        },
                        {
                            "name": "more_outputs",
                            "type": "str",
                            "default": null,
                            "description": "Additional outputs to include in the transaction in the format `<value>:<address>` or `<value>:<script>`",
                            "required": false
                        },
                        {
                            "name": "pubkeys",
                            "type": "str",
                            "default": null,
                            "description": "Pubkeys needed in case one or more destinations are multisig addresses",
                            "required": false
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": false,
                            "description": "Include additional information in the result including data and psbt",
                            "required": false
                        },
                        {
                            "name": "return_only_data",
                            "type": "bool",
                            "default": false,
                            "description": "Return only the data part of the transaction",
                            "required": false
                        },
                        {
                            "name": "fee_per_kb",
                            "type": "int",
                            "default": null,
                            "description": "Deprecated, use `sat_per_vbyte` instead",
                            "required": false
                        },
                        {
                            "name": "fee_provided",
                            "type": "int",
                            "default": null,
                            "description": "Deprecated, use `max_fee` instead",
                            "required": false
                        },
                        {
                            "name": "unspent_tx_hash",
                            "type": "str",
                            "default": null,
                            "description": "Deprecated, use `inputs_set` instead",
                            "required": false
                        },
                        {
                            "name": "dust_return_pubkey",
                            "type": "str",
                            "default": null,
                            "description": "Deprecated, use `mutlisig_pubkey` instead",
                            "required": false
                        },
                        {
                            "name": "return_psbt",
                            "type": "bool",
                            "default": false,
                            "description": "Deprecated, use `verbose` instead",
                            "required": false
                        },
                        {
                            "name": "regular_dust_size",
                            "type": "int",
                            "default": null,
                            "description": "Deprecated, automatically calculated",
                            "required": false
                        },
                        {
                            "name": "multisig_dust_size",
                            "type": "int",
                            "default": null,
                            "description": "Deprecated, automatically calculated",
                            "required": false
                        },
                        {
                            "name": "extended_tx_info",
                            "type": "bool",
                            "default": false,
                            "description": "Deprecated (API v1 only), use API v2 instead",
                            "required": false
                        },
                        {
                            "name": "old_style_api",
                            "type": "bool",
                            "default": false,
                            "description": "Deprecated (API v1 only), use API v2 instead",
                            "required": false
                        },
                        {
                            "name": "p2sh_pretx_txid",
                            "type": "str",
                            "default": null,
                            "description": "Ignored, P2SH disabled",
                            "required": false
                        },
                        {
                            "name": "segwit",
                            "type": "bool",
                            "default": false,
                            "description": "Ignored, Segwit automatically detected",
                            "required": false
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/addresses/<address>/compose/attach": {
                    "function": "compose_attach",
                    "description": "Composes a transaction to attach assets from an address to UTXO.\nWarning: after attaching assets to a UTXO, remember to use the `exclude_utxos` parameter to exclude it from subsequent transactions. This is done automatically by the Composer but only once the attach is confirmed.",
                    "args": [
                        {
                            "name": "address",
                            "required": true,
                            "type": "str",
                            "description": "The address from which the assets are attached (e.g. $ADDRESS_1)"
                        },
                        {
                            "name": "asset",
                            "required": true,
                            "type": "str",
                            "description": "The asset or subasset to attach (e.g. XCP)"
                        },
                        {
                            "name": "quantity",
                            "required": true,
                            "type": "int",
                            "description": "The quantity of the asset to attach (in satoshis, hence integer) (e.g. 1000)"
                        },
                        {
                            "name": "utxo_value",
                            "default": null,
                            "required": false,
                            "type": "int",
                            "description": "The value of the UTXO to attach the assets to (in satoshis, hence integer)"
                        },
                        {
                            "name": "destination_vout",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The vout of the destination output"
                        },
                        {
                            "name": "encoding",
                            "type": "str",
                            "default": "auto",
                            "description": "The encoding method to use",
                            "required": false
                        },
                        {
                            "name": "validate",
                            "type": "bool",
                            "default": true,
                            "description": "Validate the transaction",
                            "required": false
                        },
                        {
                            "name": "sat_per_vbyte",
                            "type": "float",
                            "default": null,
                            "description": "The fee per vbyte in satoshis",
                            "required": false
                        },
                        {
                            "name": "confirmation_target",
                            "type": "int",
                            "default": 3,
                            "description": "The number of blocks to target for confirmation",
                            "required": false
                        },
                        {
                            "name": "exact_fee",
                            "type": "int",
                            "default": null,
                            "description": "The exact fee to use in satoshis",
                            "required": false
                        },
                        {
                            "name": "max_fee",
                            "type": "int",
                            "default": null,
                            "description": "The maximum fee to use in satoshis",
                            "required": false
                        },
                        {
                            "name": "inputs_set",
                            "type": "str",
                            "default": null,
                            "description": "A comma-separated list of UTXOs (`<txid>:<vout>`) to use as inputs for the transaction being created. To speed up the composition you can also use the following format for utxos: `<txid>:<vout>:<value>:<script_pub_key>`.",
                            "required": false
                        },
                        {
                            "name": "allow_unconfirmed_inputs",
                            "type": "bool",
                            "default": false,
                            "description": "Set to true to allow this transaction to utilize unconfirmed UTXOs as inputs",
                            "required": false
                        },
                        {
                            "name": "exclude_utxos",
                            "type": "str",
                            "default": null,
                            "description": "A comma-separated list of UTXO txids to exclude when selecting UTXOs to use as inputs for the transaction being created",
                            "required": false
                        },
                        {
                            "name": "use_utxos_with_balances",
                            "type": "bool",
                            "default": false,
                            "description": "Use UTXO with balances",
                            "required": false
                        },
                        {
                            "name": "exclude_utxos_with_balances",
                            "type": "bool",
                            "default": false,
                            "description": "Exclude silently UTXO with balances instead of raising an exception. Important: the `exclude_utxos_with_balances` will not exclude unconfirmed `attach` and `utxomove`. You need to explicitly exclude them with the `exclude_utxos` parameter",
                            "required": false
                        },
                        {
                            "name": "disable_utxo_locks",
                            "type": "bool",
                            "default": false,
                            "description": "By default, UTXOs utilized when creating a transaction are 'locked' for a few seconds, to prevent a case where rapidly generating create_ calls reuse UTXOs due to their spent status not being updated in bitcoind yet. Specify true for this parameter to disable this behavior, and not temporarily lock UTXOs",
                            "required": false
                        },
                        {
                            "name": "use_all_inputs_set",
                            "type": "bool",
                            "default": false,
                            "description": "Use all UTXOs provide with `inputs_set` parameter",
                            "required": false
                        },
                        {
                            "name": "mutlisig_pubkey",
                            "type": "str",
                            "default": null,
                            "description": "The reedem public key to use for multisig encoding, by default it is searched for the source address",
                            "required": false
                        },
                        {
                            "name": "change_address",
                            "type": "str",
                            "default": null,
                            "description": "The address to send the change to",
                            "required": false
                        },
                        {
                            "name": "more_outputs",
                            "type": "str",
                            "default": null,
                            "description": "Additional outputs to include in the transaction in the format `<value>:<address>` or `<value>:<script>`",
                            "required": false
                        },
                        {
                            "name": "pubkeys",
                            "type": "str",
                            "default": null,
                            "description": "Pubkeys needed in case one or more destinations are multisig addresses",
                            "required": false
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": false,
                            "description": "Include additional information in the result including data and psbt",
                            "required": false
                        },
                        {
                            "name": "return_only_data",
                            "type": "bool",
                            "default": false,
                            "description": "Return only the data part of the transaction",
                            "required": false
                        },
                        {
                            "name": "fee_per_kb",
                            "type": "int",
                            "default": null,
                            "description": "Deprecated, use `sat_per_vbyte` instead",
                            "required": false
                        },
                        {
                            "name": "fee_provided",
                            "type": "int",
                            "default": null,
                            "description": "Deprecated, use `max_fee` instead",
                            "required": false
                        },
                        {
                            "name": "unspent_tx_hash",
                            "type": "str",
                            "default": null,
                            "description": "Deprecated, use `inputs_set` instead",
                            "required": false
                        },
                        {
                            "name": "dust_return_pubkey",
                            "type": "str",
                            "default": null,
                            "description": "Deprecated, use `mutlisig_pubkey` instead",
                            "required": false
                        },
                        {
                            "name": "return_psbt",
                            "type": "bool",
                            "default": false,
                            "description": "Deprecated, use `verbose` instead",
                            "required": false
                        },
                        {
                            "name": "regular_dust_size",
                            "type": "int",
                            "default": null,
                            "description": "Deprecated, automatically calculated",
                            "required": false
                        },
                        {
                            "name": "multisig_dust_size",
                            "type": "int",
                            "default": null,
                            "description": "Deprecated, automatically calculated",
                            "required": false
                        },
                        {
                            "name": "extended_tx_info",
                            "type": "bool",
                            "default": false,
                            "description": "Deprecated (API v1 only), use API v2 instead",
                            "required": false
                        },
                        {
                            "name": "old_style_api",
                            "type": "bool",
                            "default": false,
                            "description": "Deprecated (API v1 only), use API v2 instead",
                            "required": false
                        },
                        {
                            "name": "p2sh_pretx_txid",
                            "type": "str",
                            "default": null,
                            "description": "Ignored, P2SH disabled",
                            "required": false
                        },
                        {
                            "name": "segwit",
                            "type": "bool",
                            "default": false,
                            "description": "Ignored, Segwit automatically detected",
                            "required": false
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/addresses/<address>/compose/attach/estimatexcpfees": {
                    "function": "get_attach_estimate_xcp_fee",
                    "description": "Returns the estimated fee for attaching assets to a UTXO.",
                    "args": [
                        {
                            "name": "address",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The address from which the assets are attached (e.g. $ADDRESS_1)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/utxos/<utxo>/compose/detach": {
                    "function": "compose_detach",
                    "description": "Composes a transaction to detach assets from UTXO to an address.",
                    "args": [
                        {
                            "name": "utxo",
                            "required": true,
                            "type": "str",
                            "description": "The utxo from which the assets are detached (e.g. $UTXO_WITH_BALANCE)"
                        },
                        {
                            "name": "destination",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The address to detach the assets to, if not provided the addresse corresponding to the utxo is used (e.g. $ADDRESS_1)"
                        },
                        {
                            "name": "encoding",
                            "type": "str",
                            "default": "auto",
                            "description": "The encoding method to use",
                            "required": false
                        },
                        {
                            "name": "validate",
                            "type": "bool",
                            "default": true,
                            "description": "Validate the transaction",
                            "required": false
                        },
                        {
                            "name": "sat_per_vbyte",
                            "type": "float",
                            "default": null,
                            "description": "The fee per vbyte in satoshis",
                            "required": false
                        },
                        {
                            "name": "confirmation_target",
                            "type": "int",
                            "default": 3,
                            "description": "The number of blocks to target for confirmation",
                            "required": false
                        },
                        {
                            "name": "exact_fee",
                            "type": "int",
                            "default": null,
                            "description": "The exact fee to use in satoshis",
                            "required": false
                        },
                        {
                            "name": "max_fee",
                            "type": "int",
                            "default": null,
                            "description": "The maximum fee to use in satoshis",
                            "required": false
                        },
                        {
                            "name": "inputs_set",
                            "type": "str",
                            "default": null,
                            "description": "A comma-separated list of UTXOs (`<txid>:<vout>`) to use as inputs for the transaction being created. To speed up the composition you can also use the following format for utxos: `<txid>:<vout>:<value>:<script_pub_key>`.",
                            "required": false
                        },
                        {
                            "name": "allow_unconfirmed_inputs",
                            "type": "bool",
                            "default": false,
                            "description": "Set to true to allow this transaction to utilize unconfirmed UTXOs as inputs",
                            "required": false
                        },
                        {
                            "name": "exclude_utxos",
                            "type": "str",
                            "default": null,
                            "description": "A comma-separated list of UTXO txids to exclude when selecting UTXOs to use as inputs for the transaction being created",
                            "required": false
                        },
                        {
                            "name": "use_utxos_with_balances",
                            "type": "bool",
                            "default": false,
                            "description": "Use UTXO with balances",
                            "required": false
                        },
                        {
                            "name": "exclude_utxos_with_balances",
                            "type": "bool",
                            "default": false,
                            "description": "Exclude silently UTXO with balances instead of raising an exception. Important: the `exclude_utxos_with_balances` will not exclude unconfirmed `attach` and `utxomove`. You need to explicitly exclude them with the `exclude_utxos` parameter",
                            "required": false
                        },
                        {
                            "name": "disable_utxo_locks",
                            "type": "bool",
                            "default": false,
                            "description": "By default, UTXOs utilized when creating a transaction are 'locked' for a few seconds, to prevent a case where rapidly generating create_ calls reuse UTXOs due to their spent status not being updated in bitcoind yet. Specify true for this parameter to disable this behavior, and not temporarily lock UTXOs",
                            "required": false
                        },
                        {
                            "name": "use_all_inputs_set",
                            "type": "bool",
                            "default": false,
                            "description": "Use all UTXOs provide with `inputs_set` parameter",
                            "required": false
                        },
                        {
                            "name": "mutlisig_pubkey",
                            "type": "str",
                            "default": null,
                            "description": "The reedem public key to use for multisig encoding, by default it is searched for the source address",
                            "required": false
                        },
                        {
                            "name": "change_address",
                            "type": "str",
                            "default": null,
                            "description": "The address to send the change to",
                            "required": false
                        },
                        {
                            "name": "more_outputs",
                            "type": "str",
                            "default": null,
                            "description": "Additional outputs to include in the transaction in the format `<value>:<address>` or `<value>:<script>`",
                            "required": false
                        },
                        {
                            "name": "pubkeys",
                            "type": "str",
                            "default": null,
                            "description": "Pubkeys needed in case one or more destinations are multisig addresses",
                            "required": false
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": false,
                            "description": "Include additional information in the result including data and psbt",
                            "required": false
                        },
                        {
                            "name": "return_only_data",
                            "type": "bool",
                            "default": false,
                            "description": "Return only the data part of the transaction",
                            "required": false
                        },
                        {
                            "name": "fee_per_kb",
                            "type": "int",
                            "default": null,
                            "description": "Deprecated, use `sat_per_vbyte` instead",
                            "required": false
                        },
                        {
                            "name": "fee_provided",
                            "type": "int",
                            "default": null,
                            "description": "Deprecated, use `max_fee` instead",
                            "required": false
                        },
                        {
                            "name": "unspent_tx_hash",
                            "type": "str",
                            "default": null,
                            "description": "Deprecated, use `inputs_set` instead",
                            "required": false
                        },
                        {
                            "name": "dust_return_pubkey",
                            "type": "str",
                            "default": null,
                            "description": "Deprecated, use `mutlisig_pubkey` instead",
                            "required": false
                        },
                        {
                            "name": "return_psbt",
                            "type": "bool",
                            "default": false,
                            "description": "Deprecated, use `verbose` instead",
                            "required": false
                        },
                        {
                            "name": "regular_dust_size",
                            "type": "int",
                            "default": null,
                            "description": "Deprecated, automatically calculated",
                            "required": false
                        },
                        {
                            "name": "multisig_dust_size",
                            "type": "int",
                            "default": null,
                            "description": "Deprecated, automatically calculated",
                            "required": false
                        },
                        {
                            "name": "extended_tx_info",
                            "type": "bool",
                            "default": false,
                            "description": "Deprecated (API v1 only), use API v2 instead",
                            "required": false
                        },
                        {
                            "name": "old_style_api",
                            "type": "bool",
                            "default": false,
                            "description": "Deprecated (API v1 only), use API v2 instead",
                            "required": false
                        },
                        {
                            "name": "p2sh_pretx_txid",
                            "type": "str",
                            "default": null,
                            "description": "Ignored, P2SH disabled",
                            "required": false
                        },
                        {
                            "name": "segwit",
                            "type": "bool",
                            "default": false,
                            "description": "Ignored, Segwit automatically detected",
                            "required": false
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/utxos/<utxo>/compose/movetoutxo": {
                    "function": "compose_movetoutxo",
                    "description": "Composes a transaction like a send but for moving from one UTXO to another, with the destination is specified as an address.",
                    "args": [
                        {
                            "name": "utxo",
                            "required": true,
                            "type": "str",
                            "description": "The utxo from which the assets are moved (e.g. $UTXO_WITH_BALANCE)"
                        },
                        {
                            "name": "destination",
                            "required": true,
                            "type": "str",
                            "description": "the address for which the destination utxo will be created (e.g. $ADDRESS_1)"
                        },
                        {
                            "name": "utxo_value",
                            "default": null,
                            "required": false,
                            "type": "int",
                            "description": "The value of the UTXO to move the assets from (in satoshis, hence integer)"
                        },
                        {
                            "name": "encoding",
                            "type": "str",
                            "default": "auto",
                            "description": "The encoding method to use",
                            "required": false
                        },
                        {
                            "name": "validate",
                            "type": "bool",
                            "default": true,
                            "description": "Validate the transaction",
                            "required": false
                        },
                        {
                            "name": "sat_per_vbyte",
                            "type": "float",
                            "default": null,
                            "description": "The fee per vbyte in satoshis",
                            "required": false
                        },
                        {
                            "name": "confirmation_target",
                            "type": "int",
                            "default": 3,
                            "description": "The number of blocks to target for confirmation",
                            "required": false
                        },
                        {
                            "name": "exact_fee",
                            "type": "int",
                            "default": null,
                            "description": "The exact fee to use in satoshis",
                            "required": false
                        },
                        {
                            "name": "max_fee",
                            "type": "int",
                            "default": null,
                            "description": "The maximum fee to use in satoshis",
                            "required": false
                        },
                        {
                            "name": "inputs_set",
                            "type": "str",
                            "default": null,
                            "description": "A comma-separated list of UTXOs (`<txid>:<vout>`) to use as inputs for the transaction being created. To speed up the composition you can also use the following format for utxos: `<txid>:<vout>:<value>:<script_pub_key>`.",
                            "required": false
                        },
                        {
                            "name": "allow_unconfirmed_inputs",
                            "type": "bool",
                            "default": false,
                            "description": "Set to true to allow this transaction to utilize unconfirmed UTXOs as inputs",
                            "required": false
                        },
                        {
                            "name": "exclude_utxos",
                            "type": "str",
                            "default": null,
                            "description": "A comma-separated list of UTXO txids to exclude when selecting UTXOs to use as inputs for the transaction being created",
                            "required": false
                        },
                        {
                            "name": "use_utxos_with_balances",
                            "type": "bool",
                            "default": false,
                            "description": "Use UTXO with balances",
                            "required": false
                        },
                        {
                            "name": "exclude_utxos_with_balances",
                            "type": "bool",
                            "default": false,
                            "description": "Exclude silently UTXO with balances instead of raising an exception. Important: the `exclude_utxos_with_balances` will not exclude unconfirmed `attach` and `utxomove`. You need to explicitly exclude them with the `exclude_utxos` parameter",
                            "required": false
                        },
                        {
                            "name": "disable_utxo_locks",
                            "type": "bool",
                            "default": false,
                            "description": "By default, UTXOs utilized when creating a transaction are 'locked' for a few seconds, to prevent a case where rapidly generating create_ calls reuse UTXOs due to their spent status not being updated in bitcoind yet. Specify true for this parameter to disable this behavior, and not temporarily lock UTXOs",
                            "required": false
                        },
                        {
                            "name": "use_all_inputs_set",
                            "type": "bool",
                            "default": false,
                            "description": "Use all UTXOs provide with `inputs_set` parameter",
                            "required": false
                        },
                        {
                            "name": "mutlisig_pubkey",
                            "type": "str",
                            "default": null,
                            "description": "The reedem public key to use for multisig encoding, by default it is searched for the source address",
                            "required": false
                        },
                        {
                            "name": "change_address",
                            "type": "str",
                            "default": null,
                            "description": "The address to send the change to",
                            "required": false
                        },
                        {
                            "name": "more_outputs",
                            "type": "str",
                            "default": null,
                            "description": "Additional outputs to include in the transaction in the format `<value>:<address>` or `<value>:<script>`",
                            "required": false
                        },
                        {
                            "name": "pubkeys",
                            "type": "str",
                            "default": null,
                            "description": "Pubkeys needed in case one or more destinations are multisig addresses",
                            "required": false
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": false,
                            "description": "Include additional information in the result including data and psbt",
                            "required": false
                        },
                        {
                            "name": "return_only_data",
                            "type": "bool",
                            "default": false,
                            "description": "Return only the data part of the transaction",
                            "required": false
                        },
                        {
                            "name": "fee_per_kb",
                            "type": "int",
                            "default": null,
                            "description": "Deprecated, use `sat_per_vbyte` instead",
                            "required": false
                        },
                        {
                            "name": "fee_provided",
                            "type": "int",
                            "default": null,
                            "description": "Deprecated, use `max_fee` instead",
                            "required": false
                        },
                        {
                            "name": "unspent_tx_hash",
                            "type": "str",
                            "default": null,
                            "description": "Deprecated, use `inputs_set` instead",
                            "required": false
                        },
                        {
                            "name": "dust_return_pubkey",
                            "type": "str",
                            "default": null,
                            "description": "Deprecated, use `mutlisig_pubkey` instead",
                            "required": false
                        },
                        {
                            "name": "return_psbt",
                            "type": "bool",
                            "default": false,
                            "description": "Deprecated, use `verbose` instead",
                            "required": false
                        },
                        {
                            "name": "regular_dust_size",
                            "type": "int",
                            "default": null,
                            "description": "Deprecated, automatically calculated",
                            "required": false
                        },
                        {
                            "name": "multisig_dust_size",
                            "type": "int",
                            "default": null,
                            "description": "Deprecated, automatically calculated",
                            "required": false
                        },
                        {
                            "name": "extended_tx_info",
                            "type": "bool",
                            "default": false,
                            "description": "Deprecated (API v1 only), use API v2 instead",
                            "required": false
                        },
                        {
                            "name": "old_style_api",
                            "type": "bool",
                            "default": false,
                            "description": "Deprecated (API v1 only), use API v2 instead",
                            "required": false
                        },
                        {
                            "name": "p2sh_pretx_txid",
                            "type": "str",
                            "default": null,
                            "description": "Ignored, P2SH disabled",
                            "required": false
                        },
                        {
                            "name": "segwit",
                            "type": "bool",
                            "default": false,
                            "description": "Ignored, Segwit automatically detected",
                            "required": false
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/compose/attach/estimatexcpfees": {
                    "function": "get_attach_estimate_xcp_fee",
                    "description": "Returns the estimated fee for attaching assets to a UTXO.",
                    "args": [
                        {
                            "name": "address",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The address from which the assets are attached (e.g. $ADDRESS_1)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/assets": {
                    "function": "get_valid_assets",
                    "description": "Returns the valid assets",
                    "args": [
                        {
                            "name": "named",
                            "default": null,
                            "required": false,
                            "type": "bool",
                            "description": "Whether to return only named assets (e.g. true)"
                        },
                        {
                            "name": "cursor",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The last index of the assets to return"
                        },
                        {
                            "name": "limit",
                            "default": 100,
                            "required": false,
                            "type": "int",
                            "description": "The maximum number of assets to return (e.g. 5)"
                        },
                        {
                            "name": "offset",
                            "default": null,
                            "required": false,
                            "type": "int",
                            "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/assets/<asset>": {
                    "function": "get_asset",
                    "description": "Returns an asset by its name",
                    "args": [
                        {
                            "name": "asset",
                            "required": true,
                            "type": "str",
                            "description": "The name of the asset to return (e.g. $ASSET_1)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/assets/<asset>/balances": {
                    "function": "get_asset_balances",
                    "description": "Returns the asset balances",
                    "args": [
                        {
                            "name": "asset",
                            "required": true,
                            "type": "str",
                            "description": "The asset to return (e.g. $ASSET_1)"
                        },
                        {
                            "name": "type",
                            "default": "all",
                            "required": false,
                            "type": "enum[str]",
                            "members": [
                                "all",
                                "utxo",
                                "address"
                            ],
                            "description": "The type of balances to return"
                        },
                        {
                            "name": "cursor",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The last index of the balances to return"
                        },
                        {
                            "name": "limit",
                            "default": 100,
                            "required": false,
                            "type": "int",
                            "description": "The maximum number of balances to return (e.g. 5)"
                        },
                        {
                            "name": "offset",
                            "default": null,
                            "required": false,
                            "type": "int",
                            "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                        },
                        {
                            "name": "sort",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The sort order of the balances to return (overrides the `cursor` parameter) (e.g. quantity:desc)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/assets/<asset>/balances/<address>": {
                    "function": "get_balances_by_asset_and_address",
                    "description": "Returns the balances of an address and asset",
                    "args": [
                        {
                            "name": "asset",
                            "required": true,
                            "type": "str",
                            "description": "The asset to return (e.g. XCP)"
                        },
                        {
                            "name": "address",
                            "required": true,
                            "type": "str",
                            "description": "The address to return (e.g. $ADDRESS_1)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/assets/<asset>/orders": {
                    "function": "get_orders_by_asset",
                    "description": "Returns the orders of an asset",
                    "args": [
                        {
                            "name": "asset",
                            "required": true,
                            "type": "str",
                            "description": "The asset to return (e.g. XCP)"
                        },
                        {
                            "name": "status",
                            "default": "all",
                            "required": false,
                            "type": "enum[str]",
                            "members": [
                                "all",
                                "open",
                                "expired",
                                "filled",
                                "cancelled"
                            ],
                            "description": "The status of the orders to return"
                        },
                        {
                            "name": "get_asset",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The get asset to return"
                        },
                        {
                            "name": "give_asset",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The give asset to return"
                        },
                        {
                            "name": "cursor",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The last index of the orders to return"
                        },
                        {
                            "name": "limit",
                            "default": 100,
                            "required": false,
                            "type": "int",
                            "description": "The maximum number of orders to return (e.g. 5)"
                        },
                        {
                            "name": "offset",
                            "default": null,
                            "required": false,
                            "type": "int",
                            "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                        },
                        {
                            "name": "sort",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The sort order of the orders to return (overrides the `cursor` parameter) (e.g. expiration:desc)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/assets/<asset>/matches": {
                    "function": "get_order_matches_by_asset",
                    "description": "Returns the orders of an asset",
                    "args": [
                        {
                            "name": "asset",
                            "required": true,
                            "type": "str",
                            "description": "The asset to return (e.g. XCP)"
                        },
                        {
                            "name": "status",
                            "default": "all",
                            "required": false,
                            "type": "enum[str]",
                            "members": [
                                "all",
                                "pending",
                                "completed",
                                "expired"
                            ],
                            "description": "The status of the order matches to return"
                        },
                        {
                            "name": "forward_asset",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The forward asset to return"
                        },
                        {
                            "name": "backward_asset",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The backward asset to return"
                        },
                        {
                            "name": "block_index",
                            "default": null,
                            "required": false,
                            "type": "int",
                            "description": "The block index of the order matches to return"
                        },
                        {
                            "name": "cursor",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The last index of the order matches to return"
                        },
                        {
                            "name": "limit",
                            "default": 100,
                            "required": false,
                            "type": "int",
                            "description": "The maximum number of order matches to return (e.g. 5)"
                        },
                        {
                            "name": "offset",
                            "default": null,
                            "required": false,
                            "type": "int",
                            "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                        },
                        {
                            "name": "sort",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The sort order of the order matches to return (overrides the `cursor` parameter) (e.g. forward_quantity:desc)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/assets/<asset>/credits": {
                    "function": "get_credits_by_asset",
                    "description": "Returns the credits of an asset",
                    "args": [
                        {
                            "name": "asset",
                            "required": true,
                            "type": "str",
                            "description": "The asset to return (e.g. $ASSET_1)"
                        },
                        {
                            "name": "action",
                            "default": null,
                            "required": false,
                            "type": "enum[str]",
                            "members": [
                                null,
                                "Closed: Max dispenses reached",
                                "bet settled: for equal",
                                "bet settled: for notequal",
                                "bet settled: liquidated for bear",
                                "btcpay",
                                "burn",
                                "cancel order",
                                "close dispenser",
                                "dispense",
                                "dispenser close",
                                "dividend",
                                "feed fee",
                                "filled",
                                "issuance",
                                "mpma send",
                                "open dispenser empty addr",
                                "order cancelled",
                                "order expired",
                                "order match",
                                "recredit backward quantity",
                                "recredit forward quantity",
                                "recredit wager",
                                "recredit wager remaining",
                                "reset issuance",
                                "send",
                                "sweep",
                                "wins"
                            ],
                            "description": "The action to filter by"
                        },
                        {
                            "name": "cursor",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The last index of the credits to return"
                        },
                        {
                            "name": "limit",
                            "default": 100,
                            "required": false,
                            "type": "int",
                            "description": "The maximum number of credits to return (e.g. 5)"
                        },
                        {
                            "name": "offset",
                            "default": null,
                            "required": false,
                            "type": "int",
                            "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/assets/<asset>/debits": {
                    "function": "get_debits_by_asset",
                    "description": "Returns the debits of an asset",
                    "args": [
                        {
                            "name": "asset",
                            "required": true,
                            "type": "str",
                            "description": "The asset to return (e.g. XCP)"
                        },
                        {
                            "name": "action",
                            "default": null,
                            "required": false,
                            "type": "enum[str]",
                            "members": [
                                null,
                                "bet",
                                "destroy",
                                "dividend",
                                "dividend fee",
                                "issuance fee",
                                "mpma send",
                                "open RPS",
                                "open dispenser",
                                "open dispenser empty addr",
                                "open order",
                                "refill dispenser",
                                "reopen RPS after matching expiration",
                                "reset destroy",
                                "send",
                                "sweep",
                                "sweep fee"
                            ],
                            "description": "The action to filter by"
                        },
                        {
                            "name": "cursor",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The last index of the debits to return"
                        },
                        {
                            "name": "limit",
                            "default": 100,
                            "required": false,
                            "type": "int",
                            "description": "The maximum number of debits to return (e.g. 5)"
                        },
                        {
                            "name": "offset",
                            "default": null,
                            "required": false,
                            "type": "int",
                            "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/assets/<asset>/destructions": {
                    "function": "get_valid_destructions_by_asset",
                    "description": "Returns the destructions of a block",
                    "args": [
                        {
                            "name": "asset",
                            "required": true,
                            "type": "str",
                            "description": "The asset to return (e.g. XCP)"
                        },
                        {
                            "name": "cursor",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The last index of the destructions to return"
                        },
                        {
                            "name": "limit",
                            "default": 100,
                            "required": false,
                            "type": "int",
                            "description": "The maximum number of destructions to return (e.g. 5)"
                        },
                        {
                            "name": "offset",
                            "default": null,
                            "required": false,
                            "type": "int",
                            "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/assets/<asset>/dividends": {
                    "function": "get_dividends_by_asset",
                    "description": "Returns the dividends of an asset",
                    "args": [
                        {
                            "name": "asset",
                            "required": true,
                            "type": "str",
                            "description": "The asset to return (e.g. $ASSET_5)"
                        },
                        {
                            "name": "cursor",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The last index of the dividend to return"
                        },
                        {
                            "name": "limit",
                            "default": 100,
                            "required": false,
                            "type": "int",
                            "description": "The maximum number of dividend to return (e.g. 5)"
                        },
                        {
                            "name": "offset",
                            "default": null,
                            "required": false,
                            "type": "int",
                            "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/assets/<asset>/issuances": {
                    "function": "get_issuances_by_asset",
                    "description": "Returns the issuances of an asset",
                    "args": [
                        {
                            "name": "asset",
                            "required": true,
                            "type": "str",
                            "description": "The asset to return (e.g. $ASSET_1)"
                        },
                        {
                            "name": "asset_events",
                            "default": "all",
                            "required": false,
                            "type": "enum[str]",
                            "members": [
                                "all",
                                "creation",
                                "reissuance",
                                "lock_quantity",
                                "reset",
                                "change_description",
                                "transfer",
                                "open_fairminter",
                                "fairmint",
                                "lock_description"
                            ],
                            "description": "Filter result by one or several comma separated asset events"
                        },
                        {
                            "name": "cursor",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The last index of the issuances to return"
                        },
                        {
                            "name": "limit",
                            "default": 100,
                            "required": false,
                            "type": "int",
                            "description": "The maximum number of issuances to return (e.g. 5)"
                        },
                        {
                            "name": "offset",
                            "default": null,
                            "required": false,
                            "type": "int",
                            "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/assets/<asset>/sends": {
                    "function": "get_sends_by_asset",
                    "description": "Returns the sends, include Enhanced and MPMA sends, of an asset",
                    "args": [
                        {
                            "name": "asset",
                            "required": true,
                            "type": "str",
                            "description": "The asset to return (e.g. XCP)"
                        },
                        {
                            "name": "send_type",
                            "default": "all",
                            "required": false,
                            "type": "enum[str]",
                            "members": [
                                "all",
                                "send",
                                "attach",
                                "move",
                                "detach"
                            ],
                            "description": "The type of the send to return"
                        },
                        {
                            "name": "cursor",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The last index of the debits to return"
                        },
                        {
                            "name": "limit",
                            "default": 100,
                            "required": false,
                            "type": "int",
                            "description": "The maximum number of debits to return (e.g. 5)"
                        },
                        {
                            "name": "offset",
                            "default": null,
                            "required": false,
                            "type": "int",
                            "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/assets/<asset>/dispensers": {
                    "function": "get_dispensers_by_asset",
                    "description": "Returns the dispensers of an asset",
                    "args": [
                        {
                            "name": "asset",
                            "required": true,
                            "type": "str",
                            "description": "The asset to return (e.g. XCP)"
                        },
                        {
                            "name": "status",
                            "default": "all",
                            "required": false,
                            "type": "enum[str]",
                            "members": [
                                "all",
                                "open",
                                "closed",
                                "closing",
                                "open_empty_address"
                            ],
                            "description": "The status of the dispensers to return"
                        },
                        {
                            "name": "exclude_with_oracle",
                            "default": false,
                            "required": false,
                            "type": "bool",
                            "description": "Whether to exclude dispensers with an oracle"
                        },
                        {
                            "name": "cursor",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The last index of the dispensers to return"
                        },
                        {
                            "name": "limit",
                            "default": 100,
                            "required": false,
                            "type": "int",
                            "description": "The maximum number of dispensers to return (e.g. 5)"
                        },
                        {
                            "name": "offset",
                            "default": null,
                            "required": false,
                            "type": "int",
                            "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                        },
                        {
                            "name": "sort",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The sort order of the dispensers to return (overrides the `cursor` parameter) (e.g. give_quantity:desc)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/assets/<asset>/dispensers/<address>": {
                    "function": "get_dispenser_by_address_and_asset",
                    "description": "Returns the dispenser of an address and an asset",
                    "args": [
                        {
                            "name": "address",
                            "required": true,
                            "type": "str",
                            "description": "The address to return (e.g. $ADDRESS_1)"
                        },
                        {
                            "name": "asset",
                            "required": true,
                            "type": "str",
                            "description": "The asset to return (e.g. XCP)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/assets/<asset>/holders": {
                    "function": "get_asset_holders",
                    "description": "Returns the holders of an asset",
                    "args": [
                        {
                            "name": "asset",
                            "required": true,
                            "type": "str",
                            "description": "The asset to return (e.g. $ASSET_1)"
                        },
                        {
                            "name": "cursor",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The last index of the holder to return"
                        },
                        {
                            "name": "limit",
                            "default": 100,
                            "required": false,
                            "type": "int",
                            "description": "The maximum number of holders to return (e.g. 5)"
                        },
                        {
                            "name": "offset",
                            "default": null,
                            "required": false,
                            "type": "int",
                            "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                        },
                        {
                            "name": "sort",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The sort order of the holders to return (overrides the `cursor` parameter) (e.g. quantity:desc)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/assets/<asset>/dispenses": {
                    "function": "get_dispenses_by_asset",
                    "description": "Returns the dispenses of an asset",
                    "args": [
                        {
                            "name": "asset",
                            "required": true,
                            "type": "str",
                            "description": "The asset to return (e.g. XCP)"
                        },
                        {
                            "name": "block_index",
                            "default": null,
                            "required": false,
                            "type": "int",
                            "description": "The index of the block to return"
                        },
                        {
                            "name": "cursor",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The last index of the dispenses to return"
                        },
                        {
                            "name": "limit",
                            "default": 100,
                            "required": false,
                            "type": "int",
                            "description": "The maximum number of dispenses to return (e.g. 5)"
                        },
                        {
                            "name": "offset",
                            "default": null,
                            "required": false,
                            "type": "int",
                            "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/assets/<asset>/subassets": {
                    "function": "get_subassets_by_asset",
                    "description": "Returns asset subassets",
                    "args": [
                        {
                            "name": "asset",
                            "required": true,
                            "type": "str",
                            "description": "The name of the asset to return (e.g. $ASSET_7)"
                        },
                        {
                            "name": "cursor",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The last index of the assets to return"
                        },
                        {
                            "name": "limit",
                            "default": 100,
                            "required": false,
                            "type": "int",
                            "description": "The maximum number of assets to return (e.g. 5)"
                        },
                        {
                            "name": "offset",
                            "default": null,
                            "required": false,
                            "type": "int",
                            "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/assets/<asset>/fairminters": {
                    "function": "get_fairminters_by_asset",
                    "description": "Returns the fairminter by its asset",
                    "args": [
                        {
                            "name": "asset",
                            "required": true,
                            "type": "str",
                            "description": "The asset of the fairminter to return (e.g. $ASSET_1)"
                        },
                        {
                            "name": "status",
                            "default": "all",
                            "required": false,
                            "type": "enum[str]",
                            "members": [
                                "all",
                                "open",
                                "closed",
                                "pending"
                            ],
                            "description": "The status of the fairminters to return"
                        },
                        {
                            "name": "cursor",
                            "default": null,
                            "required": false,
                            "type": "str"
                        },
                        {
                            "name": "limit",
                            "default": 100,
                            "required": false,
                            "type": "int"
                        },
                        {
                            "name": "offset",
                            "default": null,
                            "required": false,
                            "type": "int"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/assets/<asset>/fairmints": {
                    "function": "get_fairmints_by_asset",
                    "description": "Returns the mints by asset",
                    "args": [
                        {
                            "name": "asset",
                            "required": true,
                            "type": "str",
                            "description": "The asset of the mints to return (e.g. $ASSET_1)"
                        },
                        {
                            "name": "cursor",
                            "default": null,
                            "required": false,
                            "type": "str"
                        },
                        {
                            "name": "limit",
                            "default": 100,
                            "required": false,
                            "type": "int"
                        },
                        {
                            "name": "offset",
                            "default": null,
                            "required": false,
                            "type": "int"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/assets/<asset>/fairmints/<address>": {
                    "function": "get_fairmints_by_address_and_asset",
                    "description": "Returns the mints by address and asset",
                    "args": [
                        {
                            "name": "address",
                            "required": true,
                            "type": "str",
                            "description": "The address of the mints to return (e.g. $ADDRESS_2)"
                        },
                        {
                            "name": "asset",
                            "required": true,
                            "type": "str",
                            "description": "The asset of the mints to return (e.g. $ASSET_1)"
                        },
                        {
                            "name": "cursor",
                            "default": null,
                            "required": false,
                            "type": "str"
                        },
                        {
                            "name": "limit",
                            "default": 100,
                            "required": false,
                            "type": "int"
                        },
                        {
                            "name": "offset",
                            "default": null,
                            "required": false,
                            "type": "int"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/orders": {
                    "function": "get_orders",
                    "description": "Returns all the orders",
                    "args": [
                        {
                            "name": "status",
                            "default": "all",
                            "required": false,
                            "type": "enum[str]",
                            "members": [
                                "all",
                                "open",
                                "expired",
                                "filled",
                                "cancelled"
                            ],
                            "description": "The status of the orders to return"
                        },
                        {
                            "name": "get_asset",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The get asset to return"
                        },
                        {
                            "name": "give_asset",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The give asset to return"
                        },
                        {
                            "name": "cursor",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The last index of the orders to return"
                        },
                        {
                            "name": "limit",
                            "default": 100,
                            "required": false,
                            "type": "int",
                            "description": "The maximum number of orders to return (e.g. 5)"
                        },
                        {
                            "name": "offset",
                            "default": null,
                            "required": false,
                            "type": "int",
                            "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                        },
                        {
                            "name": "sort",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The sort order of the orders to return (overrides the `cursor` parameter) (e.g. expiration:desc)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/orders/<order_hash>": {
                    "function": "get_order",
                    "description": "Returns the information of an order",
                    "args": [
                        {
                            "name": "order_hash",
                            "required": true,
                            "type": "str",
                            "description": "The hash of the transaction that created the order (e.g. $LAST_ORDER_TX_HASH)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/orders/<order_hash>/matches": {
                    "function": "get_order_matches_by_order",
                    "description": "Returns the order matches of an order",
                    "args": [
                        {
                            "name": "order_hash",
                            "required": true,
                            "type": "str",
                            "description": "The hash of the transaction that created the order (e.g. $ORDER_WITH_MATCH_HASH)"
                        },
                        {
                            "name": "status",
                            "default": "all",
                            "required": false,
                            "type": "enum[str]",
                            "members": [
                                "all",
                                "pending",
                                "completed",
                                "expired"
                            ],
                            "description": "The status of the order matches to return"
                        },
                        {
                            "name": "block_index",
                            "default": null,
                            "required": false,
                            "type": "int",
                            "description": "The block index of the order matches to return"
                        },
                        {
                            "name": "cursor",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The last index of the order matches to return"
                        },
                        {
                            "name": "limit",
                            "default": 100,
                            "required": false,
                            "type": "int",
                            "description": "The maximum number of order matches to return (e.g. 5)"
                        },
                        {
                            "name": "offset",
                            "default": null,
                            "required": false,
                            "type": "int",
                            "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                        },
                        {
                            "name": "sort",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The sort order of the order matches to return (overrides the `cursor` parameter) (e.g. forward_quantity:desc)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/orders/<order_hash>/btcpays": {
                    "function": "get_btcpays_by_order",
                    "description": "Returns the BTC pays of an order",
                    "args": [
                        {
                            "name": "order_hash",
                            "required": true,
                            "type": "str",
                            "description": "The hash of the transaction that created the order (e.g. $ORDER_WITH_BTCPAY_HASH)"
                        },
                        {
                            "name": "cursor",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The last index of the resolutions to return"
                        },
                        {
                            "name": "limit",
                            "default": 100,
                            "required": false,
                            "type": "int",
                            "description": "The maximum number of resolutions to return (e.g. 5)"
                        },
                        {
                            "name": "offset",
                            "default": null,
                            "required": false,
                            "type": "int",
                            "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/orders/<asset1>/<asset2>": {
                    "function": "get_orders_by_two_assets",
                    "description": "Returns the orders to exchange two assets",
                    "args": [
                        {
                            "name": "asset1",
                            "required": true,
                            "type": "str",
                            "description": "The first asset to return (e.g. BTC)"
                        },
                        {
                            "name": "asset2",
                            "required": true,
                            "type": "str",
                            "description": "The second asset to return (e.g. XCP)"
                        },
                        {
                            "name": "status",
                            "default": "all",
                            "required": false,
                            "type": "enum[str]",
                            "members": [
                                "all",
                                "open",
                                "expired",
                                "filled",
                                "cancelled"
                            ],
                            "description": "The status of the orders to return"
                        },
                        {
                            "name": "cursor",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The last index of the orders to return"
                        },
                        {
                            "name": "limit",
                            "default": 100,
                            "required": false,
                            "type": "int",
                            "description": "The maximum number of orders to return (e.g. 5)"
                        },
                        {
                            "name": "offset",
                            "default": null,
                            "required": false,
                            "type": "int",
                            "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                        },
                        {
                            "name": "sort",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The sort order of the orders to return (overrides the `cursor` parameter) (e.g. expiration:desc)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/orders/<asset1>/<asset2>/matches": {
                    "function": "get_order_matches_by_two_assets",
                    "description": "Returns the orders to exchange two assets",
                    "args": [
                        {
                            "name": "asset1",
                            "required": true,
                            "type": "str",
                            "description": "The first asset to return (e.g. BTC)"
                        },
                        {
                            "name": "asset2",
                            "required": true,
                            "type": "str",
                            "description": "The second asset to return (e.g. XCP)"
                        },
                        {
                            "name": "status",
                            "default": "all",
                            "required": false,
                            "type": "enum[str]",
                            "members": [
                                "all",
                                "pending",
                                "completed",
                                "expired"
                            ],
                            "description": "The status of the order matches to return"
                        },
                        {
                            "name": "block_index",
                            "default": null,
                            "required": false,
                            "type": "int",
                            "description": "The block index of the order matches to return"
                        },
                        {
                            "name": "cursor",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The last index of the order matches to return"
                        },
                        {
                            "name": "limit",
                            "default": 100,
                            "required": false,
                            "type": "int",
                            "description": "The maximum number of order matches to return (e.g. 5)"
                        },
                        {
                            "name": "offset",
                            "default": null,
                            "required": false,
                            "type": "int",
                            "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                        },
                        {
                            "name": "sort",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The sort order of the order matches to return (overrides the `cursor` parameter) (e.g. forward_quantity:desc)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/order_matches": {
                    "function": "get_all_order_matches",
                    "description": "Returns all the order matches",
                    "args": [
                        {
                            "name": "status",
                            "default": "all",
                            "required": false,
                            "type": "enum[str]",
                            "members": [
                                "all",
                                "pending",
                                "completed",
                                "expired"
                            ],
                            "description": "The status of the order matches to return"
                        },
                        {
                            "name": "block_index",
                            "default": null,
                            "required": false,
                            "type": "int",
                            "description": "The block index of the order matches to return"
                        },
                        {
                            "name": "cursor",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The last index of the order matches to return"
                        },
                        {
                            "name": "limit",
                            "default": 100,
                            "required": false,
                            "type": "int",
                            "description": "The maximum number of order matches to return (e.g. 5)"
                        },
                        {
                            "name": "offset",
                            "default": null,
                            "required": false,
                            "type": "int",
                            "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                        },
                        {
                            "name": "sort",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The sort order of the order matches to return (overrides the `cursor` parameter) (e.g. forward_quantity:desc)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/bets": {
                    "function": "get_bets",
                    "description": "Returns the bets of a feed",
                    "args": [
                        {
                            "name": "status",
                            "default": "open",
                            "required": false,
                            "type": "enum[str]",
                            "members": [
                                "cancelled",
                                "dropped",
                                "expired",
                                "filled",
                                "open"
                            ],
                            "description": "The status of the bet (e.g. filled)"
                        },
                        {
                            "name": "cursor",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The last index of the bets to return"
                        },
                        {
                            "name": "limit",
                            "default": 100,
                            "required": false,
                            "type": "int",
                            "description": "The maximum number of bets to return (e.g. 5)"
                        },
                        {
                            "name": "offset",
                            "default": null,
                            "required": false,
                            "type": "int",
                            "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/bets/<bet_hash>": {
                    "function": "get_bet",
                    "description": "Returns the information of a bet",
                    "args": [
                        {
                            "name": "bet_hash",
                            "required": true,
                            "type": "str",
                            "description": "The hash of the transaction that created the bet (e.g. 5d097b4729cb74d927b4458d365beb811a26fcee7f8712f049ecbe780eb496ed)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/bets/<bet_hash>/matches": {
                    "function": "get_bet_matches_by_bet",
                    "description": "Returns the bet matches of a bet",
                    "args": [
                        {
                            "name": "bet_hash",
                            "required": true,
                            "type": "str",
                            "description": "The hash of the transaction that created the bet (e.g. 5d097b4729cb74d927b4458d365beb811a26fcee7f8712f049ecbe780eb496ed)"
                        },
                        {
                            "name": "status",
                            "default": "pending",
                            "required": false,
                            "type": "enum[str]",
                            "members": [
                                "dropped",
                                "expired",
                                "pending",
                                "settled: for equal",
                                "settled: for notequal",
                                "settled: liquidated for bear"
                            ],
                            "description": "The status of the bet matches (e.g. expired)"
                        },
                        {
                            "name": "cursor",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The last index of the bet matches to return"
                        },
                        {
                            "name": "limit",
                            "default": 100,
                            "required": false,
                            "type": "int",
                            "description": "The maximum number of bet matches to return (e.g. 5)"
                        },
                        {
                            "name": "offset",
                            "default": null,
                            "required": false,
                            "type": "int",
                            "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/bets/<bet_hash>/resolutions": {
                    "function": "get_resolutions_by_bet",
                    "description": "Returns the resolutions of a bet",
                    "args": [
                        {
                            "name": "bet_hash",
                            "required": true,
                            "type": "str",
                            "description": "The hash of the transaction that created the bet (e.g. 36bbbb7dbd85054dac140a8ad8204eda2ee859545528bd2a9da69ad77c277ace)"
                        },
                        {
                            "name": "cursor",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The last index of the resolutions to return"
                        },
                        {
                            "name": "limit",
                            "default": 100,
                            "required": false,
                            "type": "int",
                            "description": "The maximum number of resolutions to return (e.g. 5)"
                        },
                        {
                            "name": "offset",
                            "default": null,
                            "required": false,
                            "type": "int",
                            "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/burns": {
                    "function": "get_all_burns",
                    "description": "Returns the burns",
                    "args": [
                        {
                            "name": "cursor",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The last index of the burns to return"
                        },
                        {
                            "name": "limit",
                            "default": 100,
                            "required": false,
                            "type": "int",
                            "description": "The maximum number of burns to return (e.g. 5)"
                        },
                        {
                            "name": "offset",
                            "default": null,
                            "required": false,
                            "type": "int",
                            "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/dispensers": {
                    "function": "get_dispensers",
                    "description": "Returns all dispensers",
                    "args": [
                        {
                            "name": "status",
                            "default": "all",
                            "required": false,
                            "type": "enum[str]",
                            "members": [
                                "all",
                                "open",
                                "closed",
                                "closing",
                                "open_empty_address"
                            ],
                            "description": "The status of the dispensers to return"
                        },
                        {
                            "name": "exclude_with_oracle",
                            "default": false,
                            "required": false,
                            "type": "bool",
                            "description": "Whether to exclude dispensers with an oracle"
                        },
                        {
                            "name": "cursor",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The last index of the dispensers to return"
                        },
                        {
                            "name": "limit",
                            "default": 100,
                            "required": false,
                            "type": "int",
                            "description": "The maximum number of dispensers to return (e.g. 5)"
                        },
                        {
                            "name": "offset",
                            "default": null,
                            "required": false,
                            "type": "int",
                            "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                        },
                        {
                            "name": "sort",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The sort order of the dispensers to return (overrides the `cursor` parameter) (e.g. block_index:asc)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/dispensers/<dispenser_hash>": {
                    "function": "get_dispenser_info_by_hash",
                    "description": "Returns the dispenser information by tx_hash",
                    "args": [
                        {
                            "name": "dispenser_hash",
                            "required": true,
                            "type": "str",
                            "description": "The hash of the dispenser to return (e.g. $DISPENSER_TX_HASH_1)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/dispensers/<dispenser_hash>/dispenses": {
                    "function": "get_dispenses_by_dispenser",
                    "description": "Returns the dispenses of a dispenser",
                    "args": [
                        {
                            "name": "dispenser_hash",
                            "required": true,
                            "type": "str",
                            "description": "The hash of the dispenser to return (e.g. $DISPENSER_TX_HASH_1)"
                        },
                        {
                            "name": "cursor",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The last index of the dispenses to return"
                        },
                        {
                            "name": "limit",
                            "default": 100,
                            "required": false,
                            "type": "int",
                            "description": "The maximum number of dispenses to return (e.g. 5)"
                        },
                        {
                            "name": "offset",
                            "default": null,
                            "required": false,
                            "type": "int",
                            "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/dividends": {
                    "function": "get_dividends",
                    "description": "Returns all the dividends",
                    "args": [
                        {
                            "name": "cursor",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The last index of the dividend to return"
                        },
                        {
                            "name": "limit",
                            "default": 100,
                            "required": false,
                            "type": "int",
                            "description": "The maximum number of dividend to return (e.g. 5)"
                        },
                        {
                            "name": "offset",
                            "default": null,
                            "required": false,
                            "type": "int",
                            "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/dividends/<dividend_hash>": {
                    "function": "get_dividend",
                    "description": "Returns a dividend by its hash",
                    "args": [
                        {
                            "name": "dividend_hash",
                            "required": true,
                            "type": "str",
                            "description": "The hash of the dividend to return (e.g. $LAST_DIVIDEND_TX_HASH)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/dividends/<dividend_hash>/credits": {
                    "function": "get_dividend_disribution",
                    "description": "Returns a dividend distribution by its hash",
                    "args": [
                        {
                            "name": "dividend_hash",
                            "required": true,
                            "type": "str",
                            "description": "The hash of the dividend distribution to return (e.g. $LAST_DIVIDEND_TX_HASH)"
                        },
                        {
                            "name": "cursor",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The last index of the credit to return"
                        },
                        {
                            "name": "limit",
                            "default": 100,
                            "required": false,
                            "type": "int",
                            "description": "The maximum number of credit to return (e.g. 5)"
                        },
                        {
                            "name": "offset",
                            "default": null,
                            "required": false,
                            "type": "int",
                            "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/events": {
                    "function": "get_all_events",
                    "description": "Returns all events",
                    "args": [
                        {
                            "name": "event_name",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "Comma separated list of events to return"
                        },
                        {
                            "name": "cursor",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The last event index to return (e.g. $LAST_EVENT_INDEX)"
                        },
                        {
                            "name": "limit",
                            "default": 100,
                            "required": false,
                            "type": "int",
                            "description": "The maximum number of events to return (e.g. 5)"
                        },
                        {
                            "name": "offset",
                            "default": null,
                            "required": false,
                            "type": "int",
                            "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/events/<int:event_index>": {
                    "function": "get_event_by_index",
                    "description": "Returns the event of an index",
                    "args": [
                        {
                            "name": "event_index",
                            "required": true,
                            "type": "int",
                            "description": "The index of the event to return (e.g. $LAST_EVENT_INDEX)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/events/counts": {
                    "function": "get_all_events_counts",
                    "description": "Returns the event counts of all blocks",
                    "args": [
                        {
                            "name": "cursor",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The last event index to return"
                        },
                        {
                            "name": "limit",
                            "default": 100,
                            "required": false,
                            "type": "int",
                            "description": "The maximum number of events to return (e.g. 5)"
                        },
                        {
                            "name": "offset",
                            "default": null,
                            "required": false,
                            "type": "int",
                            "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/events/<event>": {
                    "function": "get_events_by_name",
                    "description": "Returns the events filtered by event name",
                    "args": [
                        {
                            "name": "event",
                            "required": true,
                            "type": "str",
                            "description": "The event to return (e.g. CREDIT)"
                        },
                        {
                            "name": "cursor",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The last event index to return (e.g. $LAST_EVENT_INDEX)"
                        },
                        {
                            "name": "limit",
                            "default": 100,
                            "required": false,
                            "type": "int",
                            "description": "The maximum number of events to return (e.g. 5)"
                        },
                        {
                            "name": "offset",
                            "default": null,
                            "required": false,
                            "type": "int",
                            "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/events/<event>/count": {
                    "function": "get_event_count",
                    "description": "Returns the number of events",
                    "args": [
                        {
                            "name": "event",
                            "required": true,
                            "type": "str",
                            "description": "The name of the event to return (e.g. CREDIT)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/destructions": {
                    "function": "get_all_valid_destructions",
                    "description": "Returns the destructions of a block",
                    "args": [
                        {
                            "name": "cursor",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The last index of the destructions to return"
                        },
                        {
                            "name": "limit",
                            "default": 100,
                            "required": false,
                            "type": "int",
                            "description": "The maximum number of destructions to return (e.g. 5)"
                        },
                        {
                            "name": "offset",
                            "default": null,
                            "required": false,
                            "type": "int",
                            "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/dispenses": {
                    "function": "get_dispenses",
                    "description": "Returns all the dispenses",
                    "args": [
                        {
                            "name": "cursor",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The last index of the dispenses to return"
                        },
                        {
                            "name": "limit",
                            "default": 100,
                            "required": false,
                            "type": "int",
                            "description": "The maximum number of dispenses to return (e.g. 5)"
                        },
                        {
                            "name": "offset",
                            "default": null,
                            "required": false,
                            "type": "int",
                            "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/dispenses/<tx_hash>": {
                    "function": "get_dispense",
                    "description": "Returns all the dispenses",
                    "args": [
                        {
                            "name": "tx_hash",
                            "required": true,
                            "type": "str",
                            "description": "The hash of the transaction to return"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/sends": {
                    "function": "get_sends",
                    "description": "Returns all the sends include Enhanced and MPMA sends",
                    "args": [
                        {
                            "name": "send_type",
                            "default": "all",
                            "required": false,
                            "type": "enum[str]",
                            "members": [
                                "all",
                                "send",
                                "attach",
                                "move",
                                "detach"
                            ],
                            "description": "The type of the send to return"
                        },
                        {
                            "name": "cursor",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The last index of the debits to return"
                        },
                        {
                            "name": "limit",
                            "default": 100,
                            "required": false,
                            "type": "int",
                            "description": "The maximum number of debits to return (e.g. 5)"
                        },
                        {
                            "name": "offset",
                            "default": null,
                            "required": false,
                            "type": "int",
                            "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/issuances": {
                    "function": "get_issuances",
                    "description": "Returns all the issuances",
                    "args": [
                        {
                            "name": "asset_events",
                            "default": "all",
                            "required": false,
                            "type": "enum[str]",
                            "members": [
                                "all",
                                "creation",
                                "reissuance",
                                "lock_quantity",
                                "reset",
                                "change_description",
                                "transfer",
                                "open_fairminter",
                                "fairmint",
                                "lock_description"
                            ],
                            "description": "Filter result by one or several comma separated asset events"
                        },
                        {
                            "name": "cursor",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The last index of the issuances to return"
                        },
                        {
                            "name": "limit",
                            "default": 100,
                            "required": false,
                            "type": "int",
                            "description": "The maximum number of issuances to return (e.g. 5)"
                        },
                        {
                            "name": "offset",
                            "default": null,
                            "required": false,
                            "type": "int",
                            "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/issuances/<tx_hash>": {
                    "function": "get_issuance_by_transaction_hash",
                    "description": "Returns the issuances of a block",
                    "args": [
                        {
                            "name": "tx_hash",
                            "required": true,
                            "type": "str",
                            "description": "The hash of the transaction to return (e.g. $LAST_ISSUANCE_TX_HASH)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/sweeps": {
                    "function": "get_sweeps",
                    "description": "Returns all sweeps",
                    "args": [
                        {
                            "name": "cursor",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The last index of the sweeps to return"
                        },
                        {
                            "name": "limit",
                            "default": 100,
                            "required": false,
                            "type": "int",
                            "description": "The maximum number of sweeps to return (e.g. 5)"
                        },
                        {
                            "name": "offset",
                            "default": null,
                            "required": false,
                            "type": "int",
                            "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/sweeps/<tx_hash>": {
                    "function": "get_sweep_by_transaction_hash",
                    "description": "Returns the sweeps of a transaction",
                    "args": [
                        {
                            "name": "tx_hash",
                            "required": true,
                            "type": "str",
                            "description": "The hash of the transaction to return (e.g. $LAST_SWEEP_TX_HASH)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/broadcasts": {
                    "function": "get_valid_broadcasts",
                    "description": "Returns all valid broadcasts",
                    "args": [
                        {
                            "name": "cursor",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The last index of the broadcasts to return"
                        },
                        {
                            "name": "limit",
                            "default": 100,
                            "required": false,
                            "type": "int",
                            "description": "The maximum number of broadcasts to return (e.g. 5)"
                        },
                        {
                            "name": "offset",
                            "default": null,
                            "required": false,
                            "type": "int",
                            "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/broadcasts/<tx_hash>": {
                    "function": "get_broadcast_by_transaction_hash",
                    "description": "Returns the broadcast of a transaction",
                    "args": [
                        {
                            "name": "tx_hash",
                            "required": true,
                            "type": "str",
                            "description": "The hash of the transaction to return (e.g. $LAST_BROADCAST_TX_HASH)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/fairminters": {
                    "function": "get_all_fairminters",
                    "description": "Returns all fairminters",
                    "args": [
                        {
                            "name": "status",
                            "default": "all",
                            "required": false,
                            "type": "enum[str]",
                            "members": [
                                "all",
                                "open",
                                "closed",
                                "pending"
                            ],
                            "description": "The status of the fairminters to return"
                        },
                        {
                            "name": "cursor",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The last index of the fairminter to return"
                        },
                        {
                            "name": "limit",
                            "default": 100,
                            "required": false,
                            "type": "int",
                            "description": "The maximum number of fairminter to return (e.g. 5)"
                        },
                        {
                            "name": "offset",
                            "default": null,
                            "required": false,
                            "type": "int",
                            "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/fairminters/<tx_hash>": {
                    "function": "get_fairminter",
                    "description": "Returns the fairminter by its hash",
                    "args": [
                        {
                            "name": "tx_hash",
                            "required": true,
                            "type": "str"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/fairminters/<tx_hash>/fairmints": {
                    "function": "get_fairmints_by_fairminter",
                    "description": "Returns the mints by fairminter",
                    "args": [
                        {
                            "name": "tx_hash",
                            "required": true,
                            "type": "str"
                        },
                        {
                            "name": "cursor",
                            "default": null,
                            "required": false,
                            "type": "str"
                        },
                        {
                            "name": "limit",
                            "default": 100,
                            "required": false,
                            "type": "int"
                        },
                        {
                            "name": "offset",
                            "default": null,
                            "required": false,
                            "type": "int"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/fairmints": {
                    "function": "get_all_fairmints",
                    "description": "Returns all fairmints",
                    "args": [
                        {
                            "name": "cursor",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The last index of the fairmint to return"
                        },
                        {
                            "name": "limit",
                            "default": 100,
                            "required": false,
                            "type": "int",
                            "description": "The maximum number of fairmint to return (e.g. 5)"
                        },
                        {
                            "name": "offset",
                            "default": null,
                            "required": false,
                            "type": "int",
                            "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/fairmints/<tx_hash>": {
                    "function": "get_fairmint",
                    "description": "Returns the fairmint by its hash",
                    "args": [
                        {
                            "name": "tx_hash",
                            "required": true,
                            "type": "str",
                            "description": "The hash of the fairmint to return (e.g. $LAST_FAIRMINT_TX_HASH)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/bitcoin/addresses/utxos": {
                    "function": "get_utxos_by_addresses",
                    "description": "Returns a list of unspent outputs for a list of addresses",
                    "args": [
                        {
                            "name": "addresses",
                            "required": true,
                            "type": "str",
                            "description": "The addresses to search for (e.g. $ADDRESS_7,$ADDRESS_8)"
                        },
                        {
                            "name": "unconfirmed",
                            "default": false,
                            "required": false,
                            "type": "bool",
                            "description": "Include unconfirmed transactions"
                        },
                        {
                            "name": "unspent_tx_hash",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "Filter by unspent_tx_hash"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/bitcoin/addresses/<address>/transactions": {
                    "function": "get_history",
                    "description": "Returns all transactions involving a given address",
                    "args": [
                        {
                            "name": "address",
                            "required": true,
                            "type": "str",
                            "description": "The address to search for (e.g. $ADDRESS_3)"
                        },
                        {
                            "name": "unconfirmed",
                            "default": false,
                            "required": false,
                            "type": "bool"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/bitcoin/addresses/<address>/utxos": {
                    "function": "get_utxos",
                    "description": "Returns a list of unspent outputs for a specific address",
                    "args": [
                        {
                            "name": "unconfirmed",
                            "default": false,
                            "required": false,
                            "type": "bool",
                            "description": "Include unconfirmed transactions"
                        },
                        {
                            "name": "unspent_tx_hash",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "Filter by unspent_tx_hash"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/bitcoin/addresses/<address>/pubkey": {
                    "function": "pubkeyhash_to_pubkey",
                    "description": "Get pubkey for an address.",
                    "args": [
                        {
                            "name": "address",
                            "required": true,
                            "type": "str",
                            "description": "Address to get pubkey for. (e.g. $ADDRESS_1)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/bitcoin/transactions/<tx_hash>": {
                    "function": "get_transaction",
                    "description": "Get a transaction from the blockchain",
                    "args": [
                        {
                            "name": "tx_hash",
                            "required": true,
                            "type": "str",
                            "description": "The transaction hash (e.g. $LAST_TX_HASH)"
                        },
                        {
                            "name": "format",
                            "default": "json",
                            "required": false,
                            "type": "str",
                            "description": "Whether to return JSON output or raw hex (e.g. hex)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/bitcoin/estimatesmartfee": {
                    "function": "fee_per_kb",
                    "description": "Get the fee per kilobyte for a transaction to be confirmed in `conf_target` blocks.",
                    "args": [
                        {
                            "name": "conf_target",
                            "default": 3,
                            "required": false,
                            "type": "int",
                            "description": "Confirmation target in blocks (1 - 1008) (e.g. 2)"
                        },
                        {
                            "name": "mode",
                            "default": "CONSERVATIVE",
                            "required": false,
                            "type": "str",
                            "description": "The fee estimate mode. (e.g. CONSERVATIVE)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/bitcoin/transactions": {
                    "function": "sendrawtransaction",
                    "description": "Proxy to `sendrawtransaction` RPC call.",
                    "args": [
                        {
                            "name": "signedhex",
                            "required": true,
                            "type": "str",
                            "description": "The signed transaction hex."
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/bitcoin/transactions/decode": {
                    "function": "decoderawtransaction",
                    "description": "Proxy to `decoderawtransaction` RPC call.",
                    "args": [
                        {
                            "name": "rawtx",
                            "required": true,
                            "type": "str",
                            "description": "The raw transaction hex. (e.g. 0200000000010199c94580cbea44aead18f429be20552e640804dc3b4808e39115197f1312954d000000001600147c6b1112ed7bc76fd03af8b91d02fd6942c5a8d0ffffffff0280f0fa02000000001976a914a11b66a67b3ff69671c8f82254099faf374b800e88ac70da0a27010000001600147c6b1112ed7bc76fd03af8b91d02fd6942c5a8d002000000000000)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/bitcoin/getmempoolinfo": {
                    "function": "get_mempool_info",
                    "description": "Get the current mempool info.",
                    "args": [
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/mempool/events": {
                    "function": "get_all_mempool_events",
                    "description": "Returns all mempool events",
                    "args": [
                        {
                            "name": "event_name",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "Comma separated list of events to return"
                        },
                        {
                            "name": "addresses",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "Comma separated list of addresses to return"
                        },
                        {
                            "name": "cursor",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The last event index to return"
                        },
                        {
                            "name": "limit",
                            "default": 100,
                            "required": false,
                            "type": "int",
                            "description": "The maximum number of events to return (e.g. 5)"
                        },
                        {
                            "name": "offset",
                            "default": null,
                            "required": false,
                            "type": "int",
                            "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/mempool/events/<event>": {
                    "function": "get_mempool_events_by_name",
                    "description": "Returns the mempool events filtered by event name",
                    "args": [
                        {
                            "name": "event",
                            "required": true,
                            "type": "str",
                            "description": "The event to return (e.g. CREDIT)"
                        },
                        {
                            "name": "cursor",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The last event index to return"
                        },
                        {
                            "name": "limit",
                            "default": 100,
                            "required": false,
                            "type": "int",
                            "description": "The maximum number of events to return (e.g. 5)"
                        },
                        {
                            "name": "offset",
                            "default": null,
                            "required": false,
                            "type": "int",
                            "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/mempool/transactions/<tx_hash>/events": {
                    "function": "get_mempool_events_by_tx_hash",
                    "description": "Returns the mempool events filtered by transaction hash",
                    "args": [
                        {
                            "name": "tx_hash",
                            "required": true,
                            "type": "str",
                            "description": "The hash of the transaction to return (e.g. $LAST_MEMPOOL_TX_HASH)"
                        },
                        {
                            "name": "event_name",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "Comma separated list of events to return"
                        },
                        {
                            "name": "cursor",
                            "default": null,
                            "required": false,
                            "type": "str",
                            "description": "The last event index to return"
                        },
                        {
                            "name": "limit",
                            "default": 100,
                            "required": false,
                            "type": "int",
                            "description": "The maximum number of events to return (e.g. 5)"
                        },
                        {
                            "name": "offset",
                            "default": null,
                            "required": false,
                            "type": "int",
                            "description": "The number of lines to skip before returning results (overrides the `cursor` parameter)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/routes": {
                    "function": "get_routes",
                    "description": "Return the API routes.",
                    "args": [
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/v2/healthz": {
                    "function": "check_server_health",
                    "description": "Health check route.",
                    "args": [
                        {
                            "name": "check_type",
                            "default": "light",
                            "required": false,
                            "type": "str",
                            "description": "Type of health check to perform. Options are 'light' and 'heavy' (e.g. light)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/healthz": {
                    "function": "check_server_health",
                    "description": "Health check route.",
                    "args": [
                        {
                            "name": "check_type",
                            "default": "light",
                            "required": false,
                            "type": "str",
                            "description": "Type of health check to perform. Options are 'light' and 'heavy' (e.g. light)"
                        },
                        {
                            "name": "verbose",
                            "type": "bool",
                            "default": "false",
                            "description": "Include asset and dispenser info and normalized quantities in the response.",
                            "required": false
                        }
                    ]
                },
                "/": {
                    "function": "redirect_to_rpc_v1",
                    "description": "Redirect to the RPC API v1.",
                    "args": []
                },
                "/v1/": {
                    "function": "redirect_to_rpc_v1",
                    "description": "Redirect to the RPC API v1.",
                    "args": []
                },
                "/api/": {
                    "function": "redirect_to_rpc_v1",
                    "description": "Redirect to the RPC API v1.",
                    "args": []
                },
                "/rpc/": {
                    "function": "redirect_to_rpc_v1",
                    "description": "Redirect to the RPC API v1.",
                    "args": []
                }
            }
        }
    ```

## Group Z-pages

### Check Server Health [GET /v2/healthz{?check_type}{&verbose}]

Health check route.

+ Parameters
    + check_type: `light` (str, optional) - Type of health check to perform. Options are 'light' and 'heavy'
        + Default: `light`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": {
                "status": "Healthy"
            }
        }
    ```

### Check Server Health [GET /healthz{?check_type}{&verbose}]

Health check route.

+ Parameters
    + check_type: `light` (str, optional) - Type of health check to perform. Options are 'light' and 'heavy'
        + Default: `light`
    + verbose: `true` (bool, optional) - Include asset and dispenser info and normalized quantities in the response.
        + Default: `false`

+ Response 200 (application/json)

    ```
        {
            "result": {
                "status": "Healthy"
            }
        }
    ```

## Group V1

### Redirect To Rpc V1 [GET /]

Redirect to the RPC API v1.
### Redirect To Rpc V1 [GET /v1/]

Redirect to the RPC API v1.
### Redirect To Rpc V1 [GET /api/]

Redirect to the RPC API v1.
### Redirect To Rpc V1 [GET /rpc/]

Redirect to the RPC API v1.
