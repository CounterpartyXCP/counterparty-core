name: Pytest Action

on:
  workflow_call:
    inputs:
      name:
        type: string
        default: "Pytest"
      python-version:
        type: string
        default: "3.11"
      os:
        type: string
        default: "ubuntu-22.04"
      test-path:
        type: string
        required: true
      install_bitcoin:
        type: boolean
        default: false
      only_on_develop:
        type: boolean
        default: false
      no_cov_report:
        type: boolean
        default: false

jobs:
  pytest:
    name: ${{ inputs.name }}
    runs-on: ${{ inputs.os }}
    if: ${{ !inputs.only_on_develop || github.ref == 'refs/heads/develop' }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ inputs.python-version }}

      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          default: true

      - name: Install dependencies
        run: |
          pip install --upgrade pytest hatchling hatch pytest-cov coveralls

      - name: Install Bitcoin & Electrs
        if: inputs.install_bitcoin
        run: |
          wget https://bitcoincore.org/bin/bitcoin-core-28.0/bitcoin-28.0-x86_64-linux-gnu.tar.gz
          tar -xvf bitcoin-28.0-x86_64-linux-gnu.tar.gz
          sudo cp bitcoin-28.0/bin/bitcoin-cli /usr/local/bin/bitcoin-cli
          sudo cp bitcoin-28.0/bin/bitcoind /usr/local/bin/bitcoind
          sudo cp bitcoin-28.0/bin/bitcoin-wallet /usr/local/bin/bitcoin-wallet
          npm install dredd --global
          git clone https://github.com/mempool/electrs && cd electrs
          cargo install --path=.

      - name: Run tests
        run: |
          cd counterparty-core
          hatch run pytest counterpartycore/test/${{ inputs.test-path }} \
            ${{ !inputs.no_cov_report && '-s -vv -x --cov=counterpartycore/lib --cov-report=term-missing --cov-report=' || '' }}
          if [ "${{ !inputs.no_cov_report }}" = "true" ]; then
            mv .coverage ../
          fi

      - name: Upload coverage
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: CounterpartyXCP/counterparty-core