name: Pytest

on:
  push:
    branches: "**"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  Test:
    strategy:
      fail-fast: false
      # define the matrix
      matrix:

        # Units tests

        name: ["Units And Functionals"]
        python-version: ["3.10", "3.11", "3.12", "3.13"]
        os: ["ubuntu-22.04", "macos-14"]
        test-path: ["units counterpartycore/test/functionals"]
        include:

          # Mainnet tests

          - name: Mainnet API Load
            test-path: integrations/load_test.py
            os: Linux-Large-1
            run_coveralls: false
            only_on_develop: false

          - name: Mainnet Bootstrap And Catchup
            test-path: integrations/main_test.py
            os: Linux-Large-2
            run_coveralls: false
            only_on_develop: false

          # Regtest tests

          - name: Regtest Scenarios
            test-path: integrations/regtest/scenarios_test.py
            install_bitcoin: true

          - name: Property Test
            test-path: integrations/regtest/property_test.py
            install_bitcoin: true

          # Testnet4 tests

          - name: Testnet4 Bootstrap And Catchup
            test-path: integrations/testnet4_test.py 

          - name: Testnet4 Full Sync
            test-path: integrations/testnet4sync_test.py

          # Other tests

          - name: Docker Compose
            test-path: integrations/dockercompose_test.py

          - name: Compare Hashes
            test-path: integrations/comparehashes_test.py

    # run pytest_action.yml for the matrix
    uses: ./.github/workflows/pytest_action.yml
    with:
      name: ${{ matrix.name }} (${{ matrix.os }} - Python ${{ matrix.python-version }})
      test-path: ${{ matrix.test-path }}
      os: ${{ matrix.os || 'ubuntu-22.04' }}
      python-version: ${{ matrix.python-version || '3.11' }}
      install_bitcoin: ${{ matrix.install_bitcoin || false }}
      run_coveralls: ${{ matrix.run_coveralls || true }}
      only_on_develop:  ${{ matrix.only_on_develop || false }}
    secrets: inherit

  # finish the coveralls
  coveralls:
    if: ${{ always() }}
    needs:
      - Test
    runs-on: ubuntu-latest
    container: python:3-slim
    steps:
    - name: Install coveralls
      run: pip3 install --upgrade coveralls
    - name: Coveralls Finished
      run: |
          coveralls --finish --service=github
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}